{
    "sourceFile": "src/components/company/loginModal.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1693486845049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486959219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,12 +95,9 @@\n           setErrors({ ...errors, Credentials: [\"Invalid Credentials\"] });\n           // handle form submission\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false)\n       }\n     }\n   };\n@@ -124,12 +121,9 @@\n           setErrors({ ...errors, Credentials: [\"No user found\"] });\n           //   handle form submission\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false)\n       }\n     }\n   };\n@@ -161,12 +155,9 @@\n           window.location.reload();\n         }\n       } catch (err) {\n         console.log(err);\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n       }\n     }\n   });\n \n@@ -216,12 +207,9 @@\n           Navigate(\"/company\");\n         }\n       }).catch((err) => {\n         console.log(err.data);\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n       })\n     }\n   }, [])\n \n"
                },
                {
                    "date": 1693832705299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n   const close = () => {\n     setErrors(\"\");\n     setState(\"\");\n     setLoading(false);\n+    setShowCompanyForgotPassword(false)\n     props.close();\n   };\n   /*----USER LOGIN VALIDATION----*/\n   const initialFormState = {\n"
                },
                {
                    "date": 1693915337690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n   // console.log(i , \"code =>\" , code);\n   // console.log(type , (code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 4 && type === \"employerLogin\");\n   const handleLinkedInLogin = () => {\n     const clientId = '78mhwjaumkvtbm';\n-    const redirectUri = 'http://localhost:3000/';\n+    const redirectUri = 'http://3.6.36.125:3000/';\n     const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n \n     window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n   };\n"
                },
                {
                    "date": 1693915583182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,8 @@\n           window.location.reload();\n         }\n       } catch (err) {\n         console.log(err);\n-       console.log(err) \n       }\n     }\n   });\n \n"
                },
                {
                    "date": 1693915744496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n                           Import from LinkedIn\n                         </span>\n                       </button>\n                     </div>\n-                    <div className=\"col-4 col-xs-12\">\n+                    {/* <div className=\"col-4 col-xs-12\">\n                       <Link\n                         to=\"\" onClick={GoogleLogin}\n                         className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                       >\n@@ -334,9 +334,9 @@\n                             </button>\n                           )}\n                         />\n                         : null}\n-                    </div>\n+                    </div> */}\n                   </div>\n                   {/* END SOCIAL MEDIA LINK BUTTONS */}\n                   <div\n                     className={\n"
                },
                {
                    "date": 1693916007416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,15 @@\n import { useGoogleLogin } from '@react-oauth/google';\n import axios from \"axios\";\n // import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n // import linkedin from 'react--login-oauth2/assets/linkedin.png';\n-import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n+// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n export default function CompanyLogin(props) {\n   let [showCompanyForgotPassword, setShowCompanyForgotPassword] =\n     useState(false);\n   let [loading, setLoading] = useState(false);\n   let Navigate = useNavigate();\n-  let [facebook, setFacebook] = useState(false);\n+  // let [facebook, setFacebook] = useState(false);\n   let i = 0;\n   const [searchParams] = useSearchParams()\n   let code = searchParams.get(\"code\")\n   if (props.show === true) {\n@@ -130,37 +130,37 @@\n   };\n \n   // END USER LOGIN VALIDATION\n   /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n-          headers: {\n-            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n-          }\n-        });\n-        console.log(\"response =>\", data.data);\n-        if (data.data.email_verified === true) {\n-          let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n-          console.log(res);\n-          localStorage.setItem(\"token\", res.token);\n-          localStorage.setItem(\"userType\", \"company\");\n-          localStorage.setItem(\"company_id\", res.company_id);\n-          localStorage.setItem(\"profile_photo\", res.company_logo);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.close();\n-          Navigate(\"/company\");\n-          window.location.reload();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    }\n-  });\n+  // const GoogleLogin = useGoogleLogin({\n+  //   onSuccess: async (tokenResponse) => {\n+  //     try {\n+  //       let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n+  //         headers: {\n+  //           \"Authorization\": `Bearer ${tokenResponse.access_token}`\n+  //         }\n+  //       });\n+  //       console.log(\"response =>\", data.data);\n+  //       if (data.data.email_verified === true) {\n+  //         let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n+  //         console.log(res);\n+  //         localStorage.setItem(\"token\", res.token);\n+  //         localStorage.setItem(\"userType\", \"company\");\n+  //         localStorage.setItem(\"company_id\", res.company_id);\n+  //         localStorage.setItem(\"profile_photo\", res.company_logo);\n+  //         toast.success(\"Logged In Successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         props.close();\n+  //         Navigate(\"/company\");\n+  //         window.location.reload();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   }\n+  // });\n \n   /*Function to login in with Linked in */\n   /*Code to get access token */\n   // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n@@ -213,26 +213,26 @@\n     }\n   }, [])\n \n   /*FUnctiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    // console.log(response);\n-    if (response.graphDomain === \"facebook\") {\n-      let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n-      // console.log(data); \n-      localStorage.setItem(\"token\", data.token);\n-      localStorage.setItem(\"userType\", \"company\");\n-      localStorage.setItem(\"company_id\", data.company_id);\n-      localStorage.setItem(\"profile_photo\", data.company_logo);\n-      toast.success(\"Logged In Successfully\", {\n-        position: toast.POSITION.TOP_RIGHT,\n-        autoClose: 1000,\n-      });\n-      props.close();\n-      Navigate(\"/company\");\n-      window.location.reload();\n-    }\n-  }\n+  // const responseFacebook = async (response) => {\n+  //   // console.log(response);\n+  //   if (response.graphDomain === \"facebook\") {\n+  //     let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n+  //     // console.log(data); \n+  //     localStorage.setItem(\"token\", data.token);\n+  //     localStorage.setItem(\"userType\", \"company\");\n+  //     localStorage.setItem(\"company_id\", data.company_id);\n+  //     localStorage.setItem(\"profile_photo\", data.company_logo);\n+  //     toast.success(\"Logged In Successfully\", {\n+  //       position: toast.POSITION.TOP_RIGHT,\n+  //       autoClose: 1000,\n+  //     });\n+  //     props.close();\n+  //     Navigate(\"/company\");\n+  //     window.location.reload();\n+  //   }\n+  // }\n   return (\n     <>\n       {/* <!-- Login Modal --> */}\n       <Modal\n"
                },
                {
                    "date": 1693916017381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n import useValidation from \"../common/useValidation\";\n import { EmployerLogin, EmployerForgotPassword, LinkedInLoginEmployer, SocialCompanyLogin } from \"../../api/api\";\n import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from '@react-oauth/google';\n-import axios from \"axios\";\n+// import { useGoogleLogin } from '@react-oauth/google';\n+// import axios from \"axios\";\n // import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n // import linkedin from 'react--login-oauth2/assets/linkedin.png';\n // import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n export default function CompanyLogin(props) {\n"
                }
            ],
            "date": 1693486845049,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport useValidation from \"../common/useValidation\";\nimport { EmployerLogin, EmployerForgotPassword, LinkedInLoginEmployer, SocialCompanyLogin } from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from \"axios\";\n// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n// import linkedin from 'react--login-oauth2/assets/linkedin.png';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nexport default function CompanyLogin(props) {\n  let [showCompanyForgotPassword, setShowCompanyForgotPassword] =\n    useState(false);\n  let [loading, setLoading] = useState(false);\n  let Navigate = useNavigate();\n  let [facebook, setFacebook] = useState(false);\n  let i = 0;\n  const [searchParams] = useSearchParams()\n  let code = searchParams.get(\"code\")\n  if (props.show === true) {\n    localStorage.setItem(\"linkedin\", \"employerLogin\");\n  }\n  const type = localStorage.getItem(\"linkedin\");\n  /* Functionality to close the modal */\n  const close = () => {\n    setErrors(\"\");\n    setState(\"\");\n    setLoading(false);\n    props.close();\n  };\n  /*----USER LOGIN VALIDATION----*/\n  const initialFormState = {\n    email: \"\",\n    password: \"\",\n    remember: \"\",\n    Credentials: \"\",\n    forget_email: \"\",\n  };\n  /*----VALIDATION CONTENT----*/\n  const validators = {\n    email: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n            ? null\n            : \"Email is invalid\",\n    ],\n    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n    forget_email: [\n      (value) =>\n        state.email\n          ? \"\"\n          : value === null || value.trim() === \"\"\n            ? \"Email is required\"\n            : /\\S+@\\S+\\.\\S+/.test(value)\n              ? null\n              : \"Email is invalid\",\n    ],\n  };\n  /*----LOGIN ONCHANGE FUNCTION----*/\n  const { state, setErrors, setState, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  /*----LOGIN SUBMIT FUNCTION----*/\n  const onCompanyLoginClick = async (event) => {\n    event.preventDefault();\n    // console.log(errors);\n\n    if (validate()) {\n      setLoading(true);\n      try {\n        let Response = await EmployerLogin(state);\n        // console.log(\"Response =>\",Response);\n        if (\n          Response.status === true ||\n          Response.message === \"Successfully Logged In\"\n        ) {\n          localStorage.setItem(\"token\", Response.token);\n          localStorage.setItem(\"userType\", \"company\");\n          localStorage.setItem(\"company_id\", Response.company_id);\n          localStorage.setItem(\"profile_photo\", Response.company_logo);\n          // console.log(\"------------------------------\", Response.company_id);\n\n          toast.success(\"Log in Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          close();\n          Navigate(\"/company\");\n          window.location.reload();\n        } else if (Response.message === \"Invalid Credentials !\") {\n          setLoading(false);\n          setErrors({ ...errors, Credentials: [\"Invalid Credentials\"] });\n          // handle form submission\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false)\n      }\n    }\n  };\n\n  const onCompanyForgotPasswordClick = async (event) => {\n    event.preventDefault();\n\n    console.log(state, \"working\", errors)\n    if (validate()) {\n      setLoading(true);\n      try {\n        let Response = await EmployerForgotPassword(state);\n        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n          toast.success(\"Email sent Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          close();\n        } else if (Response.message === \"No user found\") {\n          setLoading(false);\n          setErrors({ ...errors, Credentials: [\"No user found\"] });\n          //   handle form submission\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false)\n      }\n    }\n  };\n\n  // END USER LOGIN VALIDATION\n  /*Function to login with google */\n  const GoogleLogin = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      try {\n        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n          headers: {\n            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        console.log(\"response =>\", data.data);\n        if (data.data.email_verified === true) {\n          let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n          console.log(res);\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"userType\", \"company\");\n          localStorage.setItem(\"company_id\", res.company_id);\n          localStorage.setItem(\"profile_photo\", res.company_logo);\n          toast.success(\"Logged In Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.close();\n          Navigate(\"/company\");\n          window.location.reload();\n        }\n      } catch (err) {\n        console.log(err);\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    }\n  });\n\n  /*Function to login in with Linked in */\n  /*Code to get access token */\n  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n  // .then(response => {\n  //   console.log('data', response.data);\n  // })\n  // .catch(error => {\n  //   console.error('Error:', error.message);\n  // });\n  // console.log(i , \"code =>\" , code);\n  // console.log(type , (code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 4 && type === \"employerLogin\");\n  const handleLinkedInLogin = () => {\n    const clientId = '78mhwjaumkvtbm';\n    const redirectUri = 'http://localhost:3000/';\n    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n\n    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n  };\n  useEffect(() => {\n    i = i + 4\n    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 4 && type === \"employerLogin\") {\n      const response = LinkedInLoginEmployer(code, type);\n      response.then((res) => {\n        let decode = JSON.parse(res.data)\n        if (res.data.email_verified === true) {\n          let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n          console.log(data);\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"userType\", \"company\");\n          localStorage.setItem(\"company_id\", data.company_id);\n          localStorage.setItem(\"profile_photo\", data.company_logo);\n          toast.success(\"Logged In Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.close();\n          Navigate(\"/company\");\n          window.location.reload();\n        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n          toast.error(\"Token Expired\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          Navigate(\"/company\");\n        }\n      }).catch((err) => {\n        console.log(err.data);\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      })\n    }\n  }, [])\n\n  /*FUnctiom to login with facebook */\n  const responseFacebook = async (response) => {\n    // console.log(response);\n    if (response.graphDomain === \"facebook\") {\n      let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n      // console.log(data); \n      localStorage.setItem(\"token\", data.token);\n      localStorage.setItem(\"userType\", \"company\");\n      localStorage.setItem(\"company_id\", data.company_id);\n      localStorage.setItem(\"profile_photo\", data.company_logo);\n      toast.success(\"Logged In Successfully\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 1000,\n      });\n      props.close();\n      Navigate(\"/company\");\n      window.location.reload();\n    }\n  }\n  return (\n    <>\n      {/* <!-- Login Modal --> */}\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-dialog max-width-px-840 position-relative\">\n          <button\n            type=\"button\"\n            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n            data-dismiss=\"modal\"\n            onClick={close}\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-lg-5 col-md-6\">\n                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n                  <div className=\"pb-9\">\n                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n                      Welcome Back\n                    </h3>\n                    {showCompanyForgotPassword === false ? (\n                      <p className=\"mb-0 font-size-4 text-white\">\n                        Log in to continue your account and explore new jobs.\n                      </p>\n                    ) : (\n                      <p className=\"mb-0 font-size-4 text-white\">\n                        Enter the email to continue.\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"border-top border-default-color-2 mt-auto\">\n                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">295</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New jobs posted today\n                        </p>\n                      </div>\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">14</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New companies registered\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-7 col-md-6\">\n                <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n                  <div\n                    className={showCompanyForgotPassword === false ? \"row\" : \"d-none\"}\n                  >\n                    <div className=\"col-4 col-xs-12\">\n                      <button onClick={handleLinkedInLogin}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from LinkedIn\n                        </span>\n                      </button>\n                    </div>\n                    <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\" onClick={GoogleLogin}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Google\n                        </span>\n                      </Link>\n                    </div>\n                    <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\" onClick={() => setFacebook(true)}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Facebook\n                        </span>\n                      </Link>\n                      {facebook ?\n                        <FacebookLogin\n                          appId=\"2170088543184291\"\n                          autoLoad\n                          callback={responseFacebook}\n                          fields=\"name,email,picture\"\n                          scope=\"public_profile,user_friends,email,user_actions.books\"\n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                          render={renderProps => (\n                            <button onClick={renderProps.onClick} className=\"d-none\">\n                            </button>\n                          )}\n                        />\n                        : null}\n                    </div>\n                  </div>\n                  {/* END SOCIAL MEDIA LINK BUTTONS */}\n                  <div\n                    className={\n                      showCompanyForgotPassword === false\n                        ? \"or-devider\"\n                        : \"d-none\"\n                    }\n                  >\n                    <span className=\"font-size-3 line-height-reset \">Or</span>\n                  </div>\n                  {/* company login form */}\n                  <form\n                    className={\n                      showCompanyForgotPassword === false ? \"\" : \"d-none\"\n                    }\n                    onSubmit={onCompanyLoginClick}\n                  >\n                    <div className=\"form-group\">\n                      <label\n                        htmlFor=\"email\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={state.email || \"\"}\n                        onChange={onInputChange}\n                        className={\n                          errors.email\n                            ? \"form-control border border-danger\"\n                            : \"form-control\"\n                        }\n                        placeholder=\"example@gmail.com\"\n                        id=\"email\"\n                      />\n                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n                      {errors.email && (\n                        <span>\n                          {errors.email.map((error) => (\n                            <span\n                              key={error}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {error}\n                            </span>\n                          ))}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label\n                        htmlFor=\"password\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        Password\n                      </label>\n                      <div className=\"position-relative\">\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          value={state.password || \"\"}\n                          onChange={onInputChange}\n                          className={\n                            errors.password\n                              ? \"form-control border border-danger\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"Enter password\"\n                          id=\"password\"\n                        />\n                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n                        {errors.password && (\n                          <span>\n                            {errors.password.map((error) => (\n                              <span\n                                key={error}\n                                className=\"text-danger font-size-3\"\n                              >\n                                {error}\n                              </span>\n                            ))}\n                          </span>\n                        )}\n                      </div>\n                      {errors.Credentials && (\n                        <span\n                          key={errors.Credentials}\n                          className=\"text-danger font-size-3\"\n                        >\n                          {errors.Credentials}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\" d-flex flex-wrap justify-content-between mb-5 col-md-12 \">\n                      <label htmlFor=\"remember\" className=\"mb-0 d-flex  mr-3\">\n                        <input\n                          type=\"checkbox\"\n                          id=\"remember\"\n                          name=\"remember\"\n                          onChange={(event) =>\n                            setState({\n                              ...state,\n                              remember: event.target.checked,\n                            })\n                          }\n                          className=\"text-black-2 pt-5 mr-5\"\n                        />\n                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n                          Remember password\n                        </span>\n                      </label>\n\n                      <Link\n                        to=\"/\"\n                        className=\"font-size-3 text-dodger line-height-reset\"\n                        onClick={() => setShowCompanyForgotPassword(true)}\n                      >\n                        Forget Password\n                      </Link>\n                      {/*----ERROR MESSAGE FOR terms----*/}\n                      {errors.remember && (\n                        <span\n                          key={errors.remember}\n                          className=\"text-danger font-size-3\"\n                        >\n                          {errors.remember}\n                        </span>\n                      )}\n                    </div>\n\n                    <div className=\"form-group mb-8\">\n                      {loading === true ? (\n                        <button\n                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            className=\"spinner-border spinner-border-sm \"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          <span className=\"sr-only\">Loading...</span>\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                          type=\"submit\"\n                        >\n                          Log in\n                        </button>\n                      )}\n                    </div>\n                    <p className=\"font-size-4 text-center heading-default-color\">\n                      Don’t have an account?\n                      <Link\n                        className=\"text-primary\"\n                        to={\"\"}\n                        onClick={props.CompanySignUpClick}\n                      >\n                        Create a free account\n                      </Link>\n                    </p>\n                  </form>\n                  {/* end company login form */}\n\n                  {/* FORGOT PASSWORD FORM */}\n                  <form\n                    className={\n                      showCompanyForgotPassword === true ? \"\" : \"d-none\"\n                    }\n                    onSubmit={onCompanyForgotPasswordClick}\n                  >\n                    <div className=\"form-group\">\n                      <label\n                        htmlFor=\"email2\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        type=\"email\"\n                        className={\n                          errors.forget_email\n                            ? \"form-control border border-danger\"\n                            : \"form-control\"\n                        }\n                        placeholder=\"example@gmail.com\"\n                        id=\"forget_email\"\n                        value={state.forget_email || \"\"}\n                        onChange={onInputChange}\n                        name=\"forget_email\"\n                      />\n                      {errors.forget_email && (\n                        <span>\n                          {errors.forget_email.map((error) => (\n                            <span\n                              key={error}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {error}\n                            </span>\n                          ))}\n                        </span>\n                      )}\n                      {errors.Credentials && (\n                        <span>\n                          {errors.Credentials.map((error) => (\n                            <span\n                              key={error}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {error}\n                            </span>\n                          ))}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"form-group d-flex flex-wrap justify-content-between mb-1\">\n                      <label\n                        htmlFor=\"terms-check2\"\n                        className=\"gr-check-input d-flex  mr-3\"\n                      >\n                        <input\n                          className=\"d-none\"\n                          type=\"checkbox\"\n                          id=\"terms-check2\"\n                        />\n                        <span className=\"checkbox mr-5\"></span>\n                        <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n                          Agree to the\n                          <Link to={\"\"} className=\"text-primary\">\n                            Terms & Conditions\n                          </Link>\n                        </span>\n                      </label>\n                    </div>\n                    <div className=\"form-group text-center\">\n                      {loading === true ? (\n                        <button\n                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            className=\"spinner-border spinner-border-sm \"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          <span className=\"sr-only\">Loading...</span>\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                          type=\"submit\"\n                        >\n                          send email\n                        </button>\n                      )}\n                    </div>\n                    <p className=\"font-size-4 text-center heading-default-color\">\n                      Already have an account?\n                      <Link\n                        to=\"\"\n                        className=\"text-primary\"\n                        onClick={() => setShowCompanyForgotPassword(false)}\n                      >\n                        Login\n                      </Link>\n                    </p>\n                  </form>\n                  {/*END  FORGOT PASSWORD FORM */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n"
        }
    ]
}