{
    "sourceFile": "src/components/company/signupModal.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1693486851450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486904645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,12 +170,9 @@\n             props.close();\n             navigate(\"/company\");\n             window.location.reload();\n           } catch (err) {\n-           console.log(err) {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n+           console.log(err) \n           }\n         }\n       } catch (err) {\n         console.log(err);\n"
                },
                {
                    "date": 1693486928873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,599 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useSearchParams, useNavigate } from \"react-router-dom\";\n+import useValidation from \"../common/useValidation\";\n+import { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from '@react-oauth/google';\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n+export default function CompanySignUp(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [otpBox, setOtpBox] = useState(false);\n+  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n+  const [otpErr, setotperr] = useState(\"\");\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  let navigate = useNavigate();\n+  const [searchParams] = useSearchParams()\n+  let code = searchParams.get(\"code\")\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employerSignup\");\n+  }\n+  const type = localStorage.getItem(\"linkedin\");\n+  /*Function to close he modal */\n+  const close = () => {\n+    setErrors(\"\");\n+    setState(initialFormState);\n+    setOtpBox(false);\n+    props.close();\n+  };\n+  // USER SIGNUP VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    contact_no: \"\",\n+    term_and_condition: \"\",\n+    otp: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+            value\n+          )\n+            ? null\n+            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    contact_no: [\n+      (value) => value.trim() === \"\" || value === \"\" || value === null\n+        ? \"Contact no is required\"\n+        : value.length < 10 || value.length > 11\n+          ? \"Contact no should be of 10 digits\"\n+          : \"\",\n+    ],\n+    term_and_condition: [\n+      (value) =>\n+        otpBox === false\n+          ? \"\"\n+          : value === null || value === \"\" || value === false\n+            ? \"Please accept terms and conditions continue\"\n+            : \"\",\n+    ],\n+    otp: [\n+      (value) =>\n+        otpBox\n+          ? value === null || value === \"\"\n+            ? \"Otp is requried\"\n+            : otpErr === \"Invalid Otp\"\n+              ? \"Invalid Otp\"\n+              : \"\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // USER SIGNUP SUBMIT BUTTON\n+  const onCompanySignUpClick = async (event) => {\n+    event.preventDefault();\n+    if (validate() && state.otp && state.term_and_condition) {\n+      /*Api to signup */\n+      try {\n+        let Response = await EmployerSignUp(state);\n+        if (Response.message === \"Employer has been registered\") {\n+          toast.success(\"Registered Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setErrors(\"\");\n+          setState(initialFormState);\n+          setOtpBox(false);\n+          setSingUpSuccess(\"success\");\n+        } else if (Response.message === \" incorrect otp \") {\n+          setLoading(false);\n+          setotperr(\"Invalid Otp\");\n+          setErrors({ ...errors, term_and_condition: \"\" });\n+          setErrors({ ...errors, contact_no: \"\" });\n+        } else if (Response.message === \"Email already exists\") {\n+          setErrors({ ...errors, email: [\"Email already exists\"] });\n+          setState(initialFormState);\n+          setOtpBox(false);\n+        }\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    } else if (otpBox === false && validate()) {\n+      /*Api to get otp */\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await SendOtp(state);\n+        if (updatedTodo.message === \"successful\") {\n+          toast.success(\"Otp sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setOtpBox(true);\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER SIGNUP VALIDATION\n+  /*Function to Sign Up with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n+          headers: {\n+            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n+          }\n+        });\n+        console.log(\"response =>\", data.data);\n+        if (data.data.email_verified === true) {\n+          try {\n+            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", res.employer_id);\n+            localStorage.setItem(\"profile_photo\", res.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) ;\n+          }\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    }\n+  });\n+\n+  /*Function to Sign Up  with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = '78mhwjaumkvtbm';\n+    const redirectUri = 'http://localhost:3000/';\n+    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n+\n+  };\n+  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n+  useEffect(() => {\n+    i = i + 2\n+    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n+      const response = LinkedInSignupEmployer(code, type);\n+      response.then((res) => {\n+        let decode = JSON.parse(res.data)\n+        if (res.data.email_verified === true) {\n+          try {\n+            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", data.employer_id);\n+            localStorage.setItem(\"profile_photo\", data.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+          }\n+        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n+          toast.error(\"Token Expired\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          navigate(\"/company\");\n+        }\n+      }).catch((err) => {\n+        console.log(err.data);\n+      })\n+    }\n+  }, [])\n+\n+  /*FUnctiom to Sign Up with facebook */\n+  const responseFacebook = async (response) => {\n+    console.log(response);\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n+        console.log(data);\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"userType\", \"company\");\n+        localStorage.setItem(\"employee_id\", data.employer_id);\n+        localStorage.setItem(\"profile_photo\", data.company_logo);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        props.close();\n+        navigate(\"/company\");\n+        window.location.reload();\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    }\n+  }\n+  return (\n+    <>\n+      {/* <!-- Sign Up Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Create a free account today\n+                    </h3>\n+                    <p className=\"mb-0 font-size-4 text-white\">\n+                      Create your account to continue and explore new jobs.\n+                    </p>\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                {SingUpSuccess === \"success\" ? (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    Congratulations! <br />\n+                    You have successfully registered your account. Please login\n+                    to continue\n+                    <br />\n+                    <Link\n+                      to=\"\"\n+                      className=\"btn btn-primary mt-12\"\n+                      onClick={props.CompanyLoginClick}\n+                    >\n+                      Login\n+                    </Link>\n+                  </div>\n+                ) : (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    {/* SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"row\">\n+                      <div className=\"col-4 col-xs-12\">\n+                        <button onClick={handleLinkedInLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n+                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from LinkedIn\n+                          </span></button>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={GoogleLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                        >\n+                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Google\n+                          </span>\n+                        </Link>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={() => setFacebook(true)}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                        >\n+                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Facebook\n+                          </span>\n+                        </Link>\n+                        {facebook ?\n+                          <FacebookLogin\n+                            appId=\"2170088543184291\"\n+                            autoLoad\n+                            callback={responseFacebook}\n+                            fields=\"name,email,picture\"\n+                            scope=\"public_profile,user_friends,email,user_actions.books\"\n+                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                            render={renderProps => (\n+                              <button onClick={renderProps.onClick} className=\"d-none\">\n+                              </button>\n+                            )}\n+                          />\n+                          : null}\n+                      </div>\n+                    </div>\n+                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"or-devider\">\n+                      <span className=\"font-size-3 line-height-reset\">Or</span>\n+                    </div>\n+                    {/* SIGNUP FORM */}\n+                    <form onSubmit={onCompanySignUpClick}>\n+                      {/* FORM FIELDS */}\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"email2\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          E-mail\n+                        </label>\n+                        <input\n+                          type=\"email\"\n+                          name=\"email\"\n+                          value={\"\" || state.email}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.email\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"example@gmail.com\"\n+                          id=\"email\"\n+                        />\n+                        {/* ERROR MSG FOR Company EMAIL */}\n+                        {errors.email && (\n+                          <span\n+                            key={errors.email}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.email}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"contact_no\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Contact Number\n+                        </label>\n+                        <input\n+                          type=\"number\"\n+                          name=\"contact_no\"\n+                          value={\"\" || state.contact_no}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.contact_no\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Contact Number\"\n+                          id=\"contact_no\"\n+                        />\n+                        {/* ERROR MSG FOR Company no */}\n+                        {errors.contact_no && (\n+                          <span\n+                            key={errors.contact_no}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.contact_no}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"password\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Password\n+                        </label>\n+                        <div className=\"position-relative\">\n+                          <input\n+                            name=\"password\"\n+                            value={\"\" || state.password}\n+                            onChange={onInputChange}\n+                            type=\"password\"\n+                            className={\n+                              errors.password\n+                                ? \"form-control border border-danger\"\n+                                : \"form-control\"\n+                            }\n+                            id=\"password\"\n+                            placeholder=\"Enter password\"\n+                          />\n+                          {/* ERROR MSG FOR PASSWORD */}\n+                          {errors.password && (\n+                            <span\n+                              key={errors.password}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {errors.password}\n+                            </span>\n+                          )}\n+                        </div>\n+                      </div>\n+                      {otpBox ? (\n+                        <div className=\"form-group\">\n+                          <label\n+                            htmlFor=\"otp\"\n+                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                          >\n+                            Enter Otp\n+                          </label>\n+                          <div className=\"position-relative\">\n+                            <input\n+                              type=\"number\"\n+                              value={\"\" || state.otp}\n+                              onChange={onInputChange}\n+                              maxLength={6}\n+                              name=\"otp\"\n+                              id=\"otp\"\n+                              className={\n+                                errors.otp\n+                                  ? \"form-control border border-danger\"\n+                                  : \"form-control\"\n+                              }\n+                              placeholder=\"Otp\"\n+                            />\n+                            {errors.otp && (\n+                              <span\n+                                key={errors.otp}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {errors.otp}\n+                              </span>\n+                            )}\n+                          </div>\n+                        </div>\n+                      ) : null}\n+                      {/* END FORM FIELDS  */}\n+                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n+                        <label\n+                          htmlFor=\"term_and_condition\"\n+                          className=\"gr-check-input d-flex  mr-3\"\n+                        >\n+                          <input\n+                            type=\"checkbox\"\n+                            id=\"term_and_condition\"\n+                            name=\"term_and_condition\"\n+                            onChange={(event) =>\n+                              setState({\n+                                ...state,\n+                                term_and_condition: event.target.checked,\n+                              })\n+                            }\n+                            className=\"text-black-2 pt-5 mr-5\"\n+                          />\n+                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n+                            Agree to the\n+                            <Link to=\"\" className=\"text-primary\">\n+                              Terms & Conditions\n+                            </Link>\n+                          </span>\n+                        </label>\n+                        {/*----ERROR MESSAGE FOR terms----*/}\n+                        {errors.term_and_condition && (\n+                          <span\n+                            key={errors.term_and_condition}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.term_and_condition}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group text-center\">\n+                        {loading === true ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"button\"\n+                            disabled\n+                          >\n+                            <span\n+                              className=\"spinner-border spinner-border-sm \"\n+                              role=\"status\"\n+                              aria-hidden=\"true\"\n+                            ></span>\n+                            <span className=\"sr-only\">Loading...</span>\n+                          </button>\n+                        ) : otpBox ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Sign Up\n+                          </button>\n+                        ) : (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Send otp\n+                          </button>\n+                        )}\n+                      </div>\n+                      <p className=\"font-size-4 text-center heading-default-color\">\n+                        Already have an account?\n+                        <Link\n+                          to=\"\"\n+                          className=\"text-primary\"\n+                          onClick={props.CompanyLoginClick}\n+                        >\n+                          Login\n+                        </Link>\n+                      </p>\n+                    </form>\n+                    {/* END SIGNUP FORM */}\n+                  </div>\n+                )}\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693486938220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,596 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useSearchParams, useNavigate } from \"react-router-dom\";\n+import useValidation from \"../common/useValidation\";\n+import { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from '@react-oauth/google';\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n+export default function CompanySignUp(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [otpBox, setOtpBox] = useState(false);\n+  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n+  const [otpErr, setotperr] = useState(\"\");\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  let navigate = useNavigate();\n+  const [searchParams] = useSearchParams()\n+  let code = searchParams.get(\"code\")\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employerSignup\");\n+  }\n+  const type = localStorage.getItem(\"linkedin\");\n+  /*Function to close he modal */\n+  const close = () => {\n+    setErrors(\"\");\n+    setState(initialFormState);\n+    setOtpBox(false);\n+    props.close();\n+  };\n+  // USER SIGNUP VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    contact_no: \"\",\n+    term_and_condition: \"\",\n+    otp: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+            value\n+          )\n+            ? null\n+            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    contact_no: [\n+      (value) => value.trim() === \"\" || value === \"\" || value === null\n+        ? \"Contact no is required\"\n+        : value.length < 10 || value.length > 11\n+          ? \"Contact no should be of 10 digits\"\n+          : \"\",\n+    ],\n+    term_and_condition: [\n+      (value) =>\n+        otpBox === false\n+          ? \"\"\n+          : value === null || value === \"\" || value === false\n+            ? \"Please accept terms and conditions continue\"\n+            : \"\",\n+    ],\n+    otp: [\n+      (value) =>\n+        otpBox\n+          ? value === null || value === \"\"\n+            ? \"Otp is requried\"\n+            : otpErr === \"Invalid Otp\"\n+              ? \"Invalid Otp\"\n+              : \"\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // USER SIGNUP SUBMIT BUTTON\n+  const onCompanySignUpClick = async (event) => {\n+    event.preventDefault();\n+    if (validate() && state.otp && state.term_and_condition) {\n+      /*Api to signup */\n+      try {\n+        let Response = await EmployerSignUp(state);\n+        if (Response.message === \"Employer has been registered\") {\n+          toast.success(\"Registered Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setErrors(\"\");\n+          setState(initialFormState);\n+          setOtpBox(false);\n+          setSingUpSuccess(\"success\");\n+        } else if (Response.message === \" incorrect otp \") {\n+          setLoading(false);\n+          setotperr(\"Invalid Otp\");\n+          setErrors({ ...errors, term_and_condition: \"\" });\n+          setErrors({ ...errors, contact_no: \"\" });\n+        } else if (Response.message === \"Email already exists\") {\n+          setErrors({ ...errors, email: [\"Email already exists\"] });\n+          setState(initialFormState);\n+          setOtpBox(false);\n+        }\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    } else if (otpBox === false && validate()) {\n+      /*Api to get otp */\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await SendOtp(state);\n+        if (updatedTodo.message === \"successful\") {\n+          toast.success(\"Otp sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setOtpBox(true);\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER SIGNUP VALIDATION\n+  /*Function to Sign Up with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n+          headers: {\n+            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n+          }\n+        });\n+        console.log(\"response =>\", data.data);\n+        if (data.data.email_verified === true) {\n+          try {\n+            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", res.employer_id);\n+            localStorage.setItem(\"profile_photo\", res.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) ;\n+          }\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    }\n+  });\n+\n+  /*Function to Sign Up  with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = '78mhwjaumkvtbm';\n+    const redirectUri = 'http://localhost:3000/';\n+    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n+\n+  };\n+  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n+  useEffect(() => {\n+    i = i + 2\n+    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n+      const response = LinkedInSignupEmployer(code, type);\n+      response.then((res) => {\n+        let decode = JSON.parse(res.data)\n+        if (res.data.email_verified === true) {\n+          try {\n+            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", data.employer_id);\n+            localStorage.setItem(\"profile_photo\", data.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) \n+          }\n+        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n+          toast.error(\"Token Expired\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          navigate(\"/company\");\n+        }\n+      }).catch((err) => {\n+        console.log(err.data);\n+      })\n+    }\n+  }, [])\n+\n+  /*FUnctiom to Sign Up with facebook */\n+  const responseFacebook = async (response) => {\n+    console.log(response);\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n+        console.log(data);\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"userType\", \"company\");\n+        localStorage.setItem(\"employee_id\", data.employer_id);\n+        localStorage.setItem(\"profile_photo\", data.company_logo);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        props.close();\n+        navigate(\"/company\");\n+        window.location.reload();\n+      } catch (err) {\n+       console.log(err) {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    }\n+  }\n+  return (\n+    <>\n+      {/* <!-- Sign Up Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Create a free account today\n+                    </h3>\n+                    <p className=\"mb-0 font-size-4 text-white\">\n+                      Create your account to continue and explore new jobs.\n+                    </p>\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                {SingUpSuccess === \"success\" ? (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    Congratulations! <br />\n+                    You have successfully registered your account. Please login\n+                    to continue\n+                    <br />\n+                    <Link\n+                      to=\"\"\n+                      className=\"btn btn-primary mt-12\"\n+                      onClick={props.CompanyLoginClick}\n+                    >\n+                      Login\n+                    </Link>\n+                  </div>\n+                ) : (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    {/* SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"row\">\n+                      <div className=\"col-4 col-xs-12\">\n+                        <button onClick={handleLinkedInLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n+                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from LinkedIn\n+                          </span></button>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={GoogleLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                        >\n+                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Google\n+                          </span>\n+                        </Link>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={() => setFacebook(true)}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                        >\n+                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Facebook\n+                          </span>\n+                        </Link>\n+                        {facebook ?\n+                          <FacebookLogin\n+                            appId=\"2170088543184291\"\n+                            autoLoad\n+                            callback={responseFacebook}\n+                            fields=\"name,email,picture\"\n+                            scope=\"public_profile,user_friends,email,user_actions.books\"\n+                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                            render={renderProps => (\n+                              <button onClick={renderProps.onClick} className=\"d-none\">\n+                              </button>\n+                            )}\n+                          />\n+                          : null}\n+                      </div>\n+                    </div>\n+                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"or-devider\">\n+                      <span className=\"font-size-3 line-height-reset\">Or</span>\n+                    </div>\n+                    {/* SIGNUP FORM */}\n+                    <form onSubmit={onCompanySignUpClick}>\n+                      {/* FORM FIELDS */}\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"email2\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          E-mail\n+                        </label>\n+                        <input\n+                          type=\"email\"\n+                          name=\"email\"\n+                          value={\"\" || state.email}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.email\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"example@gmail.com\"\n+                          id=\"email\"\n+                        />\n+                        {/* ERROR MSG FOR Company EMAIL */}\n+                        {errors.email && (\n+                          <span\n+                            key={errors.email}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.email}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"contact_no\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Contact Number\n+                        </label>\n+                        <input\n+                          type=\"number\"\n+                          name=\"contact_no\"\n+                          value={\"\" || state.contact_no}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.contact_no\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Contact Number\"\n+                          id=\"contact_no\"\n+                        />\n+                        {/* ERROR MSG FOR Company no */}\n+                        {errors.contact_no && (\n+                          <span\n+                            key={errors.contact_no}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.contact_no}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"password\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Password\n+                        </label>\n+                        <div className=\"position-relative\">\n+                          <input\n+                            name=\"password\"\n+                            value={\"\" || state.password}\n+                            onChange={onInputChange}\n+                            type=\"password\"\n+                            className={\n+                              errors.password\n+                                ? \"form-control border border-danger\"\n+                                : \"form-control\"\n+                            }\n+                            id=\"password\"\n+                            placeholder=\"Enter password\"\n+                          />\n+                          {/* ERROR MSG FOR PASSWORD */}\n+                          {errors.password && (\n+                            <span\n+                              key={errors.password}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {errors.password}\n+                            </span>\n+                          )}\n+                        </div>\n+                      </div>\n+                      {otpBox ? (\n+                        <div className=\"form-group\">\n+                          <label\n+                            htmlFor=\"otp\"\n+                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                          >\n+                            Enter Otp\n+                          </label>\n+                          <div className=\"position-relative\">\n+                            <input\n+                              type=\"number\"\n+                              value={\"\" || state.otp}\n+                              onChange={onInputChange}\n+                              maxLength={6}\n+                              name=\"otp\"\n+                              id=\"otp\"\n+                              className={\n+                                errors.otp\n+                                  ? \"form-control border border-danger\"\n+                                  : \"form-control\"\n+                              }\n+                              placeholder=\"Otp\"\n+                            />\n+                            {errors.otp && (\n+                              <span\n+                                key={errors.otp}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {errors.otp}\n+                              </span>\n+                            )}\n+                          </div>\n+                        </div>\n+                      ) : null}\n+                      {/* END FORM FIELDS  */}\n+                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n+                        <label\n+                          htmlFor=\"term_and_condition\"\n+                          className=\"gr-check-input d-flex  mr-3\"\n+                        >\n+                          <input\n+                            type=\"checkbox\"\n+                            id=\"term_and_condition\"\n+                            name=\"term_and_condition\"\n+                            onChange={(event) =>\n+                              setState({\n+                                ...state,\n+                                term_and_condition: event.target.checked,\n+                              })\n+                            }\n+                            className=\"text-black-2 pt-5 mr-5\"\n+                          />\n+                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n+                            Agree to the\n+                            <Link to=\"\" className=\"text-primary\">\n+                              Terms & Conditions\n+                            </Link>\n+                          </span>\n+                        </label>\n+                        {/*----ERROR MESSAGE FOR terms----*/}\n+                        {errors.term_and_condition && (\n+                          <span\n+                            key={errors.term_and_condition}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.term_and_condition}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group text-center\">\n+                        {loading === true ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"button\"\n+                            disabled\n+                          >\n+                            <span\n+                              className=\"spinner-border spinner-border-sm \"\n+                              role=\"status\"\n+                              aria-hidden=\"true\"\n+                            ></span>\n+                            <span className=\"sr-only\">Loading...</span>\n+                          </button>\n+                        ) : otpBox ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Sign Up\n+                          </button>\n+                        ) : (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Send otp\n+                          </button>\n+                        )}\n+                      </div>\n+                      <p className=\"font-size-4 text-center heading-default-color\">\n+                        Already have an account?\n+                        <Link\n+                          to=\"\"\n+                          className=\"text-primary\"\n+                          onClick={props.CompanyLoginClick}\n+                        >\n+                          Login\n+                        </Link>\n+                      </p>\n+                    </form>\n+                    {/* END SIGNUP FORM */}\n+                  </div>\n+                )}\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693486959147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,12 +116,9 @@\n           setState(initialFormState);\n           setOtpBox(false);\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n       }\n     } else if (otpBox === false && validate()) {\n       /*Api to get otp */\n       setLoading(true);\n@@ -135,12 +132,9 @@\n           setOtpBox(true);\n           setLoading(false);\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false);\n       }\n     }\n   };\n@@ -246,20 +240,14 @@\n         localStorage.setItem(\"token\", data.token);\n         localStorage.setItem(\"userType\", \"company\");\n         localStorage.setItem(\"employee_id\", data.employer_id);\n         localStorage.setItem(\"profile_photo\", data.company_logo);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+        toast.success(\"Logged In Successfully\", \n         props.close();\n         navigate(\"/company\");\n         window.location.reload();\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n       }\n     }\n   }\n   return (\n@@ -593,1202 +581,4 @@\n       </Modal>\n     </>\n   );\n }\n-import React, { useState, useEffect } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useSearchParams, useNavigate } from \"react-router-dom\";\n-import useValidation from \"../common/useValidation\";\n-import { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from '@react-oauth/google';\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n-export default function CompanySignUp(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [otpBox, setOtpBox] = useState(false);\n-  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n-  const [otpErr, setotperr] = useState(\"\");\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  let navigate = useNavigate();\n-  const [searchParams] = useSearchParams()\n-  let code = searchParams.get(\"code\")\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employerSignup\");\n-  }\n-  const type = localStorage.getItem(\"linkedin\");\n-  /*Function to close he modal */\n-  const close = () => {\n-    setErrors(\"\");\n-    setState(initialFormState);\n-    setOtpBox(false);\n-    props.close();\n-  };\n-  // USER SIGNUP VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    contact_no: \"\",\n-    term_and_condition: \"\",\n-    otp: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    password: [\n-      (value) =>\n-        value === \"\"\n-          ? \"Password is required\"\n-          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n-            value\n-          )\n-            ? null\n-            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n-    ],\n-    contact_no: [\n-      (value) => value.trim() === \"\" || value === \"\" || value === null\n-        ? \"Contact no is required\"\n-        : value.length < 10 || value.length > 11\n-          ? \"Contact no should be of 10 digits\"\n-          : \"\",\n-    ],\n-    term_and_condition: [\n-      (value) =>\n-        otpBox === false\n-          ? \"\"\n-          : value === null || value === \"\" || value === false\n-            ? \"Please accept terms and conditions continue\"\n-            : \"\",\n-    ],\n-    otp: [\n-      (value) =>\n-        otpBox\n-          ? value === null || value === \"\"\n-            ? \"Otp is requried\"\n-            : otpErr === \"Invalid Otp\"\n-              ? \"Invalid Otp\"\n-              : \"\"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, setErrors, onInputChange, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // USER SIGNUP SUBMIT BUTTON\n-  const onCompanySignUpClick = async (event) => {\n-    event.preventDefault();\n-    if (validate() && state.otp && state.term_and_condition) {\n-      /*Api to signup */\n-      try {\n-        let Response = await EmployerSignUp(state);\n-        if (Response.message === \"Employer has been registered\") {\n-          toast.success(\"Registered Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setErrors(\"\");\n-          setState(initialFormState);\n-          setOtpBox(false);\n-          setSingUpSuccess(\"success\");\n-        } else if (Response.message === \" incorrect otp \") {\n-          setLoading(false);\n-          setotperr(\"Invalid Otp\");\n-          setErrors({ ...errors, term_and_condition: \"\" });\n-          setErrors({ ...errors, contact_no: \"\" });\n-        } else if (Response.message === \"Email already exists\") {\n-          setErrors({ ...errors, email: [\"Email already exists\"] });\n-          setState(initialFormState);\n-          setOtpBox(false);\n-        }\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-    } else if (otpBox === false && validate()) {\n-      /*Api to get otp */\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await SendOtp(state);\n-        if (updatedTodo.message === \"successful\") {\n-          toast.success(\"Otp sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setOtpBox(true);\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER SIGNUP VALIDATION\n-  /*Function to Sign Up with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n-          headers: {\n-            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n-          }\n-        });\n-        console.log(\"response =>\", data.data);\n-        if (data.data.email_verified === true) {\n-          try {\n-            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"userType\", \"company\");\n-            localStorage.setItem(\"employee_id\", res.employer_id);\n-            localStorage.setItem(\"profile_photo\", res.company_logo);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.close();\n-            navigate(\"/company\");\n-            window.location.reload();\n-          } catch (err) {\n-           console.log(err) ;\n-          }\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    }\n-  });\n-\n-  /*Function to Sign Up  with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n-  // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = '78mhwjaumkvtbm';\n-    const redirectUri = 'http://localhost:3000/';\n-    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n-\n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n-\n-  };\n-  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n-  useEffect(() => {\n-    i = i + 2\n-    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n-      const response = LinkedInSignupEmployer(code, type);\n-      response.then((res) => {\n-        let decode = JSON.parse(res.data)\n-        if (res.data.email_verified === true) {\n-          try {\n-            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"userType\", \"company\");\n-            localStorage.setItem(\"employee_id\", data.employer_id);\n-            localStorage.setItem(\"profile_photo\", data.company_logo);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.close();\n-            navigate(\"/company\");\n-            window.location.reload();\n-          } catch (err) {\n-           console.log(err) {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-          }\n-        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n-          toast.error(\"Token Expired\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          navigate(\"/company\");\n-        }\n-      }).catch((err) => {\n-        console.log(err.data);\n-      })\n-    }\n-  }, [])\n-\n-  /*FUnctiom to Sign Up with facebook */\n-  const responseFacebook = async (response) => {\n-    console.log(response);\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n-        console.log(data);\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"userType\", \"company\");\n-        localStorage.setItem(\"employee_id\", data.employer_id);\n-        localStorage.setItem(\"profile_photo\", data.company_logo);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        props.close();\n-        navigate(\"/company\");\n-        window.location.reload();\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-    }\n-  }\n-  return (\n-    <>\n-      {/* <!-- Sign Up Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Create a free account today\n-                    </h3>\n-                    <p className=\"mb-0 font-size-4 text-white\">\n-                      Create your account to continue and explore new jobs.\n-                    </p>\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                {SingUpSuccess === \"success\" ? (\n-                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n-                    Congratulations! <br />\n-                    You have successfully registered your account. Please login\n-                    to continue\n-                    <br />\n-                    <Link\n-                      to=\"\"\n-                      className=\"btn btn-primary mt-12\"\n-                      onClick={props.CompanyLoginClick}\n-                    >\n-                      Login\n-                    </Link>\n-                  </div>\n-                ) : (\n-                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n-                    {/* SOCIAL MEDIA LINK BUTTONS */}\n-                    <div className=\"row\">\n-                      <div className=\"col-4 col-xs-12\">\n-                        <button onClick={handleLinkedInLogin}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n-                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from LinkedIn\n-                          </span></button>\n-                      </div>\n-                      <div className=\"col-4 col-xs-12\">\n-                        <Link\n-                          to=\"\" onClick={GoogleLogin}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                        >\n-                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from Google\n-                          </span>\n-                        </Link>\n-                      </div>\n-                      <div className=\"col-4 col-xs-12\">\n-                        <Link\n-                          to=\"\" onClick={() => setFacebook(true)}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                        >\n-                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from Facebook\n-                          </span>\n-                        </Link>\n-                        {facebook ?\n-                          <FacebookLogin\n-                            appId=\"2170088543184291\"\n-                            autoLoad\n-                            callback={responseFacebook}\n-                            fields=\"name,email,picture\"\n-                            scope=\"public_profile,user_friends,email,user_actions.books\"\n-                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                            render={renderProps => (\n-                              <button onClick={renderProps.onClick} className=\"d-none\">\n-                              </button>\n-                            )}\n-                          />\n-                          : null}\n-                      </div>\n-                    </div>\n-                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n-                    <div className=\"or-devider\">\n-                      <span className=\"font-size-3 line-height-reset\">Or</span>\n-                    </div>\n-                    {/* SIGNUP FORM */}\n-                    <form onSubmit={onCompanySignUpClick}>\n-                      {/* FORM FIELDS */}\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"email2\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          E-mail\n-                        </label>\n-                        <input\n-                          type=\"email\"\n-                          name=\"email\"\n-                          value={\"\" || state.email}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.email\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"example@gmail.com\"\n-                          id=\"email\"\n-                        />\n-                        {/* ERROR MSG FOR Company EMAIL */}\n-                        {errors.email && (\n-                          <span\n-                            key={errors.email}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.email}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"contact_no\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          Contact Number\n-                        </label>\n-                        <input\n-                          type=\"number\"\n-                          name=\"contact_no\"\n-                          value={\"\" || state.contact_no}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.contact_no\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Contact Number\"\n-                          id=\"contact_no\"\n-                        />\n-                        {/* ERROR MSG FOR Company no */}\n-                        {errors.contact_no && (\n-                          <span\n-                            key={errors.contact_no}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.contact_no}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"password\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          Password\n-                        </label>\n-                        <div className=\"position-relative\">\n-                          <input\n-                            name=\"password\"\n-                            value={\"\" || state.password}\n-                            onChange={onInputChange}\n-                            type=\"password\"\n-                            className={\n-                              errors.password\n-                                ? \"form-control border border-danger\"\n-                                : \"form-control\"\n-                            }\n-                            id=\"password\"\n-                            placeholder=\"Enter password\"\n-                          />\n-                          {/* ERROR MSG FOR PASSWORD */}\n-                          {errors.password && (\n-                            <span\n-                              key={errors.password}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {errors.password}\n-                            </span>\n-                          )}\n-                        </div>\n-                      </div>\n-                      {otpBox ? (\n-                        <div className=\"form-group\">\n-                          <label\n-                            htmlFor=\"otp\"\n-                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                          >\n-                            Enter Otp\n-                          </label>\n-                          <div className=\"position-relative\">\n-                            <input\n-                              type=\"number\"\n-                              value={\"\" || state.otp}\n-                              onChange={onInputChange}\n-                              maxLength={6}\n-                              name=\"otp\"\n-                              id=\"otp\"\n-                              className={\n-                                errors.otp\n-                                  ? \"form-control border border-danger\"\n-                                  : \"form-control\"\n-                              }\n-                              placeholder=\"Otp\"\n-                            />\n-                            {errors.otp && (\n-                              <span\n-                                key={errors.otp}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {errors.otp}\n-                              </span>\n-                            )}\n-                          </div>\n-                        </div>\n-                      ) : null}\n-                      {/* END FORM FIELDS  */}\n-                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n-                        <label\n-                          htmlFor=\"term_and_condition\"\n-                          className=\"gr-check-input d-flex  mr-3\"\n-                        >\n-                          <input\n-                            type=\"checkbox\"\n-                            id=\"term_and_condition\"\n-                            name=\"term_and_condition\"\n-                            onChange={(event) =>\n-                              setState({\n-                                ...state,\n-                                term_and_condition: event.target.checked,\n-                              })\n-                            }\n-                            className=\"text-black-2 pt-5 mr-5\"\n-                          />\n-                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n-                            Agree to the\n-                            <Link to=\"\" className=\"text-primary\">\n-                              Terms & Conditions\n-                            </Link>\n-                          </span>\n-                        </label>\n-                        {/*----ERROR MESSAGE FOR terms----*/}\n-                        {errors.term_and_condition && (\n-                          <span\n-                            key={errors.term_and_condition}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.term_and_condition}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group text-center\">\n-                        {loading === true ? (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"button\"\n-                            disabled\n-                          >\n-                            <span\n-                              className=\"spinner-border spinner-border-sm \"\n-                              role=\"status\"\n-                              aria-hidden=\"true\"\n-                            ></span>\n-                            <span className=\"sr-only\">Loading...</span>\n-                          </button>\n-                        ) : otpBox ? (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"submit\"\n-                          >\n-                            Sign Up\n-                          </button>\n-                        ) : (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"submit\"\n-                          >\n-                            Send otp\n-                          </button>\n-                        )}\n-                      </div>\n-                      <p className=\"font-size-4 text-center heading-default-color\">\n-                        Already have an account?\n-                        <Link\n-                          to=\"\"\n-                          className=\"text-primary\"\n-                          onClick={props.CompanyLoginClick}\n-                        >\n-                          Login\n-                        </Link>\n-                      </p>\n-                    </form>\n-                    {/* END SIGNUP FORM */}\n-                  </div>\n-                )}\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-import React, { useState, useEffect } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useSearchParams, useNavigate } from \"react-router-dom\";\n-import useValidation from \"../common/useValidation\";\n-import { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from '@react-oauth/google';\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n-export default function CompanySignUp(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [otpBox, setOtpBox] = useState(false);\n-  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n-  const [otpErr, setotperr] = useState(\"\");\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  let navigate = useNavigate();\n-  const [searchParams] = useSearchParams()\n-  let code = searchParams.get(\"code\")\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employerSignup\");\n-  }\n-  const type = localStorage.getItem(\"linkedin\");\n-  /*Function to close he modal */\n-  const close = () => {\n-    setErrors(\"\");\n-    setState(initialFormState);\n-    setOtpBox(false);\n-    props.close();\n-  };\n-  // USER SIGNUP VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    contact_no: \"\",\n-    term_and_condition: \"\",\n-    otp: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    password: [\n-      (value) =>\n-        value === \"\"\n-          ? \"Password is required\"\n-          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n-            value\n-          )\n-            ? null\n-            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n-    ],\n-    contact_no: [\n-      (value) => value.trim() === \"\" || value === \"\" || value === null\n-        ? \"Contact no is required\"\n-        : value.length < 10 || value.length > 11\n-          ? \"Contact no should be of 10 digits\"\n-          : \"\",\n-    ],\n-    term_and_condition: [\n-      (value) =>\n-        otpBox === false\n-          ? \"\"\n-          : value === null || value === \"\" || value === false\n-            ? \"Please accept terms and conditions continue\"\n-            : \"\",\n-    ],\n-    otp: [\n-      (value) =>\n-        otpBox\n-          ? value === null || value === \"\"\n-            ? \"Otp is requried\"\n-            : otpErr === \"Invalid Otp\"\n-              ? \"Invalid Otp\"\n-              : \"\"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, setErrors, onInputChange, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // USER SIGNUP SUBMIT BUTTON\n-  const onCompanySignUpClick = async (event) => {\n-    event.preventDefault();\n-    if (validate() && state.otp && state.term_and_condition) {\n-      /*Api to signup */\n-      try {\n-        let Response = await EmployerSignUp(state);\n-        if (Response.message === \"Employer has been registered\") {\n-          toast.success(\"Registered Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setErrors(\"\");\n-          setState(initialFormState);\n-          setOtpBox(false);\n-          setSingUpSuccess(\"success\");\n-        } else if (Response.message === \" incorrect otp \") {\n-          setLoading(false);\n-          setotperr(\"Invalid Otp\");\n-          setErrors({ ...errors, term_and_condition: \"\" });\n-          setErrors({ ...errors, contact_no: \"\" });\n-        } else if (Response.message === \"Email already exists\") {\n-          setErrors({ ...errors, email: [\"Email already exists\"] });\n-          setState(initialFormState);\n-          setOtpBox(false);\n-        }\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-    } else if (otpBox === false && validate()) {\n-      /*Api to get otp */\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await SendOtp(state);\n-        if (updatedTodo.message === \"successful\") {\n-          toast.success(\"Otp sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setOtpBox(true);\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER SIGNUP VALIDATION\n-  /*Function to Sign Up with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n-          headers: {\n-            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n-          }\n-        });\n-        console.log(\"response =>\", data.data);\n-        if (data.data.email_verified === true) {\n-          try {\n-            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"userType\", \"company\");\n-            localStorage.setItem(\"employee_id\", res.employer_id);\n-            localStorage.setItem(\"profile_photo\", res.company_logo);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.close();\n-            navigate(\"/company\");\n-            window.location.reload();\n-          } catch (err) {\n-           console.log(err) \n-          }\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    }\n-  });\n-\n-  /*Function to Sign Up  with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n-  // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = '78mhwjaumkvtbm';\n-    const redirectUri = 'http://localhost:3000/';\n-    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n-\n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n-\n-  };\n-  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n-  useEffect(() => {\n-    i = i + 2\n-    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n-      const response = LinkedInSignupEmployer(code, type);\n-      response.then((res) => {\n-        let decode = JSON.parse(res.data)\n-        if (res.data.email_verified === true) {\n-          try {\n-            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"userType\", \"company\");\n-            localStorage.setItem(\"employee_id\", data.employer_id);\n-            localStorage.setItem(\"profile_photo\", data.company_logo);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.close();\n-            navigate(\"/company\");\n-            window.location.reload();\n-          } catch (err) {\n-           console.log(err) {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-          }\n-        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n-          toast.error(\"Token Expired\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          navigate(\"/company\");\n-        }\n-      }).catch((err) => {\n-        console.log(err.data);\n-      })\n-    }\n-  }, [])\n-\n-  /*FUnctiom to Sign Up with facebook */\n-  const responseFacebook = async (response) => {\n-    console.log(response);\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n-        console.log(data);\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"userType\", \"company\");\n-        localStorage.setItem(\"employee_id\", data.employer_id);\n-        localStorage.setItem(\"profile_photo\", data.company_logo);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        props.close();\n-        navigate(\"/company\");\n-        window.location.reload();\n-      } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-    }\n-  }\n-  return (\n-    <>\n-      {/* <!-- Sign Up Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Create a free account today\n-                    </h3>\n-                    <p className=\"mb-0 font-size-4 text-white\">\n-                      Create your account to continue and explore new jobs.\n-                    </p>\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                {SingUpSuccess === \"success\" ? (\n-                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n-                    Congratulations! <br />\n-                    You have successfully registered your account. Please login\n-                    to continue\n-                    <br />\n-                    <Link\n-                      to=\"\"\n-                      className=\"btn btn-primary mt-12\"\n-                      onClick={props.CompanyLoginClick}\n-                    >\n-                      Login\n-                    </Link>\n-                  </div>\n-                ) : (\n-                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n-                    {/* SOCIAL MEDIA LINK BUTTONS */}\n-                    <div className=\"row\">\n-                      <div className=\"col-4 col-xs-12\">\n-                        <button onClick={handleLinkedInLogin}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n-                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from LinkedIn\n-                          </span></button>\n-                      </div>\n-                      <div className=\"col-4 col-xs-12\">\n-                        <Link\n-                          to=\"\" onClick={GoogleLogin}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                        >\n-                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from Google\n-                          </span>\n-                        </Link>\n-                      </div>\n-                      <div className=\"col-4 col-xs-12\">\n-                        <Link\n-                          to=\"\" onClick={() => setFacebook(true)}\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                        >\n-                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                          <span className=\"d-none d-xs-block mx-5 px-3\">\n-                            Import from Facebook\n-                          </span>\n-                        </Link>\n-                        {facebook ?\n-                          <FacebookLogin\n-                            appId=\"2170088543184291\"\n-                            autoLoad\n-                            callback={responseFacebook}\n-                            fields=\"name,email,picture\"\n-                            scope=\"public_profile,user_friends,email,user_actions.books\"\n-                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                            render={renderProps => (\n-                              <button onClick={renderProps.onClick} className=\"d-none\">\n-                              </button>\n-                            )}\n-                          />\n-                          : null}\n-                      </div>\n-                    </div>\n-                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n-                    <div className=\"or-devider\">\n-                      <span className=\"font-size-3 line-height-reset\">Or</span>\n-                    </div>\n-                    {/* SIGNUP FORM */}\n-                    <form onSubmit={onCompanySignUpClick}>\n-                      {/* FORM FIELDS */}\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"email2\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          E-mail\n-                        </label>\n-                        <input\n-                          type=\"email\"\n-                          name=\"email\"\n-                          value={\"\" || state.email}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.email\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"example@gmail.com\"\n-                          id=\"email\"\n-                        />\n-                        {/* ERROR MSG FOR Company EMAIL */}\n-                        {errors.email && (\n-                          <span\n-                            key={errors.email}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.email}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"contact_no\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          Contact Number\n-                        </label>\n-                        <input\n-                          type=\"number\"\n-                          name=\"contact_no\"\n-                          value={\"\" || state.contact_no}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.contact_no\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Contact Number\"\n-                          id=\"contact_no\"\n-                        />\n-                        {/* ERROR MSG FOR Company no */}\n-                        {errors.contact_no && (\n-                          <span\n-                            key={errors.contact_no}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.contact_no}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group\">\n-                        <label\n-                          htmlFor=\"password\"\n-                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                        >\n-                          Password\n-                        </label>\n-                        <div className=\"position-relative\">\n-                          <input\n-                            name=\"password\"\n-                            value={\"\" || state.password}\n-                            onChange={onInputChange}\n-                            type=\"password\"\n-                            className={\n-                              errors.password\n-                                ? \"form-control border border-danger\"\n-                                : \"form-control\"\n-                            }\n-                            id=\"password\"\n-                            placeholder=\"Enter password\"\n-                          />\n-                          {/* ERROR MSG FOR PASSWORD */}\n-                          {errors.password && (\n-                            <span\n-                              key={errors.password}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {errors.password}\n-                            </span>\n-                          )}\n-                        </div>\n-                      </div>\n-                      {otpBox ? (\n-                        <div className=\"form-group\">\n-                          <label\n-                            htmlFor=\"otp\"\n-                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                          >\n-                            Enter Otp\n-                          </label>\n-                          <div className=\"position-relative\">\n-                            <input\n-                              type=\"number\"\n-                              value={\"\" || state.otp}\n-                              onChange={onInputChange}\n-                              maxLength={6}\n-                              name=\"otp\"\n-                              id=\"otp\"\n-                              className={\n-                                errors.otp\n-                                  ? \"form-control border border-danger\"\n-                                  : \"form-control\"\n-                              }\n-                              placeholder=\"Otp\"\n-                            />\n-                            {errors.otp && (\n-                              <span\n-                                key={errors.otp}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {errors.otp}\n-                              </span>\n-                            )}\n-                          </div>\n-                        </div>\n-                      ) : null}\n-                      {/* END FORM FIELDS  */}\n-                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n-                        <label\n-                          htmlFor=\"term_and_condition\"\n-                          className=\"gr-check-input d-flex  mr-3\"\n-                        >\n-                          <input\n-                            type=\"checkbox\"\n-                            id=\"term_and_condition\"\n-                            name=\"term_and_condition\"\n-                            onChange={(event) =>\n-                              setState({\n-                                ...state,\n-                                term_and_condition: event.target.checked,\n-                              })\n-                            }\n-                            className=\"text-black-2 pt-5 mr-5\"\n-                          />\n-                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n-                            Agree to the\n-                            <Link to=\"\" className=\"text-primary\">\n-                              Terms & Conditions\n-                            </Link>\n-                          </span>\n-                        </label>\n-                        {/*----ERROR MESSAGE FOR terms----*/}\n-                        {errors.term_and_condition && (\n-                          <span\n-                            key={errors.term_and_condition}\n-                            className=\"text-danger font-size-3\"\n-                          >\n-                            {errors.term_and_condition}\n-                          </span>\n-                        )}\n-                      </div>\n-                      <div className=\"form-group text-center\">\n-                        {loading === true ? (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"button\"\n-                            disabled\n-                          >\n-                            <span\n-                              className=\"spinner-border spinner-border-sm \"\n-                              role=\"status\"\n-                              aria-hidden=\"true\"\n-                            ></span>\n-                            <span className=\"sr-only\">Loading...</span>\n-                          </button>\n-                        ) : otpBox ? (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"submit\"\n-                          >\n-                            Sign Up\n-                          </button>\n-                        ) : (\n-                          <button\n-                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                            type=\"submit\"\n-                          >\n-                            Send otp\n-                          </button>\n-                        )}\n-                      </div>\n-                      <p className=\"font-size-4 text-center heading-default-color\">\n-                        Already have an account?\n-                        <Link\n-                          to=\"\"\n-                          className=\"text-primary\"\n-                          onClick={props.CompanyLoginClick}\n-                        >\n-                          Login\n-                        </Link>\n-                      </p>\n-                    </form>\n-                    {/* END SIGNUP FORM */}\n-                  </div>\n-                )}\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n"
                },
                {
                    "date": 1693487189162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,587 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useSearchParams, useNavigate } from \"react-router-dom\";\n+import useValidation from \"../common/useValidation\";\n+import { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from '@react-oauth/google';\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n+export default function CompanySignUp(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [otpBox, setOtpBox] = useState(false);\n+  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n+  const [otpErr, setotperr] = useState(\"\");\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  let navigate = useNavigate();\n+  const [searchParams] = useSearchParams()\n+  let code = searchParams.get(\"code\")\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employerSignup\");\n+  }\n+  const type = localStorage.getItem(\"linkedin\");\n+  /*Function to close he modal */\n+  const close = () => {\n+    setErrors(\"\");\n+    setState(initialFormState);\n+    setOtpBox(false);\n+    props.close();\n+  };\n+  // USER SIGNUP VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    contact_no: \"\",\n+    term_and_condition: \"\",\n+    otp: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+            value\n+          )\n+            ? null\n+            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    contact_no: [\n+      (value) => value.trim() === \"\" || value === \"\" || value === null\n+        ? \"Contact no is required\"\n+        : value.length < 10 || value.length > 11\n+          ? \"Contact no should be of 10 digits\"\n+          : \"\",\n+    ],\n+    term_and_condition: [\n+      (value) =>\n+        otpBox === false\n+          ? \"\"\n+          : value === null || value === \"\" || value === false\n+            ? \"Please accept terms and conditions continue\"\n+            : \"\",\n+    ],\n+    otp: [\n+      (value) =>\n+        otpBox\n+          ? value === null || value === \"\"\n+            ? \"Otp is requried\"\n+            : otpErr === \"Invalid Otp\"\n+              ? \"Invalid Otp\"\n+              : \"\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // USER SIGNUP SUBMIT BUTTON\n+  const onCompanySignUpClick = async (event) => {\n+    event.preventDefault();\n+    if (validate() && state.otp && state.term_and_condition) {\n+      /*Api to signup */\n+      try {\n+        let Response = await EmployerSignUp(state);\n+        if (Response.message === \"Employer has been registered\") {\n+          toast.success(\"Registered Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setErrors(\"\");\n+          setState(initialFormState);\n+          setOtpBox(false);\n+          setSingUpSuccess(\"success\");\n+        } else if (Response.message === \" incorrect otp \") {\n+          setLoading(false);\n+          setotperr(\"Invalid Otp\");\n+          setErrors({ ...errors, term_and_condition: \"\" });\n+          setErrors({ ...errors, contact_no: \"\" });\n+        } else if (Response.message === \"Email already exists\") {\n+          setErrors({ ...errors, email: [\"Email already exists\"] });\n+          setState(initialFormState);\n+          setOtpBox(false);\n+        }\n+      } catch (err) {\n+       console.log(err) \n+      }\n+    } else if (otpBox === false && validate()) {\n+      /*Api to get otp */\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await SendOtp(state);\n+        if (updatedTodo.message === \"successful\") {\n+          toast.success(\"Otp sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setOtpBox(true);\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+       console.log(err) \n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER SIGNUP VALIDATION\n+  /*Function to Sign Up with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n+          headers: {\n+            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n+          }\n+        });\n+        console.log(\"response =>\", data.data);\n+        if (data.data.email_verified === true) {\n+          try {\n+            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", res.employer_id);\n+            localStorage.setItem(\"profile_photo\", res.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) ;\n+          }\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    }\n+  });\n+\n+  /*Function to Sign Up  with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = '78mhwjaumkvtbm';\n+    const redirectUri = 'http://localhost:3000/';\n+    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n+\n+  };\n+  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n+  useEffect(() => {\n+    i = i + 2\n+    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n+      const response = LinkedInSignupEmployer(code, type);\n+      response.then((res) => {\n+        let decode = JSON.parse(res.data)\n+        if (res.data.email_verified === true) {\n+          try {\n+            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"userType\", \"company\");\n+            localStorage.setItem(\"employee_id\", data.employer_id);\n+            localStorage.setItem(\"profile_photo\", data.company_logo);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.close();\n+            navigate(\"/company\");\n+            window.location.reload();\n+          } catch (err) {\n+           console.log(err) \n+          }\n+        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n+          toast.error(\"Token Expired\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          navigate(\"/company\");\n+        }\n+      }).catch((err) => {\n+        console.log(err.data);\n+      })\n+    }\n+  }, [])\n+\n+  /*FUnctiom to Sign Up with facebook */\n+  const responseFacebook = async (response) => {\n+    console.log(response);\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n+        console.log(data);\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"userType\", \"company\");\n+        localStorage.setItem(\"employee_id\", data.employer_id);\n+        localStorage.setItem(\"profile_photo\", data.company_logo);\n+        toast.success(\"Logged In Successfully\",{\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        }); \n+        props.close();\n+        navigate(\"/company\");\n+        window.location.reload();\n+      } catch (err) {\n+       console.log(err) \n+      }\n+    }\n+  }\n+  return (\n+    <>\n+      {/* <!-- Sign Up Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Create a free account today\n+                    </h3>\n+                    <p className=\"mb-0 font-size-4 text-white\">\n+                      Create your account to continue and explore new jobs.\n+                    </p>\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                {SingUpSuccess === \"success\" ? (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    Congratulations! <br />\n+                    You have successfully registered your account. Please login\n+                    to continue\n+                    <br />\n+                    <Link\n+                      to=\"\"\n+                      className=\"btn btn-primary mt-12\"\n+                      onClick={props.CompanyLoginClick}\n+                    >\n+                      Login\n+                    </Link>\n+                  </div>\n+                ) : (\n+                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n+                    {/* SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"row\">\n+                      <div className=\"col-4 col-xs-12\">\n+                        <button onClick={handleLinkedInLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n+                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from LinkedIn\n+                          </span></button>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={GoogleLogin}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                        >\n+                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Google\n+                          </span>\n+                        </Link>\n+                      </div>\n+                      <div className=\"col-4 col-xs-12\">\n+                        <Link\n+                          to=\"\" onClick={() => setFacebook(true)}\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                        >\n+                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                          <span className=\"d-none d-xs-block mx-5 px-3\">\n+                            Import from Facebook\n+                          </span>\n+                        </Link>\n+                        {facebook ?\n+                          <FacebookLogin\n+                            appId=\"2170088543184291\"\n+                            autoLoad\n+                            callback={responseFacebook}\n+                            fields=\"name,email,picture\"\n+                            scope=\"public_profile,user_friends,email,user_actions.books\"\n+                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                            render={renderProps => (\n+                              <button onClick={renderProps.onClick} className=\"d-none\">\n+                              </button>\n+                            )}\n+                          />\n+                          : null}\n+                      </div>\n+                    </div>\n+                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n+                    <div className=\"or-devider\">\n+                      <span className=\"font-size-3 line-height-reset\">Or</span>\n+                    </div>\n+                    {/* SIGNUP FORM */}\n+                    <form onSubmit={onCompanySignUpClick}>\n+                      {/* FORM FIELDS */}\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"email2\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          E-mail\n+                        </label>\n+                        <input\n+                          type=\"email\"\n+                          name=\"email\"\n+                          value={\"\" || state.email}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.email\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"example@gmail.com\"\n+                          id=\"email\"\n+                        />\n+                        {/* ERROR MSG FOR Company EMAIL */}\n+                        {errors.email && (\n+                          <span\n+                            key={errors.email}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.email}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"contact_no\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Contact Number\n+                        </label>\n+                        <input\n+                          type=\"number\"\n+                          name=\"contact_no\"\n+                          value={\"\" || state.contact_no}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.contact_no\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Contact Number\"\n+                          id=\"contact_no\"\n+                        />\n+                        {/* ERROR MSG FOR Company no */}\n+                        {errors.contact_no && (\n+                          <span\n+                            key={errors.contact_no}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.contact_no}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group\">\n+                        <label\n+                          htmlFor=\"password\"\n+                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                        >\n+                          Password\n+                        </label>\n+                        <div className=\"position-relative\">\n+                          <input\n+                            name=\"password\"\n+                            value={\"\" || state.password}\n+                            onChange={onInputChange}\n+                            type=\"password\"\n+                            className={\n+                              errors.password\n+                                ? \"form-control border border-danger\"\n+                                : \"form-control\"\n+                            }\n+                            id=\"password\"\n+                            placeholder=\"Enter password\"\n+                          />\n+                          {/* ERROR MSG FOR PASSWORD */}\n+                          {errors.password && (\n+                            <span\n+                              key={errors.password}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {errors.password}\n+                            </span>\n+                          )}\n+                        </div>\n+                      </div>\n+                      {otpBox ? (\n+                        <div className=\"form-group\">\n+                          <label\n+                            htmlFor=\"otp\"\n+                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                          >\n+                            Enter Otp\n+                          </label>\n+                          <div className=\"position-relative\">\n+                            <input\n+                              type=\"number\"\n+                              value={\"\" || state.otp}\n+                              onChange={onInputChange}\n+                              maxLength={6}\n+                              name=\"otp\"\n+                              id=\"otp\"\n+                              className={\n+                                errors.otp\n+                                  ? \"form-control border border-danger\"\n+                                  : \"form-control\"\n+                              }\n+                              placeholder=\"Otp\"\n+                            />\n+                            {errors.otp && (\n+                              <span\n+                                key={errors.otp}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {errors.otp}\n+                              </span>\n+                            )}\n+                          </div>\n+                        </div>\n+                      ) : null}\n+                      {/* END FORM FIELDS  */}\n+                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n+                        <label\n+                          htmlFor=\"term_and_condition\"\n+                          className=\"gr-check-input d-flex  mr-3\"\n+                        >\n+                          <input\n+                            type=\"checkbox\"\n+                            id=\"term_and_condition\"\n+                            name=\"term_and_condition\"\n+                            onChange={(event) =>\n+                              setState({\n+                                ...state,\n+                                term_and_condition: event.target.checked,\n+                              })\n+                            }\n+                            className=\"text-black-2 pt-5 mr-5\"\n+                          />\n+                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n+                            Agree to the\n+                            <Link to=\"\" className=\"text-primary\">\n+                              Terms & Conditions\n+                            </Link>\n+                          </span>\n+                        </label>\n+                        {/*----ERROR MESSAGE FOR terms----*/}\n+                        {errors.term_and_condition && (\n+                          <span\n+                            key={errors.term_and_condition}\n+                            className=\"text-danger font-size-3\"\n+                          >\n+                            {errors.term_and_condition}\n+                          </span>\n+                        )}\n+                      </div>\n+                      <div className=\"form-group text-center\">\n+                        {loading === true ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"button\"\n+                            disabled\n+                          >\n+                            <span\n+                              className=\"spinner-border spinner-border-sm \"\n+                              role=\"status\"\n+                              aria-hidden=\"true\"\n+                            ></span>\n+                            <span className=\"sr-only\">Loading...</span>\n+                          </button>\n+                        ) : otpBox ? (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Sign Up\n+                          </button>\n+                        ) : (\n+                          <button\n+                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                            type=\"submit\"\n+                          >\n+                            Send otp\n+                          </button>\n+                        )}\n+                      </div>\n+                      <p className=\"font-size-4 text-center heading-default-color\">\n+                        Already have an account?\n+                        <Link\n+                          to=\"\"\n+                          className=\"text-primary\"\n+                          onClick={props.CompanyLoginClick}\n+                        >\n+                          Login\n+                        </Link>\n+                      </p>\n+                    </form>\n+                    {/* END SIGNUP FORM */}\n+                  </div>\n+                )}\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                }
            ],
            "date": 1693486851450,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link, useSearchParams, useNavigate } from \"react-router-dom\";\nimport useValidation from \"../common/useValidation\";\nimport { EmployerSignUp, SendOtp, LinkedInSignupEmployer, SocialCompanyLogin } from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from \"axios\";\n// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nexport default function CompanySignUp(props) {\n  let [loading, setLoading] = useState(false);\n  let [otpBox, setOtpBox] = useState(false);\n  const [SingUpSuccess, setSingUpSuccess] = useState(\"\");\n  const [otpErr, setotperr] = useState(\"\");\n  let [facebook, setFacebook] = useState(false);\n  let i = 0;\n  let navigate = useNavigate();\n  const [searchParams] = useSearchParams()\n  let code = searchParams.get(\"code\")\n  if (props.show === true) {\n    localStorage.setItem(\"linkedin\", \"employerSignup\");\n  }\n  const type = localStorage.getItem(\"linkedin\");\n  /*Function to close he modal */\n  const close = () => {\n    setErrors(\"\");\n    setState(initialFormState);\n    setOtpBox(false);\n    props.close();\n  };\n  // USER SIGNUP VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    email: \"\",\n    password: \"\",\n    contact_no: \"\",\n    term_and_condition: \"\",\n    otp: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    email: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n            ? null\n            : \"Email is invalid\",\n    ],\n    password: [\n      (value) =>\n        value === \"\"\n          ? \"Password is required\"\n          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n            value\n          )\n            ? null\n            : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n    ],\n    contact_no: [\n      (value) => value.trim() === \"\" || value === \"\" || value === null\n        ? \"Contact no is required\"\n        : value.length < 10 || value.length > 11\n          ? \"Contact no should be of 10 digits\"\n          : \"\",\n    ],\n    term_and_condition: [\n      (value) =>\n        otpBox === false\n          ? \"\"\n          : value === null || value === \"\" || value === false\n            ? \"Please accept terms and conditions continue\"\n            : \"\",\n    ],\n    otp: [\n      (value) =>\n        otpBox\n          ? value === null || value === \"\"\n            ? \"Otp is requried\"\n            : otpErr === \"Invalid Otp\"\n              ? \"Invalid Otp\"\n              : \"\"\n          : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, setErrors, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  // USER SIGNUP SUBMIT BUTTON\n  const onCompanySignUpClick = async (event) => {\n    event.preventDefault();\n    if (validate() && state.otp && state.term_and_condition) {\n      /*Api to signup */\n      try {\n        let Response = await EmployerSignUp(state);\n        if (Response.message === \"Employer has been registered\") {\n          toast.success(\"Registered Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setErrors(\"\");\n          setState(initialFormState);\n          setOtpBox(false);\n          setSingUpSuccess(\"success\");\n        } else if (Response.message === \" incorrect otp \") {\n          setLoading(false);\n          setotperr(\"Invalid Otp\");\n          setErrors({ ...errors, term_and_condition: \"\" });\n          setErrors({ ...errors, contact_no: \"\" });\n        } else if (Response.message === \"Email already exists\") {\n          setErrors({ ...errors, email: [\"Email already exists\"] });\n          setState(initialFormState);\n          setOtpBox(false);\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    } else if (otpBox === false && validate()) {\n      /*Api to get otp */\n      setLoading(true);\n      try {\n        const updatedTodo = await SendOtp(state);\n        if (updatedTodo.message === \"successful\") {\n          toast.success(\"Otp sent Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setOtpBox(true);\n          setLoading(false);\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false);\n      }\n    }\n  };\n  // END USER SIGNUP VALIDATION\n  /*Function to Sign Up with google */\n  const GoogleLogin = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      try {\n        let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n          headers: {\n            \"Authorization\": `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        console.log(\"response =>\", data.data);\n        if (data.data.email_verified === true) {\n          try {\n            let res = await SocialCompanyLogin(data.data.sub, data.data.email, data.data.name, data.data.picture, \"Google\");\n            console.log(res);\n            localStorage.setItem(\"token\", res.token);\n            localStorage.setItem(\"userType\", \"company\");\n            localStorage.setItem(\"employee_id\", res.employer_id);\n            localStorage.setItem(\"profile_photo\", res.company_logo);\n            toast.success(\"Logged In Successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.close();\n            navigate(\"/company\");\n            window.location.reload();\n          } catch (err) {\n           console.log(err) {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  });\n\n  /*Function to Sign Up  with Linked in */\n  /*Code to get access token */\n  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n  // .then(response => {\n  //   console.log('data', response.data);\n  // })\n  // .catch(error => {\n  //   console.error('Error:', error.message);\n  // });\n  // console.log(i , \"code =>\" , code);\n  const handleLinkedInLogin = () => {\n    const clientId = '78mhwjaumkvtbm';\n    const redirectUri = 'http://localhost:3000/';\n    const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n\n    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n\n  };\n  // console.log(type ,(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\");\n  useEffect(() => {\n    i = i + 2\n    if ((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 2 && type === \"employerSignup\") {\n      const response = LinkedInSignupEmployer(code, type);\n      response.then((res) => {\n        let decode = JSON.parse(res.data)\n        if (res.data.email_verified === true) {\n          try {\n            let data = SocialCompanyLogin(res.data.sub, res.data.email, res.data.name, res.data.picture, \"Linkedin\");\n            console.log(data);\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"userType\", \"company\");\n            localStorage.setItem(\"employee_id\", data.employer_id);\n            localStorage.setItem(\"profile_photo\", data.company_logo);\n            toast.success(\"Logged In Successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.close();\n            navigate(\"/company\");\n            window.location.reload();\n          } catch (err) {\n           console.log(err) {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n          }\n        } if (res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\") {\n          toast.error(\"Token Expired\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          navigate(\"/company\");\n        }\n      }).catch((err) => {\n        console.log(err.data);\n      })\n    }\n  }, [])\n\n  /*FUnctiom to Sign Up with facebook */\n  const responseFacebook = async (response) => {\n    console.log(response);\n    if (response.graphDomain === \"facebook\") {\n      try {\n        let data = await SocialCompanyLogin(response.userID, response.email, response.name, response.picture.data.url, \"Facebook\");\n        console.log(data);\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"userType\", \"company\");\n        localStorage.setItem(\"employee_id\", data.employer_id);\n        localStorage.setItem(\"profile_photo\", data.company_logo);\n        toast.success(\"Logged In Successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        props.close();\n        navigate(\"/company\");\n        window.location.reload();\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    }\n  }\n  return (\n    <>\n      {/* <!-- Sign Up Modal --> */}\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-dialog max-width-px-840 position-relative\">\n          <button\n            type=\"button\"\n            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-n6 mr-lg-n6 focus-reset shadow-10  z-index-supper\"\n            data-dismiss=\"modal\"\n            onClick={close}\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-lg-5 col-md-6\">\n                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n                  <div className=\"pb-9\">\n                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n                      Create a free account today\n                    </h3>\n                    <p className=\"mb-0 font-size-4 text-white\">\n                      Create your account to continue and explore new jobs.\n                    </p>\n                  </div>\n                  <div className=\"border-top border-default-color-2 mt-auto\">\n                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">295</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New jobs posted today\n                        </p>\n                      </div>\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">14</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New companies registered\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-7 col-md-6\">\n                {SingUpSuccess === \"success\" ? (\n                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n                    Congratulations! <br />\n                    You have successfully registered your account. Please login\n                    to continue\n                    <br />\n                    <Link\n                      to=\"\"\n                      className=\"btn btn-primary mt-12\"\n                      onClick={props.CompanyLoginClick}\n                    >\n                      Login\n                    </Link>\n                  </div>\n                ) : (\n                  <div className=\"bg-white-2 h-100 px-11 pt-11 pb-7 login_Modal_box\">\n                    {/* SOCIAL MEDIA LINK BUTTONS */}\n                    <div className=\"row\">\n                      <div className=\"col-4 col-xs-12\">\n                        <button onClick={handleLinkedInLogin}\n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n                          <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                          <span className=\"d-none d-xs-block mx-5 px-3\">\n                            Import from LinkedIn\n                          </span></button>\n                      </div>\n                      <div className=\"col-4 col-xs-12\">\n                        <Link\n                          to=\"\" onClick={GoogleLogin}\n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                        >\n                          <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                          <span className=\"d-none d-xs-block mx-5 px-3\">\n                            Import from Google\n                          </span>\n                        </Link>\n                      </div>\n                      <div className=\"col-4 col-xs-12\">\n                        <Link\n                          to=\"\" onClick={() => setFacebook(true)}\n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n                        >\n                          <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                          <span className=\"d-none d-xs-block mx-5 px-3\">\n                            Import from Facebook\n                          </span>\n                        </Link>\n                        {facebook ?\n                          <FacebookLogin\n                            appId=\"2170088543184291\"\n                            autoLoad\n                            callback={responseFacebook}\n                            fields=\"name,email,picture\"\n                            scope=\"public_profile,user_friends,email,user_actions.books\"\n                            className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                            render={renderProps => (\n                              <button onClick={renderProps.onClick} className=\"d-none\">\n                              </button>\n                            )}\n                          />\n                          : null}\n                      </div>\n                    </div>\n                    {/* END SOCIAL MEDIA LINK BUTTONS */}\n                    <div className=\"or-devider\">\n                      <span className=\"font-size-3 line-height-reset\">Or</span>\n                    </div>\n                    {/* SIGNUP FORM */}\n                    <form onSubmit={onCompanySignUpClick}>\n                      {/* FORM FIELDS */}\n                      <div className=\"form-group\">\n                        <label\n                          htmlFor=\"email2\"\n                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                        >\n                          E-mail\n                        </label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          value={\"\" || state.email}\n                          onChange={onInputChange}\n                          className={\n                            errors.email\n                              ? \"form-control border border-danger\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"example@gmail.com\"\n                          id=\"email\"\n                        />\n                        {/* ERROR MSG FOR Company EMAIL */}\n                        {errors.email && (\n                          <span\n                            key={errors.email}\n                            className=\"text-danger font-size-3\"\n                          >\n                            {errors.email}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label\n                          htmlFor=\"contact_no\"\n                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                        >\n                          Contact Number\n                        </label>\n                        <input\n                          type=\"number\"\n                          name=\"contact_no\"\n                          value={\"\" || state.contact_no}\n                          onChange={onInputChange}\n                          className={\n                            errors.contact_no\n                              ? \"form-control border border-danger\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"Contact Number\"\n                          id=\"contact_no\"\n                        />\n                        {/* ERROR MSG FOR Company no */}\n                        {errors.contact_no && (\n                          <span\n                            key={errors.contact_no}\n                            className=\"text-danger font-size-3\"\n                          >\n                            {errors.contact_no}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label\n                          htmlFor=\"password\"\n                          className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                        >\n                          Password\n                        </label>\n                        <div className=\"position-relative\">\n                          <input\n                            name=\"password\"\n                            value={\"\" || state.password}\n                            onChange={onInputChange}\n                            type=\"password\"\n                            className={\n                              errors.password\n                                ? \"form-control border border-danger\"\n                                : \"form-control\"\n                            }\n                            id=\"password\"\n                            placeholder=\"Enter password\"\n                          />\n                          {/* ERROR MSG FOR PASSWORD */}\n                          {errors.password && (\n                            <span\n                              key={errors.password}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {errors.password}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      {otpBox ? (\n                        <div className=\"form-group\">\n                          <label\n                            htmlFor=\"otp\"\n                            className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                          >\n                            Enter Otp\n                          </label>\n                          <div className=\"position-relative\">\n                            <input\n                              type=\"number\"\n                              value={\"\" || state.otp}\n                              onChange={onInputChange}\n                              maxLength={6}\n                              name=\"otp\"\n                              id=\"otp\"\n                              className={\n                                errors.otp\n                                  ? \"form-control border border-danger\"\n                                  : \"form-control\"\n                              }\n                              placeholder=\"Otp\"\n                            />\n                            {errors.otp && (\n                              <span\n                                key={errors.otp}\n                                className=\"text-danger font-size-3\"\n                              >\n                                {errors.otp}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      ) : null}\n                      {/* END FORM FIELDS  */}\n                      <div className=\" d-flex flex-wrap justify-content-between mb-1 col-md-12 \">\n                        <label\n                          htmlFor=\"term_and_condition\"\n                          className=\"gr-check-input d-flex  mr-3\"\n                        >\n                          <input\n                            type=\"checkbox\"\n                            id=\"term_and_condition\"\n                            name=\"term_and_condition\"\n                            onChange={(event) =>\n                              setState({\n                                ...state,\n                                term_and_condition: event.target.checked,\n                              })\n                            }\n                            className=\"text-black-2 pt-5 mr-5\"\n                          />\n                          <span className=\"font-size-3 mb-0 line-height-reset d-block\">\n                            Agree to the\n                            <Link to=\"\" className=\"text-primary\">\n                              Terms & Conditions\n                            </Link>\n                          </span>\n                        </label>\n                        {/*----ERROR MESSAGE FOR terms----*/}\n                        {errors.term_and_condition && (\n                          <span\n                            key={errors.term_and_condition}\n                            className=\"text-danger font-size-3\"\n                          >\n                            {errors.term_and_condition}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"form-group text-center\">\n                        {loading === true ? (\n                          <button\n                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                            type=\"button\"\n                            disabled\n                          >\n                            <span\n                              className=\"spinner-border spinner-border-sm \"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                            <span className=\"sr-only\">Loading...</span>\n                          </button>\n                        ) : otpBox ? (\n                          <button\n                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                            type=\"submit\"\n                          >\n                            Sign Up\n                          </button>\n                        ) : (\n                          <button\n                            className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                            type=\"submit\"\n                          >\n                            Send otp\n                          </button>\n                        )}\n                      </div>\n                      <p className=\"font-size-4 text-center heading-default-color\">\n                        Already have an account?\n                        <Link\n                          to=\"\"\n                          className=\"text-primary\"\n                          onClick={props.CompanyLoginClick}\n                        >\n                          Login\n                        </Link>\n                      </p>\n                    </form>\n                    {/* END SIGNUP FORM */}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n"
        }
    ]
}