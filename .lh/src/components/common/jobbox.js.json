{
    "sourceFile": "src/components/common/jobbox.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1708946620061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709721486419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useEffect } from \"react\";\n import { Link, useLocation, useNavigate } from \"react-router-dom\";\n import { GetAllJobs, ApplyJob } from \"../../api/api\";\n import AddJobModal from \"../forms/employer/job\";\n-import EmployeeLoginModal from \"../user/login\";\n+// import EmployeeLoginModal from \"../user/login\";\n import { toast } from \"react-toastify\";\n import {\n   LiaIndustrySolid,\n   LiaSearchLocationSolid,\n"
                },
                {
                    "date": 1710321475602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,398 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+let navigate =useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          (!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\")\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")\n+          );\n+        } else {\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                job.keyskill === undefined ||\n+                job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  to={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? \"/job_detail\"\n+                      : \"/candidate_login\"\n+                  }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                        () => {\n+                          localStorage.setItem(\"job_id\", job.job_id);\n+                          OnApplyClick(1, job.job_id);\n+                        }\n+                      : // : null\n+                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710321629031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,398 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+let navigate =useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          (!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\")\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")\n+          );\n+        } else {\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                job.keyskill === undefined ||\n+                job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  // to={\n+                  //   token && (user_type === \"user\" || user_type === \"company\")\n+                  //     ? \"/job_detail\"\n+                  //     : \"/candidate_login\"\n+                  // }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                        () => {\n+                          localStorage.setItem(\"job_id\", job.job_id);\n+                          OnApplyClick(1, job.job_id);\n+                        }\n+                      : // : null\n+                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710321647896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,807 +174,11 @@\n                 className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n               >\n                 <Link\n                   className=\"w-100\"\n-                  // to={\n-                  //   token && (user_type === \"user\" || user_type === \"company\")\n-                  //     ? \"/job_detail\"\n-                  //     : \"/candidate_login\"\n-                  // }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                        () => {\n-                          localStorage.setItem(\"job_id\", job.job_id);\n-                          OnApplyClick(1, job.job_id);\n-                        }\n-                      : // : null\n-                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-let navigate =useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n-        ) {\n-          setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")\n-          );\n-        } else {\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                job.keyskill === undefined ||\n-                job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n                   to={\n                     token && (user_type === \"user\" || user_type === \"company\")\n                       ? \"/job_detail\"\n-                      : \"/candidate_login\"\n-                  }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                        () => {\n-                          localStorage.setItem(\"job_id\", job.job_id);\n-                          OnApplyClick(1, job.job_id);\n-                        }\n-                      : // : null\n-                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-let navigate =useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n-        ) {\n-          setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")\n-          );\n-        } else {\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                job.keyskill === undefined ||\n-                job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n-                  to={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? \"/job_detail\"\n                       : \"\"\n                   }\n                   onClick={\n                     token && (user_type === \"user\" || user_type === \"company\")\n"
                },
                {
                    "date": 1710400503905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,8 +146,9 @@\n         data-aos=\"fade-right\"\n         data-aos-duration=\"800\"\n         data-aos-once=\"true\"\n       >\n+        console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)\n         {/* <!-- Maped Job --> */}\n         {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n           <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n             <h4>\n"
                },
                {
                    "date": 1710400578493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,11 @@\n         ) {\n           setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n           );\n+          console.log(\"object\")\n         } else {\n+          console.log(\"0111\")\n           setjobData(userData.data.data);\n         }\n         setNoData(userData.data.total_rows);\n       }\n@@ -146,9 +148,9 @@\n         data-aos=\"fade-right\"\n         data-aos-duration=\"800\"\n         data-aos-once=\"true\"\n       >\n-        console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)\n+        {console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)}\n         {/* <!-- Maped Job --> */}\n         {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n           <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n             <h4>\n"
                },
                {
                    "date": 1710400588933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,11 +79,11 @@\n         ) {\n           setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n           );\n-          console.log(\"object\")\n+          console.log(\"object\",userData.data.data)\n         } else {\n-          console.log(\"0111\")\n+          console.log(\"0111\",userData.data.data)\n           setjobData(userData.data.data);\n         }\n         setNoData(userData.data.total_rows);\n       }\n"
                },
                {
                    "date": 1710400640741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n         ) {\n           setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n           );\n-          console.log(\"object\",userData.data.data)\n+          console.log(\"object\",userData.data.data.filter((item) => item.is_featured === \"1\"))\n         } else {\n           console.log(\"0111\",userData.data.data)\n           setjobData(userData.data.data);\n         }\n"
                },
                {
                    "date": 1710400677694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,401 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+let navigate =useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          (!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\")\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")?  userData.data.data.filter((item) => item.is_featured === \"1\"):userData.data.data\n+          );\n+          console.log(\"object\",userData.data.data.filter((item) => item.is_featured === \"1\"))\n+        } else {\n+          console.log(\"0111\",userData.data.data)\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)}\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                job.keyskill === undefined ||\n+                job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  to={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? \"/job_detail\"\n+                      : \"\"\n+                  }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                        () => {\n+                          localStorage.setItem(\"job_id\", job.job_id);\n+                          OnApplyClick(1, job.job_id);\n+                        }\n+                      : // : null\n+                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710400849886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const token = localStorage.getItem(\"token\");\n   const user_type = localStorage.getItem(\"userType\");\n   const user_id = localStorage.getItem(\"employee_id\");\n   const skill = localStorage.getItem(\"skill\");\n-let navigate =useNavigate()\n+  let navigate = useNavigate()\n   /*Functionality to get the data to search the jobs */\n   const location = useLocation();\n   const searchParams = new URLSearchParams(location.search);\n   const search = searchParams.get(\"search\");\n@@ -77,414 +77,15 @@\n           (!token && location.pathname === \"/\") ||\n           (!skill && !SkillFilterValue && user_type === \"user\")\n         ) {\n           setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")?  userData.data.data.filter((item) => item.is_featured === \"1\"):userData.data.data\n-          );\n-          console.log(\"object\",userData.data.data.filter((item) => item.is_featured === \"1\"))\n-        } else {\n-          console.log(\"0111\",userData.data.data)\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)}\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                job.keyskill === undefined ||\n-                job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n-                  to={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? \"/job_detail\"\n-                      : \"\"\n-                  }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                        () => {\n-                          localStorage.setItem(\"job_id\", job.job_id);\n-                          OnApplyClick(1, job.job_id);\n-                        }\n-                      : // : null\n-                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-let navigate =useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n-        ) {\n-          setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n+              ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n+              userData.data.data\n           );\n-          console.log(\"object\",userData.data.data.filter((item) => item.is_featured === \"1\"))\n+          console.log(\"object\", userData.data.data.filter((item) => item.is_featured === \"1\"))\n         } else {\n-          console.log(\"0111\",userData.data.data)\n+          console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n         }\n         setNoData(userData.data.total_rows);\n       }\n@@ -549,9 +150,9 @@\n         data-aos=\"fade-right\"\n         data-aos-duration=\"800\"\n         data-aos-once=\"true\"\n       >\n-        {console.log(noData === 0 || noData === \"\" || jobData.length === 0,noData,jobData)}\n+        {console.log(noData === 0 || noData === \"\" || jobData.length === 0, noData, jobData)}\n         {/* <!-- Maped Job --> */}\n         {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n           <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n             <h4>\n@@ -566,10 +167,10 @@\n             let skill = [];\n             if (job !== \"\") {\n               skill =\n                 job.keyskill === null ||\n-                job.keyskill === undefined ||\n-                job.keyskill === \"undefined\"\n+                  job.keyskill === undefined ||\n+                  job.keyskill === \"undefined\"\n                   ? []\n                   : job.keyskill.split(\",\");\n             }\n             return (\n@@ -586,14 +187,14 @@\n                   }\n                   onClick={\n                     token && (user_type === \"user\" || user_type === \"company\")\n                       ? // ? job.is_applied === \"0\"\n-                        () => {\n-                          localStorage.setItem(\"job_id\", job.job_id);\n-                          OnApplyClick(1, job.job_id);\n-                        }\n+                      () => {\n+                        localStorage.setItem(\"job_id\", job.job_id);\n+                        OnApplyClick(1, job.job_id);\n+                      }\n                       : // : null\n-                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n                   }\n                 >\n                   {job.job_type === \"swap\" ? (\n                     <span className=\"job_swap_label\">SWEP</span>\n"
                },
                {
                    "date": 1710400902713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,11 @@\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n               ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n               userData.data.data\n           );\n-          console.log(\"object\", userData.data.data.filter((item) => item.is_featured === \"1\"))\n+          console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n+          ? 1 :\n+          2)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n         }\n"
                },
                {
                    "date": 1710400924968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,10 @@\n               ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n               userData.data.data\n           );\n           console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n-          ? 1 :\n-          2)\n+          ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n+          userData.data.data)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n         }\n"
                },
                {
                    "date": 1710400937806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n               ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n               userData.data.data\n           );\n           console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n-          ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n+          ? userData.data.data :\n           userData.data.data)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n"
                },
                {
                    "date": 1710400967179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n               ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n               userData.data.data\n           );\n           console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n-          ? userData.data.data :\n+          ? userData.data.data.map((item) => item.is_featured ) :\n           userData.data.data)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n"
                },
                {
                    "date": 1710400998438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n               ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n               userData.data.data\n           );\n           console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n-          ? userData.data.data.map((item) => item.is_featured ) :\n+          ? userData.data.data.map((item) => item.is_featured ===\"1\") :\n           userData.data.data)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n"
                },
                {
                    "date": 1710401096809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,18 +74,15 @@\n         setjobData([]);\n       } else {\n         if (\n           (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n+          (!skill && !SkillFilterValue && user_type === \"user\") &&\n+          userData.data.data.find((item) => item.is_featured === \"1\")\n         ) {\n           setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n-              ? userData.data.data.filter((item) => item.is_featured === \"1\") :\n-              userData.data.data\n           );\n-          console.log(\"object\",  userData.data.data.filter((item) => item.is_featured === \"1\")\n-          ? userData.data.data.map((item) => item.is_featured ===\"1\") :\n-          userData.data.data)\n+          console.log(\"object\", userData.data.data)\n         } else {\n           console.log(\"0111\", userData.data.data)\n           setjobData(userData.data.data);\n         }\n"
                },
                {
                    "date": 1710401147961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,399 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+  let navigate = useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          (!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\") &&\n+          userData.data.data.find((item) => item.is_featured === \"1\")\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")\n+          );\n+        } else {\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                  job.keyskill === undefined ||\n+                  job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  to={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? \"/job_detail\"\n+                      : \"\"\n+                  }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                      () => {\n+                        localStorage.setItem(\"job_id\", job.job_id);\n+                        OnApplyClick(1, job.job_id);\n+                      }\n+                      : // : null\n+                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710404940015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,11 @@\n         setjobData([]);\n       } else {\n         if (\n           (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\") &&\n-          userData.data.data.find((item) => item.is_featured === \"1\")\n+          (!skill && !SkillFilterValue && user_type === \"user\")\n+          && userData.data.data.find((item) => item.is_featured === \"1\")\n+          && location.pathname === \"/jobs\"\n         ) {\n           setjobData(\n             userData.data.data.filter((item) => item.is_featured === \"1\")\n           );\n@@ -396,406 +397,4 @@\n     </>\n   );\n }\n export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-  let navigate = useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\") &&\n-          userData.data.data.find((item) => item.is_featured === \"1\")\n-        ) {\n-          setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")\n-          );\n-          console.log(\"object\", userData.data.data)\n-        } else {\n-          console.log(\"0111\", userData.data.data)\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {console.log(noData === 0 || noData === \"\" || jobData.length === 0, noData, jobData)}\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                  job.keyskill === undefined ||\n-                  job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n-                  to={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? \"/job_detail\"\n-                      : \"\"\n-                  }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                      () => {\n-                        localStorage.setItem(\"job_id\", job.job_id);\n-                        OnApplyClick(1, job.job_id);\n-                      }\n-                      : // : null\n-                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n"
                },
                {
                    "date": 1710404977972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,400 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+  let navigate = useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          (!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\")\n+          && userData.data.data.find((item) => item.is_featured === \"1\")\n+          && location.pathname !== \"/jobs\"\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")\n+          );\n+        } else {\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                  job.keyskill === undefined ||\n+                  job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  to={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? \"/job_detail\"\n+                      : \"\"\n+                  }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                      () => {\n+                        localStorage.setItem(\"job_id\", job.job_id);\n+                        OnApplyClick(1, job.job_id);\n+                      }\n+                      : // : null\n+                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710405874705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,400 @@\n+import moment from \"moment\";\n+import React, { useState } from \"react\";\n+import { useEffect } from \"react\";\n+import { Link, useLocation, useNavigate } from \"react-router-dom\";\n+import { GetAllJobs, ApplyJob } from \"../../api/api\";\n+import AddJobModal from \"../forms/employer/job\";\n+// import EmployeeLoginModal from \"../user/login\";\n+import { toast } from \"react-toastify\";\n+import {\n+  LiaIndustrySolid,\n+  LiaSearchLocationSolid,\n+  LiaBriefcaseSolid,\n+  LiaBusinessTimeSolid,\n+} from \"react-icons/lia\";\n+import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n+function JobBox({\n+  showAddJobModal,\n+  categoryFilterValue,\n+  SkillFilterValue,\n+  jobSwapFilterValue,\n+  locationFilterValue,\n+  jobLocation,\n+  apiCall,\n+}) {\n+  /*States */\n+  let [ApiCall, setApiCall] = useState(false);\n+  // const [showLogin, setShowLogin] = useState(false);\n+  const [showDataForm, setShowDataForm] = useState(false);\n+  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n+  let [jobData, setjobData] = useState([]);\n+  const [JobId, setJobId] = useState([]);\n+  let [noData, setNoData] = useState(\"\");\n+\n+  /*Data from local storage */\n+  const token = localStorage.getItem(\"token\");\n+  const user_type = localStorage.getItem(\"userType\");\n+  const user_id = localStorage.getItem(\"employee_id\");\n+  const skill = localStorage.getItem(\"skill\");\n+  let navigate = useNavigate()\n+  /*Functionality to get the data to search the jobs */\n+  const location = useLocation();\n+  const searchParams = new URLSearchParams(location.search);\n+  const search = searchParams.get(\"search\");\n+  const country = searchParams.get(\"country\");\n+  const category = searchParams.get(\"category\");\n+  const path = location.pathname;\n+  const name = localStorage.getItem(\"name\");\n+  /* Function to get Job data*/\n+  const JobData = async () => {\n+    try {\n+      const userData = await GetAllJobs(\n+        search,\n+        (path === \"/jobs\" && !country) ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !country) ||\n+          jobLocation\n+          ? jobLocation\n+          : country,\n+        path === \"/jobs\" ||\n+          path === \"/managejobs\" ||\n+          (path === \"/response\" && !category)\n+          ? categoryFilterValue\n+          : category,\n+        skill || SkillFilterValue\n+          ? token && location.pathname === \"/\"\n+            ? skill\n+            : SkillFilterValue\n+          : \"\",\n+        jobSwapFilterValue,\n+        1,\n+        \"10\"\n+      );\n+      if (userData.data.data.length === 0) {\n+        setjobData([]);\n+      } else {\n+        if (\n+          ((!token && location.pathname === \"/\") ||\n+          (!skill && !SkillFilterValue && user_type === \"user\"))\n+          && userData.data.data.find((item) => item.is_featured === \"1\")\n+          && location.pathname !== \"/jobs\"\n+        ) {\n+          setjobData(\n+            userData.data.data.filter((item) => item.is_featured === \"1\")\n+          );\n+        } else {\n+          setjobData(userData.data.data);\n+        }\n+        setNoData(userData.data.total_rows);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render Function */\n+  useEffect(() => {\n+    JobData();\n+    //Function to replace the url path after searching Job\n+    if (search) {\n+      const newUrl = window.location.pathname;\n+      window.history.replaceState({}, document.title, newUrl);\n+    }\n+    if (ApiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [\n+    showAddJobsModal,\n+    showAddJobModal,\n+    categoryFilterValue,\n+    SkillFilterValue,\n+    jobSwapFilterValue,\n+    locationFilterValue,\n+    apiCall,\n+    ApiCall,\n+    search,\n+    country,\n+    category,\n+    jobLocation,\n+  ]);\n+\n+  /*FUnction to apply to the job */\n+  const OnApplyClick = async (status, job_id) => {\n+    try {\n+      let Response = await ApplyJob(job_id, user_id, status);\n+      if (Response.message === \"Job applied successfully\") {\n+        toast.success(\"Job Applied successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+      }\n+      if (Response.message === \"already applied on this job\") {\n+        toast.success(\"Already applied on this job\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+      setApiCall(true);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  return (\n+    <>\n+      <div\n+        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n+        data-aos=\"fade-right\"\n+        data-aos-duration=\"800\"\n+        data-aos-once=\"true\"\n+      >\n+        {/* <!-- Maped Job --> */}\n+        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n+          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n+            <h4>\n+              {skill || SkillFilterValue\n+                ? \"No jobs found for your skills\"\n+                : \"No jobs found\"}\n+            </h4>\n+          </div>\n+        ) : (\n+          (jobData || []).map((job, i) => {\n+            // Convert the skill string to an array\n+            let skill = [];\n+            if (job !== \"\") {\n+              skill =\n+                job.keyskill === null ||\n+                  job.keyskill === undefined ||\n+                  job.keyskill === \"undefined\"\n+                  ? []\n+                  : job.keyskill.split(\",\");\n+            }\n+            return (\n+              <div\n+                key={i}\n+                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n+              >\n+                <Link\n+                  className=\"w-100\"\n+                  to={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? \"/job_detail\"\n+                      : \"\"\n+                  }\n+                  onClick={\n+                    token && (user_type === \"user\" || user_type === \"company\")\n+                      ? // ? job.is_applied === \"0\"\n+                      () => {\n+                        localStorage.setItem(\"job_id\", job.job_id);\n+                        OnApplyClick(1, job.job_id);\n+                      }\n+                      : // : null\n+                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n+                  }\n+                >\n+                  {job.job_type === \"swap\" ? (\n+                    <span className=\"job_swap_label\">SWEP</span>\n+                  ) : null}\n+                  {/* {job.is_featured === \"1\" ? (\n+                    <span className=\"bg-orange text-white featured_tag\">\n+                      Featured\n+                    </span>\n+                  ) : null} */}\n+                  <div className=\"row job_header m-0\">\n+                    <div className=\"media align-items-center company_box col-6 p-0\">\n+                      {/* <div className=\"text_box text-left\">\n+                        <img\n+                          className=\"company_logo\"\n+                          src={\n+                            job.logo === null ||\n+                            job.logo === undefined ||\n+                            job.logo === \"undefined\" ||\n+                            job.logo === \"null\" ||\n+                            job.logo === \"\"\n+                              ? \"image/logo-main-black1.png\"\n+                              : job.logo\n+                          }\n+                          alt=\"\"\n+                        />\n+                      </div> */}\n+                      <div className=\"text_box text-left w-100\">\n+                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n+                          {job.company_name}\n+                        </p> */}\n+                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n+                          {job.job_title}\n+                        </h3>\n+                      </div>\n+                    </div>\n+                    <div className=\"col-6 p-0\">\n+                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n+                        {job.industry_type && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Category\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaIndustrySolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.industry_type}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.location && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Location\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaSearchLocationSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.location}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.employement && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Job Type\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBriefcaseSolid />\n+                            </span>\n+                            <span className=\"font-weight-semibold text-capitalize\">\n+                              {job.employement}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.created_at && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Posted Time\"\n+                          >\n+                            <span className=\"mr-4\">\n+                              <LiaBusinessTimeSolid />{\" \"}\n+                            </span>\n+                            <span className=\"font-weight-semibold\">\n+                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n+                            </span>\n+                          </li>\n+                        )}\n+                        {job.salary && (\n+                          <li\n+                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n+                            title=\"Salary\"\n+                          >\n+                            <span className=\"font-weight-semibold\">\n+                              $ {job.salary}\n+                            </span>\n+                          </li>\n+                        )}\n+                      </ul>\n+                    </div>\n+                  </div>\n+                </Link>\n+                <div className=\"row pt-4\">\n+                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n+                    {/* <p>{job.job_description}</p> */}\n+                    <div\n+                      dangerouslySetInnerHTML={{\n+                        __html: job.job_description,\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col-md-8\">\n+                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n+                      {(skill || []).map((item, index) =>\n+                        item === \"\" ? null : (\n+                          <li key={index}>\n+                            <span\n+                              to={\"\"}\n+                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n+                            >\n+                              {item}\n+                            </span>\n+                          </li>\n+                        )\n+                      )}\n+                    </ul>\n+                  </div>\n+\n+                  <div className=\"media justify-content-md-end col-md-4\">\n+                    {user_type === \"company\" ? (\n+                      <>\n+                        <button\n+                          className=\"btn btn-secondary text-uppercase font-size-3\"\n+                          onClick={() => {\n+                            setJobId(job.job_id);\n+                            setShowAddJobsModal(true);\n+                          }}\n+                        >\n+                          Edit\n+                        </button>\n+                      </>\n+                    ) : (\n+                      <button\n+                        className={\n+                          job.is_applied === \"0\"\n+                            ? \"btn btn-secondary text-uppercase font-size-3\"\n+                            : \"btn btn-info text-uppercase font-size-3 \"\n+                        }\n+                        onClick={\n+                          // name === null ||\n+                          // name === \"\" ||\n+                          // name === \"\" ||\n+                          // name === undefined ||\n+                          // name === \"undefined\" ?\n+                          // () => setShowDataForm(true) :\n+                          () =>\n+                            token && user_type === \"user\"\n+                              ? name === null ||\n+                                name === \"\" ||\n+                                name === \"null\" ||\n+                                name === undefined ||\n+                                name === \"undefined\"\n+                                ? setShowDataForm(true)\n+                                : OnApplyClick(0, job.job_id)\n+                              : navigate(\"/candidate_login\")//setShowLogin(true)\n+                        }\n+                        disabled={job.is_applied === \"0\" ? false : true}\n+                      >\n+                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n+                      </button>\n+                    )}\n+                  </div>\n+                </div>\n+              </div>\n+            );\n+          })\n+        )}\n+        {/* <!-- End Maped Job --> */}\n+      </div>\n+      {/* {showLogin ? (\n+        <EmployeeLoginModal\n+          show={showLogin}\n+          close={() => setShowLogin(false)}\n+        />\n+      ) : null} */}\n+      {showDataForm ? (\n+        <ApplyBeforeform\n+          show={showDataForm}\n+          close={() => setShowDataForm(false)}\n+          setApiCall={setApiCall}\n+        />\n+      ) : null}\n+      {showAddJobsModal ? (\n+        <AddJobModal\n+          show={showAddJobsModal}\n+          jobdata={JobId}\n+          close={() => setShowAddJobsModal(false)}\n+          setApiCall={setApiCall}\n+          apiCall={ApiCall}\n+        />\n+      ) : null}\n+    </>\n+  );\n+}\n+export default JobBox;\n"
                },
                {
                    "date": 1710503309941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n                             className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                             title=\"Posted Time\"\n                           >\n                             <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n+                              <LiaBusinessTimeSolid />\n                             </span>\n                             <span className=\"font-weight-semibold\">\n                               {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n                             </span>\n@@ -397,804 +397,4 @@\n     </>\n   );\n }\n export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-  let navigate = useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n-          && userData.data.data.find((item) => item.is_featured === \"1\")\n-          && location.pathname !== \"/jobs\"\n-        ) {\n-          setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")\n-          );\n-        } else {\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                  job.keyskill === undefined ||\n-                  job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n-                  to={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? \"/job_detail\"\n-                      : \"\"\n-                  }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                      () => {\n-                        localStorage.setItem(\"job_id\", job.job_id);\n-                        OnApplyClick(1, job.job_id);\n-                      }\n-                      : // : null\n-                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n-import moment from \"moment\";\n-import React, { useState } from \"react\";\n-import { useEffect } from \"react\";\n-import { Link, useLocation, useNavigate } from \"react-router-dom\";\n-import { GetAllJobs, ApplyJob } from \"../../api/api\";\n-import AddJobModal from \"../forms/employer/job\";\n-// import EmployeeLoginModal from \"../user/login\";\n-import { toast } from \"react-toastify\";\n-import {\n-  LiaIndustrySolid,\n-  LiaSearchLocationSolid,\n-  LiaBriefcaseSolid,\n-  LiaBusinessTimeSolid,\n-} from \"react-icons/lia\";\n-import ApplyBeforeform from \"../forms/user/applyBeforeform\";\n-function JobBox({\n-  showAddJobModal,\n-  categoryFilterValue,\n-  SkillFilterValue,\n-  jobSwapFilterValue,\n-  locationFilterValue,\n-  jobLocation,\n-  apiCall,\n-}) {\n-  /*States */\n-  let [ApiCall, setApiCall] = useState(false);\n-  // const [showLogin, setShowLogin] = useState(false);\n-  const [showDataForm, setShowDataForm] = useState(false);\n-  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n-  let [jobData, setjobData] = useState([]);\n-  const [JobId, setJobId] = useState([]);\n-  let [noData, setNoData] = useState(\"\");\n-\n-  /*Data from local storage */\n-  const token = localStorage.getItem(\"token\");\n-  const user_type = localStorage.getItem(\"userType\");\n-  const user_id = localStorage.getItem(\"employee_id\");\n-  const skill = localStorage.getItem(\"skill\");\n-  let navigate = useNavigate()\n-  /*Functionality to get the data to search the jobs */\n-  const location = useLocation();\n-  const searchParams = new URLSearchParams(location.search);\n-  const search = searchParams.get(\"search\");\n-  const country = searchParams.get(\"country\");\n-  const category = searchParams.get(\"category\");\n-  const path = location.pathname;\n-  const name = localStorage.getItem(\"name\");\n-  /* Function to get Job data*/\n-  const JobData = async () => {\n-    try {\n-      const userData = await GetAllJobs(\n-        search,\n-        (path === \"/jobs\" && !country) ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !country) ||\n-          jobLocation\n-          ? jobLocation\n-          : country,\n-        path === \"/jobs\" ||\n-          path === \"/managejobs\" ||\n-          (path === \"/response\" && !category)\n-          ? categoryFilterValue\n-          : category,\n-        skill || SkillFilterValue\n-          ? token && location.pathname === \"/\"\n-            ? skill\n-            : SkillFilterValue\n-          : \"\",\n-        jobSwapFilterValue,\n-        1,\n-        \"10\"\n-      );\n-      if (userData.data.data.length === 0) {\n-        setjobData([]);\n-      } else {\n-        if (\n-          (!token && location.pathname === \"/\") ||\n-          (!skill && !SkillFilterValue && user_type === \"user\")\n-          && userData.data.data.find((item) => item.is_featured === \"1\")\n-          && location.pathname === \"/jobs\"\n-        ) {\n-          setjobData(\n-            userData.data.data.filter((item) => item.is_featured === \"1\")\n-          );\n-        } else {\n-          setjobData(userData.data.data);\n-        }\n-        setNoData(userData.data.total_rows);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render Function */\n-  useEffect(() => {\n-    JobData();\n-    //Function to replace the url path after searching Job\n-    if (search) {\n-      const newUrl = window.location.pathname;\n-      window.history.replaceState({}, document.title, newUrl);\n-    }\n-    if (ApiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [\n-    showAddJobsModal,\n-    showAddJobModal,\n-    categoryFilterValue,\n-    SkillFilterValue,\n-    jobSwapFilterValue,\n-    locationFilterValue,\n-    apiCall,\n-    ApiCall,\n-    search,\n-    country,\n-    category,\n-    jobLocation,\n-  ]);\n-\n-  /*FUnction to apply to the job */\n-  const OnApplyClick = async (status, job_id) => {\n-    try {\n-      let Response = await ApplyJob(job_id, user_id, status);\n-      if (Response.message === \"Job applied successfully\") {\n-        toast.success(\"Job Applied successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-      }\n-      if (Response.message === \"already applied on this job\") {\n-        toast.success(\"Already applied on this job\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-      }\n-      setApiCall(true);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  return (\n-    <>\n-      <div\n-        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n-        data-aos=\"fade-right\"\n-        data-aos-duration=\"800\"\n-        data-aos-once=\"true\"\n-      >\n-        {/* <!-- Maped Job --> */}\n-        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n-          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n-            <h4>\n-              {skill || SkillFilterValue\n-                ? \"No jobs found for your skills\"\n-                : \"No jobs found\"}\n-            </h4>\n-          </div>\n-        ) : (\n-          (jobData || []).map((job, i) => {\n-            // Convert the skill string to an array\n-            let skill = [];\n-            if (job !== \"\") {\n-              skill =\n-                job.keyskill === null ||\n-                  job.keyskill === undefined ||\n-                  job.keyskill === \"undefined\"\n-                  ? []\n-                  : job.keyskill.split(\",\");\n-            }\n-            return (\n-              <div\n-                key={i}\n-                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n-              >\n-                <Link\n-                  className=\"w-100\"\n-                  to={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? \"/job_detail\"\n-                      : \"\"\n-                  }\n-                  onClick={\n-                    token && (user_type === \"user\" || user_type === \"company\")\n-                      ? // ? job.is_applied === \"0\"\n-                      () => {\n-                        localStorage.setItem(\"job_id\", job.job_id);\n-                        OnApplyClick(1, job.job_id);\n-                      }\n-                      : // : null\n-                      () => navigate(\"/candidate_login\")//setShowLogin(true)\n-                  }\n-                >\n-                  {job.job_type === \"swap\" ? (\n-                    <span className=\"job_swap_label\">SWEP</span>\n-                  ) : null}\n-                  {/* {job.is_featured === \"1\" ? (\n-                    <span className=\"bg-orange text-white featured_tag\">\n-                      Featured\n-                    </span>\n-                  ) : null} */}\n-                  <div className=\"row job_header m-0\">\n-                    <div className=\"media align-items-center company_box col-6 p-0\">\n-                      {/* <div className=\"text_box text-left\">\n-                        <img\n-                          className=\"company_logo\"\n-                          src={\n-                            job.logo === null ||\n-                            job.logo === undefined ||\n-                            job.logo === \"undefined\" ||\n-                            job.logo === \"null\" ||\n-                            job.logo === \"\"\n-                              ? \"image/logo-main-black1.png\"\n-                              : job.logo\n-                          }\n-                          alt=\"\"\n-                        />\n-                      </div> */}\n-                      <div className=\"text_box text-left w-100\">\n-                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n-                          {job.company_name}\n-                        </p> */}\n-                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n-                          {job.job_title}\n-                        </h3>\n-                      </div>\n-                    </div>\n-                    <div className=\"col-6 p-0\">\n-                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n-                        {job.industry_type && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Category\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaIndustrySolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.industry_type}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.location && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Location\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaSearchLocationSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.location}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.employement && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Job Type\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBriefcaseSolid />\n-                            </span>\n-                            <span className=\"font-weight-semibold text-capitalize\">\n-                              {job.employement}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.created_at && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Posted Time\"\n-                          >\n-                            <span className=\"mr-4\">\n-                              <LiaBusinessTimeSolid />{\" \"}\n-                            </span>\n-                            <span className=\"font-weight-semibold\">\n-                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n-                            </span>\n-                          </li>\n-                        )}\n-                        {job.salary && (\n-                          <li\n-                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n-                            title=\"Salary\"\n-                          >\n-                            <span className=\"font-weight-semibold\">\n-                              $ {job.salary}\n-                            </span>\n-                          </li>\n-                        )}\n-                      </ul>\n-                    </div>\n-                  </div>\n-                </Link>\n-                <div className=\"row pt-4\">\n-                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n-                    {/* <p>{job.job_description}</p> */}\n-                    <div\n-                      dangerouslySetInnerHTML={{\n-                        __html: job.job_description,\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col-md-8\">\n-                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n-                      {(skill || []).map((item, index) =>\n-                        item === \"\" ? null : (\n-                          <li key={index}>\n-                            <span\n-                              to={\"\"}\n-                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n-                            >\n-                              {item}\n-                            </span>\n-                          </li>\n-                        )\n-                      )}\n-                    </ul>\n-                  </div>\n-\n-                  <div className=\"media justify-content-md-end col-md-4\">\n-                    {user_type === \"company\" ? (\n-                      <>\n-                        <button\n-                          className=\"btn btn-secondary text-uppercase font-size-3\"\n-                          onClick={() => {\n-                            setJobId(job.job_id);\n-                            setShowAddJobsModal(true);\n-                          }}\n-                        >\n-                          Edit\n-                        </button>\n-                      </>\n-                    ) : (\n-                      <button\n-                        className={\n-                          job.is_applied === \"0\"\n-                            ? \"btn btn-secondary text-uppercase font-size-3\"\n-                            : \"btn btn-info text-uppercase font-size-3 \"\n-                        }\n-                        onClick={\n-                          // name === null ||\n-                          // name === \"\" ||\n-                          // name === \"\" ||\n-                          // name === undefined ||\n-                          // name === \"undefined\" ?\n-                          // () => setShowDataForm(true) :\n-                          () =>\n-                            token && user_type === \"user\"\n-                              ? name === null ||\n-                                name === \"\" ||\n-                                name === \"null\" ||\n-                                name === undefined ||\n-                                name === \"undefined\"\n-                                ? setShowDataForm(true)\n-                                : OnApplyClick(0, job.job_id)\n-                              : navigate(\"/candidate_login\")//setShowLogin(true)\n-                        }\n-                        disabled={job.is_applied === \"0\" ? false : true}\n-                      >\n-                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n-                      </button>\n-                    )}\n-                  </div>\n-                </div>\n-              </div>\n-            );\n-          })\n-        )}\n-        {/* <!-- End Maped Job --> */}\n-      </div>\n-      {/* {showLogin ? (\n-        <EmployeeLoginModal\n-          show={showLogin}\n-          close={() => setShowLogin(false)}\n-        />\n-      ) : null} */}\n-      {showDataForm ? (\n-        <ApplyBeforeform\n-          show={showDataForm}\n-          close={() => setShowDataForm(false)}\n-          setApiCall={setApiCall}\n-        />\n-      ) : null}\n-      {showAddJobsModal ? (\n-        <AddJobModal\n-          show={showAddJobsModal}\n-          jobdata={JobId}\n-          close={() => setShowAddJobsModal(false)}\n-          setApiCall={setApiCall}\n-          apiCall={ApiCall}\n-        />\n-      ) : null}\n-    </>\n-  );\n-}\n-export default JobBox;\n"
                }
            ],
            "date": 1708946620061,
            "name": "Commit-0",
            "content": "import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { GetAllJobs, ApplyJob } from \"../../api/api\";\nimport AddJobModal from \"../forms/employer/job\";\nimport EmployeeLoginModal from \"../user/login\";\nimport { toast } from \"react-toastify\";\nimport {\n  LiaIndustrySolid,\n  LiaSearchLocationSolid,\n  LiaBriefcaseSolid,\n  LiaBusinessTimeSolid,\n} from \"react-icons/lia\";\nimport ApplyBeforeform from \"../forms/user/applyBeforeform\";\nfunction JobBox({\n  showAddJobModal,\n  categoryFilterValue,\n  SkillFilterValue,\n  jobSwapFilterValue,\n  locationFilterValue,\n  jobLocation,\n  apiCall,\n}) {\n  /*States */\n  let [ApiCall, setApiCall] = useState(false);\n  // const [showLogin, setShowLogin] = useState(false);\n  const [showDataForm, setShowDataForm] = useState(false);\n  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n  let [jobData, setjobData] = useState([]);\n  const [JobId, setJobId] = useState([]);\n  let [noData, setNoData] = useState(\"\");\n\n  /*Data from local storage */\n  const token = localStorage.getItem(\"token\");\n  const user_type = localStorage.getItem(\"userType\");\n  const user_id = localStorage.getItem(\"employee_id\");\n  const skill = localStorage.getItem(\"skill\");\nlet navigate =useNavigate()\n  /*Functionality to get the data to search the jobs */\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const search = searchParams.get(\"search\");\n  const country = searchParams.get(\"country\");\n  const category = searchParams.get(\"category\");\n  const path = location.pathname;\n  const name = localStorage.getItem(\"name\");\n  /* Function to get Job data*/\n  const JobData = async () => {\n    try {\n      const userData = await GetAllJobs(\n        search,\n        (path === \"/jobs\" && !country) ||\n          path === \"/managejobs\" ||\n          (path === \"/response\" && !country) ||\n          jobLocation\n          ? jobLocation\n          : country,\n        path === \"/jobs\" ||\n          path === \"/managejobs\" ||\n          (path === \"/response\" && !category)\n          ? categoryFilterValue\n          : category,\n        skill || SkillFilterValue\n          ? token && location.pathname === \"/\"\n            ? skill\n            : SkillFilterValue\n          : \"\",\n        jobSwapFilterValue,\n        1,\n        \"10\"\n      );\n      if (userData.data.data.length === 0) {\n        setjobData([]);\n      } else {\n        if (\n          (!token && location.pathname === \"/\") ||\n          (!skill && !SkillFilterValue && user_type === \"user\")\n        ) {\n          setjobData(\n            userData.data.data.filter((item) => item.is_featured === \"1\")\n          );\n        } else {\n          setjobData(userData.data.data);\n        }\n        setNoData(userData.data.total_rows);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /*Render Function */\n  useEffect(() => {\n    JobData();\n    //Function to replace the url path after searching Job\n    if (search) {\n      const newUrl = window.location.pathname;\n      window.history.replaceState({}, document.title, newUrl);\n    }\n    if (ApiCall === true) {\n      setApiCall(false);\n    }\n  }, [\n    showAddJobsModal,\n    showAddJobModal,\n    categoryFilterValue,\n    SkillFilterValue,\n    jobSwapFilterValue,\n    locationFilterValue,\n    apiCall,\n    ApiCall,\n    search,\n    country,\n    category,\n    jobLocation,\n  ]);\n\n  /*FUnction to apply to the job */\n  const OnApplyClick = async (status, job_id) => {\n    try {\n      let Response = await ApplyJob(job_id, user_id, status);\n      if (Response.message === \"Job applied successfully\") {\n        toast.success(\"Job Applied successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n      }\n      if (Response.message === \"already applied on this job\") {\n        toast.success(\"Already applied on this job\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n      setApiCall(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"col-xxl-12 col-xl-12 col-lg-12 mb-8 pb-5 job_box\"\n        data-aos=\"fade-right\"\n        data-aos-duration=\"800\"\n        data-aos-once=\"true\"\n      >\n        {/* <!-- Maped Job --> */}\n        {noData === 0 || noData === \"\" || jobData.length === 0 ? (\n          <div className=\"pt-9 px-xl-9 px-lg-7 px-7 pb-7 text-center\">\n            <h4>\n              {skill || SkillFilterValue\n                ? \"No jobs found for your skills\"\n                : \"No jobs found\"}\n            </h4>\n          </div>\n        ) : (\n          (jobData || []).map((job, i) => {\n            // Convert the skill string to an array\n            let skill = [];\n            if (job !== \"\") {\n              skill =\n                job.keyskill === null ||\n                job.keyskill === undefined ||\n                job.keyskill === \"undefined\"\n                  ? []\n                  : job.keyskill.split(\",\");\n            }\n            return (\n              <div\n                key={i}\n                className=\"pt-9 w-100 px-xl-9 px-lg-7 px-7 pb-7 light-mode-texts bg-white rounded hover-shadow-3 my-5 hover-border-green main_job_box_\"\n              >\n                <Link\n                  className=\"w-100\"\n                  to={\n                    token && (user_type === \"user\" || user_type === \"company\")\n                      ? \"/job_detail\"\n                      : \"\"\n                  }\n                  onClick={\n                    token && (user_type === \"user\" || user_type === \"company\")\n                      ? // ? job.is_applied === \"0\"\n                        () => {\n                          localStorage.setItem(\"job_id\", job.job_id);\n                          OnApplyClick(1, job.job_id);\n                        }\n                      : // : null\n                        () => navigate(\"/candidate_login\")//setShowLogin(true)\n                  }\n                >\n                  {job.job_type === \"swap\" ? (\n                    <span className=\"job_swap_label\">SWEP</span>\n                  ) : null}\n                  {/* {job.is_featured === \"1\" ? (\n                    <span className=\"bg-orange text-white featured_tag\">\n                      Featured\n                    </span>\n                  ) : null} */}\n                  <div className=\"row job_header m-0\">\n                    <div className=\"media align-items-center company_box col-6 p-0\">\n                      {/* <div className=\"text_box text-left\">\n                        <img\n                          className=\"company_logo\"\n                          src={\n                            job.logo === null ||\n                            job.logo === undefined ||\n                            job.logo === \"undefined\" ||\n                            job.logo === \"null\" ||\n                            job.logo === \"\"\n                              ? \"image/logo-main-black1.png\"\n                              : job.logo\n                          }\n                          alt=\"\"\n                        />\n                      </div> */}\n                      <div className=\"text_box text-left w-100\">\n                        {/* <p className=\"font-size-3 text-default-color line-height-2 m-0 text-capitalize\">\n                          {job.company_name}\n                        </p> */}\n                        <h3 className=\"mb-0 font-size-6 heading-dark-color text-capitalize\">\n                          {job.job_title}\n                        </h3>\n                      </div>\n                    </div>\n                    <div className=\"col-6 p-0\">\n                      <ul className=\"d-flex list-unstyled mr-n3 flex-wrap mr-n8 justify-content-md-end\">\n                        {job.industry_type && (\n                          <li\n                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                            title=\"Job Category\"\n                          >\n                            <span className=\"mr-4\">\n                              <LiaIndustrySolid />\n                            </span>\n                            <span className=\"font-weight-semibold text-capitalize\">\n                              {job.industry_type}\n                            </span>\n                          </li>\n                        )}\n                        {job.location && (\n                          <li\n                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                            title=\"Location\"\n                          >\n                            <span className=\"mr-4\">\n                              <LiaSearchLocationSolid />\n                            </span>\n                            <span className=\"font-weight-semibold text-capitalize\">\n                              {job.location}\n                            </span>\n                          </li>\n                        )}\n                        {job.employement && (\n                          <li\n                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                            title=\"Job Type\"\n                          >\n                            <span className=\"mr-4\">\n                              <LiaBriefcaseSolid />\n                            </span>\n                            <span className=\"font-weight-semibold text-capitalize\">\n                              {job.employement}\n                            </span>\n                          </li>\n                        )}\n                        {job.created_at && (\n                          <li\n                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                            title=\"Posted Time\"\n                          >\n                            <span className=\"mr-4\">\n                              <LiaBusinessTimeSolid />{\" \"}\n                            </span>\n                            <span className=\"font-weight-semibold\">\n                              {moment(job.created_at).format(\"DD MMMM, YYYY\")}\n                            </span>\n                          </li>\n                        )}\n                        {job.salary && (\n                          <li\n                            className=\"mt-2 mr-8 font-size-small text-black-2 d-flex\"\n                            title=\"Salary\"\n                          >\n                            <span className=\"font-weight-semibold\">\n                              $ {job.salary}\n                            </span>\n                          </li>\n                        )}\n                      </ul>\n                    </div>\n                  </div>\n                </Link>\n                <div className=\"row pt-4\">\n                  <div className=\"col-md-12 text-left text-capitalize text-break\">\n                    {/* <p>{job.job_description}</p> */}\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: job.job_description,\n                      }}\n                    />\n                  </div>\n                  <div className=\"col-md-8\">\n                    <ul className=\"d-flex list-unstyled mr-n3 flex-wrap\">\n                      {(skill || []).map((item, index) =>\n                        item === \"\" ? null : (\n                          <li key={index}>\n                            <span\n                              to={\"\"}\n                              className=\"text-capitalize bg-regent-opacity-15 min-width-px-96 mr-3 text-center rounded-3 px-6 py-1 font-size-3 text-black-2 mt-2\"\n                            >\n                              {item}\n                            </span>\n                          </li>\n                        )\n                      )}\n                    </ul>\n                  </div>\n\n                  <div className=\"media justify-content-md-end col-md-4\">\n                    {user_type === \"company\" ? (\n                      <>\n                        <button\n                          className=\"btn btn-secondary text-uppercase font-size-3\"\n                          onClick={() => {\n                            setJobId(job.job_id);\n                            setShowAddJobsModal(true);\n                          }}\n                        >\n                          Edit\n                        </button>\n                      </>\n                    ) : (\n                      <button\n                        className={\n                          job.is_applied === \"0\"\n                            ? \"btn btn-secondary text-uppercase font-size-3\"\n                            : \"btn btn-info text-uppercase font-size-3 \"\n                        }\n                        onClick={\n                          // name === null ||\n                          // name === \"\" ||\n                          // name === \"\" ||\n                          // name === undefined ||\n                          // name === \"undefined\" ?\n                          // () => setShowDataForm(true) :\n                          () =>\n                            token && user_type === \"user\"\n                              ? name === null ||\n                                name === \"\" ||\n                                name === \"null\" ||\n                                name === undefined ||\n                                name === \"undefined\"\n                                ? setShowDataForm(true)\n                                : OnApplyClick(0, job.job_id)\n                              : navigate(\"/candidate_login\")//setShowLogin(true)\n                        }\n                        disabled={job.is_applied === \"0\" ? false : true}\n                      >\n                        {job.is_applied === \"0\" ? \"Apply\" : \"Applied\"}\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n        {/* <!-- End Maped Job --> */}\n      </div>\n      {/* {showLogin ? (\n        <EmployeeLoginModal\n          show={showLogin}\n          close={() => setShowLogin(false)}\n        />\n      ) : null} */}\n      {showDataForm ? (\n        <ApplyBeforeform\n          show={showDataForm}\n          close={() => setShowDataForm(false)}\n          setApiCall={setApiCall}\n        />\n      ) : null}\n      {showAddJobsModal ? (\n        <AddJobModal\n          show={showAddJobsModal}\n          jobdata={JobId}\n          close={() => setShowAddJobsModal(false)}\n          setApiCall={setApiCall}\n          apiCall={ApiCall}\n        />\n      ) : null}\n    </>\n  );\n}\nexport default JobBox;\n"
        }
    ]
}