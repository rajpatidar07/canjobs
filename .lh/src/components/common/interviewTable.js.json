{
    "sourceFile": "src/components/common/interviewTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1693200816779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693200850719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,19 +233,20 @@\n                       <th className=\"bg-white\"></th>\n                       {props.heading === \"Dashboard\" ? (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n                       ) : (\n+                        <>\n                         <th className=\"bg-white\"></th>\n-                      )}\n+                      <th className=\"bg-white\"></th>\n+                      </>)}\n                       {props.heading === \"Dashboard\" ? (\n                         <th className=\"bg-white\"></th>\n                       ) : (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n                       )}\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n                     </tr>\n                   ) : (\n                     (interviewData || []).map((data) => (\n                       <tr className=\"text-capitalize\" key={data.id}>\n"
                },
                {
                    "date": 1693904960710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   let [apiCall, setApiCall] = useState(props.apiCall);\n \n   /*Pagination states */\n   const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n+  const [props.pageNo, props.setpageNo] = useState(1);\n   const [recordsPerPage] = useState(10);\n   /*Shorting states */\n   const [columnName, setcolumnName] = useState(\"\");\n   const [sortOrder, setSortOrder] = useState(\"\");\n@@ -32,9 +32,9 @@\n         \"\",\n         search,\n         search || props.filter_by_time || props.statusFilterValue || sortOrder\n           ? 1\n-          : currentPage,\n+          : props.pageNo,\n         columnName,\n         recordsPerPage,\n         sortOrder,\n         props.filter_by_time,\n@@ -58,9 +58,9 @@\n   useEffect(() => {\n     InterviewData();\n   }, [\n     search,\n-    currentPage,\n+    props.pageNo,\n     columnName,\n     recordsPerPage,\n     sortOrder,\n     showAddInterviewModal,\n@@ -132,9 +132,9 @@\n                       <Link\n                         to={\"\"}\n                         onClick={() => {\n                           handleSort(\"name\");\n-                          setCurrentPage(1);\n+                          props.setpageNo(1);\n                         }}\n                         className=\"text-gray\"\n                         title=\"Sort by Name\"\n                       >\n@@ -148,9 +148,9 @@\n                       <Link\n                         to={\"\"}\n                         onClick={() => {\n                           handleSort(\"job_title\");\n-                          setCurrentPage(1);\n+                          props.setpageNo(1);\n                         }}\n                         className=\"text-gray\"\n                         title=\"Sort by Job\"\n                       >\n@@ -165,9 +165,9 @@\n                         <Link\n                           to={\"\"}\n                           onClick={() => {\n                             handleSort(\"company_name\");\n-                            setCurrentPage(1);\n+                            props.setpageNo(1);\n                           }}\n                           className=\"text-gray\"\n                           title=\"Sort by Company\"\n                         >\n@@ -183,9 +183,9 @@\n                         <Link\n                           to={\"\"}\n                           onClick={() => {\n                             handleSort(\"skill\");\n-                            setCurrentPage(1);\n+                            props.setpageNo(1);\n                           }}\n                           className=\"text-gray\"\n                           title=\"Sort by Skill\"\n                         >\n@@ -200,9 +200,9 @@\n                       <Link\n                         to={\"\"}\n                         onClick={() => {\n                           handleSort(\"interview_date\");\n-                          setCurrentPage(1);\n+                          props.setpageNo(1);\n                         }}\n                         className=\"text-gray\"\n                         title=\"Sort by Date\"\n                       >\n@@ -342,10 +342,10 @@\n           </div>\n           <div className=\"pt-2\">\n             <Pagination\n               nPages={nPages}\n-              currentPage={currentPage}\n-              setCurrentPage={setCurrentPage}\n+              props.pageNo={props.pageNo}\n+              props.setpageNo={props.setpageNo}\n               total={totalData}\n               count={interviewData.length}\n             />\n           </div>\n"
                },
                {
                    "date": 1693905009646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   let [apiCall, setApiCall] = useState(props.apiCall);\n \n   /*Pagination states */\n   const [totalData, setTotalData] = useState(\"\");\n-  const [props.pageNo, props.setpageNo] = useState(1);\n+  // const [currentPage, setCurrentPage] = useState(1);\n   const [recordsPerPage] = useState(10);\n   /*Shorting states */\n   const [columnName, setcolumnName] = useState(\"\");\n   const [sortOrder, setSortOrder] = useState(\"\");\n@@ -30,11 +30,9 @@\n       const userData = await getInterview(\n         \"\",\n         \"\",\n         search,\n-        search || props.filter_by_time || props.statusFilterValue || sortOrder\n-          ? 1\n-          : props.pageNo,\n+        props.pageNo,\n         columnName,\n         recordsPerPage,\n         sortOrder,\n         props.filter_by_time,\n@@ -342,10 +340,10 @@\n           </div>\n           <div className=\"pt-2\">\n             <Pagination\n               nPages={nPages}\n-              props.pageNo={props.pageNo}\n-              props.setpageNo={props.setpageNo}\n+              currentPage={props.pageNo}\n+              setCurrentPage={props.setpageNo}\n               total={totalData}\n               count={interviewData.length}\n             />\n           </div>\n"
                },
                {
                    "date": 1693916335752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       if (userData.data.length === 0) {\n         setInterviewData([]);\n         setIsLoading(false);\n       } else {\n-        setInterviewData(userData.data);\n+        // setInterviewData(userData.data);\n         setTotalData(userData.total_rows);\n         setIsLoading(false);\n       }\n     } catch (err) {\n"
                },
                {
                    "date": 1693916362077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,20 +228,21 @@\n                   {totalData === 0 || interviewData.length === 0 ? (\n                     <tr>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n+                      \n                       {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white\"></th>\n+                      ) : (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n+                      )}\n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n                       ) : (\n                         <>\n                         <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       </>)}\n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white\"></th>\n-                      ) : (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      )}\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                     </tr>\n"
                },
                {
                    "date": 1693916374371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,356 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Link } from \"react-router-dom\";\n+import { getInterview } from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"./pagination\";\n+import AddInterview from \"../forms/admin/addInterview\";\n+import Loader from \"../common/loader\";\n+import { ToastContainer } from \"react-toastify\";\n+import { ImCalendar } from \"react-icons/im\";\n+function Interview(props) {\n+  let search = props.search;\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n+  const [interviewData, setInterviewData] = useState([]);\n+  const [jobId, setJobId] = useState();\n+  let [resData, setResData] = useState(\"\");\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  // const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"\");\n+  const [sortOrder, setSortOrder] = useState(\"\");\n+\n+  //   /* Function to get the intervew data*/\n+  const InterviewData = async () => {\n+    try {\n+      const userData = await getInterview(\n+        \"\",\n+        \"\",\n+        search,\n+        props.pageNo,\n+        columnName,\n+        recordsPerPage,\n+        sortOrder,\n+        props.filter_by_time,\n+        props.statusFilterValue,\n+        props.company_id\n+      );\n+      if (userData.data.length === 0) {\n+        setInterviewData([]);\n+        setIsLoading(false);\n+      } else {\n+        // setInterviewData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err)\n+    }\n+  };\n+\n+  /*Render function to get the interview*/\n+  useEffect(() => {\n+    InterviewData();\n+  }, [\n+    search,\n+    props.pageNo,\n+    columnName,\n+    recordsPerPage,\n+    sortOrder,\n+    showAddInterviewModal,\n+    props.filter_by_time,\n+    props.statusFilterValue,\n+  ]);\n+\n+  /* Function to show the single data to update interview*/\n+  const editInterview = (e) => {\n+    setShowAddInterviewModal(true);\n+    setJobId(e.job_id);\n+    setResData(e);\n+  };\n+\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {showAddInterviewModal ? (\n+        <AddInterview\n+          resData={resData}\n+          close={() => {\n+            setShowAddInterviewModal(false);\n+          }}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          job_id={jobId}\n+          show={showAddInterviewModal}\n+          Interview={\"interview\"}\n+        />\n+      ) : null}\n+      <div className=\"mb-18\">\n+        <div className=\"mb-4 align-items-center\">\n+          <div className=\"page___heading\">\n+            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n+          </div>\n+        </div>\n+        <div\n+          className={\n+            props.heading === \"Dashboard\"\n+              ? \"\"\n+              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n+          }\n+        >\n+          <div className=\"table-responsive main_table_div\">\n+            {isLoading ? (\n+              <Loader />\n+            ) : (\n+              <table className=\"table table-striped main_data_table\">\n+                <thead>\n+                  <tr>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      EID\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"name\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Name\"\n+                      >\n+                        Name\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"job_title\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Job\"\n+                      >\n+                        Applied Job\n+                      </Link>\n+                    </th>\n+                    {props.heading === \"userprofile\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"company_name\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Company\"\n+                        >\n+                          Company Name\n+                        </Link>\n+                      </th>\n+                    )}\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"skill\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Skill\"\n+                        >\n+                          Skill\n+                        </Link>\n+                      </th>\n+                    )}\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"interview_date\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Date\"\n+                      >\n+                        Interview date\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      Interview\n+                    </th>\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\" border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        Action\n+                      </th>\n+                    )}\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  {/* Map function to show the data in the list*/}\n+                  {totalData === 0 || interviewData.length === 0 ? (\n+                    <tr>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      \n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white\"></th>\n+                      ) : (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      )}\n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      ) : (\n+                        <>\n+                        <th className=\"bg-white\"></th>\n+                      </>)}\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                    </tr>\n+                  ) : (\n+                    (interviewData || []).map((data) => (\n+                      <tr className=\"text-capitalize\" key={data.id}>\n+                        <th className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n+                            {data.employee_id}\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            <Link\n+                              className=\"text-dark\"\n+                              to={`/${data.employee_id}`}\n+                            >\n+                              {data.name}\n+                            </Link>\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n+                                }>\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            {data.job_title}\n+                          </div>\n+                            </Link>\n+                        </th>\n+                        {props.heading === \"userprofile\" ? null : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.company_name}\n+                            </div>\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.skill ? data.skill : \"N/A\"}\n+                            </div>\n+                          </th>\n+                        )}\n+                        <th className=\" py-5\">\n+                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                            {moment(data.interview_date).format(\n+                              \"DD MMMM, YYYY\"\n+                            )}\n+                          </h3>\n+                        </th>\n+                        <th className=\"py-5 \">\n+                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                            {data.status === \"complete\" ? (\n+                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                Complete\n+                              </span>\n+                            ) : (\n+                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                Schedule\n+                              </span>\n+                            )}\n+                          </p>\n+                        </th>\n+                        <th\n+                          className={\n+                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n+                          }\n+                        >\n+                          <div className=\"btn-group button_group\" role=\"group\">\n+                            <button\n+                              className=\"btn btn-outline-info action_btn \"\n+                              style={{ fontSize: \"10px\" }}\n+                              onClick={() => editInterview(data)}\n+                              title=\" Reschedule Interview\"\n+                              disabled={\n+                                data.status === \"complete\" ? true : false\n+                              }\n+                            >\n+                              <ImCalendar />\n+                              {/* <i className=\"fa fa-calendar\"></i> */}\n+                            </button>\n+                          </div>\n+                        </th>\n+                      </tr>\n+                    ))\n+                  )}\n+                </tbody>\n+              </table>\n+            )}\n+          </div>\n+          <div className=\"pt-2\">\n+            <Pagination\n+              nPages={nPages}\n+              currentPage={props.pageNo}\n+              setCurrentPage={props.setpageNo}\n+              total={totalData}\n+              count={interviewData.length}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Interview;\n"
                },
                {
                    "date": 1693916411427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,8 @@\n                       {props.heading === \"Dashboard\" ? (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n                       ) : (\n                         <>\n-                        <th className=\"bg-white\"></th>\n                       </>)}\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n@@ -353,361 +352,4 @@\n   );\n }\n \n export default Interview;\n-import React, { useState, useEffect } from \"react\";\n-import { Link } from \"react-router-dom\";\n-import { getInterview } from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"./pagination\";\n-import AddInterview from \"../forms/admin/addInterview\";\n-import Loader from \"../common/loader\";\n-import { ToastContainer } from \"react-toastify\";\n-import { ImCalendar } from \"react-icons/im\";\n-function Interview(props) {\n-  let search = props.search;\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n-  const [interviewData, setInterviewData] = useState([]);\n-  const [jobId, setJobId] = useState();\n-  let [resData, setResData] = useState(\"\");\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  // const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"\");\n-  const [sortOrder, setSortOrder] = useState(\"\");\n-\n-  //   /* Function to get the intervew data*/\n-  const InterviewData = async () => {\n-    try {\n-      const userData = await getInterview(\n-        \"\",\n-        \"\",\n-        search,\n-        props.pageNo,\n-        columnName,\n-        recordsPerPage,\n-        sortOrder,\n-        props.filter_by_time,\n-        props.statusFilterValue,\n-        props.company_id\n-      );\n-      if (userData.data.length === 0) {\n-        setInterviewData([]);\n-        setIsLoading(false);\n-      } else {\n-        // setInterviewData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err)\n-    }\n-  };\n-\n-  /*Render function to get the interview*/\n-  useEffect(() => {\n-    InterviewData();\n-  }, [\n-    search,\n-    props.pageNo,\n-    columnName,\n-    recordsPerPage,\n-    sortOrder,\n-    showAddInterviewModal,\n-    props.filter_by_time,\n-    props.statusFilterValue,\n-  ]);\n-\n-  /* Function to show the single data to update interview*/\n-  const editInterview = (e) => {\n-    setShowAddInterviewModal(true);\n-    setJobId(e.job_id);\n-    setResData(e);\n-  };\n-\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {showAddInterviewModal ? (\n-        <AddInterview\n-          resData={resData}\n-          close={() => {\n-            setShowAddInterviewModal(false);\n-          }}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          job_id={jobId}\n-          show={showAddInterviewModal}\n-          Interview={\"interview\"}\n-        />\n-      ) : null}\n-      <div className=\"mb-18\">\n-        <div className=\"mb-4 align-items-center\">\n-          <div className=\"page___heading\">\n-            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n-          </div>\n-        </div>\n-        <div\n-          className={\n-            props.heading === \"Dashboard\"\n-              ? \"\"\n-              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n-          }\n-        >\n-          <div className=\"table-responsive main_table_div\">\n-            {isLoading ? (\n-              <Loader />\n-            ) : (\n-              <table className=\"table table-striped main_data_table\">\n-                <thead>\n-                  <tr>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      EID\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"name\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Name\"\n-                      >\n-                        Name\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"job_title\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Job\"\n-                      >\n-                        Applied Job\n-                      </Link>\n-                    </th>\n-                    {props.heading === \"userprofile\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"company_name\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Company\"\n-                        >\n-                          Company Name\n-                        </Link>\n-                      </th>\n-                    )}\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"skill\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Skill\"\n-                        >\n-                          Skill\n-                        </Link>\n-                      </th>\n-                    )}\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"interview_date\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Date\"\n-                      >\n-                        Interview date\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      Interview\n-                    </th>\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\" border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        Action\n-                      </th>\n-                    )}\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  {/* Map function to show the data in the list*/}\n-                  {totalData === 0 || interviewData.length === 0 ? (\n-                    <tr>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      \n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white\"></th>\n-                      ) : (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      )}\n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      ) : (\n-                        <>\n-                        <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      </>)}\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                    </tr>\n-                  ) : (\n-                    (interviewData || []).map((data) => (\n-                      <tr className=\"text-capitalize\" key={data.id}>\n-                        <th className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n-                            {data.employee_id}\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            <Link\n-                              className=\"text-dark\"\n-                              to={`/${data.employee_id}`}\n-                            >\n-                              {data.name}\n-                            </Link>\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n-                                }>\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            {data.job_title}\n-                          </div>\n-                            </Link>\n-                        </th>\n-                        {props.heading === \"userprofile\" ? null : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.company_name}\n-                            </div>\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.skill ? data.skill : \"N/A\"}\n-                            </div>\n-                          </th>\n-                        )}\n-                        <th className=\" py-5\">\n-                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                            {moment(data.interview_date).format(\n-                              \"DD MMMM, YYYY\"\n-                            )}\n-                          </h3>\n-                        </th>\n-                        <th className=\"py-5 \">\n-                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                            {data.status === \"complete\" ? (\n-                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                Complete\n-                              </span>\n-                            ) : (\n-                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                Schedule\n-                              </span>\n-                            )}\n-                          </p>\n-                        </th>\n-                        <th\n-                          className={\n-                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n-                          }\n-                        >\n-                          <div className=\"btn-group button_group\" role=\"group\">\n-                            <button\n-                              className=\"btn btn-outline-info action_btn \"\n-                              style={{ fontSize: \"10px\" }}\n-                              onClick={() => editInterview(data)}\n-                              title=\" Reschedule Interview\"\n-                              disabled={\n-                                data.status === \"complete\" ? true : false\n-                              }\n-                            >\n-                              <ImCalendar />\n-                              {/* <i className=\"fa fa-calendar\"></i> */}\n-                            </button>\n-                          </div>\n-                        </th>\n-                      </tr>\n-                    ))\n-                  )}\n-                </tbody>\n-              </table>\n-            )}\n-          </div>\n-          <div className=\"pt-2\">\n-            <Pagination\n-              nPages={nPages}\n-              currentPage={props.pageNo}\n-              setCurrentPage={props.setpageNo}\n-              total={totalData}\n-              count={interviewData.length}\n-            />\n-          </div>\n-        </div>\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Interview;\n"
                },
                {
                    "date": 1693916422229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,357 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Link } from \"react-router-dom\";\n+import { getInterview } from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"./pagination\";\n+import AddInterview from \"../forms/admin/addInterview\";\n+import Loader from \"../common/loader\";\n+import { ToastContainer } from \"react-toastify\";\n+import { ImCalendar } from \"react-icons/im\";\n+function Interview(props) {\n+  let search = props.search;\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n+  const [interviewData, setInterviewData] = useState([]);\n+  const [jobId, setJobId] = useState();\n+  let [resData, setResData] = useState(\"\");\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  // const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"\");\n+  const [sortOrder, setSortOrder] = useState(\"\");\n+\n+  //   /* Function to get the intervew data*/\n+  const InterviewData = async () => {\n+    try {\n+      const userData = await getInterview(\n+        \"\",\n+        \"\",\n+        search,\n+        props.pageNo,\n+        columnName,\n+        recordsPerPage,\n+        sortOrder,\n+        props.filter_by_time,\n+        props.statusFilterValue,\n+        props.company_id\n+      );\n+      if (userData.data.length === 0) {\n+        setInterviewData([]);\n+        setIsLoading(false);\n+      } else {\n+        // setInterviewData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err)\n+    }\n+  };\n+\n+  /*Render function to get the interview*/\n+  useEffect(() => {\n+    InterviewData();\n+  }, [\n+    search,\n+    props.pageNo,\n+    columnName,\n+    recordsPerPage,\n+    sortOrder,\n+    showAddInterviewModal,\n+    props.filter_by_time,\n+    props.statusFilterValue,\n+  ]);\n+\n+  /* Function to show the single data to update interview*/\n+  const editInterview = (e) => {\n+    setShowAddInterviewModal(true);\n+    setJobId(e.job_id);\n+    setResData(e);\n+  };\n+\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {showAddInterviewModal ? (\n+        <AddInterview\n+          resData={resData}\n+          close={() => {\n+            setShowAddInterviewModal(false);\n+          }}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          job_id={jobId}\n+          show={showAddInterviewModal}\n+          Interview={\"interview\"}\n+        />\n+      ) : null}\n+      <div className=\"mb-18\">\n+        <div className=\"mb-4 align-items-center\">\n+          <div className=\"page___heading\">\n+            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n+          </div>\n+        </div>\n+        <div\n+          className={\n+            props.heading === \"Dashboard\"\n+              ? \"\"\n+              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n+          }\n+        >\n+          <div className=\"table-responsive main_table_div\">\n+            {isLoading ? (\n+              <Loader />\n+            ) : (\n+              <table className=\"table table-striped main_data_table\">\n+                <thead>\n+                  <tr>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      EID\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"name\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Name\"\n+                      >\n+                        Name\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"job_title\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Job\"\n+                      >\n+                        Applied Job\n+                      </Link>\n+                    </th>\n+                    {props.heading === \"userprofile\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"company_name\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Company\"\n+                        >\n+                          Company Name\n+                        </Link>\n+                      </th>\n+                    )}\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"skill\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Skill\"\n+                        >\n+                          Skill\n+                        </Link>\n+                      </th>\n+                    )}\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"interview_date\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Date\"\n+                      >\n+                        Interview date\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      Interview\n+                    </th>\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\" border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        Action\n+                      </th>\n+                    )}\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  {/* Map function to show the data in the list*/}\n+                  {totalData === 0 || interviewData.length === 0 ? (\n+                    <tr>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      \n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white\"></th>\n+                      ) : (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      )}\n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      ) : (\n+                        <>\n+                        <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      </>)}\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                    </tr>\n+                  ) : (\n+                    (interviewData || []).map((data) => (\n+                      <tr className=\"text-capitalize\" key={data.id}>\n+                        <th className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n+                            {data.employee_id}\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            <Link\n+                              className=\"text-dark\"\n+                              to={`/${data.employee_id}`}\n+                            >\n+                              {data.name}\n+                            </Link>\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n+                                }>\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            {data.job_title}\n+                          </div>\n+                            </Link>\n+                        </th>\n+                        {props.heading === \"userprofile\" ? null : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.company_name}\n+                            </div>\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.skill ? data.skill : \"N/A\"}\n+                            </div>\n+                          </th>\n+                        )}\n+                        <th className=\" py-5\">\n+                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                            {moment(data.interview_date).format(\n+                              \"DD MMMM, YYYY\"\n+                            )}\n+                          </h3>\n+                        </th>\n+                        <th className=\"py-5 \">\n+                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                            {data.status === \"complete\" ? (\n+                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                Complete\n+                              </span>\n+                            ) : (\n+                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                Schedule\n+                              </span>\n+                            )}\n+                          </p>\n+                        </th>\n+                        <th\n+                          className={\n+                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n+                          }\n+                        >\n+                          <div className=\"btn-group button_group\" role=\"group\">\n+                            <button\n+                              className=\"btn btn-outline-info action_btn \"\n+                              style={{ fontSize: \"10px\" }}\n+                              onClick={() => editInterview(data)}\n+                              title=\" Reschedule Interview\"\n+                              disabled={\n+                                data.status === \"complete\" ? true : false\n+                              }\n+                            >\n+                              <ImCalendar />\n+                              {/* <i className=\"fa fa-calendar\"></i> */}\n+                            </button>\n+                          </div>\n+                        </th>\n+                      </tr>\n+                    ))\n+                  )}\n+                </tbody>\n+              </table>\n+            )}\n+          </div>\n+          <div className=\"pt-2\">\n+            <Pagination\n+              nPages={nPages}\n+              currentPage={props.pageNo}\n+              setCurrentPage={props.setpageNo}\n+              total={totalData}\n+              count={interviewData.length}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Interview;\n"
                },
                {
                    "date": 1693916449044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,11 +241,8 @@\n                         <>\n                         <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       </>)}\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n                     </tr>\n                   ) : (\n                     (interviewData || []).map((data) => (\n                       <tr className=\"text-capitalize\" key={data.id}>\n@@ -354,359 +351,4 @@\n   );\n }\n \n export default Interview;\n-import React, { useState, useEffect } from \"react\";\n-import { Link } from \"react-router-dom\";\n-import { getInterview } from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"./pagination\";\n-import AddInterview from \"../forms/admin/addInterview\";\n-import Loader from \"../common/loader\";\n-import { ToastContainer } from \"react-toastify\";\n-import { ImCalendar } from \"react-icons/im\";\n-function Interview(props) {\n-  let search = props.search;\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n-  const [interviewData, setInterviewData] = useState([]);\n-  const [jobId, setJobId] = useState();\n-  let [resData, setResData] = useState(\"\");\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  // const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"\");\n-  const [sortOrder, setSortOrder] = useState(\"\");\n-\n-  //   /* Function to get the intervew data*/\n-  const InterviewData = async () => {\n-    try {\n-      const userData = await getInterview(\n-        \"\",\n-        \"\",\n-        search,\n-        props.pageNo,\n-        columnName,\n-        recordsPerPage,\n-        sortOrder,\n-        props.filter_by_time,\n-        props.statusFilterValue,\n-        props.company_id\n-      );\n-      if (userData.data.length === 0) {\n-        setInterviewData([]);\n-        setIsLoading(false);\n-      } else {\n-        // setInterviewData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err)\n-    }\n-  };\n-\n-  /*Render function to get the interview*/\n-  useEffect(() => {\n-    InterviewData();\n-  }, [\n-    search,\n-    props.pageNo,\n-    columnName,\n-    recordsPerPage,\n-    sortOrder,\n-    showAddInterviewModal,\n-    props.filter_by_time,\n-    props.statusFilterValue,\n-  ]);\n-\n-  /* Function to show the single data to update interview*/\n-  const editInterview = (e) => {\n-    setShowAddInterviewModal(true);\n-    setJobId(e.job_id);\n-    setResData(e);\n-  };\n-\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {showAddInterviewModal ? (\n-        <AddInterview\n-          resData={resData}\n-          close={() => {\n-            setShowAddInterviewModal(false);\n-          }}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          job_id={jobId}\n-          show={showAddInterviewModal}\n-          Interview={\"interview\"}\n-        />\n-      ) : null}\n-      <div className=\"mb-18\">\n-        <div className=\"mb-4 align-items-center\">\n-          <div className=\"page___heading\">\n-            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n-          </div>\n-        </div>\n-        <div\n-          className={\n-            props.heading === \"Dashboard\"\n-              ? \"\"\n-              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n-          }\n-        >\n-          <div className=\"table-responsive main_table_div\">\n-            {isLoading ? (\n-              <Loader />\n-            ) : (\n-              <table className=\"table table-striped main_data_table\">\n-                <thead>\n-                  <tr>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      EID\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"name\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Name\"\n-                      >\n-                        Name\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"job_title\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Job\"\n-                      >\n-                        Applied Job\n-                      </Link>\n-                    </th>\n-                    {props.heading === \"userprofile\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"company_name\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Company\"\n-                        >\n-                          Company Name\n-                        </Link>\n-                      </th>\n-                    )}\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"skill\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Skill\"\n-                        >\n-                          Skill\n-                        </Link>\n-                      </th>\n-                    )}\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"interview_date\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Date\"\n-                      >\n-                        Interview date\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      Interview\n-                    </th>\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\" border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        Action\n-                      </th>\n-                    )}\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  {/* Map function to show the data in the list*/}\n-                  {totalData === 0 || interviewData.length === 0 ? (\n-                    <tr>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      \n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white\"></th>\n-                      ) : (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      )}\n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      ) : (\n-                        <>\n-                      </>)}\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                    </tr>\n-                  ) : (\n-                    (interviewData || []).map((data) => (\n-                      <tr className=\"text-capitalize\" key={data.id}>\n-                        <th className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n-                            {data.employee_id}\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            <Link\n-                              className=\"text-dark\"\n-                              to={`/${data.employee_id}`}\n-                            >\n-                              {data.name}\n-                            </Link>\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n-                                }>\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            {data.job_title}\n-                          </div>\n-                            </Link>\n-                        </th>\n-                        {props.heading === \"userprofile\" ? null : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.company_name}\n-                            </div>\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.skill ? data.skill : \"N/A\"}\n-                            </div>\n-                          </th>\n-                        )}\n-                        <th className=\" py-5\">\n-                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                            {moment(data.interview_date).format(\n-                              \"DD MMMM, YYYY\"\n-                            )}\n-                          </h3>\n-                        </th>\n-                        <th className=\"py-5 \">\n-                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                            {data.status === \"complete\" ? (\n-                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                Complete\n-                              </span>\n-                            ) : (\n-                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                Schedule\n-                              </span>\n-                            )}\n-                          </p>\n-                        </th>\n-                        <th\n-                          className={\n-                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n-                          }\n-                        >\n-                          <div className=\"btn-group button_group\" role=\"group\">\n-                            <button\n-                              className=\"btn btn-outline-info action_btn \"\n-                              style={{ fontSize: \"10px\" }}\n-                              onClick={() => editInterview(data)}\n-                              title=\" Reschedule Interview\"\n-                              disabled={\n-                                data.status === \"complete\" ? true : false\n-                              }\n-                            >\n-                              <ImCalendar />\n-                              {/* <i className=\"fa fa-calendar\"></i> */}\n-                            </button>\n-                          </div>\n-                        </th>\n-                      </tr>\n-                    ))\n-                  )}\n-                </tbody>\n-              </table>\n-            )}\n-          </div>\n-          <div className=\"pt-2\">\n-            <Pagination\n-              nPages={nPages}\n-              currentPage={props.pageNo}\n-              setCurrentPage={props.setpageNo}\n-              total={totalData}\n-              count={interviewData.length}\n-            />\n-          </div>\n-        </div>\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Interview;\n"
                },
                {
                    "date": 1693916477209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,19 +230,20 @@\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       \n                       {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white\"></th>\n+                      <></>\n                       ) : (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n                       )}\n                       {props.heading === \"Dashboard\" ? (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n                       ) : (\n                         <>\n-                        <th className=\"bg-white\"></th>\n+                      </>)}\n                       <th className=\"bg-white\"></th>\n-                      </>)}\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n                     </tr>\n                   ) : (\n                     (interviewData || []).map((data) => (\n                       <tr className=\"text-capitalize\" key={data.id}>\n"
                },
                {
                    "date": 1693916491458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,355 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Link } from \"react-router-dom\";\n+import { getInterview } from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"./pagination\";\n+import AddInterview from \"../forms/admin/addInterview\";\n+import Loader from \"../common/loader\";\n+import { ToastContainer } from \"react-toastify\";\n+import { ImCalendar } from \"react-icons/im\";\n+function Interview(props) {\n+  let search = props.search;\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n+  const [interviewData, setInterviewData] = useState([]);\n+  const [jobId, setJobId] = useState();\n+  let [resData, setResData] = useState(\"\");\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  // const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"\");\n+  const [sortOrder, setSortOrder] = useState(\"\");\n+\n+  //   /* Function to get the intervew data*/\n+  const InterviewData = async () => {\n+    try {\n+      const userData = await getInterview(\n+        \"\",\n+        \"\",\n+        search,\n+        props.pageNo,\n+        columnName,\n+        recordsPerPage,\n+        sortOrder,\n+        props.filter_by_time,\n+        props.statusFilterValue,\n+        props.company_id\n+      );\n+      if (userData.data.length === 0) {\n+        setInterviewData([]);\n+        setIsLoading(false);\n+      } else {\n+        // setInterviewData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err)\n+    }\n+  };\n+\n+  /*Render function to get the interview*/\n+  useEffect(() => {\n+    InterviewData();\n+  }, [\n+    search,\n+    props.pageNo,\n+    columnName,\n+    recordsPerPage,\n+    sortOrder,\n+    showAddInterviewModal,\n+    props.filter_by_time,\n+    props.statusFilterValue,\n+  ]);\n+\n+  /* Function to show the single data to update interview*/\n+  const editInterview = (e) => {\n+    setShowAddInterviewModal(true);\n+    setJobId(e.job_id);\n+    setResData(e);\n+  };\n+\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {showAddInterviewModal ? (\n+        <AddInterview\n+          resData={resData}\n+          close={() => {\n+            setShowAddInterviewModal(false);\n+          }}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          job_id={jobId}\n+          show={showAddInterviewModal}\n+          Interview={\"interview\"}\n+        />\n+      ) : null}\n+      <div className=\"mb-18\">\n+        <div className=\"mb-4 align-items-center\">\n+          <div className=\"page___heading\">\n+            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n+          </div>\n+        </div>\n+        <div\n+          className={\n+            props.heading === \"Dashboard\"\n+              ? \"\"\n+              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n+          }\n+        >\n+          <div className=\"table-responsive main_table_div\">\n+            {isLoading ? (\n+              <Loader />\n+            ) : (\n+              <table className=\"table table-striped main_data_table\">\n+                <thead>\n+                  <tr>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      EID\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"name\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Name\"\n+                      >\n+                        Name\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"job_title\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Job\"\n+                      >\n+                        Applied Job\n+                      </Link>\n+                    </th>\n+                    {props.heading === \"userprofile\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"company_name\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Company\"\n+                        >\n+                          Company Name\n+                        </Link>\n+                      </th>\n+                    )}\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"skill\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Skill\"\n+                        >\n+                          Skill\n+                        </Link>\n+                      </th>\n+                    )}\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"interview_date\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Date\"\n+                      >\n+                        Interview date\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      Interview\n+                    </th>\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\" border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        Action\n+                      </th>\n+                    )}\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  {/* Map function to show the data in the list*/}\n+                  {totalData === 0 || interviewData.length === 0 ? (\n+                    <tr>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      \n+                      {props.heading === \"Dashboard\" ? (\n+                        <></>\n+                      ) : (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      )}\n+                      {props.heading === \"Dashboard\" ? (\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                      ) : (\n+                        <>\n+                      </>)}\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                    </tr>\n+                  ) : (\n+                    (interviewData || []).map((data) => (\n+                      <tr className=\"text-capitalize\" key={data.id}>\n+                        <th className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n+                            {data.employee_id}\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            <Link\n+                              className=\"text-dark\"\n+                              to={`/${data.employee_id}`}\n+                            >\n+                              {data.name}\n+                            </Link>\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n+                                }>\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            {data.job_title}\n+                          </div>\n+                            </Link>\n+                        </th>\n+                        {props.heading === \"userprofile\" ? null : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.company_name}\n+                            </div>\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.skill ? data.skill : \"N/A\"}\n+                            </div>\n+                          </th>\n+                        )}\n+                        <th className=\" py-5\">\n+                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                            {moment(data.interview_date).format(\n+                              \"DD MMMM, YYYY\"\n+                            )}\n+                          </h3>\n+                        </th>\n+                        <th className=\"py-5 \">\n+                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                            {data.status === \"complete\" ? (\n+                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                Complete\n+                              </span>\n+                            ) : (\n+                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                Schedule\n+                              </span>\n+                            )}\n+                          </p>\n+                        </th>\n+                        <th\n+                          className={\n+                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n+                          }\n+                        >\n+                          <div className=\"btn-group button_group\" role=\"group\">\n+                            <button\n+                              className=\"btn btn-outline-info action_btn \"\n+                              style={{ fontSize: \"10px\" }}\n+                              onClick={() => editInterview(data)}\n+                              title=\" Reschedule Interview\"\n+                              disabled={\n+                                data.status === \"complete\" ? true : false\n+                              }\n+                            >\n+                              <ImCalendar />\n+                              {/* <i className=\"fa fa-calendar\"></i> */}\n+                            </button>\n+                          </div>\n+                        </th>\n+                      </tr>\n+                    ))\n+                  )}\n+                </tbody>\n+              </table>\n+            )}\n+          </div>\n+          <div className=\"pt-2\">\n+            <Pagination\n+              nPages={nPages}\n+              currentPage={props.pageNo}\n+              setCurrentPage={props.setpageNo}\n+              total={totalData}\n+              count={interviewData.length}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Interview;\n"
                },
                {
                    "date": 1693916521866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,19 +228,12 @@\n                   {totalData === 0 || interviewData.length === 0 ? (\n                     <tr>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n-                      \n                       {props.heading === \"Dashboard\" ? (\n-                        <></>\n-                      ) : (\n                         <th className=\"bg-white text-center\">No Data Found</th>\n-                      )}\n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n                       ) : (\n-                        <>\n-                      </>)}\n+                        <th className=\"bg-white text-center\">No Data Found</th>)}\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                     </tr>\n"
                },
                {
                    "date": 1693916565007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,369 +229,17 @@\n                     <tr>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n+                        <><th className=\"bg-white\"></th> \n+                        <th className=\"bg-white text-center\">No Data Found</th></>\n+                       \n                       ) : (\n-                        <th className=\"bg-white text-center\">No Data Found</th>)}\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                    </tr>\n-                  ) : (\n-                    (interviewData || []).map((data) => (\n-                      <tr className=\"text-capitalize\" key={data.id}>\n-                        <th className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n-                            {data.employee_id}\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            <Link\n-                              className=\"text-dark\"\n-                              to={`/${data.employee_id}`}\n-                            >\n-                              {data.name}\n-                            </Link>\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n-                                }>\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            {data.job_title}\n-                          </div>\n-                            </Link>\n-                        </th>\n-                        {props.heading === \"userprofile\" ? null : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.company_name}\n-                            </div>\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.skill ? data.skill : \"N/A\"}\n-                            </div>\n-                          </th>\n-                        )}\n-                        <th className=\" py-5\">\n-                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                            {moment(data.interview_date).format(\n-                              \"DD MMMM, YYYY\"\n-                            )}\n-                          </h3>\n-                        </th>\n-                        <th className=\"py-5 \">\n-                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                            {data.status === \"complete\" ? (\n-                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                Complete\n-                              </span>\n-                            ) : (\n-                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                Schedule\n-                              </span>\n-                            )}\n-                          </p>\n-                        </th>\n-                        <th\n-                          className={\n-                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n-                          }\n-                        >\n-                          <div className=\"btn-group button_group\" role=\"group\">\n-                            <button\n-                              className=\"btn btn-outline-info action_btn \"\n-                              style={{ fontSize: \"10px\" }}\n-                              onClick={() => editInterview(data)}\n-                              title=\" Reschedule Interview\"\n-                              disabled={\n-                                data.status === \"complete\" ? true : false\n-                              }\n-                            >\n-                              <ImCalendar />\n-                              {/* <i className=\"fa fa-calendar\"></i> */}\n-                            </button>\n-                          </div>\n-                        </th>\n-                      </tr>\n-                    ))\n-                  )}\n-                </tbody>\n-              </table>\n-            )}\n-          </div>\n-          <div className=\"pt-2\">\n-            <Pagination\n-              nPages={nPages}\n-              currentPage={props.pageNo}\n-              setCurrentPage={props.setpageNo}\n-              total={totalData}\n-              count={interviewData.length}\n-            />\n-          </div>\n-        </div>\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Interview;\n-import React, { useState, useEffect } from \"react\";\n-import { Link } from \"react-router-dom\";\n-import { getInterview } from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"./pagination\";\n-import AddInterview from \"../forms/admin/addInterview\";\n-import Loader from \"../common/loader\";\n-import { ToastContainer } from \"react-toastify\";\n-import { ImCalendar } from \"react-icons/im\";\n-function Interview(props) {\n-  let search = props.search;\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n-  const [interviewData, setInterviewData] = useState([]);\n-  const [jobId, setJobId] = useState();\n-  let [resData, setResData] = useState(\"\");\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  // const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"\");\n-  const [sortOrder, setSortOrder] = useState(\"\");\n-\n-  //   /* Function to get the intervew data*/\n-  const InterviewData = async () => {\n-    try {\n-      const userData = await getInterview(\n-        \"\",\n-        \"\",\n-        search,\n-        props.pageNo,\n-        columnName,\n-        recordsPerPage,\n-        sortOrder,\n-        props.filter_by_time,\n-        props.statusFilterValue,\n-        props.company_id\n-      );\n-      if (userData.data.length === 0) {\n-        setInterviewData([]);\n-        setIsLoading(false);\n-      } else {\n-        // setInterviewData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err)\n-    }\n-  };\n-\n-  /*Render function to get the interview*/\n-  useEffect(() => {\n-    InterviewData();\n-  }, [\n-    search,\n-    props.pageNo,\n-    columnName,\n-    recordsPerPage,\n-    sortOrder,\n-    showAddInterviewModal,\n-    props.filter_by_time,\n-    props.statusFilterValue,\n-  ]);\n-\n-  /* Function to show the single data to update interview*/\n-  const editInterview = (e) => {\n-    setShowAddInterviewModal(true);\n-    setJobId(e.job_id);\n-    setResData(e);\n-  };\n-\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {showAddInterviewModal ? (\n-        <AddInterview\n-          resData={resData}\n-          close={() => {\n-            setShowAddInterviewModal(false);\n-          }}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          job_id={jobId}\n-          show={showAddInterviewModal}\n-          Interview={\"interview\"}\n-        />\n-      ) : null}\n-      <div className=\"mb-18\">\n-        <div className=\"mb-4 align-items-center\">\n-          <div className=\"page___heading\">\n-            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n-          </div>\n-        </div>\n-        <div\n-          className={\n-            props.heading === \"Dashboard\"\n-              ? \"\"\n-              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n-          }\n-        >\n-          <div className=\"table-responsive main_table_div\">\n-            {isLoading ? (\n-              <Loader />\n-            ) : (\n-              <table className=\"table table-striped main_data_table\">\n-                <thead>\n-                  <tr>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      EID\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"name\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Name\"\n-                      >\n-                        Name\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"job_title\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Job\"\n-                      >\n-                        Applied Job\n-                      </Link>\n-                    </th>\n-                    {props.heading === \"userprofile\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"company_name\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Company\"\n-                        >\n-                          Company Name\n-                        </Link>\n-                      </th>\n-                    )}\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"skill\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Skill\"\n-                        >\n-                          Skill\n-                        </Link>\n-                      </th>\n-                    )}\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"interview_date\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Date\"\n-                      >\n-                        Interview date\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      Interview\n-                    </th>\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\" border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        Action\n-                      </th>\n-                    )}\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  {/* Map function to show the data in the list*/}\n-                  {totalData === 0 || interviewData.length === 0 ? (\n-                    <tr>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n+                        <> <th className=\"bg-white text-center\">No Data Found</th><th className=\"bg-white\"></th></>\n+                       )}\n                       \n-                      {props.heading === \"Dashboard\" ? (\n-                      <></>\n-                      ) : (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      )}\n-                      {props.heading === \"Dashboard\" ? (\n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                      ) : (\n-                        <>\n-                      </>)}\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n                     </tr>\n                   ) : (\n                     (interviewData || []).map((data) => (\n                       <tr className=\"text-capitalize\" key={data.id}>\n"
                },
                {
                    "date": 1693916593364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,352 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Link } from \"react-router-dom\";\n+import { getInterview } from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"./pagination\";\n+import AddInterview from \"../forms/admin/addInterview\";\n+import Loader from \"../common/loader\";\n+import { ToastContainer } from \"react-toastify\";\n+import { ImCalendar } from \"react-icons/im\";\n+function Interview(props) {\n+  let search = props.search;\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n+  const [interviewData, setInterviewData] = useState([]);\n+  const [jobId, setJobId] = useState();\n+  let [resData, setResData] = useState(\"\");\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  // const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"\");\n+  const [sortOrder, setSortOrder] = useState(\"\");\n+\n+  //   /* Function to get the intervew data*/\n+  const InterviewData = async () => {\n+    try {\n+      const userData = await getInterview(\n+        \"\",\n+        \"\",\n+        search,\n+        props.pageNo,\n+        columnName,\n+        recordsPerPage,\n+        sortOrder,\n+        props.filter_by_time,\n+        props.statusFilterValue,\n+        props.company_id\n+      );\n+      if (userData.data.length === 0) {\n+        setInterviewData([]);\n+        setIsLoading(false);\n+      } else {\n+        // setInterviewData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err)\n+    }\n+  };\n+\n+  /*Render function to get the interview*/\n+  useEffect(() => {\n+    InterviewData();\n+  }, [\n+    search,\n+    props.pageNo,\n+    columnName,\n+    recordsPerPage,\n+    sortOrder,\n+    showAddInterviewModal,\n+    props.filter_by_time,\n+    props.statusFilterValue,\n+  ]);\n+\n+  /* Function to show the single data to update interview*/\n+  const editInterview = (e) => {\n+    setShowAddInterviewModal(true);\n+    setJobId(e.job_id);\n+    setResData(e);\n+  };\n+\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {showAddInterviewModal ? (\n+        <AddInterview\n+          resData={resData}\n+          close={() => {\n+            setShowAddInterviewModal(false);\n+          }}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          job_id={jobId}\n+          show={showAddInterviewModal}\n+          Interview={\"interview\"}\n+        />\n+      ) : null}\n+      <div className=\"mb-18\">\n+        <div className=\"mb-4 align-items-center\">\n+          <div className=\"page___heading\">\n+            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n+          </div>\n+        </div>\n+        <div\n+          className={\n+            props.heading === \"Dashboard\"\n+              ? \"\"\n+              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n+          }\n+        >\n+          <div className=\"table-responsive main_table_div\">\n+            {isLoading ? (\n+              <Loader />\n+            ) : (\n+              <table className=\"table table-striped main_data_table\">\n+                <thead>\n+                  <tr>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      EID\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"name\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Name\"\n+                      >\n+                        Name\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\"border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"job_title\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Job\"\n+                      >\n+                        Applied Job\n+                      </Link>\n+                    </th>\n+                    {props.heading === \"userprofile\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"company_name\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Company\"\n+                        >\n+                          Company Name\n+                        </Link>\n+                      </th>\n+                    )}\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\"border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        <Link\n+                          to={\"\"}\n+                          onClick={() => {\n+                            handleSort(\"skill\");\n+                            props.setpageNo(1);\n+                          }}\n+                          className=\"text-gray\"\n+                          title=\"Sort by Skill\"\n+                        >\n+                          Skill\n+                        </Link>\n+                      </th>\n+                    )}\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      <Link\n+                        to={\"\"}\n+                        onClick={() => {\n+                          handleSort(\"interview_date\");\n+                          props.setpageNo(1);\n+                        }}\n+                        className=\"text-gray\"\n+                        title=\"Sort by Date\"\n+                      >\n+                        Interview date\n+                      </Link>\n+                    </th>\n+                    <th\n+                      scope=\"col\"\n+                      className=\" border-0 font-size-4 font-weight-normal\"\n+                    >\n+                      Interview\n+                    </th>\n+                    {props.heading === \"Dashboard\" ? null : (\n+                      <th\n+                        scope=\"col\"\n+                        className=\" border-0 font-size-4 font-weight-normal\"\n+                      >\n+                        Action\n+                      </th>\n+                    )}\n+                  </tr>\n+                </thead>\n+                <tbody>\n+                  {/* Map function to show the data in the list*/}\n+                  {totalData === 0 || interviewData.length === 0 ? (\n+                    <tr>\n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                      {props.heading === \"Dashboard\" ? (\n+                        <><th className=\"bg-white\"></th> \n+                        <th className=\"bg-white text-center\">No Data Found</th></>\n+                       \n+                      ) : (\n+                        <><th className=\"bg-white\"></th>  \n+                        <th className=\"bg-white text-center\">No Data Found</th><th className=\"bg-white\"></th></>\n+                       )}\n+                      \n+                      <th className=\"bg-white\"></th>\n+                      <th className=\"bg-white\"></th>\n+                    </tr>\n+                  ) : (\n+                    (interviewData || []).map((data) => (\n+                      <tr className=\"text-capitalize\" key={data.id}>\n+                        <th className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n+                            {data.employee_id}\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            <Link\n+                              className=\"text-dark\"\n+                              to={`/${data.employee_id}`}\n+                            >\n+                              {data.name}\n+                            </Link>\n+                          </div>\n+                        </th>\n+                        <th scope=\"row\" className=\"py-5 \">\n+                          <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n+                                }>\n+                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                            {data.job_title}\n+                          </div>\n+                            </Link>\n+                        </th>\n+                        {props.heading === \"userprofile\" ? null : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <Link to={`/jobdetailpage`}\n+                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.company_name}\n+                            </div>\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th scope=\"row\" className=\"py-5 \">\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.skill ? data.skill : \"N/A\"}\n+                            </div>\n+                          </th>\n+                        )}\n+                        <th className=\" py-5\">\n+                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                            {moment(data.interview_date).format(\n+                              \"DD MMMM, YYYY\"\n+                            )}\n+                          </h3>\n+                        </th>\n+                        <th className=\"py-5 \">\n+                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                            {data.status === \"complete\" ? (\n+                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                Complete\n+                              </span>\n+                            ) : (\n+                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                Schedule\n+                              </span>\n+                            )}\n+                          </p>\n+                        </th>\n+                        <th\n+                          className={\n+                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n+                          }\n+                        >\n+                          <div className=\"btn-group button_group\" role=\"group\">\n+                            <button\n+                              className=\"btn btn-outline-info action_btn \"\n+                              style={{ fontSize: \"10px\" }}\n+                              onClick={() => editInterview(data)}\n+                              title=\" Reschedule Interview\"\n+                              disabled={\n+                                data.status === \"complete\" ? true : false\n+                              }\n+                            >\n+                              <ImCalendar />\n+                              {/* <i className=\"fa fa-calendar\"></i> */}\n+                            </button>\n+                          </div>\n+                        </th>\n+                      </tr>\n+                    ))\n+                  )}\n+                </tbody>\n+              </table>\n+            )}\n+          </div>\n+          <div className=\"pt-2\">\n+            <Pagination\n+              nPages={nPages}\n+              currentPage={props.pageNo}\n+              setCurrentPage={props.setpageNo}\n+              total={totalData}\n+              count={interviewData.length}\n+            />\n+          </div>\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default Interview;\n"
                },
                {
                    "date": 1693916608358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,361 +233,12 @@\n                         <><th className=\"bg-white\"></th> \n                         <th className=\"bg-white text-center\">No Data Found</th></>\n                        \n                       ) : (\n-                        <><th className=\"bg-white\"></th>  \n-                        <th className=\"bg-white text-center\">No Data Found</th><th className=\"bg-white\"></th></>\n-                       )}\n-                      \n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                    </tr>\n-                  ) : (\n-                    (interviewData || []).map((data) => (\n-                      <tr className=\"text-capitalize\" key={data.id}>\n-                        <th className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n-                            {data.employee_id}\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            <Link\n-                              className=\"text-dark\"\n-                              to={`/${data.employee_id}`}\n-                            >\n-                              {data.name}\n-                            </Link>\n-                          </div>\n-                        </th>\n-                        <th scope=\"row\" className=\"py-5 \">\n-                          <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n-                                }>\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            {data.job_title}\n-                          </div>\n-                            </Link>\n-                        </th>\n-                        {props.heading === \"userprofile\" ? null : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.company_name}\n-                            </div>\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th scope=\"row\" className=\"py-5 \">\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.skill ? data.skill : \"N/A\"}\n-                            </div>\n-                          </th>\n-                        )}\n-                        <th className=\" py-5\">\n-                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                            {moment(data.interview_date).format(\n-                              \"DD MMMM, YYYY\"\n-                            )}\n-                          </h3>\n-                        </th>\n-                        <th className=\"py-5 \">\n-                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                            {data.status === \"complete\" ? (\n-                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                Complete\n-                              </span>\n-                            ) : (\n-                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                Schedule\n-                              </span>\n-                            )}\n-                          </p>\n-                        </th>\n-                        <th\n-                          className={\n-                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n-                          }\n-                        >\n-                          <div className=\"btn-group button_group\" role=\"group\">\n-                            <button\n-                              className=\"btn btn-outline-info action_btn \"\n-                              style={{ fontSize: \"10px\" }}\n-                              onClick={() => editInterview(data)}\n-                              title=\" Reschedule Interview\"\n-                              disabled={\n-                                data.status === \"complete\" ? true : false\n-                              }\n-                            >\n-                              <ImCalendar />\n-                              {/* <i className=\"fa fa-calendar\"></i> */}\n-                            </button>\n-                          </div>\n-                        </th>\n-                      </tr>\n-                    ))\n-                  )}\n-                </tbody>\n-              </table>\n-            )}\n-          </div>\n-          <div className=\"pt-2\">\n-            <Pagination\n-              nPages={nPages}\n-              currentPage={props.pageNo}\n-              setCurrentPage={props.setpageNo}\n-              total={totalData}\n-              count={interviewData.length}\n-            />\n-          </div>\n-        </div>\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default Interview;\n-import React, { useState, useEffect } from \"react\";\n-import { Link } from \"react-router-dom\";\n-import { getInterview } from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"./pagination\";\n-import AddInterview from \"../forms/admin/addInterview\";\n-import Loader from \"../common/loader\";\n-import { ToastContainer } from \"react-toastify\";\n-import { ImCalendar } from \"react-icons/im\";\n-function Interview(props) {\n-  let search = props.search;\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n-  const [interviewData, setInterviewData] = useState([]);\n-  const [jobId, setJobId] = useState();\n-  let [resData, setResData] = useState(\"\");\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  // const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"\");\n-  const [sortOrder, setSortOrder] = useState(\"\");\n-\n-  //   /* Function to get the intervew data*/\n-  const InterviewData = async () => {\n-    try {\n-      const userData = await getInterview(\n-        \"\",\n-        \"\",\n-        search,\n-        props.pageNo,\n-        columnName,\n-        recordsPerPage,\n-        sortOrder,\n-        props.filter_by_time,\n-        props.statusFilterValue,\n-        props.company_id\n-      );\n-      if (userData.data.length === 0) {\n-        setInterviewData([]);\n-        setIsLoading(false);\n-      } else {\n-        // setInterviewData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err)\n-    }\n-  };\n-\n-  /*Render function to get the interview*/\n-  useEffect(() => {\n-    InterviewData();\n-  }, [\n-    search,\n-    props.pageNo,\n-    columnName,\n-    recordsPerPage,\n-    sortOrder,\n-    showAddInterviewModal,\n-    props.filter_by_time,\n-    props.statusFilterValue,\n-  ]);\n-\n-  /* Function to show the single data to update interview*/\n-  const editInterview = (e) => {\n-    setShowAddInterviewModal(true);\n-    setJobId(e.job_id);\n-    setResData(e);\n-  };\n-\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {showAddInterviewModal ? (\n-        <AddInterview\n-          resData={resData}\n-          close={() => {\n-            setShowAddInterviewModal(false);\n-          }}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          job_id={jobId}\n-          show={showAddInterviewModal}\n-          Interview={\"interview\"}\n-        />\n-      ) : null}\n-      <div className=\"mb-18\">\n-        <div className=\"mb-4 align-items-center\">\n-          <div className=\"page___heading\">\n-            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n-          </div>\n-        </div>\n-        <div\n-          className={\n-            props.heading === \"Dashboard\"\n-              ? \"\"\n-              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n-          }\n-        >\n-          <div className=\"table-responsive main_table_div\">\n-            {isLoading ? (\n-              <Loader />\n-            ) : (\n-              <table className=\"table table-striped main_data_table\">\n-                <thead>\n-                  <tr>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      EID\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"name\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Name\"\n-                      >\n-                        Name\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\"border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"job_title\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Job\"\n-                      >\n-                        Applied Job\n-                      </Link>\n-                    </th>\n-                    {props.heading === \"userprofile\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"company_name\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Company\"\n-                        >\n-                          Company Name\n-                        </Link>\n-                      </th>\n-                    )}\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\"border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        <Link\n-                          to={\"\"}\n-                          onClick={() => {\n-                            handleSort(\"skill\");\n-                            props.setpageNo(1);\n-                          }}\n-                          className=\"text-gray\"\n-                          title=\"Sort by Skill\"\n-                        >\n-                          Skill\n-                        </Link>\n-                      </th>\n-                    )}\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      <Link\n-                        to={\"\"}\n-                        onClick={() => {\n-                          handleSort(\"interview_date\");\n-                          props.setpageNo(1);\n-                        }}\n-                        className=\"text-gray\"\n-                        title=\"Sort by Date\"\n-                      >\n-                        Interview date\n-                      </Link>\n-                    </th>\n-                    <th\n-                      scope=\"col\"\n-                      className=\" border-0 font-size-4 font-weight-normal\"\n-                    >\n-                      Interview\n-                    </th>\n-                    {props.heading === \"Dashboard\" ? null : (\n-                      <th\n-                        scope=\"col\"\n-                        className=\" border-0 font-size-4 font-weight-normal\"\n-                      >\n-                        Action\n-                      </th>\n-                    )}\n-                  </tr>\n-                </thead>\n-                <tbody>\n-                  {/* Map function to show the data in the list*/}\n-                  {totalData === 0 || interviewData.length === 0 ? (\n-                    <tr>\n-                      <th className=\"bg-white\"></th>\n-                      <th className=\"bg-white\"></th>\n-                      {props.heading === \"Dashboard\" ? (\n                         <><th className=\"bg-white\"></th> \n-                        <th className=\"bg-white text-center\">No Data Found</th></>\n-                       \n-                      ) : (\n-                        <> <th className=\"bg-white text-center\">No Data Found</th><th className=\"bg-white\"></th></>\n+                        <th className=\"bg-white text-center\">No Data Found</th>\n+                        <th className=\"bg-white\"></th>  \n+                        <th className=\"bg-white\"></th></>\n                        )}\n                       \n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n"
                },
                {
                    "date": 1693916621191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         setTotalData(userData.total_rows);\n         setIsLoading(false);\n       }\n     } catch (err) {\n-      console.log(err)\n+      console.log(err);\n     }\n   };\n \n   /*Render function to get the interview*/\n@@ -229,18 +229,25 @@\n                     <tr>\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                       {props.heading === \"Dashboard\" ? (\n-                        <><th className=\"bg-white\"></th> \n-                        <th className=\"bg-white text-center\">No Data Found</th></>\n-                       \n+                        <>\n+                          <th className=\"bg-white\"></th>\n+                          <th className=\"bg-white text-center\">\n+                            No Data Found\n+                          </th>\n+                        </>\n                       ) : (\n-                        <><th className=\"bg-white\"></th> \n-                        <th className=\"bg-white text-center\">No Data Found</th>\n-                        <th className=\"bg-white\"></th>  \n-                        <th className=\"bg-white\"></th></>\n-                       )}\n-                      \n+                        <>\n+                          <th className=\"bg-white\"></th>\n+                          <th className=\"bg-white text-center\">\n+                            No Data Found\n+                          </th>\n+                          <th className=\"bg-white\"></th>\n+                          <th className=\"bg-white\"></th>\n+                        </>\n+                      )}\n+\n                       <th className=\"bg-white\"></th>\n                       <th className=\"bg-white\"></th>\n                     </tr>\n                   ) : (\n@@ -261,23 +268,30 @@\n                             </Link>\n                           </div>\n                         </th>\n                         <th scope=\"row\" className=\"py-5 \">\n-                          <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n-                                }>\n-                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                            {data.job_title}\n-                          </div>\n-                            </Link>\n+                          <Link\n+                            to={`/jobdetailpage`}\n+                            onClick={() =>\n+                              localStorage.setItem(\"job_id\", data.job_id)\n+                            }\n+                          >\n+                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                              {data.job_title}\n+                            </div>\n+                          </Link>\n                         </th>\n                         {props.heading === \"userprofile\" ? null : (\n                           <th scope=\"row\" className=\"py-5 \">\n-                            <Link to={`/jobdetailpage`}\n-                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n-                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n-                              {data.company_name}\n-                            </div>\n+                            <Link\n+                              to={`/jobdetailpage`}\n+                              onClick={() =>\n+                                localStorage.setItem(\"job_id\", data.job_id)\n+                              }\n+                            >\n+                              <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n+                                {data.company_name}\n+                              </div>\n                             </Link>\n                           </th>\n                         )}\n                         {props.heading === \"Dashboard\" ? (\n"
                },
                {
                    "date": 1693916640398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       if (userData.data.length === 0) {\n         setInterviewData([]);\n         setIsLoading(false);\n       } else {\n-        // setInterviewData(userData.data);\n+        setInterviewData(userData.data);\n         setTotalData(userData.total_rows);\n         setIsLoading(false);\n       }\n     } catch (err) {\n"
                }
            ],
            "date": 1693200816779,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getInterview } from \"../../api/api\";\nimport moment from \"moment\";\nimport Pagination from \"./pagination\";\nimport AddInterview from \"../forms/admin/addInterview\";\nimport Loader from \"../common/loader\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ImCalendar } from \"react-icons/im\";\nfunction Interview(props) {\n  let search = props.search;\n  let [isLoading, setIsLoading] = useState(true);\n  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n  const [interviewData, setInterviewData] = useState([]);\n  const [jobId, setJobId] = useState();\n  let [resData, setResData] = useState(\"\");\n  let [apiCall, setApiCall] = useState(props.apiCall);\n\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n\n  //   /* Function to get the intervew data*/\n  const InterviewData = async () => {\n    try {\n      const userData = await getInterview(\n        \"\",\n        \"\",\n        search,\n        search || props.filter_by_time || props.statusFilterValue || sortOrder\n          ? 1\n          : currentPage,\n        columnName,\n        recordsPerPage,\n        sortOrder,\n        props.filter_by_time,\n        props.statusFilterValue,\n        props.company_id\n      );\n      if (userData.data.length === 0) {\n        setInterviewData([]);\n        setIsLoading(false);\n      } else {\n        setInterviewData(userData.data);\n        setTotalData(userData.total_rows);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  /*Render function to get the interview*/\n  useEffect(() => {\n    InterviewData();\n  }, [\n    search,\n    currentPage,\n    columnName,\n    recordsPerPage,\n    sortOrder,\n    showAddInterviewModal,\n    props.filter_by_time,\n    props.statusFilterValue,\n  ]);\n\n  /* Function to show the single data to update interview*/\n  const editInterview = (e) => {\n    setShowAddInterviewModal(true);\n    setJobId(e.job_id);\n    setResData(e);\n  };\n\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n  return (\n    <>\n      <ToastContainer />\n      {showAddInterviewModal ? (\n        <AddInterview\n          resData={resData}\n          close={() => {\n            setShowAddInterviewModal(false);\n          }}\n          apiCall={apiCall}\n          setApiCall={setApiCall}\n          job_id={jobId}\n          show={showAddInterviewModal}\n          Interview={\"interview\"}\n        />\n      ) : null}\n      <div className=\"mb-18\">\n        <div className=\"mb-4 align-items-center\">\n          <div className=\"page___heading\">\n            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n          </div>\n        </div>\n        <div\n          className={\n            props.heading === \"Dashboard\"\n              ? \"\"\n              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n          }\n        >\n          <div className=\"table-responsive main_table_div\">\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <table className=\"table table-striped main_data_table\">\n                <thead>\n                  <tr>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      EID\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"name\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Name\"\n                      >\n                        Name\n                      </Link>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"job_title\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Job\"\n                      >\n                        Applied Job\n                      </Link>\n                    </th>\n                    {props.heading === \"userprofile\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\"border-0 font-size-4 font-weight-normal\"\n                      >\n                        <Link\n                          to={\"\"}\n                          onClick={() => {\n                            handleSort(\"company_name\");\n                            setCurrentPage(1);\n                          }}\n                          className=\"text-gray\"\n                          title=\"Sort by Company\"\n                        >\n                          Company Name\n                        </Link>\n                      </th>\n                    )}\n                    {props.heading === \"Dashboard\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\"border-0 font-size-4 font-weight-normal\"\n                      >\n                        <Link\n                          to={\"\"}\n                          onClick={() => {\n                            handleSort(\"skill\");\n                            setCurrentPage(1);\n                          }}\n                          className=\"text-gray\"\n                          title=\"Sort by Skill\"\n                        >\n                          Skill\n                        </Link>\n                      </th>\n                    )}\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"interview_date\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Date\"\n                      >\n                        Interview date\n                      </Link>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      Interview\n                    </th>\n                    {props.heading === \"Dashboard\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\" border-0 font-size-4 font-weight-normal\"\n                      >\n                        Action\n                      </th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* Map function to show the data in the list*/}\n                  {totalData === 0 || interviewData.length === 0 ? (\n                    <tr>\n                      <th className=\"bg-white\"></th>\n                      <th className=\"bg-white\"></th>\n                      {props.heading === \"Dashboard\" ? (\n                        <th className=\"bg-white text-center\">No Data Found</th>\n                      ) : (\n                        <th className=\"bg-white\"></th>\n                      )}\n                      {props.heading === \"Dashboard\" ? (\n                        <th className=\"bg-white\"></th>\n                      ) : (\n                        <th className=\"bg-white text-center\">No Data Found</th>\n                      )}\n                      <th className=\"bg-white\"></th>\n                      <th className=\"bg-white\"></th>\n                      <th className=\"bg-white\"></th>\n                      <th className=\"bg-white\"></th>\n                    </tr>\n                  ) : (\n                    (interviewData || []).map((data) => (\n                      <tr className=\"text-capitalize\" key={data.id}>\n                        <th className=\"py-5 \">\n                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n                            {data.employee_id}\n                          </div>\n                        </th>\n                        <th scope=\"row\" className=\"py-5 \">\n                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                            <Link\n                              className=\"text-dark\"\n                              to={`/${data.employee_id}`}\n                            >\n                              {data.name}\n                            </Link>\n                          </div>\n                        </th>\n                        <th scope=\"row\" className=\"py-5 \">\n                          <Link to={`/jobdetailpage`}\n                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)\n                                }>\n                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                            {data.job_title}\n                          </div>\n                            </Link>\n                        </th>\n                        {props.heading === \"userprofile\" ? null : (\n                          <th scope=\"row\" className=\"py-5 \">\n                            <Link to={`/jobdetailpage`}\n                                onClick={() => localStorage.setItem(\"job_id\",data.job_id)}>\n                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                              {data.company_name}\n                            </div>\n                            </Link>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <th scope=\"row\" className=\"py-5 \">\n                            <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                              {data.skill ? data.skill : \"N/A\"}\n                            </div>\n                          </th>\n                        )}\n                        <th className=\" py-5\">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {moment(data.interview_date).format(\n                              \"DD MMMM, YYYY\"\n                            )}\n                          </h3>\n                        </th>\n                        <th className=\"py-5 \">\n                          <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n                            {data.status === \"complete\" ? (\n                              <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                Complete\n                              </span>\n                            ) : (\n                              <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n                                Schedule\n                              </span>\n                            )}\n                          </p>\n                        </th>\n                        <th\n                          className={\n                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n                          }\n                        >\n                          <div className=\"btn-group button_group\" role=\"group\">\n                            <button\n                              className=\"btn btn-outline-info action_btn \"\n                              style={{ fontSize: \"10px\" }}\n                              onClick={() => editInterview(data)}\n                              title=\" Reschedule Interview\"\n                              disabled={\n                                data.status === \"complete\" ? true : false\n                              }\n                            >\n                              <ImCalendar />\n                              {/* <i className=\"fa fa-calendar\"></i> */}\n                            </button>\n                          </div>\n                        </th>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n          <div className=\"pt-2\">\n            <Pagination\n              nPages={nPages}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              total={totalData}\n              count={interviewData.length}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Interview;\n"
        }
    ]
}