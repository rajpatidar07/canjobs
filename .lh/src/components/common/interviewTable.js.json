{
    "sourceFile": "src/components/common/interviewTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876455348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876455348,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getInterview } from \"../../api/api\";\nimport moment from \"moment\";\nimport Pagination from \"./pagination\";\nimport AddInterview from \"../forms/admin/addInterview\";\nimport Loader from \"../common/loader\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ImCalendar } from \"react-icons/im\";\nfunction Interview(props) {\n  let search = props.search;\n  let [isLoading, setIsLoading] = useState(true);\n  let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\n  const [interviewData, setInterviewData] = useState([]);\n  const [jobId, setJobId] = useState();\n  let [resData, setResData] = useState(\"\");\n  let [apiCall, setApiCall] = useState(props.apiCall);\n\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  // const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n\n  //   /* Function to get the intervew data*/\n  const InterviewData = async () => {\n    try {\n      const userData = await getInterview(\n        \"\",\n        \"\",\n        search,\n        props.pageNo,\n        columnName,\n        recordsPerPage,\n        sortOrder,\n        props.filter_by_time,\n        props.statusFilterValue,\n        props.company_id\n      );\n      if (userData.data.length === 0) {\n        setInterviewData([]);\n        setIsLoading(false);\n      } else {\n        setInterviewData(userData.data);\n        setTotalData(userData.total_rows);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n\n  /*Render function to get the interview*/\n  useEffect(() => {\n    InterviewData();\n    // eslint-disable-next-line\n  }, [\n    search,\n    props.pageNo,\n    columnName,\n    recordsPerPage,\n    sortOrder,\n    showAddInterviewModal,\n    props.filter_by_time,\n    props.statusFilterValue,\n    props.openTable,\n    props.apiCall,\n  ]);\n\n  /* Function to show the single data to update interview*/\n  const editInterview = (e) => {\n    setShowAddInterviewModal(true);\n    setJobId(e.job_id);\n    setResData(e);\n  };\n\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n  return (\n    <>\n      <ToastContainer />\n      {showAddInterviewModal ? (\n        <AddInterview\n          resData={resData}\n          close={() => {\n            setShowAddInterviewModal(false);\n          }}\n          apiCall={apiCall}\n          setApiCall={setApiCall}\n          job_id={jobId}\n          show={showAddInterviewModal}\n          Interview={\"interview\"}\n        />\n      ) : null}\n      <div className=\"mb-18\">\n        <div className=\"mb-4 align-items-center\">\n          <div className=\"page___heading\">\n            <h3 className=\"font-size-6 mb-0\">Interview </h3>\n          </div>\n        </div>\n        <div\n          className={\n            props.heading === \"Dashboard\"\n              ? \"\"\n              : \"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\"\n          }\n        >\n          <div className=\"table-responsive main_table_div\">\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <table className=\"table table-striped main_data_table\">\n                <thead>\n                  <tr>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      EID\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"name\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Name\"\n                      >\n                        Name\n                      </Link>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"job_title\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Job\"\n                      >\n                        Applied Job\n                      </Link>\n                    </th>\n                    {props.heading === \"userprofile\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\"border-0 font-size-4 font-weight-normal\"\n                      >\n                        <Link\n                          to={\"\"}\n                          onClick={() => {\n                            handleSort(\"company_name\");\n                            props.setpageNo(1);\n                          }}\n                          className=\"text-gray\"\n                          title=\"Sort by Client\"\n                        >\n                          Client Name\n                        </Link>\n                      </th>\n                    )}\n                    {props.heading === \"Dashboard\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\"border-0 font-size-4 font-weight-normal\"\n                      >\n                        <Link\n                          to={\"\"}\n                          onClick={() => {\n                            handleSort(\"skill\");\n                            props.setpageNo(1);\n                          }}\n                          className=\"text-gray\"\n                          title=\"Sort by Skill\"\n                        >\n                          Skill\n                        </Link>\n                      </th>\n                    )}\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"interview_date\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Date\"\n                      >\n                        Interview date\n                      </Link>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      Interview\n                    </th>\n                    {props.heading === \"Dashboard\" ? null : (\n                      <th\n                        scope=\"col\"\n                        className=\" border-0 font-size-4 font-weight-normal\"\n                      >\n                        Action\n                      </th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {/* Map function to show the data in the list*/}\n                  {totalData === 0 || interviewData.length === 0 ? (\n                    <tr>\n                      <th colSpan={8} className=\"bg-white text-center\">\n                        No Data Found\n                      </th>\n                    </tr>\n                  ) : (\n                    (interviewData || []).map((data) => (\n                      <tr className=\"text-capitalize\" key={data.id}>\n                        <td className=\"py-5 \">\n                          <div className=\"font-size-3 mb-0 font-weight-normal text-black-2\">\n                            {data.employee_id}\n                          </div>\n                        </td>\n                        <td className=\"py-5 \">\n                          {data.name === null ||\n                          data.name === undefined ||\n                          data.name === \"undefined\" ||\n                          data.name === \"\" ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <div\n                              className=\"font-size-3 mb-0 font-weight-semibold text-black-2 text-truncate\"\n                              title={data.name}\n                            >\n                              <Link\n                                className=\"text-dark\"\n                                to={`/${data.employee_id}`}\n                              >\n                                {data.name}\n                              </Link>\n                            </div>\n                          )}\n                        </td>\n                        <td className=\"py-5 \">\n                          {data.job_title === null ||\n                          data.job_title === undefined ||\n                          data.job_title === \"undefined\" ||\n                          data.job_title === \"\" ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <Link\n                              to={`/job_detail`}\n                              onClick={() =>\n                                localStorage.setItem(\"job_id\", data.job_id)\n                              }\n                            >\n                              <div\n                                className=\"font-size-3 mb-0 font-weight-semibold text-black-2 text-truncate\"\n                                title={data.job_title}\n                              >\n                                {data.job_title}\n                              </div>\n                            </Link>\n                          )}\n                        </td>\n                        {props.heading === \"userprofile\" ? null : (\n                          <td className=\"py-5 \">\n                            {data.company_name === null ||\n                            data.company_name === undefined ||\n                            data.company_name === \"undefined\" ||\n                            data.company_name === \"\" ? (\n                              <p className=\"font-size-3  mb-0\">N/A</p>\n                            ) : (\n                              <Link\n                                to={`/job_detail`}\n                                onClick={() =>\n                                  localStorage.setItem(\"job_id\", data.job_id)\n                                }\n                              >\n                                <div\n                                  className=\"font-size-3 mb-0 font-weight-semibold text-black-2 text-truncate\"\n                                  title={data.company_name}\n                                >\n                                  {data.company_name}\n                                </div>\n                              </Link>\n                            )}\n                          </td>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <td className=\"py-5 \">\n                            {data.skill === null ||\n                            data.skill === undefined ||\n                            data.skill === \"undefined\" ||\n                            data.skill === \"\" ? (\n                              <p className=\"font-size-3  mb-0\">N/A</p>\n                            ) : (\n                              <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                                {data.skill}\n                              </div>\n                            )}\n                          </td>\n                        )}\n                        <td className=\" py-5\">\n                          {data.interview_date === null ||\n                          data.interview_date === undefined ||\n                          data.interview_date === \"undefined\" ||\n                          data.interview_date === \"\" ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                              {moment(data.interview_date).format(\n                                \"DD MMMM, YYYY\"\n                              )}\n                            </h3>\n                          )}\n                        </td>\n                        <td className=\"py-5 \">\n                          {data.status === null ||\n                          data.status === undefined ||\n                          data.status === \"undefined\" ||\n                          data.status === \"\" ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n                              {data.status === \"complete\" ? (\n                                <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                  Complete\n                                </span>\n                              ) : (\n                                <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n                                  Schedule\n                                </span>\n                              )}\n                            </p>\n                          )}\n                        </td>\n                        <td\n                          className={\n                            props.heading === \"Dashboard\" ? \"d-none\" : \"py-5 \"\n                          }\n                        >\n                          <div className=\"btn-group button_group\" role=\"group\">\n                            <button\n                              className=\"btn btn-outline-info action_btn \"\n                              style={{ fontSize: \"10px\" }}\n                              onClick={() => editInterview(data)}\n                              title=\" Reschedule Interview\"\n                              disabled={\n                                data.status === \"complete\" ? true : false\n                              }\n                            >\n                              <ImCalendar />\n                              {/* <i className=\"fa fa-calendar\"></i> */}\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n          <div className=\"pt-2\">\n            <Pagination\n              nPages={nPages}\n              currentPage={props.pageNo}\n              setCurrentPage={props.setpageNo}\n              total={totalData}\n              count={interviewData.length}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Interview;\n"
        }
    ]
}