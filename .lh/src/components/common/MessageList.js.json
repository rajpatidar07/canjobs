{
    "sourceFile": "src/components/common/MessageList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1709620118384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1709620118384,
            "name": "Commit-0",
            "content": "import moment from \"moment-timezone\";\nimport React, { useEffect, useRef } from \"react\";\nimport { AiOutlineDownload } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nconst MessageList = ({ data, loginuser, loginusertype }) => {\n  // Create a ref for the div element\n  const divRef = useRef(null);\n\n  // Function to scroll to the end of the div\n  const scrollToBottom = () => {\n    if (divRef.current) {\n      // Set scrollTop to the scrollHeight to scroll to the end\n      divRef.current.scrollTop = divRef.current.scrollHeight;\n    }\n  };\n  //   Render data\n  useEffect(() => {\n    scrollToBottom();\n  }, [data]);\n  /*Local Time */\n  const LocalTime = (_date) => {\n    let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    const result = moment.utc(_date).tz(timezone);\n    return result.format(\"LLL\");\n  };\n\n  console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n  return (\n    <div className=\"chat-messages bg-light\" ref={divRef}>\n      {data.length === 0 ? (\n        <div className=\"message\">\n          <div>No Data Found</div>\n        </div>\n      ) : (\n        data.map((message) => {\n          const fileExtension =\n            message.document_name &&\n            message.document_name.split(\".\").pop().toLowerCase();\n          const isImage =\n            message.document_url &&\n            (message.document_url.toLowerCase().endsWith(\".png\") ||\n              message.document_url.toLowerCase().endsWith(\".jpg\") ||\n              message.document_url.toLowerCase().endsWith(\".jpeg\"));\n          let iconSrc = isImage ? message.document_url : \"\";\n          let title = message.document_name || \"\";\n\n          if (!isImage) {\n            if (fileExtension === \"pdf\") {\n              iconSrc =\n                \"https://ssl.gstatic.com/docs/doclist/images/mediatype/icon_3_pdf_x16.png\";\n            } else if (fileExtension === \"doc\" || fileExtension === \"docx\") {\n              iconSrc =\n                \"https://e7.pngegg.com/pngimages/18/655/png-clipart-computer-icons-microsoft-word-document-file-format-word-icon-blue-angle.png\";\n            } else if (fileExtension === \"html\" || fileExtension === \"txt\") {\n              iconSrc =\n                \"//ssl.gstatic.com/docs/doclist/images/mediatype/icon_1_text_x16.png\";\n            } else {\n              iconSrc =\n                \"https://icons.iconarchive.com/icons/thehoth/seo/256/seo-web-code-icon.png\";\n            }\n          }\n\n          return (\n            <div\n              key={message.id}\n              className={`message ${message.task_creator_user_id === loginuser &&\n                  message.task_creator_user_type === loginusertype\n                  ? \"received\"\n                  : \"sent\"\n                }`}\n            >\n              <div className=\"message-content font-size-3\">\n                {title === \"\" || iconSrc === \"\" ? (\n                  message.subject_description === \"\" ||\n                    message.subject_description === undefined ||\n                    message.subject_description === null ||\n                    message.subject_description === \"undefined\" ||\n                    message.subject_description === \"null\" ? (\n                    \"\"\n                  ) : (\n                    <div className=\" mr-3 mb-3  \">\n                      <div className=\"message-text\">\n                        {message.task_creator_user_name && (\n                          <span className=\"message-sender font-size-3 text-capitalize\">\n                            {message.task_creator_user_name}\n                          </span>\n                        )}\n                        <br />\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: message.subject_description,\n                          }}\n                        />\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  <div\n                    className=\"align-items-center mr-3 mb-3 rounded border bg-white position-relative htmlFileCls p-2 message-text\"\n                    title={title}\n                  >\n                    {\" \"}\n                    {message.task_creator_user_name && (\n                      <span className=\"message-sender font-size-3 text-capitalize\">\n                        {message.task_creator_user_name}\n                      </span>\n                    )}\n                    <br />\n                    <div className=\"text-center\">\n                      <Link>\n                        <img\n                          src={iconSrc}\n                          alt={title}\n                          title={title}\n                          width={45}\n                          height={45}\n                          style={{ zIndex: \"1\" }}\n                        />\n                        <div>\n                          <small\n                            className=\"d-inline-block text-truncate text-decoration-none text-dark\"\n                            style={{ maxWidth: \"100%\" }}\n                          >\n                            {title}\n                          </small>\n                        </div>\n                      </Link>\n                      <div className=\"download-icon\">\n                        <Link\n                          to={message.document_url}\n                          download={title}\n                          className=\"text-dark\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <AiOutlineDownload />\n                        </Link>\n                      </div>\n                    </div>\n                    {message.subject_description === \"\" ||\n                      message.subject_description === undefined ||\n                      message.subject_description === null ||\n                      message.subject_description === \"undefined\" ||\n                      message.subject_description === \"null\" ? (\n                      \"\"\n                    ) : (\n                      <div className=\"text-start\">\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: message.subject_description,\n                          }}\n                        /> { }\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                <div className=\"message-info\">\n                  <small className=\"text-muted\">\n                    {LocalTime(message.created_on)}\n                  </small>\n                </div>\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default MessageList;\n"
        }
    ]
}