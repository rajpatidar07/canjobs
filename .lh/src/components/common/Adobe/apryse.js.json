{
    "sourceFile": "src/components/common/Adobe/apryse.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 112,
            "patches": [
                {
                    "date": 1713422582690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1713422662637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React,{ useEffect } from \"react\";\r\n+import React,{ useEffect ,useRef} from \"react\";\r\n import WebViewer from '@pdftron/webviewer'\r\n export default function Apryse({url,data}) {\r\n     const viewer = useRef(null);\r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1713422773380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,61 @@\n-import React,{ useEffect ,useRef} from \"react\";\r\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n\\ No newline at end of file\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer'\r\n-export default function Apryse({url,data}) {\r\n-    const viewer = useRef(null);\r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-          {\r\n-            path: '/webviewer/lib',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-          });\r\n-      }, []);\r\n-    \r\n+\r\n+export default function Apryse({ url, data }) {\r\n+  useEffect(() => {\r\n+    const viewer = document.createElement('div'); // Create a new div element for the viewer\r\n+    viewer.style.height = '100vh'; // Set the height of the viewer\r\n+\r\n+    WebViewer(\r\n+      {\r\n+        path: '/webviewer/lib',\r\n+        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+        initialDoc: url,\r\n+      },\r\n+      viewer, // Pass the new div element as the container for WebViewer\r\n+    ).then((instance) => {\r\n+      const { documentViewer } = instance.Core;\r\n+      // You can now call WebViewer APIs here...\r\n+    });\r\n+\r\n+    // Append the viewer element to the component's DOM\r\n+    document.querySelector('.webviewer-container').appendChild(viewer);\r\n+\r\n+    // Clean up function to remove the viewer element when the component unmounts\r\n+    return () => {\r\n+      viewer.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n   return (\r\n     <div className=\"MyComponent\">\r\n       <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+      <div className=\"webviewer-container\" style={{ height: \"100vh\" }}></div>\r\n     </div>\r\n-  )\r\n-}\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713422836142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,39 +23,40 @@\n //     </div>\r\n //   )\r\n // }\r\n import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer'\r\n+import WebViewer from '@pdftron/webviewer';\r\n \r\n-export default function Apryse({ url, data }) {\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n   useEffect(() => {\r\n-    const viewer = document.createElement('div'); // Create a new div element for the viewer\r\n-    viewer.style.height = '100vh'; // Set the height of the viewer\r\n+    if (!viewerContainer.current) return;\r\n \r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n     WebViewer(\r\n       {\r\n         path: '/webviewer/lib',\r\n         licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n         initialDoc: url,\r\n       },\r\n-      viewer, // Pass the new div element as the container for WebViewer\r\n+      viewerElement,\r\n     ).then((instance) => {\r\n       const { documentViewer } = instance.Core;\r\n       // You can now call WebViewer APIs here...\r\n     });\r\n \r\n-    // Append the viewer element to the component's DOM\r\n-    document.querySelector('.webviewer-container').appendChild(viewer);\r\n-\r\n-    // Clean up function to remove the viewer element when the component unmounts\r\n     return () => {\r\n-      viewer.remove();\r\n\\ No newline at end of file\n+      viewerElement.remove();\r\n     };\r\n   }, [url]);\r\n \r\n   return (\r\n     <div className=\"MyComponent\">\r\n       <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer-container\" style={{ height: \"100vh\" }}></div>\r\n+      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n     </div>\r\n   );\r\n-}\n+}\r\n"
                },
                {
                    "date": 1713423284126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     viewerContainer.current.appendChild(viewerElement);\r\n \r\n     WebViewer(\r\n       {\r\n-        path: '/webviewer/lib',\r\n+        path: '/@pdftron/webviewer/lib',\r\n         licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n         initialDoc: url,\r\n       },\r\n       viewerElement,\r\n"
                },
                {
                    "date": 1713423661975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+import file from \"../../../../node_modules/@pdftron/webviewer\"\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    WebViewer(\r\n+      {\r\n+        path: '/@pdftron/webviewer/lib',\r\n+        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+        initialDoc: url,\r\n+      },\r\n+      viewerElement,\r\n+    ).then((instance) => {\r\n+      const { documentViewer } = instance.Core;\r\n+      // You can now call WebViewer APIs here...\r\n+    });\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713423671658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+import file from \"../../../../node_modules/@pdftron/webviewer\"\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    WebViewer(\r\n+      {\r\n+        path: file,\r\n+        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+        initialDoc: url,\r\n+      },\r\n+      viewerElement,\r\n+    ).then((instance) => {\r\n+      const { documentViewer } = instance.Core;\r\n+      // You can now call WebViewer APIs here...\r\n+    });\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713423689024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+import {filePath} from \"../../../../node_modules/@pdftron/webviewer\"\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    WebViewer(\r\n+      {\r\n+        path: filePath,\r\n+        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+        initialDoc: url,\r\n+      },\r\n+      viewerElement,\r\n+    ).then((instance) => {\r\n+      const { documentViewer } = instance.Core;\r\n+      // You can now call WebViewer APIs here...\r\n+    });\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713423868256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n //   )\r\n // }\r\n import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n-import {filePath} from \"../../../../node_modules/@pdftron/webviewer\"\r\n export default function Apryse({ url }) {\r\n   const viewerContainer = useRef(null);\r\n \r\n   useEffect(() => {\r\n@@ -37,9 +36,9 @@\n     viewerContainer.current.appendChild(viewerElement);\r\n \r\n     WebViewer(\r\n       {\r\n-        path: filePath,\r\n+        path: '/webviewer',\r\n         licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n         initialDoc: url,\r\n       },\r\n       viewerElement,\r\n@@ -59,190 +58,4 @@\n       <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n     </div>\r\n   );\r\n }\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-import file from \"../../../../node_modules/@pdftron/webviewer\"\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    WebViewer(\r\n-      {\r\n-        path: file,\r\n-        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-        initialDoc: url,\r\n-      },\r\n-      viewerElement,\r\n-    ).then((instance) => {\r\n-      const { documentViewer } = instance.Core;\r\n-      // You can now call WebViewer APIs here...\r\n-    });\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n-    </div>\r\n-  );\r\n-}\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-import file from \"../../../../node_modules/@pdftron/webviewer\"\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    WebViewer(\r\n-      {\r\n-        path: '/@pdftron/webviewer/lib',\r\n-        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-        initialDoc: url,\r\n-      },\r\n-      viewerElement,\r\n-    ).then((instance) => {\r\n-      const { documentViewer } = instance.Core;\r\n-      // You can now call WebViewer APIs here...\r\n-    });\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n-    </div>\r\n-  );\r\n-}\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    WebViewer(\r\n-      {\r\n-        path: '/@pdftron/webviewer/lib',\r\n-        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-        initialDoc: url,\r\n-      },\r\n-      viewerElement,\r\n-    ).then((instance) => {\r\n-      const { documentViewer } = instance.Core;\r\n-      // You can now call WebViewer APIs here...\r\n-    });\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1713424193516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    WebViewer(\r\n+        {\r\n+          path: '../../../lib',\r\n+          initialDoc: url,\r\n+        },\r\n+        document.getElementById('viewer')\r\n+      ).then(instance => {\r\n+        samplesSetup(instance);\r\n+      \r\n+        document.getElementById('select').onchange = e => {\r\n+          instance.UI.loadDocument(e.target.value);\r\n+        };\r\n+      \r\n+        document.getElementById('file-picker').onchange = e => {\r\n+          const file = e.target.files[0];\r\n+          if (file) {\r\n+            instance.UI.loadDocument(file);\r\n+          }\r\n+        };\r\n+      \r\n+        document.getElementById('url-form').onsubmit = e => {\r\n+          e.preventDefault();\r\n+          instance.UI.loadDocument(document.getElementById('url').value);\r\n+        };\r\n+      });\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div id=\"viewer\"></div>\r\n+\r\n+      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713424225916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n           initialDoc: url,\r\n         },\r\n         document.getElementById('viewer')\r\n       ).then(instance => {\r\n-        samplesSetup(instance);\r\n+        // samplesSetup(instance);\r\n       \r\n         document.getElementById('select').onchange = e => {\r\n           instance.UI.loadDocument(e.target.value);\r\n         };\r\n@@ -74,65 +74,4 @@\n       {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n     </div>\r\n   );\r\n }\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    WebViewer(\r\n-      {\r\n-        path: '/webviewer',\r\n-        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-        initialDoc: url,\r\n-      },\r\n-      viewerElement,\r\n-    ).then((instance) => {\r\n-      const { documentViewer } = instance.Core;\r\n-      // You can now call WebViewer APIs here...\r\n-    });\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer-container\" ref={viewerContainer}></div>\r\n-    </div>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1713424241446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          initialDoc: url,\r\n+        },\r\n+        document.getElementById('viewer')\r\n+      ).then(instance => {\r\n+        // samplesSetup(instance);\r\n+      \r\n+        document.getElementById('select').onchange = e => {\r\n+          instance.UI.loadDocument(e.target.value);\r\n+        };\r\n+      \r\n+        document.getElementById('file-picker').onchange = e => {\r\n+          const file = e.target.files[0];\r\n+          if (file) {\r\n+            instance.UI.loadDocument(file);\r\n+          }\r\n+        };\r\n+      \r\n+        document.getElementById('url-form').onsubmit = e => {\r\n+          e.preventDefault();\r\n+          instance.UI.loadDocument(document.getElementById('url').value);\r\n+        };\r\n+      });\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div id=\"viewer\"></div>\r\n+\r\n+      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713424859692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,110 +34,67 @@\n     const viewerElement = document.createElement('div');\r\n     viewerElement.style.height = '100vh';\r\n     viewerContainer.current.appendChild(viewerElement);\r\n \r\n-    WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          initialDoc: url,\r\n-        },\r\n-        document.getElementById('viewer')\r\n-      ).then(instance => {\r\n-        // samplesSetup(instance);\r\n-      \r\n-        document.getElementById('select').onchange = e => {\r\n-          instance.UI.loadDocument(e.target.value);\r\n-        };\r\n-      \r\n-        document.getElementById('file-picker').onchange = e => {\r\n-          const file = e.target.files[0];\r\n-          if (file) {\r\n-            instance.UI.loadDocument(file);\r\n-          }\r\n-        };\r\n-      \r\n-        document.getElementById('url-form').onsubmit = e => {\r\n-          e.preventDefault();\r\n-          instance.UI.loadDocument(document.getElementById('url').value);\r\n-        };\r\n-      });\r\n+ //\r\n+// Requires starting WebViewer Server in order to run\r\n \r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div id=\"viewer\"></div>\r\n-\r\n-      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n-    </div>\r\n-  );\r\n-}\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n+const startWebViewer = () => {\r\n     WebViewer(\r\n-        {\r\n-          path: '../../../lib',\r\n-          initialDoc: url,\r\n-        },\r\n-        document.getElementById('viewer')\r\n-      ).then(instance => {\r\n-        // samplesSetup(instance);\r\n-      \r\n-        document.getElementById('select').onchange = e => {\r\n-          instance.UI.loadDocument(e.target.value);\r\n-        };\r\n-      \r\n-        document.getElementById('file-picker').onchange = e => {\r\n-          const file = e.target.files[0];\r\n-          if (file) {\r\n-            instance.UI.loadDocument(file);\r\n-          }\r\n-        };\r\n-      \r\n-        document.getElementById('url-form').onsubmit = e => {\r\n-          e.preventDefault();\r\n-          instance.UI.loadDocument(document.getElementById('url').value);\r\n-        };\r\n-      });\r\n+      {\r\n+        path: '../../../../node_modules/@pdftron/webviewer',\r\n+        webviewerServerURL: hostname,\r\n+        initialDoc: url,\r\n+      },\r\n+      document.getElementById('viewer')\r\n+    ).then(instance => {\r\n+      samplesSetup(instance);\r\n+      document.getElementById('select').onchange = e => {\r\n+        instance.UI.loadDocument(e.target.value);\r\n+      };\r\n+  \r\n+      document.getElementById('file-picker').onchange = e => {\r\n+        const file = e.target.files[0];\r\n+        if (file) {\r\n+          instance.UI.loadDocument(file);\r\n+        }\r\n+      };\r\n+  \r\n+      document.getElementById('url-form').onsubmit = e => {\r\n+        e.preventDefault();\r\n+        instance.UI.loadDocument(document.getElementById('url').value);\r\n+      };\r\n+    });\r\n+  };\r\n+  \r\n+  let hostname = 'http://localhost:3000/';\r\n+  if (window.location.hostname.includes('apryse.com')) {\r\n+    hostname = 'https://demo.apryse.com/';\r\n+  }\r\n+  \r\n+  const healthFunc = () => {\r\n+    if (this.status >= 500) {\r\n+      alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`); // eslint-disable-line no-alert\r\n+    } else if (this.status === 404) {\r\n+      alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``); // eslint-disable-line no-alert\r\n+    } else if (this.status >= 400) {\r\n+      alert(`WebViewer Server cannot be reached at ${hostname}`); // eslint-disable-line no-alert\r\n+    } else {\r\n+      startWebViewer();\r\n+    }\r\n+  };\r\n+  \r\n+  // Health check to ensure server is running\r\n+  const healthCheck = new XMLHttpRequest();\r\n+  healthCheck.onreadystatechange = () => {\r\n+    if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n+      alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`); // eslint-disable-line no-alert\r\n+    }\r\n+  };\r\n+  \r\n+  healthCheck.addEventListener('load', healthFunc);\r\n+  healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+  healthCheck.send();\r\n \r\n     return () => {\r\n       viewerElement.remove();\r\n     };\r\n@@ -146,9 +103,9 @@\n   return (\r\n     <div className=\"MyComponent\">\r\n       <div className=\"header\">React sample</div>\r\n       <div id=\"viewer\"></div>\r\n-\r\n+      <div>end</div>\r\n       {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1713425177958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+export default function Apryse({ url }) {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+ //\r\n+// Requires starting WebViewer Server in order to run\r\n+\r\n+const startWebViewer = () => {\r\n+    WebViewer(\r\n+      {\r\n+        path: '../../../../node_modules/@pdftron/webviewer',\r\n+        webviewerServerURL: hostname,\r\n+        initialDoc: url,\r\n+      },\r\n+      document.getElementById('viewer')\r\n+    ).then(instance => {\r\n+    //   samplesSetup(instance);\r\n+      document.getElementById('select').onchange = e => {\r\n+        instance.UI.loadDocument(e.target.value);\r\n+      };\r\n+  \r\n+      document.getElementById('file-picker').onchange = e => {\r\n+        const file = e.target.files[0];\r\n+        if (file) {\r\n+          instance.UI.loadDocument(file);\r\n+        }\r\n+      };\r\n+  \r\n+      document.getElementById('url-form').onsubmit = e => {\r\n+        e.preventDefault();\r\n+        instance.UI.loadDocument(document.getElementById('url').value);\r\n+      };\r\n+    });\r\n+  };\r\n+  \r\n+  let hostname = 'http://localhost:3000/';\r\n+  if (window.location.hostname.includes('apryse.com')) {\r\n+    hostname = 'https://demo.apryse.com/';\r\n+  }\r\n+  \r\n+  const healthFunc = () => {\r\n+    if (this.status >= 500) {\r\n+      alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`); // eslint-disable-line no-alert\r\n+    } else if (this.status === 404) {\r\n+      alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``); // eslint-disable-line no-alert\r\n+    } else if (this.status >= 400) {\r\n+      alert(`WebViewer Server cannot be reached at ${hostname}`); // eslint-disable-line no-alert\r\n+    } else {\r\n+      startWebViewer();\r\n+    }\r\n+  };\r\n+  \r\n+  // Health check to ensure server is running\r\n+  const healthCheck = new XMLHttpRequest();\r\n+  healthCheck.onreadystatechange = () => {\r\n+    if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n+      alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`); // eslint-disable-line no-alert\r\n+    }\r\n+  };\r\n+  \r\n+  healthCheck.addEventListener('load', healthFunc);\r\n+  healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+  healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div id=\"viewer\"></div>\r\n+      <div>end</div>\r\n+      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n+    </div>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713425430162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n //   )\r\n // }\r\n import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n-export default function Apryse({ url }) {\r\n+\r\n+const Apryse = ({ url }) => {\r\n   const viewerContainer = useRef(null);\r\n \r\n   useEffect(() => {\r\n     if (!viewerContainer.current) return;\r\n@@ -34,189 +35,63 @@\n     const viewerElement = document.createElement('div');\r\n     viewerElement.style.height = '100vh';\r\n     viewerContainer.current.appendChild(viewerElement);\r\n \r\n- //\r\n-// Requires starting WebViewer Server in order to run\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n \r\n-const startWebViewer = () => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '../../../../node_modules/@pdftron/webviewer',\r\n-        webviewerServerURL: hostname,\r\n-        initialDoc: url,\r\n-      },\r\n-      document.getElementById('viewer')\r\n-    ).then(instance => {\r\n-    //   samplesSetup(instance);\r\n-      document.getElementById('select').onchange = e => {\r\n-        instance.UI.loadDocument(e.target.value);\r\n-      };\r\n-  \r\n-      document.getElementById('file-picker').onchange = e => {\r\n-        const file = e.target.files[0];\r\n-        if (file) {\r\n-          instance.UI.loadDocument(file);\r\n-        }\r\n-      };\r\n-  \r\n-      document.getElementById('url-form').onsubmit = e => {\r\n-        e.preventDefault();\r\n-        instance.UI.loadDocument(document.getElementById('url').value);\r\n-      };\r\n-    });\r\n-  };\r\n-  \r\n-  let hostname = 'http://localhost:3000/';\r\n-  if (window.location.hostname.includes('apryse.com')) {\r\n-    hostname = 'https://demo.apryse.com/';\r\n-  }\r\n-  \r\n-  const healthFunc = () => {\r\n-    if (this.status >= 500) {\r\n-      alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`); // eslint-disable-line no-alert\r\n-    } else if (this.status === 404) {\r\n-      alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``); // eslint-disable-line no-alert\r\n-    } else if (this.status >= 400) {\r\n-      alert(`WebViewer Server cannot be reached at ${hostname}`); // eslint-disable-line no-alert\r\n-    } else {\r\n-      startWebViewer();\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n     }\r\n-  };\r\n-  \r\n-  // Health check to ensure server is running\r\n-  const healthCheck = new XMLHttpRequest();\r\n-  healthCheck.onreadystatechange = () => {\r\n-    if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n-      alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`); // eslint-disable-line no-alert\r\n-    }\r\n-  };\r\n-  \r\n-  healthCheck.addEventListener('load', healthFunc);\r\n-  healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-  healthCheck.send();\r\n \r\n-    return () => {\r\n-      viewerElement.remove();\r\n+    const healthFunc = () => {\r\n+      if (this.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (this.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (this.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n     };\r\n-  }, [url]);\r\n \r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div id=\"viewer\"></div>\r\n-      <div>end</div>\r\n-      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n-    </div>\r\n-  );\r\n-}\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-export default function Apryse({ url }) {\r\n-  const viewerContainer = useRef(null);\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n+        alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`);\r\n+      }\r\n+    };\r\n \r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n+    healthCheck.addEventListener('load', healthFunc);\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n \r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n- //\r\n-// Requires starting WebViewer Server in order to run\r\n-\r\n-const startWebViewer = () => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '../../../../node_modules/@pdftron/webviewer',\r\n-        webviewerServerURL: hostname,\r\n-        initialDoc: url,\r\n-      },\r\n-      document.getElementById('viewer')\r\n-    ).then(instance => {\r\n-      samplesSetup(instance);\r\n-      document.getElementById('select').onchange = e => {\r\n-        instance.UI.loadDocument(e.target.value);\r\n-      };\r\n-  \r\n-      document.getElementById('file-picker').onchange = e => {\r\n-        const file = e.target.files[0];\r\n-        if (file) {\r\n-          instance.UI.loadDocument(file);\r\n-        }\r\n-      };\r\n-  \r\n-      document.getElementById('url-form').onsubmit = e => {\r\n-        e.preventDefault();\r\n-        instance.UI.loadDocument(document.getElementById('url').value);\r\n-      };\r\n-    });\r\n-  };\r\n-  \r\n-  let hostname = 'http://localhost:3000/';\r\n-  if (window.location.hostname.includes('apryse.com')) {\r\n-    hostname = 'https://demo.apryse.com/';\r\n-  }\r\n-  \r\n-  const healthFunc = () => {\r\n-    if (this.status >= 500) {\r\n-      alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`); // eslint-disable-line no-alert\r\n-    } else if (this.status === 404) {\r\n-      alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``); // eslint-disable-line no-alert\r\n-    } else if (this.status >= 400) {\r\n-      alert(`WebViewer Server cannot be reached at ${hostname}`); // eslint-disable-line no-alert\r\n-    } else {\r\n-      startWebViewer();\r\n-    }\r\n-  };\r\n-  \r\n-  // Health check to ensure server is running\r\n-  const healthCheck = new XMLHttpRequest();\r\n-  healthCheck.onreadystatechange = () => {\r\n-    if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n-      alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`); // eslint-disable-line no-alert\r\n-    }\r\n-  };\r\n-  \r\n-  healthCheck.addEventListener('load', healthFunc);\r\n-  healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-  healthCheck.send();\r\n-\r\n     return () => {\r\n       viewerElement.remove();\r\n     };\r\n   }, [url]);\r\n \r\n   return (\r\n     <div className=\"MyComponent\">\r\n       <div className=\"header\">React sample</div>\r\n-      <div id=\"viewer\"></div>\r\n+      <div ref={viewerContainer}></div>\r\n       <div>end</div>\r\n-      {/* <div className=\"webviewer-container\" ref={viewerContainer}></div> */}\r\n     </div>\r\n   );\r\n-}\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713428877537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,28 +56,27 @@\n     if (window.location.hostname.includes('apryse.com')) {\r\n       hostname = 'https://demo.apryse.com/';\r\n     }\r\n \r\n-    const healthFunc = () => {\r\n-      if (this.status >= 500) {\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (this.status === 404) {\r\n+      } else if (xhr.status === 404) {\r\n         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (this.status >= 400) {\r\n+      } else if (xhr.status >= 400) {\r\n         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n       } else {\r\n         startWebViewer();\r\n       }\r\n     };\r\n \r\n     const healthCheck = new XMLHttpRequest();\r\n     healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4 && healthCheck.status === 0) {\r\n-        alert(`WebViewer Server at ${hostname} cannot be found, please run \\`npm run webviewer-server\\` in the WebViewer repository...`);\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n       }\r\n     };\r\n \r\n-    healthCheck.addEventListener('load', healthFunc);\r\n     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n     healthCheck.send();\r\n \r\n     return () => {\r\n"
                },
                {
                    "date": 1713429105501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429112883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,100 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429302827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429335610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429341823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429346944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429360273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429389124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429481277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,580 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429549180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429628386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,100 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429660924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429667407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,100 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429686873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429692969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429736646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,196 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429744686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429749818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429756389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429764801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429814005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429820973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,484 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429828843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429886969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713429893135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,196 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713429904129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430062399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430114122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430120495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,292 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713430174886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430256217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430280564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430300428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,292 +93,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n"
                },
                {
                    "date": 1713430320086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430328933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430369760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430383770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713430411775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '/webviewer/lib',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+  const viewerContainer = useRef(null);\r\n+\r\n+  useEffect(() => {\r\n+    if (!viewerContainer.current) return;\r\n+\r\n+    const viewerElement = document.createElement('div');\r\n+    viewerElement.style.height = '100vh';\r\n+    viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+    const startWebViewer = () => {\r\n+      WebViewer(\r\n+        {\r\n+          path: '../../../../node_modules/@pdftron/webviewer',\r\n+          webviewerServerURL: hostname,\r\n+          initialDoc: url,\r\n+        },\r\n+        viewerElement\r\n+      ).then(instance => {\r\n+        // Here we have a basic setup, you can add more customization as needed\r\n+        instance.UI.loadDocument(url);\r\n+      }).catch(error => {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      });\r\n+    };\r\n+\r\n+    let hostname = 'http://localhost:3000/';\r\n+    if (window.location.hostname.includes('apryse.com')) {\r\n+      hostname = 'https://demo.apryse.com/';\r\n+    }\r\n+\r\n+    const healthFunc = (xhr) => {\r\n+      if (xhr.status >= 500) {\r\n+        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+      } else if (xhr.status === 404) {\r\n+        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+      } else if (xhr.status >= 400) {\r\n+        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+      } else {\r\n+        startWebViewer();\r\n+      }\r\n+    };\r\n+\r\n+    const healthCheck = new XMLHttpRequest();\r\n+    healthCheck.onreadystatechange = () => {\r\n+      if (healthCheck.readyState === 4) {\r\n+        healthFunc(healthCheck);\r\n+      }\r\n+    };\r\n+\r\n+    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+    healthCheck.send();\r\n+\r\n+    return () => {\r\n+      viewerElement.remove();\r\n+    };\r\n+  }, [url]);\r\n+\r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div ref={viewerContainer}></div>\r\n+      <div>end</div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713431750119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,576 +1,96 @@\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n+import React,{ useEffect ,useRef} from \"react\";\r\n+import WebViewer from '@pdftron/webviewer'\r\n+export default function Apryse({url,data}) {\r\n+    const viewer = useRef(null);\r\n+    useEffect(() => {\r\n+        WebViewer(\r\n+          {\r\n+            path: '/webviewer/lib',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+          },\r\n+          viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n+          });\r\n+      }, []);\r\n     \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n   return (\r\n     <div className=\"MyComponent\">\r\n       <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n+      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n     </div>\r\n-  );\r\n-};\r\n+  )\r\n+}\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n \r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n \r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n \r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n \r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n \r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n \r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n \r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n \r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n \r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n \r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n //   return (\r\n //     <div className=\"MyComponent\">\r\n //       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n //     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n+//   );\r\n+// };\r\n \r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '/webviewer/lib',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-  const viewerContainer = useRef(null);\r\n-\r\n-  useEffect(() => {\r\n-    if (!viewerContainer.current) return;\r\n-\r\n-    const viewerElement = document.createElement('div');\r\n-    viewerElement.style.height = '100vh';\r\n-    viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-    const startWebViewer = () => {\r\n-      WebViewer(\r\n-        {\r\n-          path: '../../../../node_modules/@pdftron/webviewer',\r\n-          webviewerServerURL: hostname,\r\n-          initialDoc: url,\r\n-        },\r\n-        viewerElement\r\n-      ).then(instance => {\r\n-        // Here we have a basic setup, you can add more customization as needed\r\n-        instance.UI.loadDocument(url);\r\n-      }).catch(error => {\r\n-        console.error('Error initializing WebViewer:', error);\r\n-      });\r\n-    };\r\n-\r\n-    let hostname = 'http://localhost:3000/';\r\n-    if (window.location.hostname.includes('apryse.com')) {\r\n-      hostname = 'https://demo.apryse.com/';\r\n-    }\r\n-\r\n-    const healthFunc = (xhr) => {\r\n-      if (xhr.status >= 500) {\r\n-        alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-      } else if (xhr.status === 404) {\r\n-        alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-      } else if (xhr.status >= 400) {\r\n-        alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-      } else {\r\n-        startWebViewer();\r\n-      }\r\n-    };\r\n-\r\n-    const healthCheck = new XMLHttpRequest();\r\n-    healthCheck.onreadystatechange = () => {\r\n-      if (healthCheck.readyState === 4) {\r\n-        healthFunc(healthCheck);\r\n-      }\r\n-    };\r\n-\r\n-    healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-    healthCheck.send();\r\n-\r\n-    return () => {\r\n-      viewerElement.remove();\r\n-    };\r\n-  }, [url]);\r\n-\r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div ref={viewerContainer}></div>\r\n-      <div>end</div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\r\n+// export default Apryse;\r\n"
                },
                {
                    "date": 1713431784411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React,{ useEffect ,useRef} from \"react\";\r\n+import WebViewer from '@pdftron/webviewer'\r\n+export default function Apryse({url,data}) {\r\n+    const viewer = useRef(null);\r\n+    useEffect(() => {\r\n+        WebViewer(\r\n+          {\r\n+            path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+          },\r\n+          viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n+          });\r\n+      }, []);\r\n+    \r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+    </div>\r\n+  )\r\n+}\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n+\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n+\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n+\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n+\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n+\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n+\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n+\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Apryse;\r\n"
                },
                {
                    "date": 1713431913059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+import React,{ useEffect ,useRef} from \"react\";\r\n+import WebViewer from '@pdftron/webviewer'\r\n+export default function Apryse({url,data}) {\r\n+    const viewer = useRef(null);\r\n+    useEffect(() => {\r\n+        WebViewer(\r\n+          {\r\n+            path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+          },\r\n+          viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n+          });\r\n+      }, []);\r\n+    \r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+    </div>\r\n+  )\r\n+}\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n+\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n+\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n+\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n+\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n+\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n+\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n+\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Apryse;\r\n+import { useEffect, useRef, useState } from 'react';\r\n+export default function Apryse({ url }) {\r\n+const viewer = useRef(null);\r\n+const [instance, setInstance] = useState(null);\r\n+useEffect(() => {\r\n+console.log('Creating WebViewer instance with url:', url);\r\n+import('@pdftron/webviewer')\r\n+.then(({ default: WebViewer }) => {\r\n+WebViewer(\r\n+{\r\n+path: '/webviewer',\r\n+initialDoc: url,\r\n+},\r\n+viewer.current\r\n+)\r\n+.then((i) => {\r\n+console.log('WebViewer instance created:', i);\r\n+setInstance(i);\r\n+const { docViewer } = i;\r\n+// you can now call WebViewer APIs here...});\r\n+});\r\n+}, []);\r\n+useEffect(() => {\r\n+console.log('url changed:', url);\r\n+if (instance) {\r\n+console.log('Loading new document:', url);\r\n+instance.UI.loadDocument(url);\r\n+}\r\n+}, [url, instance]);\r\n+return (<div className='MyComponent'>\r\n+<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n+</div></div>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713431920052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,29 @@\n-import React,{ useEffect ,useRef} from \"react\";\r\n-import WebViewer from '@pdftron/webviewer'\r\n-export default function Apryse({url,data}) {\r\n-    const viewer = useRef(null);\r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-          {\r\n-            path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-          });\r\n-      }, []);\r\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n     \r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-    </div>\r\n-  )\r\n-}\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n // import React, { useEffect, useRef } from \"react\";\r\n // import WebViewer from '@pdftron/webviewer';\r\n \r\n // const Apryse = ({ url }) => {\r\n@@ -126,197 +126,5 @@\n return (<div className='MyComponent'>\r\n <div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n </div></div>\r\n   );\r\n-}\n-import React,{ useEffect ,useRef} from \"react\";\r\n-import WebViewer from '@pdftron/webviewer'\r\n-export default function Apryse({url,data}) {\r\n-    const viewer = useRef(null);\r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-          {\r\n-            path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-          });\r\n-      }, []);\r\n-    \r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-    </div>\r\n-  )\r\n-}\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n-\r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n-\r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n-\r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\r\n-import React,{ useEffect ,useRef} from \"react\";\r\n-import WebViewer from '@pdftron/webviewer'\r\n-export default function Apryse({url,data}) {\r\n-    const viewer = useRef(null);\r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-          {\r\n-            path: '/webviewer/lib',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-          });\r\n-      }, []);\r\n-    \r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-    </div>\r\n-  )\r\n-}\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n-\r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n-\r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n-\r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\n\\ No newline at end of file\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713431948292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,5 +126,5 @@\n return (<div className='MyComponent'>\r\n <div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n </div></div>\r\n   );\r\n-}\n\\ No newline at end of file\n+})}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713431957570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n+\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n+\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n+\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n+\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n+\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n+\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n+\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Apryse;\r\n+import React,{ useEffect, useRef, useState } from 'react';\r\n+export default function Apryse({ url }) {\r\n+const viewer = useRef(null);\r\n+const [instance, setInstance] = useState(null);\r\n+useEffect(() => {\r\n+console.log('Creating WebViewer instance with url:', url);\r\n+import('@pdftron/webviewer')\r\n+.then(({ default: WebViewer }) => {\r\n+WebViewer(\r\n+{\r\n+path: '/webviewer',\r\n+initialDoc: url,\r\n+},\r\n+viewer.current\r\n+)\r\n+.then((i) => {\r\n+console.log('WebViewer instance created:', i);\r\n+setInstance(i);\r\n+const { docViewer } = i;\r\n+// you can now call WebViewer APIs here...});\r\n+});\r\n+}, []);\r\n+useEffect(() => {\r\n+console.log('url changed:', url);\r\n+if (instance) {\r\n+console.log('Loading new document:', url);\r\n+instance.UI.loadDocument(url);\r\n+}\r\n+}, [url, instance]);\r\n+return (<div className='MyComponent'>\r\n+<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n+</div></div>\r\n+  );\r\n+})}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713432015750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n+\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n+\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n+\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n+\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n+\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n+\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n+\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Apryse;\r\n+import React,{ useEffect, useRef, useState } from 'react';\r\n+export default function Apryse({ url }) {\r\n+const viewer = useRef(null);\r\n+const [instance, setInstance] = useState(null);\r\n+useEffect(() => {\r\n+console.log('Creating WebViewer instance with url:', url);\r\n+import('@pdftron/webviewer')\r\n+.then(({ default: WebViewer }) => {\r\n+WebViewer(\r\n+{\r\n+path: '../../../../node_modules/@pdftron/webviewer',\r\n+initialDoc: url,\r\n+},\r\n+viewer.current\r\n+)\r\n+.then((i) => {\r\n+console.log('WebViewer instance created:', i);\r\n+setInstance(i);\r\n+const { docViewer } = i;\r\n+// you can now call WebViewer APIs here...});\r\n+});\r\n+}, []);\r\n+useEffect(() => {\r\n+console.log('url changed:', url);\r\n+if (instance) {\r\n+console.log('Loading new document:', url);\r\n+instance.UI.loadDocument(url);\r\n+}\r\n+}, [url, instance]);\r\n+return (<div className='MyComponent'>\r\n+<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n+</div></div>\r\n+  );\r\n+})}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713432055231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React,{ useEffect ,useRef} from \"react\";\r\n+import WebViewer from '@pdftron/webviewer'\r\n+export default function Apryse({url,data}) {\r\n+    const viewer = useRef(null);\r\n+    useEffect(() => {\r\n+        WebViewer(\r\n+          {\r\n+            path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+          },\r\n+          viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n+          });\r\n+      }, []);\r\n+    \r\n+  return (\r\n+    <div className=\"MyComponent\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+    </div>\r\n+  )\r\n+}\r\n+// import React, { useEffect, useRef } from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer';\r\n+\r\n+// const Apryse = ({ url }) => {\r\n+//   const viewerContainer = useRef(null);\r\n+\r\n+//   useEffect(() => {\r\n+//     if (!viewerContainer.current) return;\r\n+\r\n+//     const viewerElement = document.createElement('div');\r\n+//     viewerElement.style.height = '100vh';\r\n+//     viewerContainer.current.appendChild(viewerElement);\r\n+\r\n+//     const startWebViewer = () => {\r\n+//       WebViewer(\r\n+//         {\r\n+//           path: '../../../../node_modules/@pdftron/webviewer',\r\n+//           webviewerServerURL: hostname,\r\n+//           initialDoc: url,\r\n+//         },\r\n+//         viewerElement\r\n+//       ).then(instance => {\r\n+//         // Here we have a basic setup, you can add more customization as needed\r\n+//         instance.UI.loadDocument(url);\r\n+//       }).catch(error => {\r\n+//         console.error('Error initializing WebViewer:', error);\r\n+//       });\r\n+//     };\r\n+\r\n+//     let hostname = 'http://localhost:3000/';\r\n+//     if (window.location.hostname.includes('apryse.com')) {\r\n+//       hostname = 'https://demo.apryse.com/';\r\n+//     }\r\n+\r\n+//     const healthFunc = (xhr) => {\r\n+//       if (xhr.status >= 500) {\r\n+//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n+//       } else if (xhr.status === 404) {\r\n+//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n+//       } else if (xhr.status >= 400) {\r\n+//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n+//       } else {\r\n+//         startWebViewer();\r\n+//       }\r\n+//     };\r\n+\r\n+//     const healthCheck = new XMLHttpRequest();\r\n+//     healthCheck.onreadystatechange = () => {\r\n+//       if (healthCheck.readyState === 4) {\r\n+//         healthFunc(healthCheck);\r\n+//       }\r\n+//     };\r\n+\r\n+//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n+//     healthCheck.send();\r\n+\r\n+//     return () => {\r\n+//       viewerElement.remove();\r\n+//     };\r\n+//   }, [url]);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div ref={viewerContainer}></div>\r\n+//       <div>end</div>\r\n+//     </div>\r\n+//   );\r\n+// };\r\n+\r\n+// export default Apryse;\r\n"
                },
                {
                    "date": 1713432155491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,100 +1,4 @@\n-import React,{ useEffect ,useRef} from \"react\";\r\n-import WebViewer from '@pdftron/webviewer'\r\n-export default function Apryse({url,data}) {\r\n-    const viewer = useRef(null);\r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-          {\r\n-            path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-          });\r\n-      }, []);\r\n-    \r\n-  return (\r\n-    <div className=\"MyComponent\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-    </div>\r\n-  )\r\n-}\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n-\r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n-\r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n-\r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\r\n // import React,{ useEffect ,useRef} from \"react\";\r\n // import WebViewer from '@pdftron/webviewer'\r\n // export default function Apryse({url,data}) {\r\n //     const viewer = useRef(null);\r\n@@ -118,268 +22,46 @@\n //       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n //     </div>\r\n //   )\r\n // }\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n \r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n+export default function Apryse({ url }) {\r\n+    const viewer = useRef(null);\r\n \r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n+    useEffect(() => {\r\n+        if (!viewer.current) return;\r\n \r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n+        WebViewer(\r\n+          {\r\n+            path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+          },\r\n+          viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n+        }).catch((error) => {\r\n+            console.error('Error initializing WebViewer:', error);\r\n+        });\r\n \r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n+        return () => {\r\n+            if (viewer.current) {\r\n+                viewer.current.innerHTML = ''; // Remove WebViewer instance from the DOM\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n \r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\r\n-import React,{ useEffect, useRef, useState } from 'react';\r\n-export default function Apryse({ url }) {\r\n-const viewer = useRef(null);\r\n-const [instance, setInstance] = useState(null);\r\n-useEffect(() => {\r\n-console.log('Creating WebViewer instance with url:', url);\r\n-import('@pdftron/webviewer')\r\n-.then(({ default: WebViewer }) => {\r\n-WebViewer(\r\n-{\r\n-path: '../../../../node_modules/@pdftron/webviewer',\r\n-initialDoc: url,\r\n-},\r\n-viewer.current\r\n-)\r\n-.then((i) => {\r\n-console.log('WebViewer instance created:', i);\r\n-setInstance(i);\r\n-const { docViewer } = i;\r\n-// you can now call WebViewer APIs here...});\r\n-});\r\n-}, []);\r\n-useEffect(() => {\r\n-console.log('url changed:', url);\r\n-if (instance) {\r\n-console.log('Loading new document:', url);\r\n-instance.UI.loadDocument(url);\r\n+    return (\r\n+        <div className=\"MyComponent\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+        </div>\r\n+    );\r\n }\r\n-}, [url, instance]);\r\n-return (<div className='MyComponent'>\r\n-<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n-</div></div>\r\n-  );\r\n-})}\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n \r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n-\r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n-\r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\r\n-import React,{ useEffect, useRef, useState } from 'react';\r\n-export default function Apryse({ url }) {\r\n-const viewer = useRef(null);\r\n-const [instance, setInstance] = useState(null);\r\n-useEffect(() => {\r\n-console.log('Creating WebViewer instance with url:', url);\r\n-import('@pdftron/webviewer')\r\n-.then(({ default: WebViewer }) => {\r\n-WebViewer(\r\n-{\r\n-path: '/webviewer',\r\n-initialDoc: url,\r\n-},\r\n-viewer.current\r\n-)\r\n-.then((i) => {\r\n-console.log('WebViewer instance created:', i);\r\n-setInstance(i);\r\n-const { docViewer } = i;\r\n-// you can now call WebViewer APIs here...});\r\n-});\r\n-}, []);\r\n-useEffect(() => {\r\n-console.log('url changed:', url);\r\n-if (instance) {\r\n-console.log('Loading new document:', url);\r\n-instance.UI.loadDocument(url);\r\n-}\r\n-}, [url, instance]);\r\n-return (<div className='MyComponent'>\r\n-<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n-</div></div>\r\n-  );\r\n-})}\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n // import React, { useEffect, useRef } from \"react\";\r\n // import WebViewer from '@pdftron/webviewer';\r\n \r\n // const Apryse = ({ url }) => {\r\n@@ -449,38 +131,4 @@\n //   );\r\n // };\r\n \r\n // export default Apryse;\r\n-import { useEffect, useRef, useState } from 'react';\r\n-export default function Apryse({ url }) {\r\n-const viewer = useRef(null);\r\n-const [instance, setInstance] = useState(null);\r\n-useEffect(() => {\r\n-console.log('Creating WebViewer instance with url:', url);\r\n-import('@pdftron/webviewer')\r\n-.then(({ default: WebViewer }) => {\r\n-WebViewer(\r\n-{\r\n-path: '/webviewer',\r\n-initialDoc: url,\r\n-},\r\n-viewer.current\r\n-)\r\n-.then((i) => {\r\n-console.log('WebViewer instance created:', i);\r\n-setInstance(i);\r\n-const { docViewer } = i;\r\n-// you can now call WebViewer APIs here...});\r\n-});\r\n-}, []);\r\n-useEffect(() => {\r\n-console.log('url changed:', url);\r\n-if (instance) {\r\n-console.log('Loading new document:', url);\r\n-instance.UI.loadDocument(url);\r\n-}\r\n-}, [url, instance]);\r\n-return (<div className='MyComponent'>\r\n-<div className='webviewer' ref={viewer} style={{ height: '100vh' }}>\r\n-</div></div>\r\n-  );\r\n-})}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713432208463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,13 @@\n \r\n     useEffect(() => {\r\n         if (!viewer.current) return;\r\n \r\n+        // Check if WebViewer instance already exists\r\n+        if (viewer.current.querySelector('.webviewer')) {\r\n+            return;\r\n+        }\r\n+\r\n         WebViewer(\r\n           {\r\n             path: '../../../../node_modules/@pdftron/webviewer',\r\n             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n"
                },
                {
                    "date": 1713433744908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,114 +26,28 @@\n import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n export default function Apryse({ url }) {\r\n-    const viewer = useRef(null);\r\n \r\n-    useEffect(() => {\r\n-        if (!viewer.current) return;\r\n \r\n-        // Check if WebViewer instance already exists\r\n-        if (viewer.current.querySelector('.webviewer')) {\r\n-            return;\r\n-        }\r\n-\r\n-        WebViewer(\r\n-          {\r\n-            path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-          },\r\n-          viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n-        }).catch((error) => {\r\n-            console.error('Error initializing WebViewer:', error);\r\n+    WebViewer({\r\n+      path: '/public/webviewer',\r\n+      licenseKey: 'YOUR_LICENSE_KEY',\r\n+    }, document.getElementById('viewer'))\r\n+      .then(instance => {\r\n+        const { UI, Core } = instance;\r\n+        const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n+        // call methods from UI, Core, documentViewer and annotationManager as needed\r\n+    \r\n+        documentViewer.addEventListener('documentLoaded', () => {\r\n+          // call methods relating to the loaded document\r\n         });\r\n-\r\n-        return () => {\r\n-            if (viewer.current) {\r\n-                viewer.current.innerHTML = ''; // Remove WebViewer instance from the DOM\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n+    \r\n+        instance.UI.loadDocument(url);\r\n+      })\r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n             <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n         </div>\r\n     );\r\n }\r\n-\r\n-// import React, { useEffect, useRef } from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer';\r\n-\r\n-// const Apryse = ({ url }) => {\r\n-//   const viewerContainer = useRef(null);\r\n-\r\n-//   useEffect(() => {\r\n-//     if (!viewerContainer.current) return;\r\n-\r\n-//     const viewerElement = document.createElement('div');\r\n-//     viewerElement.style.height = '100vh';\r\n-//     viewerContainer.current.appendChild(viewerElement);\r\n-\r\n-//     const startWebViewer = () => {\r\n-//       WebViewer(\r\n-//         {\r\n-//           path: '../../../../node_modules/@pdftron/webviewer',\r\n-//           webviewerServerURL: hostname,\r\n-//           initialDoc: url,\r\n-//         },\r\n-//         viewerElement\r\n-//       ).then(instance => {\r\n-//         // Here we have a basic setup, you can add more customization as needed\r\n-//         instance.UI.loadDocument(url);\r\n-//       }).catch(error => {\r\n-//         console.error('Error initializing WebViewer:', error);\r\n-//       });\r\n-//     };\r\n-\r\n-//     let hostname = 'http://localhost:3000/';\r\n-//     if (window.location.hostname.includes('apryse.com')) {\r\n-//       hostname = 'https://demo.apryse.com/';\r\n-//     }\r\n-\r\n-//     const healthFunc = (xhr) => {\r\n-//       if (xhr.status >= 500) {\r\n-//         alert(`WebViewer Server at ${hostname} failing health checks, cannot connect...`);\r\n-//       } else if (xhr.status === 404) {\r\n-//         alert(`WebViewer Server cannot be found at ${hostname}, please run \\`npm run webviewer-server\\``);\r\n-//       } else if (xhr.status >= 400) {\r\n-//         alert(`WebViewer Server cannot be reached at ${hostname}`);\r\n-//       } else {\r\n-//         startWebViewer();\r\n-//       }\r\n-//     };\r\n-\r\n-//     const healthCheck = new XMLHttpRequest();\r\n-//     healthCheck.onreadystatechange = () => {\r\n-//       if (healthCheck.readyState === 4) {\r\n-//         healthFunc(healthCheck);\r\n-//       }\r\n-//     };\r\n-\r\n-//     healthCheck.open('GET', `${hostname}blackbox/health`);\r\n-//     healthCheck.send();\r\n-\r\n-//     return () => {\r\n-//       viewerElement.remove();\r\n-//     };\r\n-//   }, [url]);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div ref={viewerContainer}></div>\r\n-//       <div>end</div>\r\n-//     </div>\r\n-//   );\r\n-// };\r\n-\r\n-// export default Apryse;\r\n"
                },
                {
                    "date": 1713433809820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+    \r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useEffect, useRef } from \"react\";\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+export default function Apryse({ url }) {\r\n+\r\n+\r\n+    WebViewer({\r\n+      path: '/public/webviewer',\r\n+      licenseKey: 'YOUR_LICENSE_KEY',\r\n+    }, document.getElementById('viewer'))\r\n+      .then(instance => {\r\n+        const { UI, Core } = instance;\r\n+        const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n+        // call methods from UI, Core, documentViewer and annotationManager as needed\r\n+    \r\n+        documentViewer.addEventListener('documentLoaded', () => {\r\n+          // call methods relating to the loaded document\r\n+        });\r\n+    \r\n+        instance.UI.loadDocument(url);\r\n+      })\r\n+    return (\r\n+        <div className=\"MyComponent\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+        </div>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1713433861033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,14 @@\n import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n export default function Apryse({ url }) {\r\n+    const viewer = useRef(null);\r\n \r\n-\r\n     WebViewer({\r\n-      path: '/public/webviewer',\r\n-      licenseKey: 'YOUR_LICENSE_KEY',\r\n+        path: '../../../../node_modules/@pdftron/webviewer',\r\n+                    licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                    initialDoc: url,\r\n     }, document.getElementById('viewer'))\r\n       .then(instance => {\r\n         const { UI, Core } = instance;\r\n         const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n@@ -41,66 +42,13 @@\n         documentViewer.addEventListener('documentLoaded', () => {\r\n           // call methods relating to the loaded document\r\n         });\r\n     \r\n-        instance.UI.loadDocument(url);\r\n+        instance.UI.loadDocument('https://pdftron.s3.amazonaws.com/downloads/pl/demo-annotated.pdf');\r\n       })\r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+            <div className=\"webviewer\" ref={viewer} id=\"viewer\" style={{height: \"100vh\"}}></div>\r\n         </div>\r\n     );\r\n }\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-    \r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useEffect, useRef } from \"react\";\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-export default function Apryse({ url }) {\r\n-\r\n-\r\n-    WebViewer({\r\n-      path: '/public/webviewer',\r\n-      licenseKey: 'YOUR_LICENSE_KEY',\r\n-    }, document.getElementById('viewer'))\r\n-      .then(instance => {\r\n-        const { UI, Core } = instance;\r\n-        const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n-        // call methods from UI, Core, documentViewer and annotationManager as needed\r\n-    \r\n-        documentViewer.addEventListener('documentLoaded', () => {\r\n-          // call methods relating to the loaded document\r\n-        });\r\n-    \r\n-        instance.UI.loadDocument(url);\r\n-      })\r\n-    return (\r\n-        <div className=\"MyComponent\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-        </div>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1713433866472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n //             const { documentViewer } = instance.Core;\r\n //             // you can now call WebViewer APIs here...\r\n //           });\r\n //       }, []);\r\n-    \r\n+\r\n //   return (\r\n //     <div className=\"MyComponent\">\r\n //       <div className=\"header\">React sample</div>\r\n //       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n@@ -30,25 +30,25 @@\n     const viewer = useRef(null);\r\n \r\n     WebViewer({\r\n         path: '../../../../node_modules/@pdftron/webviewer',\r\n-                    licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                    initialDoc: url,\r\n+        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+        initialDoc: url,\r\n     }, document.getElementById('viewer'))\r\n-      .then(instance => {\r\n-        const { UI, Core } = instance;\r\n-        const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n-        // call methods from UI, Core, documentViewer and annotationManager as needed\r\n-    \r\n-        documentViewer.addEventListener('documentLoaded', () => {\r\n-          // call methods relating to the loaded document\r\n-        });\r\n-    \r\n-        instance.UI.loadDocument('https://pdftron.s3.amazonaws.com/downloads/pl/demo-annotated.pdf');\r\n-      })\r\n+        .then(instance => {\r\n+            const { UI, Core } = instance;\r\n+            const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n+            // call methods from UI, Core, documentViewer and annotationManager as needed\r\n+\r\n+            documentViewer.addEventListener('documentLoaded', () => {\r\n+                // call methods relating to the loaded document\r\n+            });\r\n+\r\n+            instance.UI.loadDocument('https://pdftron.s3.amazonaws.com/downloads/pl/demo-annotated.pdf');\r\n+        })\r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer} id=\"viewer\" style={{height: \"100vh\"}}></div>\r\n+            <div className=\"webviewer\" ref={viewer} id=\"viewer\" style={{ height: \"100vh\" }}></div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1713433953858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,27 +28,33 @@\n \r\n export default function Apryse({ url }) {\r\n     const viewer = useRef(null);\r\n \r\n-    WebViewer({\r\n-        path: '../../../../node_modules/@pdftron/webviewer',\r\n-        licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-        initialDoc: url,\r\n-    }, document.getElementById('viewer'))\r\n+    useEffect(() => {\r\n+        if (!viewer.current) return;\r\n+\r\n+        WebViewer({\r\n+            path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,\r\n+        }, viewer.current)\r\n         .then(instance => {\r\n-            const { UI, Core } = instance;\r\n-            const { documentViewer, annotationManager, Tools, Annotations } = Core;\r\n-            // call methods from UI, Core, documentViewer and annotationManager as needed\r\n-\r\n+            const { documentViewer } = instance.Core;\r\n+            // you can now call WebViewer APIs here...\r\n             documentViewer.addEventListener('documentLoaded', () => {\r\n+                console.log('Document loaded');\r\n                 // call methods relating to the loaded document\r\n             });\r\n+        })\r\n+        .catch(error => {\r\n+            console.error('Error initializing WebViewer:', error);\r\n+        });\r\n \r\n-            instance.UI.loadDocument('https://pdftron.s3.amazonaws.com/downloads/pl/demo-annotated.pdf');\r\n-        })\r\n+    }, [url]);\r\n+\r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer} id=\"viewer\" style={{ height: \"100vh\" }}></div>\r\n+            <div className=\"webviewer\" ref={viewer} style={{ height: \"100vh\" }}></div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1713434064329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,17 @@\n //       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n //     </div>\r\n //   )\r\n // }\r\n-import React, { useEffect, useRef } from \"react\";\r\n+import React, { useEffect, useRef, useState } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n export default function Apryse({ url }) {\r\n     const viewer = useRef(null);\r\n+    const [webViewerInitialized, setWebViewerInitialized] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        if (!viewer.current) return;\r\n+        if (!viewer.current || webViewerInitialized) return;\r\n \r\n         WebViewer({\r\n             path: '../../../../node_modules/@pdftron/webviewer',\r\n             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n@@ -43,14 +44,15 @@\n             documentViewer.addEventListener('documentLoaded', () => {\r\n                 console.log('Document loaded');\r\n                 // call methods relating to the loaded document\r\n             });\r\n+            setWebViewerInitialized(true); // Update state to indicate WebViewer is initialized\r\n         })\r\n         .catch(error => {\r\n             console.error('Error initializing WebViewer:', error);\r\n         });\r\n \r\n-    }, [url]);\r\n+    }, [url, webViewerInitialized]);\r\n \r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n"
                },
                {
                    "date": 1713434131780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,37 +22,35 @@\n //       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n //     </div>\r\n //   )\r\n // }\r\n-import React, { useEffect, useRef, useState } from \"react\";\r\n+import React, { useEffect, useRef } from \"react\";\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n export default function Apryse({ url }) {\r\n     const viewer = useRef(null);\r\n-    const [webViewerInitialized, setWebViewerInitialized] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        if (!viewer.current || webViewerInitialized) return;\r\n+        if (!viewer.current || viewer.current.innerHTML !== '') return;\r\n \r\n         WebViewer({\r\n             path: '../../../../node_modules/@pdftron/webviewer',\r\n             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n             initialDoc: url,\r\n         }, viewer.current)\r\n         .then(instance => {\r\n             const { documentViewer } = instance.Core;\r\n-            // you can now call WebViewer APIs here...\r\n+            // You can now call WebViewer APIs here...\r\n             documentViewer.addEventListener('documentLoaded', () => {\r\n                 console.log('Document loaded');\r\n-                // call methods relating to the loaded document\r\n+                // Call methods relating to the loaded document\r\n             });\r\n-            setWebViewerInitialized(true); // Update state to indicate WebViewer is initialized\r\n         })\r\n         .catch(error => {\r\n             console.error('Error initializing WebViewer:', error);\r\n         });\r\n \r\n-    }, [url, webViewerInitialized]);\r\n+    }, [url]);\r\n \r\n     return (\r\n         <div className=\"MyComponent\">\r\n             <div className=\"header\">React sample</div>\r\n"
                },
                {
                    "date": 1713434559874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,39 +22,49 @@\n //       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n //     </div>\r\n //   )\r\n // }\r\n-import React, { useEffect, useRef } from \"react\";\r\n+import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n-export default function Apryse({ url }) {\r\n-    const viewer = useRef(null);\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n \r\n-    useEffect(() => {\r\n-        if (!viewer.current || viewer.current.innerHTML !== '') return;\r\n+  // if using a class, equivalent of componentDidMount \r\n+  useEffect(() => {\r\n+    WebViewer(\r\n+      {\r\n+        path: '/webviewer/lib',\r\n+        initialDoc: '/files/PDFTRON_about.pdf',\r\n+        licenseKey: 'your_license_key'  // sign up to get a free trial key at https://dev.apryse.com\r\n+      },\r\n+      viewer.current,\r\n+    ).then((instance) => {\r\n+      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n \r\n-        WebViewer({\r\n-            path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,\r\n-        }, viewer.current)\r\n-        .then(instance => {\r\n-            const { documentViewer } = instance.Core;\r\n-            // You can now call WebViewer APIs here...\r\n-            documentViewer.addEventListener('documentLoaded', () => {\r\n-                console.log('Document loaded');\r\n-                // Call methods relating to the loaded document\r\n-            });\r\n-        })\r\n-        .catch(error => {\r\n-            console.error('Error initializing WebViewer:', error);\r\n+      documentViewer.addEventListener('documentLoaded', () => {\r\n+        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+          PageNumber: 1,\r\n+          // values are in page coordinates with (0, 0) in the top left\r\n+          X: 100,\r\n+          Y: 150,\r\n+          Width: 200,\r\n+          Height: 50,\r\n+          Author: annotationManager.getCurrentUser()\r\n         });\r\n \r\n-    }, [url]);\r\n+        annotationManager.addAnnotation(rectangleAnnot);\r\n+        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        annotationManager.redrawAnnotation(rectangleAnnot);\r\n+      });\r\n+    });\r\n+  }, []);\r\n \r\n-    return (\r\n-        <div className=\"MyComponent\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer} style={{ height: \"100vh\" }}></div>\r\n-        </div>\r\n-    );\r\n-}\r\n+  return (\r\n+    <div className=\"\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713434578660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n+\r\n+  // if using a class, equivalent of componentDidMount \r\n+  useEffect(() => {\r\n+    WebViewer(\r\n+      {\r\n+        path: '../../../../node_modules/@pdftron/webviewer',\r\n+            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+            initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+      },\r\n+      viewer.current,\r\n+    ).then((instance) => {\r\n+      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+      documentViewer.addEventListener('documentLoaded', () => {\r\n+        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+          PageNumber: 1,\r\n+          // values are in page coordinates with (0, 0) in the top left\r\n+          X: 100,\r\n+          Y: 150,\r\n+          Width: 200,\r\n+          Height: 50,\r\n+          Author: annotationManager.getCurrentUser()\r\n+        });\r\n+\r\n+        annotationManager.addAnnotation(rectangleAnnot);\r\n+        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        annotationManager.redrawAnnotation(rectangleAnnot);\r\n+      });\r\n+    });\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713434586312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n-const Apryse = () => {\r\n+const Apryse = ({url}) => {\r\n   const viewer = useRef(null);\r\n \r\n   // if using a class, equivalent of componentDidMount \r\n   useEffect(() => {\r\n@@ -66,75 +66,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = () => {\r\n-  const viewer = useRef(null);\r\n-\r\n-  // if using a class, equivalent of componentDidMount \r\n-  useEffect(() => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '/webviewer/lib',\r\n-        initialDoc: '/files/PDFTRON_about.pdf',\r\n-        licenseKey: 'your_license_key'  // sign up to get a free trial key at https://dev.apryse.com\r\n-      },\r\n-      viewer.current,\r\n-    ).then((instance) => {\r\n-      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-      documentViewer.addEventListener('documentLoaded', () => {\r\n-        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-          PageNumber: 1,\r\n-          // values are in page coordinates with (0, 0) in the top left\r\n-          X: 100,\r\n-          Y: 150,\r\n-          Width: 200,\r\n-          Height: 50,\r\n-          Author: annotationManager.getCurrentUser()\r\n-        });\r\n-\r\n-        annotationManager.addAnnotation(rectangleAnnot);\r\n-        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        annotationManager.redrawAnnotation(rectangleAnnot);\r\n-      });\r\n-    });\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer}></div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713434591539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,46 +25,46 @@\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n-const Apryse = ({url}) => {\r\n-  const viewer = useRef(null);\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n \r\n-  // if using a class, equivalent of componentDidMount \r\n-  useEffect(() => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '../../../../node_modules/@pdftron/webviewer',\r\n-            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-            initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-      },\r\n-      viewer.current,\r\n-    ).then((instance) => {\r\n-      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n \r\n-      documentViewer.addEventListener('documentLoaded', () => {\r\n-        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-          PageNumber: 1,\r\n-          // values are in page coordinates with (0, 0) in the top left\r\n-          X: 100,\r\n-          Y: 150,\r\n-          Width: 200,\r\n-          Height: 50,\r\n-          Author: annotationManager.getCurrentUser()\r\n+            documentViewer.addEventListener('documentLoaded', () => {\r\n+                const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+                    PageNumber: 1,\r\n+                    // values are in page coordinates with (0, 0) in the top left\r\n+                    X: 100,\r\n+                    Y: 150,\r\n+                    Width: 200,\r\n+                    Height: 50,\r\n+                    Author: annotationManager.getCurrentUser()\r\n+                });\r\n+\r\n+                annotationManager.addAnnotation(rectangleAnnot);\r\n+                // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+                annotationManager.redrawAnnotation(rectangleAnnot);\r\n+            });\r\n         });\r\n+    }, []);\r\n \r\n-        annotationManager.addAnnotation(rectangleAnnot);\r\n-        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        annotationManager.redrawAnnotation(rectangleAnnot);\r\n-      });\r\n-    });\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer}></div>\r\n-    </div>\r\n-  );\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n };\r\n \r\n export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713434688787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     useEffect(() => {\r\n         WebViewer(\r\n             {\r\n                 path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n             },\r\n             viewer.current,\r\n         ).then((instance) => {\r\n"
                },
                {
                    "date": 1713434725234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(WebViewer)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        ).then((instance) => {\r\n+            const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+            documentViewer.addEventListener('documentLoaded', () => {\r\n+                const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+                    PageNumber: 1,\r\n+                    // values are in page coordinates with (0, 0) in the top left\r\n+                    X: 100,\r\n+                    Y: 150,\r\n+                    Width: 200,\r\n+                    Height: 50,\r\n+                    Author: annotationManager.getCurrentUser()\r\n+                });\r\n+\r\n+                annotationManager.addAnnotation(rectangleAnnot);\r\n+                // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+                annotationManager.redrawAnnotation(rectangleAnnot);\r\n+            });\r\n+        });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713434960406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(WebViewer)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        )\r\n+        // .then((instance) => {\r\n+        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+        //     documentViewer.addEventListener('documentLoaded', () => {\r\n+        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+        //             PageNumber: 1,\r\n+        //             // values are in page coordinates with (0, 0) in the top left\r\n+        //             X: 100,\r\n+        //             Y: 150,\r\n+        //             Width: 200,\r\n+        //             Height: 50,\r\n+        //             Author: annotationManager.getCurrentUser()\r\n+        //         });\r\n+\r\n+        //         annotationManager.addAnnotation(rectangleAnnot);\r\n+        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n+        //     });\r\n+        // });\r\n+        .then(async instance => {\r\n+            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            docViewer.on('documentLoaded');\r\n+            docViewer.on('annotationsLoaded' );\r\n+    });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435135161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     useEffect(() => {\r\n         console.log(WebViewer)\r\n         WebViewer(\r\n             {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                // path: '../../../../node_modules/@pdftron/webviewer',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n             },\r\n             viewer.current,\r\n"
                },
                {
                    "date": 1713435156108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     useEffect(() => {\r\n         console.log(WebViewer)\r\n         WebViewer(\r\n             {\r\n-                // path: '../../../../node_modules/@pdftron/webviewer',\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n             },\r\n             viewer.current,\r\n@@ -77,146 +77,5 @@\n         </div>\r\n     );\r\n };\r\n \r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        console.log(WebViewer)\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-            viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-            documentViewer.addEventListener('documentLoaded', () => {\r\n-                const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-                    PageNumber: 1,\r\n-                    // values are in page coordinates with (0, 0) in the top left\r\n-                    X: 100,\r\n-                    Y: 150,\r\n-                    Width: 200,\r\n-                    Height: 50,\r\n-                    Author: annotationManager.getCurrentUser()\r\n-                });\r\n-\r\n-                annotationManager.addAnnotation(rectangleAnnot);\r\n-                // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-                annotationManager.redrawAnnotation(rectangleAnnot);\r\n-            });\r\n-        });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-            viewer.current,\r\n-        ).then((instance) => {\r\n-            const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-            documentViewer.addEventListener('documentLoaded', () => {\r\n-                const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-                    PageNumber: 1,\r\n-                    // values are in page coordinates with (0, 0) in the top left\r\n-                    X: 100,\r\n-                    Y: 150,\r\n-                    Width: 200,\r\n-                    Height: 50,\r\n-                    Author: annotationManager.getCurrentUser()\r\n-                });\r\n-\r\n-                annotationManager.addAnnotation(rectangleAnnot);\r\n-                // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-                annotationManager.redrawAnnotation(rectangleAnnot);\r\n-            });\r\n-        });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435252864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(WebViewer)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        )\r\n+        // .then((instance) => {\r\n+        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+        //     documentViewer.addEventListener('documentLoaded', () => {\r\n+        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+        //             PageNumber: 1,\r\n+        //             // values are in page coordinates with (0, 0) in the top left\r\n+        //             X: 100,\r\n+        //             Y: 150,\r\n+        //             Width: 200,\r\n+        //             Height: 50,\r\n+        //             Author: annotationManager.getCurrentUser()\r\n+        //         });\r\n+\r\n+        //         annotationManager.addAnnotation(rectangleAnnot);\r\n+        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n+        //     });\r\n+        // });\r\n+        .then(async instance => {\r\n+            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            docViewer.on('documentLoaded');\r\n+            docViewer.on('annotationsLoaded' );\r\n+    });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435341274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(WebViewer)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        )\r\n+        // .then((instance) => {\r\n+        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+        //     documentViewer.addEventListener('documentLoaded', () => {\r\n+        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+        //             PageNumber: 1,\r\n+        //             // values are in page coordinates with (0, 0) in the top left\r\n+        //             X: 100,\r\n+        //             Y: 150,\r\n+        //             Width: 200,\r\n+        //             Height: 50,\r\n+        //             Author: annotationManager.getCurrentUser()\r\n+        //         });\r\n+\r\n+        //         annotationManager.addAnnotation(rectangleAnnot);\r\n+        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n+        //     });\r\n+        // });\r\n+        .then(async instance => {\r\n+            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            docViewer.on('documentLoaded');\r\n+            docViewer.on('annotationsLoaded' );\r\n+    });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435399985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(WebViewer)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+        )\r\n+        // .then((instance) => {\r\n+        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+        //     documentViewer.addEventListener('documentLoaded', () => {\r\n+        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+        //             PageNumber: 1,\r\n+        //             // values are in page coordinates with (0, 0) in the top left\r\n+        //             X: 100,\r\n+        //             Y: 150,\r\n+        //             Width: 200,\r\n+        //             Height: 50,\r\n+        //             Author: annotationManager.getCurrentUser()\r\n+        //         });\r\n+\r\n+        //         annotationManager.addAnnotation(rectangleAnnot);\r\n+        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n+        //     });\r\n+        // });\r\n+        .then(async instance => {\r\n+            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            // docViewer.on('documentLoaded');\r\n+            // docViewer.on('annotationsLoaded' );\r\n+    });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435442392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    // if using a class, equivalent of componentDidMount \r\n+    useEffect(() => {\r\n+        console.log(viewer.current,)\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+            },\r\n+            viewer.current,\r\n+        )\r\n+        // .then((instance) => {\r\n+        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+        //     documentViewer.addEventListener('documentLoaded', () => {\r\n+        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+        //             PageNumber: 1,\r\n+        //             // values are in page coordinates with (0, 0) in the top left\r\n+        //             X: 100,\r\n+        //             Y: 150,\r\n+        //             Width: 200,\r\n+        //             Height: 50,\r\n+        //             Author: annotationManager.getCurrentUser()\r\n+        //         });\r\n+\r\n+        //         annotationManager.addAnnotation(rectangleAnnot);\r\n+        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n+        //     });\r\n+        // });\r\n+        .then(async instance => {\r\n+            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            docViewer.on('documentLoaded');\r\n+            docViewer.on('annotationsLoaded' );\r\n+    });\r\n+    }, []);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435620089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n+    // useEffect(() => {\r\n         console.log(viewer.current,)\r\n         WebViewer(\r\n             {\r\n                 path: '../../../../node_modules/@pdftron/webviewer',\r\n@@ -67,9 +67,9 @@\n     \r\n             docViewer.on('documentLoaded');\r\n             docViewer.on('annotationsLoaded' );\r\n     });\r\n-    }, []);\r\n+    // }, []);\r\n \r\n     return (\r\n         <div className=\"\">\r\n             <div className=\"header\">React sample</div>\r\n@@ -77,328 +77,5 @@\n         </div>\r\n     );\r\n };\r\n \r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        console.log(WebViewer)\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-        )\r\n-        // .then((instance) => {\r\n-        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-        //     documentViewer.addEventListener('documentLoaded', () => {\r\n-        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-        //             PageNumber: 1,\r\n-        //             // values are in page coordinates with (0, 0) in the top left\r\n-        //             X: 100,\r\n-        //             Y: 150,\r\n-        //             Width: 200,\r\n-        //             Height: 50,\r\n-        //             Author: annotationManager.getCurrentUser()\r\n-        //         });\r\n-\r\n-        //         annotationManager.addAnnotation(rectangleAnnot);\r\n-        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n-        //     });\r\n-        // });\r\n-        .then(async instance => {\r\n-            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            // docViewer.on('documentLoaded');\r\n-            // docViewer.on('annotationsLoaded' );\r\n-    });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        console.log(WebViewer)\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-            viewer.current,\r\n-        )\r\n-        // .then((instance) => {\r\n-        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-        //     documentViewer.addEventListener('documentLoaded', () => {\r\n-        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-        //             PageNumber: 1,\r\n-        //             // values are in page coordinates with (0, 0) in the top left\r\n-        //             X: 100,\r\n-        //             Y: 150,\r\n-        //             Width: 200,\r\n-        //             Height: 50,\r\n-        //             Author: annotationManager.getCurrentUser()\r\n-        //         });\r\n-\r\n-        //         annotationManager.addAnnotation(rectangleAnnot);\r\n-        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n-        //     });\r\n-        // });\r\n-        .then(async instance => {\r\n-            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            docViewer.on('documentLoaded');\r\n-            docViewer.on('annotationsLoaded' );\r\n-    });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        console.log(WebViewer)\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-            viewer.current,\r\n-        )\r\n-        // .then((instance) => {\r\n-        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-        //     documentViewer.addEventListener('documentLoaded', () => {\r\n-        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-        //             PageNumber: 1,\r\n-        //             // values are in page coordinates with (0, 0) in the top left\r\n-        //             X: 100,\r\n-        //             Y: 150,\r\n-        //             Width: 200,\r\n-        //             Height: 50,\r\n-        //             Author: annotationManager.getCurrentUser()\r\n-        //         });\r\n-\r\n-        //         annotationManager.addAnnotation(rectangleAnnot);\r\n-        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n-        //     });\r\n-        // });\r\n-        .then(async instance => {\r\n-            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            docViewer.on('documentLoaded');\r\n-            docViewer.on('annotationsLoaded' );\r\n-    });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    // if using a class, equivalent of componentDidMount \r\n-    useEffect(() => {\r\n-        console.log(WebViewer)\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n-            },\r\n-            viewer.current,\r\n-        )\r\n-        // .then((instance) => {\r\n-        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-        //     documentViewer.addEventListener('documentLoaded', () => {\r\n-        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-        //             PageNumber: 1,\r\n-        //             // values are in page coordinates with (0, 0) in the top left\r\n-        //             X: 100,\r\n-        //             Y: 150,\r\n-        //             Width: 200,\r\n-        //             Height: 50,\r\n-        //             Author: annotationManager.getCurrentUser()\r\n-        //         });\r\n-\r\n-        //         annotationManager.addAnnotation(rectangleAnnot);\r\n-        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n-        //     });\r\n-        // });\r\n-        .then(async instance => {\r\n-            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            docViewer.on('documentLoaded');\r\n-            docViewer.on('annotationsLoaded' );\r\n-    });\r\n-    }, []);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713435797837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,48 +28,28 @@\n \r\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n-    // if using a class, equivalent of componentDidMount \r\n-    // useEffect(() => {\r\n-        console.log(viewer.current,)\r\n+    useEffect(() => {\r\n+        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n         WebViewer(\r\n             {\r\n                 path: '../../../../node_modules/@pdftron/webviewer',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,  // sign up to get a free trial key at https://dev.apryse.com\r\n+                initialDoc: url,\r\n             },\r\n             viewer.current,\r\n-        )\r\n-        // .then((instance) => {\r\n-        //     const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-        //     documentViewer.addEventListener('documentLoaded', () => {\r\n-        //         const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-        //             PageNumber: 1,\r\n-        //             // values are in page coordinates with (0, 0) in the top left\r\n-        //             X: 100,\r\n-        //             Y: 150,\r\n-        //             Width: 200,\r\n-        //             Height: 50,\r\n-        //             Author: annotationManager.getCurrentUser()\r\n-        //         });\r\n-\r\n-        //         annotationManager.addAnnotation(rectangleAnnot);\r\n-        //         // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        //         annotationManager.redrawAnnotation(rectangleAnnot);\r\n-        //     });\r\n-        // });\r\n-        .then(async instance => {\r\n-            const { Annotations, Tools, CoreControls, PDFNet, PartRetrievers, docViewer } = instance;\r\n+        ).then(async instance => {\r\n+            const { PDFNet, docViewer } = instance;\r\n             const annotManager = docViewer.getAnnotationManager();\r\n     \r\n             await PDFNet.initialize(); // Only needs to be initialized once\r\n     \r\n             docViewer.on('documentLoaded');\r\n             docViewer.on('annotationsLoaded' );\r\n-    });\r\n-    // }, []);\r\n+        });\r\n+    }, [url]);\r\n \r\n     return (\r\n         <div className=\"\">\r\n             <div className=\"header\">React sample</div>\r\n@@ -77,5 +57,5 @@\n         </div>\r\n     );\r\n };\r\n \r\n-export default Apryse;\n\\ No newline at end of file\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713436117261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n //   )\r\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n-\r\n+import \"../../../../node_modules/@pdftron/webviewer/public/ui/main.css\"\r\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1713436188531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n //   )\r\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n-import \"../../../../node_modules/@pdftron/webviewer/public/ui/main.css\"\r\n+import '@pdftron/webviewer/public/ui/main.css'; // Import the CSS file\r\n+\r\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1713436432714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n //   )\r\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n-import '@pdftron/webviewer/public/ui/main.css'; // Import the CSS file\r\n+import '@pdftron/webviewer/public/ui/chunks/'; // Import the CSS file\r\n \r\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n@@ -34,9 +34,9 @@\n         if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n \r\n         WebViewer(\r\n             {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                path: '../../../../node_modules/@pdftron/webviewer/public',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,\r\n             },\r\n             viewer.current,\r\n"
                },
                {
                    "date": 1713436486286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n //   )\r\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n-import '@pdftron/webviewer/public/ui/chunks/'; // Import the CSS file\r\n \r\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n"
                },
                {
                    "date": 1713438123952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,25 +29,22 @@\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n-        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+        if (!viewer.current) return;\r\n \r\n         WebViewer(\r\n             {\r\n-                path: '../../../../node_modules/@pdftron/webviewer/public',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                path: '@pdftron/webviewer',\r\n+                licenseKey: 'demo:1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb', // Replace 'YOUR_LICENSE_KEY' with your actual license key\r\n                 initialDoc: url,\r\n             },\r\n             viewer.current,\r\n-        ).then(async instance => {\r\n-            const { PDFNet, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            docViewer.on('documentLoaded');\r\n-            docViewer.on('annotationsLoaded' );\r\n+        ).then(instance => {\r\n+            const { docViewer } = instance;\r\n+            docViewer.on('documentLoaded', () => {\r\n+                console.log('Document loaded');\r\n+            });\r\n         });\r\n     }, [url]);\r\n \r\n     return (\r\n@@ -58,4 +55,5 @@\n     );\r\n };\r\n \r\n export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713438390459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    useEffect(() => {\r\n+        if (!viewer.current) return; // Check if viewer ref is not null\r\n+\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,\r\n+            },\r\n+            viewer.current,\r\n+        ).then(instance => {\r\n+            // Handle instance initialization\r\n+        });\r\n+\r\n+        // Cleanup function to remove WebViewer instance\r\n+        return () => {\r\n+            viewer.current.innerHTML = ''; // Clear HTML content of viewer element\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713438449732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    useEffect(() => {\r\n+        // Check if the viewer ref is not null and if the HTML content is empty\r\n+        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,\r\n+            },\r\n+            viewer.current,\r\n+        ).then(instance => {\r\n+            // Handle instance initialization\r\n+        });\r\n+\r\n+        // Cleanup function to remove WebViewer instance when component unmounts\r\n+        return () => {\r\n+            // Destroy the WebViewer instance\r\n+            // Make sure to check if the instance exists before calling destroy\r\n+            if (viewer.current && viewer.current.children.length > 0) {\r\n+                viewer.current.children[0].remove();\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713438775088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewer = useRef(null);\r\n+\r\n+    useEffect(() => {\r\n+        console.log(viewer.current,viewer.current.innerHTML.trim() !== '')\r\n+        // Check if the viewer ref is not null and if the HTML content is empty\r\n+        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+        WebViewer(\r\n+            {\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                initialDoc: url,\r\n+            },\r\n+            viewer.current,\r\n+        ).then(instance => {\r\n+            // Handle instance initialization\r\n+        });\r\n+\r\n+        // Cleanup function to remove WebViewer instance when component unmounts\r\n+        return () => {\r\n+            // Destroy the WebViewer instance\r\n+            // Make sure to check if the instance exists before calling destroy\r\n+            if (viewer.current && viewer.current.children.length > 0) {\r\n+                viewer.current.children[0].remove();\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n+            <div className=\"webviewer\" ref={viewer}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713438813763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,226 +29,33 @@\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n-        console.log(viewer.current,viewer.current.innerHTML.trim() !== '')\r\n-        // Check if the viewer ref is not null and if the HTML content is empty\r\n         if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,\r\n-            },\r\n-            viewer.current,\r\n-        ).then(instance => {\r\n-            // Handle instance initialization\r\n-        });\r\n \r\n-        // Cleanup function to remove WebViewer instance when component unmounts\r\n-        return () => {\r\n-            // Destroy the WebViewer instance\r\n-            // Make sure to check if the instance exists before calling destroy\r\n-            if (viewer.current && viewer.current.children.length > 0) {\r\n-                viewer.current.children[0].remove();\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    useEffect(() => {\r\n-        // Check if the viewer ref is not null and if the HTML content is empty\r\n-        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n-\r\n         WebViewer(\r\n             {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n+                path: '../../../../node_modules/@pdftron/webviewer/public',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,\r\n             },\r\n             viewer.current,\r\n-        ).then(instance => {\r\n-            // Handle instance initialization\r\n+        ).then(async instance => {\r\n+            const { PDFNet, docViewer } = instance;\r\n+            const annotManager = docViewer.getAnnotationManager();\r\n+    \r\n+            await PDFNet.initialize(); // Only needs to be initialized once\r\n+    \r\n+            docViewer.on('documentLoaded');\r\n+            docViewer.on('annotationsLoaded' );\r\n         });\r\n-\r\n-        // Cleanup function to remove WebViewer instance when component unmounts\r\n-        return () => {\r\n-            // Destroy the WebViewer instance\r\n-            // Make sure to check if the instance exists before calling destroy\r\n-            if (viewer.current && viewer.current.children.length > 0) {\r\n-                viewer.current.children[0].remove();\r\n-            }\r\n-        };\r\n     }, [url]);\r\n \r\n     return (\r\n         <div className=\"\">\r\n             <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n             <div className=\"webviewer\" ref={viewer}></div>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default Apryse;\r\n-\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    useEffect(() => {\r\n-        if (!viewer.current) return; // Check if viewer ref is not null\r\n-\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,\r\n-            },\r\n-            viewer.current,\r\n-        ).then(instance => {\r\n-            // Handle instance initialization\r\n-        });\r\n-\r\n-        // Cleanup function to remove WebViewer instance\r\n-        return () => {\r\n-            viewer.current.innerHTML = ''; // Clear HTML content of viewer element\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    useEffect(() => {\r\n-        if (!viewer.current) return;\r\n-\r\n-        WebViewer(\r\n-            {\r\n-                path: '@pdftron/webviewer',\r\n-                licenseKey: 'demo:1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb', // Replace 'YOUR_LICENSE_KEY' with your actual license key\r\n-                initialDoc: url,\r\n-            },\r\n-            viewer.current,\r\n-        ).then(instance => {\r\n-            const { docViewer } = instance;\r\n-            docViewer.on('documentLoaded', () => {\r\n-                console.log('Document loaded');\r\n-            });\r\n-        });\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n"
                },
                {
                    "date": 1713438911002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,33 +29,39 @@\n const Apryse = ({ url }) => {\r\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n+        // Check if the viewer ref is not null and if the HTML content is empty\r\n         if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n \r\n         WebViewer(\r\n             {\r\n-                path: '../../../../node_modules/@pdftron/webviewer/public',\r\n+                path: '../../../../node_modules/@pdftron/webviewer',\r\n                 licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                 initialDoc: url,\r\n             },\r\n             viewer.current,\r\n-        ).then(async instance => {\r\n-            const { PDFNet, docViewer } = instance;\r\n-            const annotManager = docViewer.getAnnotationManager();\r\n-    \r\n-            await PDFNet.initialize(); // Only needs to be initialized once\r\n-    \r\n-            docViewer.on('documentLoaded');\r\n-            docViewer.on('annotationsLoaded' );\r\n+        ).then(instance => {\r\n+            // Handle instance initialization\r\n         });\r\n+\r\n+        // Cleanup function to remove WebViewer instance when component unmounts\r\n+        return () => {\r\n+            // Destroy the WebViewer instance\r\n+            // Make sure to check if the instance exists before calling destroy\r\n+            if (viewer.current && viewer.current.children.length > 0) {\r\n+                viewer.current.children[0].remove();\r\n+            }\r\n+        };\r\n     }, [url]);\r\n \r\n     return (\r\n         <div className=\"\">\r\n             <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n             <div className=\"webviewer\" ref={viewer}></div>\r\n         </div>\r\n     );\r\n };\r\n \r\n export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713439255732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     const viewer = useRef(null);\r\n \r\n     useEffect(() => {\r\n         // Check if the viewer ref is not null and if the HTML content is empty\r\n-        if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+        // if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n \r\n         WebViewer(\r\n             {\r\n                 path: '../../../../node_modules/@pdftron/webviewer',\r\n"
                },
                {
                    "date": 1713439339472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewerRef = useRef(null);\r\n+\r\n+    useEffect(() => {\r\n+        const initializeWebViewer = async () => {\r\n+            if (!viewerRef.current) return;\r\n+\r\n+            // Check if WebViewer instance is already initialized\r\n+            if (viewerRef.current.instance) return;\r\n+\r\n+            try {\r\n+                const instance = await WebViewer({\r\n+                    path: '../../../../node_modules/@pdftron/webviewer',\r\n+                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                    initialDoc: url,\r\n+                }, viewerRef.current);\r\n+\r\n+                viewerRef.current.instance = instance;\r\n+            } catch (error) {\r\n+                console.error('Error initializing WebViewer:', error);\r\n+            }\r\n+        };\r\n+\r\n+        initializeWebViewer();\r\n+\r\n+        return () => {\r\n+            // Cleanup function to remove WebViewer instance when component unmounts\r\n+            if (viewerRef.current && viewerRef.current.instance) {\r\n+                viewerRef.current.instance.closeElements();\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n+            <div className=\"webviewer\" ref={viewerRef}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713439405790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,15 +36,16 @@\n             // Check if WebViewer instance is already initialized\r\n             if (viewerRef.current.instance) return;\r\n \r\n             try {\r\n-                const instance = await WebViewer({\r\n-                    path: '../../../../node_modules/@pdftron/webviewer',\r\n-                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                    initialDoc: url,\r\n-                }, viewerRef.current);\r\n+                // const instance = await WebViewer({\r\n+                //     path: '../../../../node_modules/@pdftron/webviewer',\r\n+                //     licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                //     initialDoc: url,\r\n+                // }, viewerRef.current);\r\n \r\n-                viewerRef.current.instance = instance;\r\n+                // viewerRef.current.instance = instance;\r\n+                console.log(url)\r\n             } catch (error) {\r\n                 console.error('Error initializing WebViewer:', error);\r\n             }\r\n         };\r\n@@ -69,71 +70,4 @@\n };\r\n \r\n export default Apryse;\r\n \r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewer = useRef(null);\r\n-\r\n-    useEffect(() => {\r\n-        // Check if the viewer ref is not null and if the HTML content is empty\r\n-        // if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n-\r\n-        WebViewer(\r\n-            {\r\n-                path: '../../../../node_modules/@pdftron/webviewer',\r\n-                licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                initialDoc: url,\r\n-            },\r\n-            viewer.current,\r\n-        ).then(instance => {\r\n-            // Handle instance initialization\r\n-        });\r\n-\r\n-        // Cleanup function to remove WebViewer instance when component unmounts\r\n-        return () => {\r\n-            // Destroy the WebViewer instance\r\n-            // Make sure to check if the instance exists before calling destroy\r\n-            if (viewer.current && viewer.current.children.length > 0) {\r\n-                viewer.current.children[0].remove();\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n-            <div className=\"webviewer\" ref={viewer}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n"
                },
                {
                    "date": 1713439461545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,25 +27,24 @@\n import WebViewer from '@pdftron/webviewer';\r\n \r\n const Apryse = ({ url }) => {\r\n     const viewerRef = useRef(null);\r\n-\r\n+    console.log(url)\r\n     useEffect(() => {\r\n         const initializeWebViewer = async () => {\r\n             if (!viewerRef.current) return;\r\n \r\n             // Check if WebViewer instance is already initialized\r\n             if (viewerRef.current.instance) return;\r\n \r\n             try {\r\n-                // const instance = await WebViewer({\r\n-                //     path: '../../../../node_modules/@pdftron/webviewer',\r\n-                //     licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                //     initialDoc: url,\r\n-                // }, viewerRef.current);\r\n+                const instance = await WebViewer({\r\n+                    path: '../../../../node_modules/@pdftron/webviewer',\r\n+                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0&ApiVersion=2.0\",\r\n+                }, viewerRef.current);\r\n \r\n-                // viewerRef.current.instance = instance;\r\n-                console.log(url)\r\n+                viewerRef.current.instance = instance;\r\n             } catch (error) {\r\n                 console.error('Error initializing WebViewer:', error);\r\n             }\r\n         };\r\n"
                },
                {
                    "date": 1713439697452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewerRef = useRef(null);\r\n+    console.log(url)\r\n+    useEffect(() => {\r\n+        const initializeWebViewer = async () => {\r\n+            if (!viewerRef.current) return;\r\n+\r\n+            // Check if WebViewer instance is already initialized\r\n+            if (viewerRef.current.instance) return;\r\n+\r\n+            try {\r\n+                const instance = await WebViewer({\r\n+                    path: '../../../../node_modules/@pdftron/webviewer/lib',\r\n+                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0&ApiVersion=2.0\",\r\n+                }, viewerRef.current);\r\n+\r\n+                viewerRef.current.instance = instance;\r\n+            } catch (error) {\r\n+                console.error('Error initializing WebViewer:', error);\r\n+            }\r\n+        };\r\n+\r\n+        initializeWebViewer();\r\n+\r\n+        return () => {\r\n+            // Cleanup function to remove WebViewer instance when component unmounts\r\n+            if (viewerRef.current && viewerRef.current.instance) {\r\n+                viewerRef.current.instance.closeElements();\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n+            <div className=\"webviewer\" ref={viewerRef}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713439741700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({ url }) => {\r\n+    const viewerRef = useRef(null);\r\n+    console.log(url)\r\n+    useEffect(() => {\r\n+        const initializeWebViewer = async () => {\r\n+            if (!viewerRef.current) return;\r\n+\r\n+            // Check if WebViewer instance is already initialized\r\n+            if (viewerRef.current.instance) return;\r\n+\r\n+            try {\r\n+                const instance = await WebViewer({\r\n+                    path: '../../../../node_modules/@pdftron/webviewer/lib',\r\n+                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0\",\r\n+                }, viewerRef.current);\r\n+\r\n+                viewerRef.current.instance = instance;\r\n+            } catch (error) {\r\n+                console.error('Error initializing WebViewer:', error);\r\n+            }\r\n+        };\r\n+\r\n+        initializeWebViewer();\r\n+\r\n+        return () => {\r\n+            // Cleanup function to remove WebViewer instance when component unmounts\r\n+            if (viewerRef.current && viewerRef.current.instance) {\r\n+                viewerRef.current.instance.closeElements();\r\n+            }\r\n+        };\r\n+    }, [url]);\r\n+\r\n+    return (\r\n+        <div className=\"\">\r\n+            <div className=\"header\">React sample</div>\r\n+            {/* Use the ref to attach the WebViewer container */}\r\n+            <div className=\"webviewer\" ref={viewerRef}></div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default Apryse;\r\n+\r\n"
                },
                {
                    "date": 1713439964845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             if (viewerRef.current.instance) return;\r\n \r\n             try {\r\n                 const instance = await WebViewer({\r\n-                    path: '../../../../node_modules/@pdftron/webviewer/lib',\r\n+                    path: '@pdftron/webviewer/lib',\r\n                     licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                     initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0\",\r\n                 }, viewerRef.current);\r\n \r\n@@ -69,148 +69,4 @@\n };\r\n \r\n export default Apryse;\r\n \r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewerRef = useRef(null);\r\n-    console.log(url)\r\n-    useEffect(() => {\r\n-        const initializeWebViewer = async () => {\r\n-            if (!viewerRef.current) return;\r\n-\r\n-            // Check if WebViewer instance is already initialized\r\n-            if (viewerRef.current.instance) return;\r\n-\r\n-            try {\r\n-                const instance = await WebViewer({\r\n-                    path: '../../../../node_modules/@pdftron/webviewer/lib',\r\n-                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0&ApiVersion=2.0\",\r\n-                }, viewerRef.current);\r\n-\r\n-                viewerRef.current.instance = instance;\r\n-            } catch (error) {\r\n-                console.error('Error initializing WebViewer:', error);\r\n-            }\r\n-        };\r\n-\r\n-        initializeWebViewer();\r\n-\r\n-        return () => {\r\n-            // Cleanup function to remove WebViewer instance when component unmounts\r\n-            if (viewerRef.current && viewerRef.current.instance) {\r\n-                viewerRef.current.instance.closeElements();\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n-            <div className=\"webviewer\" ref={viewerRef}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = ({ url }) => {\r\n-    const viewerRef = useRef(null);\r\n-    console.log(url)\r\n-    useEffect(() => {\r\n-        const initializeWebViewer = async () => {\r\n-            if (!viewerRef.current) return;\r\n-\r\n-            // Check if WebViewer instance is already initialized\r\n-            if (viewerRef.current.instance) return;\r\n-\r\n-            try {\r\n-                const instance = await WebViewer({\r\n-                    path: '../../../../node_modules/@pdftron/webviewer',\r\n-                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0&ApiVersion=2.0\",\r\n-                }, viewerRef.current);\r\n-\r\n-                viewerRef.current.instance = instance;\r\n-            } catch (error) {\r\n-                console.error('Error initializing WebViewer:', error);\r\n-            }\r\n-        };\r\n-\r\n-        initializeWebViewer();\r\n-\r\n-        return () => {\r\n-            // Cleanup function to remove WebViewer instance when component unmounts\r\n-            if (viewerRef.current && viewerRef.current.instance) {\r\n-                viewerRef.current.instance.closeElements();\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n-            <div className=\"webviewer\" ref={viewerRef}></div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default Apryse;\r\n-\r\n"
                },
                {
                    "date": 1713440028878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             if (viewerRef.current.instance) return;\r\n \r\n             try {\r\n                 const instance = await WebViewer({\r\n-                    path: '@pdftron/webviewer/lib',\r\n+                    // path: '@pdftron/webviewer/lib',\r\n                     licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                     initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0\",\r\n                 }, viewerRef.current);\r\n \r\n"
                },
                {
                    "date": 1713440163595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n             if (viewerRef.current.instance) return;\r\n \r\n             try {\r\n                 const instance = await WebViewer({\r\n-                    // path: '@pdftron/webviewer/lib',\r\n+                    path: '../../../../node_modules/@pdftron/webviewer',\r\n                     licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n                     initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0\",\r\n                 }, viewerRef.current);\r\n \r\n"
                },
                {
                    "date": 1713440588477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,48 +25,46 @@\n // }\r\n import React, { useRef, useEffect } from 'react';\r\n import WebViewer from '@pdftron/webviewer';\r\n \r\n-const Apryse = ({ url }) => {\r\n-    const viewerRef = useRef(null);\r\n-    console.log(url)\r\n-    useEffect(() => {\r\n-        const initializeWebViewer = async () => {\r\n-            if (!viewerRef.current) return;\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n \r\n-            // Check if WebViewer instance is already initialized\r\n-            if (viewerRef.current.instance) return;\r\n+  // if using a class, equivalent of componentDidMount \r\n+  useEffect(() => {\r\n+    WebViewer(\r\n+      {\r\n+        path: '/webviewer/lib',\r\n+        initialDoc: '/files/PDFTRON_about.pdf',\r\n+        licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'  // sign up to get a free trial key at https://dev.apryse.com\r\n+      },\r\n+      viewer.current,\r\n+    ).then((instance) => {\r\n+      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n \r\n-            try {\r\n-                const instance = await WebViewer({\r\n-                    path: '../../../../node_modules/@pdftron/webviewer',\r\n-                    licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-                    initialDoc: \"https://canpathways.sharepoint.com/sites/canpathwaysjobs/_layouts/15/download.aspx?UniqueId=85dac02f-8c2c-4fe6-b7c6-0d80138f696c&Translate=false&tempauth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcHBfZGlzcGxheW5hbWUiOiJHcmFwaCBQSFAgcXVpY2sgc3RhcnQiLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvY2FucGF0aHdheXMuc2hhcmVwb2ludC5jb21ANDYzOTJiN2QtM2ZhNy00Y2M4LWI5ZGQtYjA1YTFkZjllNzQ1IiwiY2lkIjoiZXBzMUp1bytWRTJnYjZjS083UC9aUT09IiwiZW5kcG9pbnR1cmwiOiJzeHhKUkVJbXRYVm1nRDV2ZHdhNXdzcGdicUdTL2hFS3BrQm9RNGx6NjFZPSIsImVuZHBvaW50dXJsTGVuZ3RoIjoiMTQ0IiwiZXhwIjoiMTcxMzQ0MzA0MSIsImlwYWRkciI6IjIwLjE5MC4xNzUuODgiLCJpc2xvb3BiYWNrIjoiVHJ1ZSIsImlzcyI6IjAwMDAwMDAzLTAwMDAtMGZmMS1jZTAwLTAwMDAwMDAwMDAwMCIsIm5hbWVpZCI6ImQxMDFjOGFkLWUyNjMtNGMwYS04ZGIzLTNiYTJhZDFmOGVhNkA0NjM5MmI3ZC0zZmE3LTRjYzgtYjlkZC1iMDVhMWRmOWU3NDUiLCJuYmYiOiIxNzEzNDM5NDQxIiwicm9sZXMiOiJhbGxzaXRlcy53cml0ZSBhbGxmaWxlcy53cml0ZSBhbGxmaWxlcy5yZWFkIGFsbHNpdGVzLmZ1bGxjb250cm9sIiwic2l0ZWlkIjoiWXprNE1UUTRPRGt0TkRaaU1TMDBOVFU0TFRsbVlUa3ROamMxTWpZeVpUVXlZV0ZrIiwidHQiOiIxIiwidmVyIjoiaGFzaGVkcHJvb2Z0b2tlbiJ9.0RcE0L1IgRnhuqBeX-exCTkvHA5EG6QQCY3sKD8cUv0\",\r\n-                }, viewerRef.current);\r\n+      documentViewer.addEventListener('documentLoaded', () => {\r\n+        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+          PageNumber: 1,\r\n+          // values are in page coordinates with (0, 0) in the top left\r\n+          X: 100,\r\n+          Y: 150,\r\n+          Width: 200,\r\n+          Height: 50,\r\n+          Author: annotationManager.getCurrentUser()\r\n+        });\r\n \r\n-                viewerRef.current.instance = instance;\r\n-            } catch (error) {\r\n-                console.error('Error initializing WebViewer:', error);\r\n-            }\r\n-        };\r\n+        annotationManager.addAnnotation(rectangleAnnot);\r\n+        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        annotationManager.redrawAnnotation(rectangleAnnot);\r\n+      });\r\n+    });\r\n+  }, []);\r\n \r\n-        initializeWebViewer();\r\n-\r\n-        return () => {\r\n-            // Cleanup function to remove WebViewer instance when component unmounts\r\n-            if (viewerRef.current && viewerRef.current.instance) {\r\n-                viewerRef.current.instance.closeElements();\r\n-            }\r\n-        };\r\n-    }, [url]);\r\n-\r\n-    return (\r\n-        <div className=\"\">\r\n-            <div className=\"header\">React sample</div>\r\n-            {/* Use the ref to attach the WebViewer container */}\r\n-            <div className=\"webviewer\" ref={viewerRef}></div>\r\n-        </div>\r\n-    );\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n };\r\n \r\n-export default Apryse;\r\n-\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713441695759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, {useState, useRef, useEffect } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n+const [instacnce, setInstacnce] = useState()\r\n+console.log(\"object\",instacnce)\r\n+  // if using a class, equivalent of componentDidMount \r\n+  useEffect(() => {\r\n+    WebViewer(\r\n+      {\r\n+        path: '/webviewer/lib',\r\n+        initialDoc: '/files/PDFTRON_about.pdf',\r\n+        licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'  // sign up to get a free trial key at https://dev.apryse.com\r\n+      },\r\n+      viewer.current,\r\n+    ).then((instance) => {\r\n+        setInstacnce(instance)\r\n+      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n+\r\n+      documentViewer.addEventListener('documentLoaded', () => {\r\n+        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n+          PageNumber: 1,\r\n+          // values are in page coordinates with (0, 0) in the top left\r\n+          X: 100,\r\n+          Y: 150,\r\n+          Width: 200,\r\n+          Height: 50,\r\n+          Author: annotationManager.getCurrentUser()\r\n+        });\r\n+\r\n+        annotationManager.addAnnotation(rectangleAnnot);\r\n+        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n+        annotationManager.redrawAnnotation(rectangleAnnot);\r\n+      });\r\n+    });\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713441812463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect, useState } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n+  const [instance, setInstance] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const initializeWebViewer = async () => {\r\n+      if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n+      try {\r\n+        const instance = await WebViewer({\r\n+          path: '/webviewer/lib', // Corrected path for WebViewer resources\r\n+          initialDoc: '/files/PDFTRON_about.pdf',\r\n+          licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n+        }, viewer.current);\r\n+\r\n+        setInstance(instance);\r\n+      } catch (error) {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      }\r\n+    };\r\n+\r\n+    initializeWebViewer();\r\n+\r\n+    return () => {\r\n+      if (instance) {\r\n+        instance.closeElements(); // Close the WebViewer instance when component unmounts\r\n+      }\r\n+    };\r\n+  }, [instance]);\r\n+\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713441904682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n       if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n \r\n       try {\r\n         const instance = await WebViewer({\r\n-          path: '/webviewer/lib', // Corrected path for WebViewer resources\r\n-          initialDoc: '/files/PDFTRON_about.pdf',\r\n+          path: '../../../../node_modules/@pdftron/webviewer/lib', // Corrected path for WebViewer resources\r\n+          initialDoc: url,\r\n           licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n         }, viewer.current);\r\n \r\n         setInstance(instance);\r\n@@ -64,146 +64,4 @@\n   );\r\n };\r\n \r\n export default Apryse;\r\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, {useState, useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = () => {\r\n-  const viewer = useRef(null);\r\n-const [instacnce, setInstacnce] = useState()\r\n-console.log(\"object\",instacnce)\r\n-  // if using a class, equivalent of componentDidMount \r\n-  useEffect(() => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '/webviewer/lib',\r\n-        initialDoc: '/files/PDFTRON_about.pdf',\r\n-        licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'  // sign up to get a free trial key at https://dev.apryse.com\r\n-      },\r\n-      viewer.current,\r\n-    ).then((instance) => {\r\n-        setInstacnce(instance)\r\n-      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-      documentViewer.addEventListener('documentLoaded', () => {\r\n-        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-          PageNumber: 1,\r\n-          // values are in page coordinates with (0, 0) in the top left\r\n-          X: 100,\r\n-          Y: 150,\r\n-          Width: 200,\r\n-          Height: 50,\r\n-          Author: annotationManager.getCurrentUser()\r\n-        });\r\n-\r\n-        annotationManager.addAnnotation(rectangleAnnot);\r\n-        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        annotationManager.redrawAnnotation(rectangleAnnot);\r\n-      });\r\n-    });\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"App\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer}></div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\n-// import React,{ useEffect ,useRef} from \"react\";\r\n-// import WebViewer from '@pdftron/webviewer'\r\n-// export default function Apryse({url,data}) {\r\n-//     const viewer = useRef(null);\r\n-//     useEffect(() => {\r\n-//         WebViewer(\r\n-//           {\r\n-//             path: '../../../../node_modules/@pdftron/webviewer',\r\n-//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n-//             initialDoc: url,\r\n-//           },\r\n-//           viewer.current,\r\n-//         ).then((instance) => {\r\n-//             const { documentViewer } = instance.Core;\r\n-//             // you can now call WebViewer APIs here...\r\n-//           });\r\n-//       }, []);\r\n-\r\n-//   return (\r\n-//     <div className=\"MyComponent\">\r\n-//       <div className=\"header\">React sample</div>\r\n-//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n-//     </div>\r\n-//   )\r\n-// }\r\n-import React, { useRef, useEffect } from 'react';\r\n-import WebViewer from '@pdftron/webviewer';\r\n-\r\n-const Apryse = () => {\r\n-  const viewer = useRef(null);\r\n-\r\n-  // if using a class, equivalent of componentDidMount \r\n-  useEffect(() => {\r\n-    WebViewer(\r\n-      {\r\n-        path: '/webviewer/lib',\r\n-        initialDoc: '/files/PDFTRON_about.pdf',\r\n-        licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'  // sign up to get a free trial key at https://dev.apryse.com\r\n-      },\r\n-      viewer.current,\r\n-    ).then((instance) => {\r\n-      const { documentViewer, annotationManager, Annotations } = instance.Core;\r\n-\r\n-      documentViewer.addEventListener('documentLoaded', () => {\r\n-        const rectangleAnnot = new Annotations.RectangleAnnotation({\r\n-          PageNumber: 1,\r\n-          // values are in page coordinates with (0, 0) in the top left\r\n-          X: 100,\r\n-          Y: 150,\r\n-          Width: 200,\r\n-          Height: 50,\r\n-          Author: annotationManager.getCurrentUser()\r\n-        });\r\n-\r\n-        annotationManager.addAnnotation(rectangleAnnot);\r\n-        // need to draw the annotation otherwise it won't show up until the page is refreshed\r\n-        annotationManager.redrawAnnotation(rectangleAnnot);\r\n-      });\r\n-    });\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div className=\"App\">\r\n-      <div className=\"header\">React sample</div>\r\n-      <div className=\"webviewer\" ref={viewer}></div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default Apryse;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1713442029284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n       if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n \r\n       try {\r\n         const instance = await WebViewer({\r\n-          path: '../../../../node_modules/@pdftron/webviewer/lib', // Corrected path for WebViewer resources\r\n-          initialDoc: url,\r\n+          path: '/node_modules/@pdftron/webviewer', // Corrected path to the WebViewer package\r\n+          initialDoc: '/files/PDFTRON_about.pdf',\r\n           licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n         }, viewer.current);\r\n \r\n         setInstance(instance);\r\n@@ -47,9 +47,9 @@\n       }\r\n     };\r\n \r\n     initializeWebViewer();\r\n-\r\n+console.log(instance)\r\n     return () => {\r\n       if (instance) {\r\n         instance.closeElements(); // Close the WebViewer instance when component unmounts\r\n       }\r\n"
                },
                {
                    "date": 1713442183042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect, useState } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = () => {\r\n+  const viewer = useRef(null);\r\n+  const [instance, setInstance] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const initializeWebViewer = async () => {\r\n+      if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n+      try {\r\n+        const instance = await WebViewer({\r\n+          path: '/node_modules/@pdftron/webviewer', // Corrected path to the WebViewer package\r\n+          initialDoc: '/files/PDFTRON_about.pdf',\r\n+          licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n+        }, viewer.current);\r\n+\r\n+        setInstance(instance);\r\n+      } catch (error) {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      }\r\n+    };\r\n+\r\n+    initializeWebViewer();\r\n+\r\n+    return () => {\r\n+      if (instance) {\r\n+        instance.closeElements(); // Close the WebViewer instance when component unmounts\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713442198666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect, useState } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({url}) => {\r\n+  const viewer = useRef(null);\r\n+  const [instance, setInstance] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const initializeWebViewer = async () => {\r\n+      if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n+      try {\r\n+        const instance = await WebViewer({\r\n+          path: '/node_modules/@pdftron/webviewer', // Corrected path to the WebViewer package\r\n+          initialDoc: url,\r\n+          licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n+        }, viewer.current);\r\n+\r\n+        setInstance(instance);\r\n+      } catch (error) {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      }\r\n+    };\r\n+\r\n+    initializeWebViewer();\r\n+\r\n+    return () => {\r\n+      if (instance) {\r\n+        instance.closeElements(); // Close the WebViewer instance when component unmounts\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                },
                {
                    "date": 1713442215787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+// import React,{ useEffect ,useRef} from \"react\";\r\n+// import WebViewer from '@pdftron/webviewer'\r\n+// export default function Apryse({url,data}) {\r\n+//     const viewer = useRef(null);\r\n+//     useEffect(() => {\r\n+//         WebViewer(\r\n+//           {\r\n+//             path: '../../../../node_modules/@pdftron/webviewer',\r\n+//             licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n+//             initialDoc: url,\r\n+//           },\r\n+//           viewer.current,\r\n+//         ).then((instance) => {\r\n+//             const { documentViewer } = instance.Core;\r\n+//             // you can now call WebViewer APIs here...\r\n+//           });\r\n+//       }, []);\r\n+\r\n+//   return (\r\n+//     <div className=\"MyComponent\">\r\n+//       <div className=\"header\">React sample</div>\r\n+//       <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n+//     </div>\r\n+//   )\r\n+// }\r\n+import React, { useRef, useEffect, useState } from 'react';\r\n+import WebViewer from '@pdftron/webviewer';\r\n+\r\n+const Apryse = ({url}) => {\r\n+  const viewer = useRef(null);\r\n+  const [instance, setInstance] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    const initializeWebViewer = async () => {\r\n+      if (!viewer.current || viewer.current.innerHTML.trim() !== '') return;\r\n+\r\n+      try {\r\n+        const instance = await WebViewer({\r\n+          path: '/node_modules/@pdftron/webviewer', // Corrected path to the WebViewer package\r\n+          initialDoc: url,\r\n+          licenseKey: '7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb'\r\n+        }, viewer.current);\r\n+console.log(instance)\r\n+        setInstance(instance);\r\n+      } catch (error) {\r\n+        console.error('Error initializing WebViewer:', error);\r\n+      }\r\n+    };\r\n+\r\n+    initializeWebViewer();\r\n+\r\n+    return () => {\r\n+      if (instance) {\r\n+        instance.closeElements(); // Close the WebViewer instance when component unmounts\r\n+      }\r\n+    };\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div className=\"App\">\r\n+      <div className=\"header\">React sample</div>\r\n+      <div className=\"webviewer\" ref={viewer}></div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Apryse;\r\n"
                }
            ],
            "date": 1713422582690,
            "name": "Commit-0",
            "content": "import React,{ useEffect } from \"react\";\r\nimport WebViewer from '@pdftron/webviewer'\r\nexport default function Apryse({url,data}) {\r\n    const viewer = useRef(null);\r\n    useEffect(() => {\r\n        WebViewer(\r\n          {\r\n            path: '/webviewer/lib',\r\n            licenseKey: '1713422319752:7fef935203000000006fb499fddf00798584f9e558f7afc28444d3c1fb',\r\n            initialDoc: url,\r\n          },\r\n          viewer.current,\r\n        ).then((instance) => {\r\n            const { documentViewer } = instance.Core;\r\n            // you can now call WebViewer APIs here...\r\n          });\r\n      }, []);\r\n    \r\n  return (\r\n    <div className=\"MyComponent\">\r\n      <div className=\"header\">React sample</div>\r\n      <div className=\"webviewer\" ref={viewer} style={{height: \"100vh\"}}></div>\r\n    </div>\r\n  )\r\n}"
        }
    ]
}