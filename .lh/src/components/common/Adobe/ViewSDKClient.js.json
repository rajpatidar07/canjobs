{
    "sourceFile": "src/components/common/Adobe/ViewSDKClient.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1712911622327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712912666884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+class ViewSDKClient {\r\n+    constructor() {\r\n+    this.readyPromise = new Promise((resolve) => {\r\n+    if (window.AdobeDC) {\r\n+    resolve();\r\n+    } else {\r\n+    document.addEventListener(\"adobe_dc_view_sdk.ready\", () => {\r\n+    resolve();\r\n+    });\r\n+    }\r\n+    });\r\n+    this.adobeDCView = undefined;\r\n+    }\r\n+    ready() {\r\n+    return this.readyPromise;\r\n+    }\r\n+    previewFile(divId, viewerConfig, url) {\r\n+    const config = {\r\n+    clientId: \"2c4accab69ff4244ac358ef34d13d747\",\r\n+    };\r\n+    if (divId) {\r\n+    config.divId = divId;\r\n+    }\r\n+    this.adobeDCView = new window.AdobeDC.View(config);\r\n+    const previewFilePromise = this.adobeDCView.previewFile({\r\n+    content: {\r\n+    location: {\r\n+    url: url,\r\n+    },\r\n+    },\r\n+    metaData: {\r\n+    fileName: \"Menu.pdf\",\r\n+    id: \"6d07d124-ac85-43b3-a867-36930f502ac6\",\r\n+    }\r\n+    }, viewerConfig);\r\n+    return previewFilePromise;\r\n+    }\r\n+    previewFileUsingFilePromise(divId, filePromise, fileName) {\r\n+    this.adobeDCView = new window.AdobeDC.View({\r\n+    clientId: \"2c4accab69ff4244ac358ef34d13d747\",\r\n+    divId,\r\n+    });\r\n+    this.adobeDCView.previewFile({\r\n+    content: {\r\n+    promise: filePromise,\r\n+    },\r\n+    metaData: {\r\n+    fileName: fileName\r\n+    }\r\n+    }, {});\r\n+    }\r\n+    registerSaveApiHandler() {\r\n+    const saveApiHandler = (metaData, content, options) => {\r\n+    console.log(metaData, content, options);\r\n+    return new Promise(resolve => {\r\n+    setTimeout(() => {\r\n+    const response = {\r\n+    code: window.AdobeDC.View.Enum.ApiResponseCode.SUCCESS,\r\n+    data: {\r\n+    metaData: Object.assign(metaData, {updatedAt: new Date().getTime()})\r\n+    },\r\n+    };\r\n+    resolve(response);\r\n+    }, 2000);\r\n+    });\r\n+    };\r\n+    this.adobeDCView.registerCallback(\r\n+    window.AdobeDC.View.Enum.CallbackType.SAVE_API,\r\n+    saveApiHandler,\r\n+    {}\r\n+    );\r\n+    }\r\n+    registerEventsHandler() {\r\n+    this.adobeDCView.registerCallback(\r\n+    window.AdobeDC.View.Enum.CallbackType.EVENT_LISTENER,\r\n+    event => {\r\n+    console.log(event);\r\n+    },\r\n+    {\r\n+    enablePDFAnalytics: true,\r\n+    }\r\n+    );\r\n+    }\r\n+    }\r\n+    export default ViewSDKClient;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1712913141194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     return this.readyPromise;\r\n     }\r\n     previewFile(divId, viewerConfig, url) {\r\n     const config = {\r\n-    clientId: \"2c4accab69ff4244ac358ef34d13d747\",\r\n+    clientId: \"d9b36f468d7a4e4e8b275f13728f1132\",\r\n     };\r\n     if (divId) {\r\n     config.divId = divId;\r\n     }\r\n@@ -36,9 +36,9 @@\n     return previewFilePromise;\r\n     }\r\n     previewFileUsingFilePromise(divId, filePromise, fileName) {\r\n     this.adobeDCView = new window.AdobeDC.View({\r\n-    clientId: \"2c4accab69ff4244ac358ef34d13d747\",\r\n+    clientId: \"d9b36f468d7a4e4e8b275f13728f1132\",\r\n     divId,\r\n     });\r\n     this.adobeDCView.previewFile({\r\n     content: {\r\n@@ -81,90 +81,5 @@\n     }\r\n     );\r\n     }\r\n     }\r\n-    export default ViewSDKClient;\n-class ViewSDKClient {\r\n-    constructor() {\r\n-    this.readyPromise = new Promise((resolve) => {\r\n-    if (window.AdobeDC) {\r\n-    resolve();\r\n-    } else {\r\n-    document.addEventListener(\"adobe_dc_view_sdk.ready\", () => {\r\n-    resolve();\r\n-    });\r\n-    }\r\n-    });\r\n-    this.adobeDCView = undefined;\r\n-    }\r\n-    ready() {\r\n-    return this.readyPromise;\r\n-    }\r\n-    previewFile(divId, viewerConfig, url) {\r\n-    const config = {\r\n-    clientId: \"5bfcbeb2d14c49bf95f73dc0eed7f390\",\r\n-    };\r\n-    if (divId) {\r\n-    config.divId = divId;\r\n-    }\r\n-    this.adobeDCView = new window.AdobeDC.View(config);\r\n-    const previewFilePromise = this.adobeDCView.previewFile({\r\n-    content: {\r\n-    location: {\r\n-    url: url,\r\n-    },\r\n-    },\r\n-    metaData: {\r\n-    fileName: \"Menu.pdf\",\r\n-    id: \"6d07d124-ac85-43b3-a867-36930f502ac6\",\r\n-    }\r\n-    }, viewerConfig);\r\n-    return previewFilePromise;\r\n-    }\r\n-    previewFileUsingFilePromise(divId, filePromise, fileName) {\r\n-    this.adobeDCView = new window.AdobeDC.View({\r\n-    clientId: \"5bfcbeb2d14c49bf95f73dc0eed7f390\",\r\n-    divId,\r\n-    });\r\n-    this.adobeDCView.previewFile({\r\n-    content: {\r\n-    promise: filePromise,\r\n-    },\r\n-    metaData: {\r\n-    fileName: fileName\r\n-    }\r\n-    }, {});\r\n-    }\r\n-    registerSaveApiHandler() {\r\n-    const saveApiHandler = (metaData, content, options) => {\r\n-    console.log(metaData, content, options);\r\n-    return new Promise(resolve => {\r\n-    setTimeout(() => {\r\n-    const response = {\r\n-    code: window.AdobeDC.View.Enum.ApiResponseCode.SUCCESS,\r\n-    data: {\r\n-    metaData: Object.assign(metaData, {updatedAt: new Date().getTime()})\r\n-    },\r\n-    };\r\n-    resolve(response);\r\n-    }, 2000);\r\n-    });\r\n-    };\r\n-    this.adobeDCView.registerCallback(\r\n-    window.AdobeDC.View.Enum.CallbackType.SAVE_API,\r\n-    saveApiHandler,\r\n-    {}\r\n-    );\r\n-    }\r\n-    registerEventsHandler() {\r\n-    this.adobeDCView.registerCallback(\r\n-    window.AdobeDC.View.Enum.CallbackType.EVENT_LISTENER,\r\n-    event => {\r\n-    console.log(event);\r\n-    },\r\n-    {\r\n-    enablePDFAnalytics: true,\r\n-    }\r\n-    );\r\n-    }\r\n-    }\r\n     export default ViewSDKClient;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1712911622327,
            "name": "Commit-0",
            "content": "class ViewSDKClient {\r\n    constructor() {\r\n    this.readyPromise = new Promise((resolve) => {\r\n    if (window.AdobeDC) {\r\n    resolve();\r\n    } else {\r\n    document.addEventListener(\"adobe_dc_view_sdk.ready\", () => {\r\n    resolve();\r\n    });\r\n    }\r\n    });\r\n    this.adobeDCView = undefined;\r\n    }\r\n    ready() {\r\n    return this.readyPromise;\r\n    }\r\n    previewFile(divId, viewerConfig, url) {\r\n    const config = {\r\n    clientId: \"5bfcbeb2d14c49bf95f73dc0eed7f390\",\r\n    };\r\n    if (divId) {\r\n    config.divId = divId;\r\n    }\r\n    this.adobeDCView = new window.AdobeDC.View(config);\r\n    const previewFilePromise = this.adobeDCView.previewFile({\r\n    content: {\r\n    location: {\r\n    url: url,\r\n    },\r\n    },\r\n    metaData: {\r\n    fileName: \"Menu.pdf\",\r\n    id: \"6d07d124-ac85-43b3-a867-36930f502ac6\",\r\n    }\r\n    }, viewerConfig);\r\n    return previewFilePromise;\r\n    }\r\n    previewFileUsingFilePromise(divId, filePromise, fileName) {\r\n    this.adobeDCView = new window.AdobeDC.View({\r\n    clientId: \"5bfcbeb2d14c49bf95f73dc0eed7f390\",\r\n    divId,\r\n    });\r\n    this.adobeDCView.previewFile({\r\n    content: {\r\n    promise: filePromise,\r\n    },\r\n    metaData: {\r\n    fileName: fileName\r\n    }\r\n    }, {});\r\n    }\r\n    registerSaveApiHandler() {\r\n    const saveApiHandler = (metaData, content, options) => {\r\n    console.log(metaData, content, options);\r\n    return new Promise(resolve => {\r\n    setTimeout(() => {\r\n    const response = {\r\n    code: window.AdobeDC.View.Enum.ApiResponseCode.SUCCESS,\r\n    data: {\r\n    metaData: Object.assign(metaData, {updatedAt: new Date().getTime()})\r\n    },\r\n    };\r\n    resolve(response);\r\n    }, 2000);\r\n    });\r\n    };\r\n    this.adobeDCView.registerCallback(\r\n    window.AdobeDC.View.Enum.CallbackType.SAVE_API,\r\n    saveApiHandler,\r\n    {}\r\n    );\r\n    }\r\n    registerEventsHandler() {\r\n    this.adobeDCView.registerCallback(\r\n    window.AdobeDC.View.Enum.CallbackType.EVENT_LISTENER,\r\n    event => {\r\n    console.log(event);\r\n    },\r\n    {\r\n    enablePDFAnalytics: true,\r\n    }\r\n    );\r\n    }\r\n    }\r\n    export default ViewSDKClient;"
        }
    ]
}