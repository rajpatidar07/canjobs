{
    "sourceFile": "src/components/common/InterviewHistoryTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876934108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876934108,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Loader from './loader';\r\nimport { getActivityLog } from \"../../api/api\"\r\nimport Pagination from './pagination';\r\nconst InterviewHistoryTable = ({ employee_id }) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    // let [showAddInterviewModal, setShowAddInterviewModal] = useState(false);\r\n    const [interviewHistoryData, setInterviewHistoryData] = useState([]);\r\n    // const [jobId, setJobId] = useState();\r\n    // let [resData, setResData] = useState(\"\");\r\n    // let [apiCall, setApiCall] = useState(false);\r\n\r\n    /*Pagination states */\r\n    const [totalData, setTotalData] = useState(\"\");\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    const [recordsPerPage] = useState(10);\r\n    /*Shorting states */\r\n    const [columnName,/* setcolumnName*/] = useState(\"id\");\r\n    const [sortOrder,/* setSortOrder*/] = useState(\"DESC\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    //   /* Function to get the intervew data*/\r\n    const InterviewData = async () => {\r\n        try {\r\n            const userData = await getActivityLog(\r\n                currentPage,\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                \"\",\r\n                recordsPerPage,\r\n                employee_id,\r\n                \"employee\",\r\n                \"interviewHistory\",\r\n                sortOrder,\r\n                columnName\r\n            );\r\n            if (userData.data.data.length === 0) {\r\n                setInterviewHistoryData([]);\r\n                setIsLoading(false);\r\n            } else {\r\n                setInterviewHistoryData(userData.data.data);\r\n                setTotalData(userData.total_rows);\r\n                setIsLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    /*Render function to get the interview*/\r\n    useEffect(() => {\r\n        InterviewData();\r\n        // eslint-disable-next-line\r\n    }, [\r\n        columnName,\r\n        recordsPerPage,\r\n        sortOrder,\r\n        currentPage,\r\n    ]);\r\n\r\n    /* Function to show the single data to update interview*/\r\n    // const editInterview = (e) => {\r\n    //   setShowAddInterviewModal(true);\r\n    //   setJobId(e.job_id);\r\n    //   setResData(e);\r\n    // };\r\n\r\n    /*Pagination Calculation */\r\n    const nPages = Math.ceil(totalData / recordsPerPage);\r\n\r\n    /*Sorting Function */\r\n    // const handleSort = (columnName) => {\r\n    //     setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\r\n    //     setcolumnName(columnName);\r\n    // };\r\n    /* Function to replace the _ and correct the document type */\r\n    // const textReplaceFunction = (e) => {\r\n    //     if (e && e.includes(\"_\")) {\r\n    //         let new_text = e.replaceAll(\"_\", \" \");\r\n    //         return new_text;\r\n    //     } else {\r\n    //         return e;\r\n    //     }\r\n    // };\r\n    return (\r\n        <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-8 px-2 \">\r\n            <div className=\"table-responsive main_table_div\">\r\n                {isLoading ? (\r\n                    <Loader />\r\n                ) :\r\n                    <table className=\"table table-striped main_data_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th scope=\"col\" className=\"border-0 font-size-4 font-weight-normal\">\r\n                                    <Link\r\n                                        // to={\"\"}\r\n                                        // onClick={() => {\r\n                                        //     handleSort(\"id\");\r\n                                        //     setCurrentPage(1);\r\n                                        // }}\r\n                                        className=\"text-gray\"\r\n                                    // title=\"Sort by id\"\r\n                                    >   ID\r\n                                    </Link>\r\n                                </th> */}\r\n                                <th scope=\"col\" className=\"border-0 font-size-4 font-weight-normal\">\r\n                                    <Link\r\n                                        // to={\"\"}\r\n                                        // onClick={() => {\r\n                                        //     handleSort(\"created_at\");\r\n                                        //     setCurrentPage(1);\r\n                                        // }}\r\n                                        className=\"text-gray\"\r\n                                    // title=\"Sort by Time\"\r\n                                    >  Scheduled By\r\n                                    </Link>\r\n                                </th>\r\n                                <th scope=\"col\" className=\"border-0 font-size-4 font-weight-normal\">\r\n                                    Interview Status\r\n                                </th>\r\n                                <th scope=\"col\" className=\"border-0 font-size-4 font-weight-normal\">\r\n                                    Date\r\n                                </th>\r\n                                <th scope=\"col\" className=\"border-0 font-size-4 font-weight-normal\">\r\n                                    Message\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {interviewHistoryData.length === 0 ?\r\n                                <tr >\r\n                                    <td colSpan={7} className=\"bg-white text-center\">No data found</td>\r\n                                </tr> :\r\n                                interviewHistoryData.map(interview => (\r\n                                    <tr key={interview.id}>\r\n                                        {/* <td>{interview.id}</td> */}\r\n                                        <td>{\r\n                                            <div className=\"timeline_date d-flex flex-column\">\r\n                                                <b className=\"text-dark font-size-3 text-capitalize\">\r\n                                                    {interview.created_by}\r\n                                                </b>\r\n                                            </div>\r\n                                        }</td>\r\n                                        <td className='text-capitalize '>\r\n                                            {interview.status === 36 ||interview.status === \"36\"?\r\n                                                \"Interview completed\" :\r\n                                                \"Interview Schedule\"}</td>\r\n                                        <td><i className=\"font-size-2\">\r\n                                            {moment(interview.created_at).format(\"lll\")}\r\n                                        </i></td>\r\n                                        <td>\r\n                                            <p className=\"timeline_date text-dark font-size-3 intervire-msg mt-5\">\r\n                                                {interview.msg}\r\n                                            </p>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </table>}\r\n            </div>\r\n            <div className=\"pt-2\">\r\n                <Pagination\r\n                    nPages={nPages}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    total={totalData}\r\n                    count={interviewHistoryData.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InterviewHistoryTable;\r\n"
        }
    ]
}