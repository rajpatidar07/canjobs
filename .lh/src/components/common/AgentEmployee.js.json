{
    "sourceFile": "src/components/common/AgentEmployee.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1709117039268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709183579754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n // import LmiaStatus from \"../forms/admin/lmiastatus\";\n // import { toast, ToastContainer } from \"react-toastify\";\n // import ChangeJob from \"../forms/admin/changeJobs\";\n import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n // import VisaStatus from \"../forms/user/visaStatus\";\n // import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n // import { BsArrow90DegRight } from \"react-icons/bs\";\n // import { RiChatFollowUpLine } from \"react-icons/ri\";\n@@ -29,21 +30,21 @@\n // import { PiBriefcaseLight } from \"react-icons/pi\";\n // import { ImCalendar } from \"react-icons/im\";\n // import { GrDocumentUser } from \"react-icons/gr\";\n function AgentsEmployee(props) {\n-  /*show modal and data states */\n+  /*show modal and data states assignedUser*/\n   //   let [documentModal, setDocumentModal] = useState(false);\n   //   let [showVisaModal, setVisaModal] = useState(false);\n-  //   let [showChangeJobModal, setShowChangeJobModal] = useState(false);\n+    let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n   let [apiCall, setApiCall] = useState(props.apiCall);\n   // let [followup, setFollowUp] = useState(false);\n   //   let [interview, setInterview] = useState(false);\n   //   let [lmia, setLimia] = useState(false);\n   let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n   //   let [resData, setResData] = useState(\"\");\n   //   let [searchError, setSearchError] = useState(\"\");\n   let [isLoading, setIsLoading] = useState(true);\n-  //   let [employeeId, setemployeeId] = useState();\n+    let [employeeId, setemployeeId] = useState();\n   //   let [lmiaStatus, setLmiaStatus] = useState();\n \n   /*Filter and search state */\n   //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n@@ -326,9 +327,10 @@\n           <AdminSidebar heading={\"Response\"} />\n           <ToastContainer />\n         </>\n       ) : null} */}\n-\n+{showChangeAssignedAdminModal&&<PersonalDetails user_of_page={props.user_of_page}\n+employeeId={employeeId}/>}\n       <div\n         className={\n           //   props.heading === \"Response\" ||\n           //   (props.heading === undefined && user_type === \"admin\")\n@@ -601,18 +603,16 @@\n                           >\n                             Status\n                           </th>\n                         )}\n-                        {/* {props.heading === (\"Dashboard\") ? (\n-                          \"\"\n-                        ) : (\n+                        {props.user_of_page===\"assignedUser\"&& (\n                           <th\n                             scope=\"col\"\n                             className=\"border-0 font-size-3 font-weight-normal py-2\"\n                           >\n                             Action\n                           </th>\n-                        )} */}\n+                        )}\n                       </tr>\n                     </thead>\n                     <tbody>\n                       {/* Map function to show the data in the list*/}\n@@ -850,8 +850,22 @@\n                                   ) : null}\n                                 </p>\n                               </td>\n                             )}\n+                             <Link\n+                                    style={{\n+                                      padding: \"0 5px\",\n+                                      minWidth: \"auto\",\n+                                      height: \"auto\",\n+                                    }}\n+                                    className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                                    // to={`/${empdata.employee_id}`}\n+                                    title=\"Employee Details\"\n+                                    onClick={() => {setShowChangeAssignedAdminModal(true)\n+                                      setemployeeId(empdata.employee_id)}}\n+                                  >\n+                                    Update\n+                                  </Link>\n                             {/* Calulation to get user is new or retained */}\n                             {/* <td className=\" py-2\">\n                               <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                 {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n"
                },
                {
                    "date": 1709183597182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,908 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Employee Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //         toast.error(\"Employee already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Employee Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {props.user_of_page === \"assignedUser\" && (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          ></th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-3 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Employee Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>\n+\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            <td className=\" py-2\">\n+                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                {empdata.profile_complete === \"100.00\" ? (\n+                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    Complete\n+                                  </span>\n+                                ) : (\n+                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    Incomplete\n+                                  </span>\n+                                )}\n+                              </p>\n+                            </td>\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.status === \"1\" ? (\n+                                    <span\n+                                      className={\n+                                        !isTimeWithin24Hours(empdata.created_at)\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                      }\n+                                    >\n+                                      New\n+                                    </span>\n+                                  ) : empdata.status === \"2\" ? (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Prospect\n+                                    </span>\n+                                  ) : empdata.status === \"3\" ? (\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                      Lead\n+                                    </span>\n+                                  ) : empdata.status === \"4\" ? (\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                      Reatined\n+                                    </span>\n+                                  ) : empdata.status === \"5\" ? (\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                      Lost\n+                                    </span>\n+                                  ) : empdata.status === \"6\" ? (\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                      Dead\n+                                    </span>\n+                                  ) : empdata.status === \"7\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Reserved\n+                                    </span>\n+                                  ) : empdata.status === \"0\" ? (\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                      New\n+                                    </span>\n+                                  ) : null}\n+                                </p>\n+                              </td>\n+                            )}\n+                            <Link\n+                              style={{\n+                                padding: \"0 5px\",\n+                                minWidth: \"auto\",\n+                                height: \"auto\",\n+                              }}\n+                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                              // to={`/${empdata.employee_id}`}\n+                              title=\"Employee Details\"\n+                              onClick={() => {\n+                                setShowChangeAssignedAdminModal(true)\n+                                setemployeeId(empdata.employee_id)\n+                              }}\n+                            >\n+                              Update\n+                            </Link>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                },
                {
                    "date": 1709184069174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,13 @@\n       ) : null} */}\n       {showChangeAssignedAdminModal &&\n         <PersonalDetails\n           user_of_page={props.user_of_page}\n-          employeeId={employeeId} />}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n       <div\n         className={\n           //   props.heading === \"Response\" ||\n           //   (props.heading === undefined && user_type === \"admin\")\n"
                },
                {
                    "date": 1709184076387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,912 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Employee Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //         toast.error(\"Employee already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Employee Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {props.user_of_page === \"assignedUser\" && (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          ></th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-3 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Employee Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>\n+\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            <td className=\" py-2\">\n+                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                {empdata.profile_complete === \"100.00\" ? (\n+                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    Complete\n+                                  </span>\n+                                ) : (\n+                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    Incomplete\n+                                  </span>\n+                                )}\n+                              </p>\n+                            </td>\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.status === \"1\" ? (\n+                                    <span\n+                                      className={\n+                                        !isTimeWithin24Hours(empdata.created_at)\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                      }\n+                                    >\n+                                      New\n+                                    </span>\n+                                  ) : empdata.status === \"2\" ? (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Prospect\n+                                    </span>\n+                                  ) : empdata.status === \"3\" ? (\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                      Lead\n+                                    </span>\n+                                  ) : empdata.status === \"4\" ? (\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                      Reatined\n+                                    </span>\n+                                  ) : empdata.status === \"5\" ? (\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                      Lost\n+                                    </span>\n+                                  ) : empdata.status === \"6\" ? (\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                      Dead\n+                                    </span>\n+                                  ) : empdata.status === \"7\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Reserved\n+                                    </span>\n+                                  ) : empdata.status === \"0\" ? (\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                      New\n+                                    </span>\n+                                  ) : null}\n+                                </p>\n+                              </td>\n+                            )}\n+                            <Link\n+                              style={{\n+                                padding: \"0 5px\",\n+                                minWidth: \"auto\",\n+                                height: \"auto\",\n+                              }}\n+                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                              // to={`/${empdata.employee_id}`}\n+                              title=\"Employee Details\"\n+                              onClick={() => {\n+                                setShowChangeAssignedAdminModal(true)\n+                                setemployeeId(empdata.employee_id)\n+                              }}\n+                            >\n+                              Update\n+                            </Link>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                },
                {
                    "date": 1709551292704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -609,9 +609,9 @@\n                           >\n                             Status\n                           </th>\n                         )}\n-                        {props.user_of_page === \"assignedUser\" && (\n+                        {(\n                           <th\n                             scope=\"col\"\n                             className=\"border-0 font-size-3 font-weight-normal py-2\"\n                           >\n"
                },
                {
                    "date": 1709551349737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,912 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Employee Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //         toast.error(\"Employee already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Employee Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {(\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          ></th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-3 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Employee Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>\n+\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            <td className=\" py-2\">\n+                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                {empdata.profile_complete === \"100.00\" ? (\n+                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    Complete\n+                                  </span>\n+                                ) : (\n+                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    Incomplete\n+                                  </span>\n+                                )}\n+                              </p>\n+                            </td>\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.status === \"1\" ? (\n+                                    <span\n+                                      className={\n+                                        !isTimeWithin24Hours(empdata.created_at)\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                      }\n+                                    >\n+                                      New\n+                                    </span>\n+                                  ) : empdata.status === \"2\" ? (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Prospect\n+                                    </span>\n+                                  ) : empdata.status === \"3\" ? (\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                      Lead\n+                                    </span>\n+                                  ) : empdata.status === \"4\" ? (\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                      Reatined\n+                                    </span>\n+                                  ) : empdata.status === \"5\" ? (\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                      Lost\n+                                    </span>\n+                                  ) : empdata.status === \"6\" ? (\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                      Dead\n+                                    </span>\n+                                  ) : empdata.status === \"7\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Reserved\n+                                    </span>\n+                                  ) : empdata.status === \"0\" ? (\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                      New\n+                                    </span>\n+                                  ) : null}\n+                                </p>\n+                              </td>\n+                            )}\n+                            <Link\n+                              style={{\n+                                padding: \"0 5px\",\n+                                minWidth: \"auto\",\n+                                height: \"auto\",\n+                              }}\n+                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                              // to={`/${empdata.employee_id}`}\n+                              title=\"Employee Details\"\n+                              onClick={() => {\n+                                setShowChangeAssignedAdminModal(true)\n+                                setemployeeId(empdata.employee_id)\n+                              }}\n+                            >\n+                              Update\n+                            </Link>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                },
                {
                    "date": 1709613223781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -504,9 +504,9 @@\n                           >\n                             Name\n                           </Link>\n                         </th>\n-                        <th\n+                        {props.user_of_page===\"agentAssigned\"?null:<th\n                           scope=\"col\"\n                           className=\"border-0 font-size-3 font-weight-normal py-2\"\n                         >\n                           <Link\n@@ -518,9 +518,9 @@\n                             title=\"Sort by Contact\"\n                           >\n                             Contact\n                           </Link>\n-                        </th>\n+                        </th>}\n                         {props.heading === \"Dashboard\" ? (\n                           \"\"\n                         ) : (\n                           <th\n@@ -595,14 +595,14 @@\n                               Experience\n                             </Link>\n                           </th>\n                         )}\n-                        <th\n+                       {props.user_of_page===\"agentAssigned\"?null: <th\n                           scope=\"col\"\n                           className=\"border-0 font-size-3 font-weight-normal py-2\"\n                         >\n                           Profile\n-                        </th>\n+                        </th>}\n                         {props.visa === \"yes\" ? null : (\n                           <th\n                             scope=\"col\"\n                             className=\"border-0 font-size-3 font-weight-normal py-2\"\n@@ -909,2733 +909,4 @@\n   );\n }\n \n export default AgentsEmployee;\n-import React, { useState, useEffect } from \"react\";\n-// import AdminHeader from \"./header\";\n-// import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-// import { RiDeleteBin5Line } from \"react-icons/ri\";\n-// import Addfollowup from \"../forms/admin/addfollowup\";\n-import {\n-  //   AddLimia,\n-  //   ReservedEmployeeForJob,\n-  getallEmployeeData,\n-  //   GetFilter,\n-  //   AddUpdateVisa,\n-  //   RemoveReservedEmployeeForJob,\n-  //   DeletRespone,\n-} from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"../common/pagination\";\n-// import FilterJson from \"../json/filterjson\";\n-// import AddInterview from \"../forms/admin/addInterview.js\";\n-// import LmiaStatus from \"../forms/admin/lmiastatus\";\n-// import { toast, ToastContainer } from \"react-toastify\";\n-// import ChangeJob from \"../forms/admin/changeJobs\";\n-import Loader from \"../common/loader\";\n-import PersonalDetails from \"../forms/user/personal\";\n-// import VisaStatus from \"../forms/user/visaStatus\";\n-// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n-// import { BsArrow90DegRight } from \"react-icons/bs\";\n-// import { RiChatFollowUpLine } from \"react-icons/ri\";\n-// import { LiaCcVisa } from \"react-icons/lia\";\n-// import { PiBriefcaseLight } from \"react-icons/pi\";\n-// import { ImCalendar } from \"react-icons/im\";\n-// import { GrDocumentUser } from \"react-icons/gr\";\n-function AgentsEmployee(props) {\n-  /*show modal and data states assignedUser*/\n-  //   let [documentModal, setDocumentModal] = useState(false);\n-  //   let [showVisaModal, setVisaModal] = useState(false);\n-  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-  // let [followup, setFollowUp] = useState(false);\n-  //   let [interview, setInterview] = useState(false);\n-  //   let [lmia, setLimia] = useState(false);\n-  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n-  //   let [resData, setResData] = useState(\"\");\n-  //   let [searchError, setSearchError] = useState(\"\");\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [employeeId, setemployeeId] = useState();\n-  //   let [lmiaStatus, setLmiaStatus] = useState();\n-\n-  /*Filter and search state */\n-  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n-  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n-  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n-  //     useState(\"\");\n-  //   let [Json, setJson] = useState([]);\n-  //   const [search, setSearch] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"employee_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  //   const user_type = localStorage.getItem(\"userType\");\n-  //   let [changeJob, setChangeJob] = useState(false);\n-\n-  /*Function to get the jSon */\n-  //   const JsonData = async () => {\n-  //     try {\n-  //       let Json = await GetFilter();\n-  //       if (Json.data.message === \"No data found\") {\n-  //         setJson([]);\n-  //       } else {\n-  //         setJson(Json.data.data);\n-  //       }\n-  //       setJson(Json.data.data);\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  if (\n-    apiCall === true &&\n-    // showChangeJobModal === false &&\n-    // changeJob === true &&\n-    props.setApiCall\n-  ) {\n-    props.setApiCall(true);\n-  }\n-\n-  /* Function to get the EMployee by agent data*/\n-  const AgentByEmployeeData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallEmployeeData(\n-        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n-        //   ? jobId\n-        //   :\n-        null,\n-        \"\", //skillFilterValue\",\n-        \"\", //experienceTypeFilterValue,\n-        \"\", //search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder,\n-        \"\", //props.filter_by_time,\n-        \"\", //limiaFilterValue,\n-        \"\", //props.status,\n-        \"\", // props.employee_id,\n-        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n-        \"\",\n-        \"\",\n-        props.Agentid,\n-        props.AdminId\n-      );\n-      if (userData.data.length === 0) {\n-        // setResData([]);\n-        setAgentByEmployeeData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAgentByEmployeeData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    AgentByEmployeeData();\n-    // JsonData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-      //   setChangeJob(false);\n-    }\n-  }, [\n-    // skillFilterValue,\n-    // experienceTypeFilterValue,\n-    // search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    // props.filter_by_time,\n-    apiCall,\n-  ]);\n-\n-  /*Search Onchange function to Search EMployee by agent data */\n-  //   const onSearch = (e) => {\n-  //     const inputValue = e.target.value;\n-  //     setSearch(inputValue);\n-  //     if (inputValue.length > 0) {\n-  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-  //         setSearchError(\"Category Name cannot start with a number.\");\n-  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-  //         setSearchError(\"Cannot use special characters.\");\n-  //       } else {\n-  //         setSearchError(\"\");\n-  //       }\n-  //     } else {\n-  //       setSearchError(\"\");\n-  //     }\n-  //   };\n-\n-  /*Function to Reserved Employee */\n-  //   const ReservedEmployee = async (e) => {\n-  //     // Api call to set employee reserved\n-  //     try {\n-  //       let response = await ReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id,\n-  //         \"1\"\n-  //       );\n-  //       if (response.message === \"Successfully\") {\n-  //         // Api call to set employee Visa\n-  //         let state = { status: \"onboard\", country: e.location };\n-  //         try {\n-  //           const lmia = {\n-  //             lmia_status: \"candidate placement\",\n-  //             apply_id: e.apply_id,\n-  //           };\n-  //           let LimiaResponse = await AddLimia(lmia);\n-  //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n-  //               position: toast.POSITION.TOP_RIGHT,\n-  //               autoClose: 1000,\n-  //             });\n-  //             setApiCall(true);\n-\n-  //             // props.setApiCall(true);\n-  //           }\n-  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n-  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n-  //             // Api call to set employee Limia\n-\n-  //             try {\n-  //             } catch (err) {\n-  //               console.log(err);\n-  //             }\n-  //           }\n-  //         } catch (err) {\n-  //           console.log(err);\n-  //         }\n-  //         ResponseData();\n-  //       }\n-  //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         ResponseData();\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to removed reserved employee */\n-  //   const OnRemoveReservedClick = async (e) => {\n-  //     try {\n-  //       let Response = await RemoveReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id\n-  //       );\n-  //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         // props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to remove Response */\n-  //   const onResponseDelte = async (e) => {\n-  //     try {\n-  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n-  //       if (response.message === \"successfully deleted\") {\n-  //         toast.success(\"Response Deleted successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  /*Function to open add follow up modal */\n-  // const addFollow = (e) => {\n-  //   setFollowUp(true);\n-  //   setResData(e);\n-  //   setJobId(e.job_id);\n-  // };\n-\n-  /*Function to open add Interview up modal */\n-  //   const addnterview = (e) => {\n-  //     setInterview(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /*Function to open add Limia up modal */\n-  //   const addLimia = (e) => {\n-  //     setLimia(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /* Function to show the single data to update job */\n-  //   const OpenChangeJob = (e) => {\n-  //     // e.preventDefault();\n-  //     setShowChangeJobModal(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-  /* Function to show the single data to update visa*/\n-  //   const editVisa = (e) => {\n-  //     setVisaModal(true);\n-  //     setemployeeId(e);\n-  //   };\n-  /*Function to open add Document up modal */\n-  //   const AddDoucument = (e) => {\n-  //     setDocumentModal(true);\n-  //     setemployeeId(e.employee_id);\n-  //     setLmiaStatus(e.lmia_status);\n-  //   };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-\n-  /*Funcion to get the user time from updated time */\n-  function isTimeWithin24Hours(createdTime) {\n-    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n-  }\n-  return (\n-    <div\n-      className={\n-        // props.heading === \"Response\" ||\n-        // (props.heading === undefined && user_type === \"admin\")\n-        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n-        //   : props.heading === \"Dashboard\"\n-        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n-        //   :\n-        \"response_main_div\"\n-      }\n-    >\n-      {/* {props.heading === \"Response\" ||\n-      (props.heading === undefined && user_type === \"admin\") ? (\n-        <>\n-          <!-- Header Area -->\n-          <AdminHeader heading={\"Response\"} />\n-          <!-- navbar- -->\n-          <AdminSidebar heading={\"Response\"} />\n-          <ToastContainer />\n-        </>\n-      ) : null} */}\n-      {showChangeAssignedAdminModal &&\n-        <PersonalDetails\n-          user_of_page={props.user_of_page}\n-          employeeId={employeeId}\n-          show={showChangeAssignedAdminModal}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          close={() => setShowChangeAssignedAdminModal(false)} />}\n-      <div\n-        className={\n-          //   props.heading === \"Response\" ||\n-          //   (props.heading === undefined && user_type === \"admin\")\n-          //     ? \"dashboard-main-container mt-16\"\n-          //     : props.heading === \"Dashboard\"\n-          //     ? \"\"\n-          //     :\n-          \"response__container\"\n-        }\n-      >\n-        <div\n-          className={\n-            // props.heading === \"Response\" ||\n-            // (props.heading === undefined && user_type === \"admin\")\n-            //   ? \"container\"\n-            //   : props.heading === \"Dashboard\"\n-            //   ? \"\"\n-            //   :\n-            \"container-fluid p-0 m-0\"\n-          }\n-        >\n-          {/* <div\n-            //   className={\n-            //     props.heading === \"Manage Agent\"\n-            //       ? \"response_filters mb-2 align-items-center\"\n-            //       : \"align-items-center\"\n-            //   }\n-            // >\n-            //   <div className=\"page___heading\">\n-            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n-            //   </div>\n-            //   <div\n-            //     className={\n-            //       props.heading === \"Response\" ||\n-            //       (props.heading === undefined && user_type === \"admin\")\n-            //         ? \"row m-0 align-items-center\"\n-            //         : \"d-none\"\n-            //     }\n-            //   >\n-            //     {props.heading === \"\" ? null : (\n-            //       <div className=\"col p-1 form_group mb-3\">\n-            //         <p className=\"input_label\">Search :</p>\n-            //         <input\n-            //           required\n-            //           type=\"text\"\n-            //           className=\"form-control\"\n-            //           placeholder={\"Search Company / Name\"}\n-            //           value={search}\n-            //           name={\"category_name\"}\n-            //           onChange={(e) => {\n-            //             onSearch(e);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //         />\n-            //       </div>\n-            //     )}\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={skillFilterValue}\n-            //           onChange={(e) => {\n-            //             setSkillFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Skil</option>\n-            //           {(Json.Skill || []).map((skill) => (\n-            //             <option value={skill.value} key={skill.id}>\n-            //               {skill.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={limiaFilterValue}\n-            //           onChange={(e) => {\n-            //             setLmiaFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select LMIA</option>\n-            //           {(Json.lmia || []).map((lmia) => (\n-            //             <option value={lmia.value} key={lmia.id}>\n-            //               {lmia.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Experience:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"experience\"\n-            //           id=\"experience\"\n-            //           value={experienceTypeFilterValue}\n-            //           onChange={(e) => {\n-            //             setExperienceTypeFilterValue(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Experience</option>\n-            //           {(FilterJson.experience || []).map((ex, i) => (\n-            //             <option value={ex} key={i}>\n-            //               {ex}\n-            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"float-md-right mt-6\"></div>\n-            //   </div>\n-            //   <small className=\"text-danger\">{searchError}</small>\n-            // </div>\n-        */}\n-          <div className=\"mb-0\">\n-            <div\n-              className={\n-                // props.heading === \"Response\" ||\n-                // (props.heading === undefined && user_type === \"admin\")\n-                //   ? \"\"\n-                //   : props.heading === \"Dashboard\"\n-                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n-                //   :\n-                \"\"\n-              }\n-            >\n-              <div className=\"table-responsive main_table_div\">\n-                {isLoading ? (\n-                  <Loader />\n-                ) : (\n-                  <table className=\"table table-striped main_data_table_inn mb-0\">\n-                    <thead>\n-                      <tr className=\"\">\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          EID\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"name\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Name\"\n-                          >\n-                            Name\n-                          </Link>\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"contact_no\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Contact\"\n-                          >\n-                            Contact\n-                          </Link>\n-                        </th>\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"created_at\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by date added\"\n-                            >\n-                              Date added\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"education\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Education\"\n-                            >\n-                              Education\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"skill\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Skill\"\n-                            >\n-                              Skills\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"experience\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Experience\"\n-                            >\n-                              Experience\n-                            </Link>\n-                          </th>\n-                        )}\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          Profile\n-                        </th>\n-                        {props.visa === \"yes\" ? null : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Status\n-                          </th>\n-                        )}\n-                        {(\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Action\n-                          </th>\n-                        )}\n-                      </tr>\n-                    </thead>\n-                    <tbody>\n-                      {/* Map function to show the data in the list*/}\n-                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n-                        <tr>\n-                          <th\n-                            colSpan={9}\n-                            className=\"bg-white text-center font-size-3\"\n-                          ></th>\n-                        </tr>\n-                      ) : (\n-                        (agentByEmployeeData || []).map((empdata) => (\n-                          <tr\n-                            className=\"text-capitalize applicant_row\"\n-                            key={empdata.employee_id}\n-                          >\n-                            <td className=\"font-size-3 py-2\">\n-                              {empdata.employee_id}\n-                            </td>\n-                            <td className=\" py-2\">\n-                              <Link\n-                                to={`/${empdata.employee_id}`}\n-                                // onClick={\n-                                //   empdata.name !== null\n-                                //     ? () => employeeDetails(empdata.employee_id)\n-                                //     : null\n-                                // }\n-                                title=\"Employee Details\"\n-                              >\n-                                <div className=\"d-flex profile_box gx-2\">\n-                                  <div className=\"media  align-items-center\">\n-                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n-                                        <img\n-                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      ) : (\n-                                        <img\n-                                          src={empdata.profile_photo}\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      )}\n-                                    </div>\n-                                  </div>\n-\n-                                  <div className=\" mb-0\">\n-                                    {empdata.name === null ||\n-                                      empdata.name === undefined ||\n-                                      empdata.name === \"undefined\" ||\n-                                      empdata.name === \"\" ? (\n-                                      <p className=\"font-size-3  mb-0\">N/A</p>\n-                                    ) : (\n-                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n-                                        {empdata.name}\n-                                      </p>\n-                                    )}\n-                                    {empdata.gender ||\n-                                      empdata.marital_status ? (\n-                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n-                                        {empdata.gender === \"female\"\n-                                          ? \"F\"\n-                                          : empdata.gender === \"male\"\n-                                            ? \"M\"\n-                                            : \"O\"}\n-                                        {/*Calculation of age from date of birth*/}\n-                                        (\n-                                        {empdata.marital_status ||\n-                                          empdata.date_of_birth\n-                                          ? `${empdata.marital_status\n-                                          },${moment().diff(\n-                                            empdata.date_of_birth,\n-                                            \"years\"\n-                                          )} Y`\n-                                          : null}\n-                                        )\n-                                      </p>\n-                                    ) : null}\n-                                    {empdata.is_featured === \"1\" ||\n-                                      empdata.is_featured === 1 ? (\n-                                      <span className=\"bg-orange text-white featured_tag\">\n-                                        Featured\n-                                      </span>\n-                                    ) : null}\n-                                    {empdata.created_by_admin === \"0\" ||\n-                                      empdata.created_by_admin === 0 ? (\n-                                      <span className=\"bg-info text-white web_tag\">\n-                                        Web\n-                                      </span>\n-                                    ) : null}\n-                                  </div>\n-                                </div>\n-                              </Link>\n-                            </td>\n-                            <td className=\"py-2 \">\n-                              {empdata.contact_no === null ? null : (\n-                                <p className=\"m-0\">\n-                                  +\n-                                  <Link\n-                                    className=\"text-dark font-size-3\"\n-                                    to={`tel:${empdata.contact_no}`}\n-                                  >\n-                                    {empdata.contact_no}\n-                                  </Link>\n-                                </p>\n-                              )}\n-                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                <p className=\"text-gray font-size-2 m-0\">\n-                                  <Link\n-                                    className=\"text-dark\"\n-                                    to={`mailto:${empdata.email}`}\n-                                  >\n-                                    {empdata.email}\n-                                  </Link>\n-                                </p>\n-                              </h3>\n-                            </td>\n-\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.language === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {/* {empdata.language} */}\n-                                    {/* {moment(\n-                                      empdata.created_at,\n-                                      \"YYYY-MM-DD HH:mm:ss\"\n-                                    ).fromNow()} */}\n-                                    {moment(empdata.created_at).format(\n-                                      \"DD MMMM, YYYY\"\n-                                    )}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.education === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.education}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.skill === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.skill}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.experience === null ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {empdata.experience} Years\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            <td className=\" py-2\">\n-                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                {empdata.profile_complete === \"100.00\" ? (\n-                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                    Complete\n-                                  </span>\n-                                ) : (\n-                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                    Incomplete\n-                                  </span>\n-                                )}\n-                              </p>\n-                            </td>\n-                            {props.visa === \"yes\" ? null : (\n-                              <td className=\"py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n-                                </p>\n-                              </td>\n-                            )}\n-                            <Link\n-                              style={{\n-                                padding: \"0 5px\",\n-                                minWidth: \"auto\",\n-                                height: \"auto\",\n-                              }}\n-                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                              // to={`/${empdata.employee_id}`}\n-                              title=\"Employee Details\"\n-                              onClick={() => {\n-                                setShowChangeAssignedAdminModal(true)\n-                                setemployeeId(empdata.employee_id)\n-                              }}\n-                            >\n-                              Update\n-                            </Link>\n-                            {/* Calulation to get user is new or retained */}\n-                            {/* <td className=\" py-2\">\n-                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n-                                </p>\n-                            </td> */}\n-                            {/* <td className=\" py-2 min-width-px-100\">\n-                              <div\n-                                className=\"btn-group button_group\"\n-                                role=\"group\"\n-                                aria-label=\"Basic example\"\n-                              ></div>\n-                            </td> */}\n-                          </tr>\n-                        ))\n-                      )}\n-                    </tbody>\n-                  </table>\n-                )}\n-              </div>\n-              <div className=\"pt-2\">\n-                <Pagination\n-                  nPages={nPages}\n-                  currentPage={currentPage}\n-                  setCurrentPage={setCurrentPage}\n-                  total={totalData}\n-                  count={agentByEmployeeData.length}\n-                />\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default AgentsEmployee;\n-import React, { useState, useEffect } from \"react\";\n-// import AdminHeader from \"./header\";\n-// import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-// import { RiDeleteBin5Line } from \"react-icons/ri\";\n-// import Addfollowup from \"../forms/admin/addfollowup\";\n-import {\n-  //   AddLimia,\n-  //   ReservedEmployeeForJob,\n-  getallEmployeeData,\n-  //   GetFilter,\n-  //   AddUpdateVisa,\n-  //   RemoveReservedEmployeeForJob,\n-  //   DeletRespone,\n-} from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"../common/pagination\";\n-// import FilterJson from \"../json/filterjson\";\n-// import AddInterview from \"../forms/admin/addInterview.js\";\n-// import LmiaStatus from \"../forms/admin/lmiastatus\";\n-// import { toast, ToastContainer } from \"react-toastify\";\n-// import ChangeJob from \"../forms/admin/changeJobs\";\n-import Loader from \"../common/loader\";\n-import PersonalDetails from \"../forms/user/personal\";\n-// import VisaStatus from \"../forms/user/visaStatus\";\n-// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n-// import { BsArrow90DegRight } from \"react-icons/bs\";\n-// import { RiChatFollowUpLine } from \"react-icons/ri\";\n-// import { LiaCcVisa } from \"react-icons/lia\";\n-// import { PiBriefcaseLight } from \"react-icons/pi\";\n-// import { ImCalendar } from \"react-icons/im\";\n-// import { GrDocumentUser } from \"react-icons/gr\";\n-function AgentsEmployee(props) {\n-  /*show modal and data states assignedUser*/\n-  //   let [documentModal, setDocumentModal] = useState(false);\n-  //   let [showVisaModal, setVisaModal] = useState(false);\n-  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-  // let [followup, setFollowUp] = useState(false);\n-  //   let [interview, setInterview] = useState(false);\n-  //   let [lmia, setLimia] = useState(false);\n-  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n-  //   let [resData, setResData] = useState(\"\");\n-  //   let [searchError, setSearchError] = useState(\"\");\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [employeeId, setemployeeId] = useState();\n-  //   let [lmiaStatus, setLmiaStatus] = useState();\n-\n-  /*Filter and search state */\n-  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n-  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n-  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n-  //     useState(\"\");\n-  //   let [Json, setJson] = useState([]);\n-  //   const [search, setSearch] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"employee_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  //   const user_type = localStorage.getItem(\"userType\");\n-  //   let [changeJob, setChangeJob] = useState(false);\n-\n-  /*Function to get the jSon */\n-  //   const JsonData = async () => {\n-  //     try {\n-  //       let Json = await GetFilter();\n-  //       if (Json.data.message === \"No data found\") {\n-  //         setJson([]);\n-  //       } else {\n-  //         setJson(Json.data.data);\n-  //       }\n-  //       setJson(Json.data.data);\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  if (\n-    apiCall === true &&\n-    // showChangeJobModal === false &&\n-    // changeJob === true &&\n-    props.setApiCall\n-  ) {\n-    props.setApiCall(true);\n-  }\n-\n-  /* Function to get the EMployee by agent data*/\n-  const AgentByEmployeeData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallEmployeeData(\n-        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n-        //   ? jobId\n-        //   :\n-        null,\n-        \"\", //skillFilterValue\",\n-        \"\", //experienceTypeFilterValue,\n-        \"\", //search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder,\n-        \"\", //props.filter_by_time,\n-        \"\", //limiaFilterValue,\n-        \"\", //props.status,\n-        \"\", // props.employee_id,\n-        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n-        \"\",\n-        \"\",\n-        props.Agentid,\n-        props.AdminId\n-      );\n-      if (userData.data.length === 0) {\n-        // setResData([]);\n-        setAgentByEmployeeData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAgentByEmployeeData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    AgentByEmployeeData();\n-    // JsonData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-      //   setChangeJob(false);\n-    }\n-  }, [\n-    // skillFilterValue,\n-    // experienceTypeFilterValue,\n-    // search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    // props.filter_by_time,\n-    apiCall,\n-  ]);\n-\n-  /*Search Onchange function to Search EMployee by agent data */\n-  //   const onSearch = (e) => {\n-  //     const inputValue = e.target.value;\n-  //     setSearch(inputValue);\n-  //     if (inputValue.length > 0) {\n-  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-  //         setSearchError(\"Category Name cannot start with a number.\");\n-  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-  //         setSearchError(\"Cannot use special characters.\");\n-  //       } else {\n-  //         setSearchError(\"\");\n-  //       }\n-  //     } else {\n-  //       setSearchError(\"\");\n-  //     }\n-  //   };\n-\n-  /*Function to Reserved Employee */\n-  //   const ReservedEmployee = async (e) => {\n-  //     // Api call to set employee reserved\n-  //     try {\n-  //       let response = await ReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id,\n-  //         \"1\"\n-  //       );\n-  //       if (response.message === \"Successfully\") {\n-  //         // Api call to set employee Visa\n-  //         let state = { status: \"onboard\", country: e.location };\n-  //         try {\n-  //           const lmia = {\n-  //             lmia_status: \"candidate placement\",\n-  //             apply_id: e.apply_id,\n-  //           };\n-  //           let LimiaResponse = await AddLimia(lmia);\n-  //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n-  //               position: toast.POSITION.TOP_RIGHT,\n-  //               autoClose: 1000,\n-  //             });\n-  //             setApiCall(true);\n-\n-  //             // props.setApiCall(true);\n-  //           }\n-  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n-  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n-  //             // Api call to set employee Limia\n-\n-  //             try {\n-  //             } catch (err) {\n-  //               console.log(err);\n-  //             }\n-  //           }\n-  //         } catch (err) {\n-  //           console.log(err);\n-  //         }\n-  //         ResponseData();\n-  //       }\n-  //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         ResponseData();\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to removed reserved employee */\n-  //   const OnRemoveReservedClick = async (e) => {\n-  //     try {\n-  //       let Response = await RemoveReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id\n-  //       );\n-  //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         // props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to remove Response */\n-  //   const onResponseDelte = async (e) => {\n-  //     try {\n-  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n-  //       if (response.message === \"successfully deleted\") {\n-  //         toast.success(\"Response Deleted successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  /*Function to open add follow up modal */\n-  // const addFollow = (e) => {\n-  //   setFollowUp(true);\n-  //   setResData(e);\n-  //   setJobId(e.job_id);\n-  // };\n-\n-  /*Function to open add Interview up modal */\n-  //   const addnterview = (e) => {\n-  //     setInterview(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /*Function to open add Limia up modal */\n-  //   const addLimia = (e) => {\n-  //     setLimia(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /* Function to show the single data to update job */\n-  //   const OpenChangeJob = (e) => {\n-  //     // e.preventDefault();\n-  //     setShowChangeJobModal(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-  /* Function to show the single data to update visa*/\n-  //   const editVisa = (e) => {\n-  //     setVisaModal(true);\n-  //     setemployeeId(e);\n-  //   };\n-  /*Function to open add Document up modal */\n-  //   const AddDoucument = (e) => {\n-  //     setDocumentModal(true);\n-  //     setemployeeId(e.employee_id);\n-  //     setLmiaStatus(e.lmia_status);\n-  //   };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-\n-  /*Funcion to get the user time from updated time */\n-  function isTimeWithin24Hours(createdTime) {\n-    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n-  }\n-  return (\n-    <div\n-      className={\n-        // props.heading === \"Response\" ||\n-        // (props.heading === undefined && user_type === \"admin\")\n-        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n-        //   : props.heading === \"Dashboard\"\n-        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n-        //   :\n-        \"response_main_div\"\n-      }\n-    >\n-      {/* {props.heading === \"Response\" ||\n-      (props.heading === undefined && user_type === \"admin\") ? (\n-        <>\n-          <!-- Header Area -->\n-          <AdminHeader heading={\"Response\"} />\n-          <!-- navbar- -->\n-          <AdminSidebar heading={\"Response\"} />\n-          <ToastContainer />\n-        </>\n-      ) : null} */}\n-      {showChangeAssignedAdminModal &&\n-        <PersonalDetails\n-          user_of_page={props.user_of_page}\n-          employeeId={employeeId}\n-          show={showChangeAssignedAdminModal}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          close={() => setShowChangeAssignedAdminModal(false)} />}\n-      <div\n-        className={\n-          //   props.heading === \"Response\" ||\n-          //   (props.heading === undefined && user_type === \"admin\")\n-          //     ? \"dashboard-main-container mt-16\"\n-          //     : props.heading === \"Dashboard\"\n-          //     ? \"\"\n-          //     :\n-          \"response__container\"\n-        }\n-      >\n-        <div\n-          className={\n-            // props.heading === \"Response\" ||\n-            // (props.heading === undefined && user_type === \"admin\")\n-            //   ? \"container\"\n-            //   : props.heading === \"Dashboard\"\n-            //   ? \"\"\n-            //   :\n-            \"container-fluid p-0 m-0\"\n-          }\n-        >\n-          {/* <div\n-            //   className={\n-            //     props.heading === \"Manage Agent\"\n-            //       ? \"response_filters mb-2 align-items-center\"\n-            //       : \"align-items-center\"\n-            //   }\n-            // >\n-            //   <div className=\"page___heading\">\n-            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n-            //   </div>\n-            //   <div\n-            //     className={\n-            //       props.heading === \"Response\" ||\n-            //       (props.heading === undefined && user_type === \"admin\")\n-            //         ? \"row m-0 align-items-center\"\n-            //         : \"d-none\"\n-            //     }\n-            //   >\n-            //     {props.heading === \"\" ? null : (\n-            //       <div className=\"col p-1 form_group mb-3\">\n-            //         <p className=\"input_label\">Search :</p>\n-            //         <input\n-            //           required\n-            //           type=\"text\"\n-            //           className=\"form-control\"\n-            //           placeholder={\"Search Company / Name\"}\n-            //           value={search}\n-            //           name={\"category_name\"}\n-            //           onChange={(e) => {\n-            //             onSearch(e);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //         />\n-            //       </div>\n-            //     )}\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={skillFilterValue}\n-            //           onChange={(e) => {\n-            //             setSkillFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Skil</option>\n-            //           {(Json.Skill || []).map((skill) => (\n-            //             <option value={skill.value} key={skill.id}>\n-            //               {skill.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={limiaFilterValue}\n-            //           onChange={(e) => {\n-            //             setLmiaFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select LMIA</option>\n-            //           {(Json.lmia || []).map((lmia) => (\n-            //             <option value={lmia.value} key={lmia.id}>\n-            //               {lmia.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Experience:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"experience\"\n-            //           id=\"experience\"\n-            //           value={experienceTypeFilterValue}\n-            //           onChange={(e) => {\n-            //             setExperienceTypeFilterValue(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Experience</option>\n-            //           {(FilterJson.experience || []).map((ex, i) => (\n-            //             <option value={ex} key={i}>\n-            //               {ex}\n-            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"float-md-right mt-6\"></div>\n-            //   </div>\n-            //   <small className=\"text-danger\">{searchError}</small>\n-            // </div>\n-        */}\n-          <div className=\"mb-0\">\n-            <div\n-              className={\n-                // props.heading === \"Response\" ||\n-                // (props.heading === undefined && user_type === \"admin\")\n-                //   ? \"\"\n-                //   : props.heading === \"Dashboard\"\n-                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n-                //   :\n-                \"\"\n-              }\n-            >\n-              <div className=\"table-responsive main_table_div\">\n-                {isLoading ? (\n-                  <Loader />\n-                ) : (\n-                  <table className=\"table table-striped main_data_table_inn mb-0\">\n-                    <thead>\n-                      <tr className=\"\">\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          EID\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"name\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Name\"\n-                          >\n-                            Name\n-                          </Link>\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"contact_no\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Contact\"\n-                          >\n-                            Contact\n-                          </Link>\n-                        </th>\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"created_at\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by date added\"\n-                            >\n-                              Date added\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"education\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Education\"\n-                            >\n-                              Education\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"skill\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Skill\"\n-                            >\n-                              Skills\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"experience\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Experience\"\n-                            >\n-                              Experience\n-                            </Link>\n-                          </th>\n-                        )}\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          Profile\n-                        </th>\n-                        {props.visa === \"yes\" ? null : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Status\n-                          </th>\n-                        )}\n-                        {props.user_of_page === \"assignedUser\" && (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Action\n-                          </th>\n-                        )}\n-                      </tr>\n-                    </thead>\n-                    <tbody>\n-                      {/* Map function to show the data in the list*/}\n-                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n-                        <tr>\n-                          <th\n-                            colSpan={9}\n-                            className=\"bg-white text-center font-size-3\"\n-                          ></th>\n-                        </tr>\n-                      ) : (\n-                        (agentByEmployeeData || []).map((empdata) => (\n-                          <tr\n-                            className=\"text-capitalize applicant_row\"\n-                            key={empdata.employee_id}\n-                          >\n-                            <td className=\"font-size-3 py-2\">\n-                              {empdata.employee_id}\n-                            </td>\n-                            <td className=\" py-2\">\n-                              <Link\n-                                to={`/${empdata.employee_id}`}\n-                                // onClick={\n-                                //   empdata.name !== null\n-                                //     ? () => employeeDetails(empdata.employee_id)\n-                                //     : null\n-                                // }\n-                                title=\"Employee Details\"\n-                              >\n-                                <div className=\"d-flex profile_box gx-2\">\n-                                  <div className=\"media  align-items-center\">\n-                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n-                                        <img\n-                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      ) : (\n-                                        <img\n-                                          src={empdata.profile_photo}\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      )}\n-                                    </div>\n-                                  </div>\n-\n-                                  <div className=\" mb-0\">\n-                                    {empdata.name === null ||\n-                                      empdata.name === undefined ||\n-                                      empdata.name === \"undefined\" ||\n-                                      empdata.name === \"\" ? (\n-                                      <p className=\"font-size-3  mb-0\">N/A</p>\n-                                    ) : (\n-                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n-                                        {empdata.name}\n-                                      </p>\n-                                    )}\n-                                    {empdata.gender ||\n-                                      empdata.marital_status ? (\n-                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n-                                        {empdata.gender === \"female\"\n-                                          ? \"F\"\n-                                          : empdata.gender === \"male\"\n-                                            ? \"M\"\n-                                            : \"O\"}\n-                                        {/*Calculation of age from date of birth*/}\n-                                        (\n-                                        {empdata.marital_status ||\n-                                          empdata.date_of_birth\n-                                          ? `${empdata.marital_status\n-                                          },${moment().diff(\n-                                            empdata.date_of_birth,\n-                                            \"years\"\n-                                          )} Y`\n-                                          : null}\n-                                        )\n-                                      </p>\n-                                    ) : null}\n-                                    {empdata.is_featured === \"1\" ||\n-                                      empdata.is_featured === 1 ? (\n-                                      <span className=\"bg-orange text-white featured_tag\">\n-                                        Featured\n-                                      </span>\n-                                    ) : null}\n-                                    {empdata.created_by_admin === \"0\" ||\n-                                      empdata.created_by_admin === 0 ? (\n-                                      <span className=\"bg-info text-white web_tag\">\n-                                        Web\n-                                      </span>\n-                                    ) : null}\n-                                  </div>\n-                                </div>\n-                              </Link>\n-                            </td>\n-                            <td className=\"py-2 \">\n-                              {empdata.contact_no === null ? null : (\n-                                <p className=\"m-0\">\n-                                  +\n-                                  <Link\n-                                    className=\"text-dark font-size-3\"\n-                                    to={`tel:${empdata.contact_no}`}\n-                                  >\n-                                    {empdata.contact_no}\n-                                  </Link>\n-                                </p>\n-                              )}\n-                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                <p className=\"text-gray font-size-2 m-0\">\n-                                  <Link\n-                                    className=\"text-dark\"\n-                                    to={`mailto:${empdata.email}`}\n-                                  >\n-                                    {empdata.email}\n-                                  </Link>\n-                                </p>\n-                              </h3>\n-                            </td>\n-\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.language === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {/* {empdata.language} */}\n-                                    {/* {moment(\n-                                      empdata.created_at,\n-                                      \"YYYY-MM-DD HH:mm:ss\"\n-                                    ).fromNow()} */}\n-                                    {moment(empdata.created_at).format(\n-                                      \"DD MMMM, YYYY\"\n-                                    )}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.education === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.education}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.skill === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.skill}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.experience === null ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {empdata.experience} Years\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            <td className=\" py-2\">\n-                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                {empdata.profile_complete === \"100.00\" ? (\n-                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                    Complete\n-                                  </span>\n-                                ) : (\n-                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                    Incomplete\n-                                  </span>\n-                                )}\n-                              </p>\n-                            </td>\n-                            {props.visa === \"yes\" ? null : (\n-                              <td className=\"py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n-                                </p>\n-                              </td>\n-                            )}\n-                            <Link\n-                              style={{\n-                                padding: \"0 5px\",\n-                                minWidth: \"auto\",\n-                                height: \"auto\",\n-                              }}\n-                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                              // to={`/${empdata.employee_id}`}\n-                              title=\"Employee Details\"\n-                              onClick={() => {\n-                                setShowChangeAssignedAdminModal(true)\n-                                setemployeeId(empdata.employee_id)\n-                              }}\n-                            >\n-                              Update\n-                            </Link>\n-                            {/* Calulation to get user is new or retained */}\n-                            {/* <td className=\" py-2\">\n-                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n-                                </p>\n-                            </td> */}\n-                            {/* <td className=\" py-2 min-width-px-100\">\n-                              <div\n-                                className=\"btn-group button_group\"\n-                                role=\"group\"\n-                                aria-label=\"Basic example\"\n-                              ></div>\n-                            </td> */}\n-                          </tr>\n-                        ))\n-                      )}\n-                    </tbody>\n-                  </table>\n-                )}\n-              </div>\n-              <div className=\"pt-2\">\n-                <Pagination\n-                  nPages={nPages}\n-                  currentPage={currentPage}\n-                  setCurrentPage={setCurrentPage}\n-                  total={totalData}\n-                  count={agentByEmployeeData.length}\n-                />\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default AgentsEmployee;\n-import React, { useState, useEffect } from \"react\";\n-// import AdminHeader from \"./header\";\n-// import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-// import { RiDeleteBin5Line } from \"react-icons/ri\";\n-// import Addfollowup from \"../forms/admin/addfollowup\";\n-import {\n-  //   AddLimia,\n-  //   ReservedEmployeeForJob,\n-  getallEmployeeData,\n-  //   GetFilter,\n-  //   AddUpdateVisa,\n-  //   RemoveReservedEmployeeForJob,\n-  //   DeletRespone,\n-} from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"../common/pagination\";\n-// import FilterJson from \"../json/filterjson\";\n-// import AddInterview from \"../forms/admin/addInterview.js\";\n-// import LmiaStatus from \"../forms/admin/lmiastatus\";\n-// import { toast, ToastContainer } from \"react-toastify\";\n-// import ChangeJob from \"../forms/admin/changeJobs\";\n-import Loader from \"../common/loader\";\n-import PersonalDetails from \"../forms/user/personal\";\n-// import VisaStatus from \"../forms/user/visaStatus\";\n-// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n-// import { BsArrow90DegRight } from \"react-icons/bs\";\n-// import { RiChatFollowUpLine } from \"react-icons/ri\";\n-// import { LiaCcVisa } from \"react-icons/lia\";\n-// import { PiBriefcaseLight } from \"react-icons/pi\";\n-// import { ImCalendar } from \"react-icons/im\";\n-// import { GrDocumentUser } from \"react-icons/gr\";\n-function AgentsEmployee(props) {\n-  /*show modal and data states assignedUser*/\n-  //   let [documentModal, setDocumentModal] = useState(false);\n-  //   let [showVisaModal, setVisaModal] = useState(false);\n-    let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-  // let [followup, setFollowUp] = useState(false);\n-  //   let [interview, setInterview] = useState(false);\n-  //   let [lmia, setLimia] = useState(false);\n-  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n-  //   let [resData, setResData] = useState(\"\");\n-  //   let [searchError, setSearchError] = useState(\"\");\n-  let [isLoading, setIsLoading] = useState(true);\n-    let [employeeId, setemployeeId] = useState();\n-  //   let [lmiaStatus, setLmiaStatus] = useState();\n-\n-  /*Filter and search state */\n-  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n-  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n-  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n-  //     useState(\"\");\n-  //   let [Json, setJson] = useState([]);\n-  //   const [search, setSearch] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"employee_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  //   const user_type = localStorage.getItem(\"userType\");\n-  //   let [changeJob, setChangeJob] = useState(false);\n-\n-  /*Function to get the jSon */\n-  //   const JsonData = async () => {\n-  //     try {\n-  //       let Json = await GetFilter();\n-  //       if (Json.data.message === \"No data found\") {\n-  //         setJson([]);\n-  //       } else {\n-  //         setJson(Json.data.data);\n-  //       }\n-  //       setJson(Json.data.data);\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  if (\n-    apiCall === true &&\n-    // showChangeJobModal === false &&\n-    // changeJob === true &&\n-    props.setApiCall\n-  ) {\n-    props.setApiCall(true);\n-  }\n-\n-  /* Function to get the EMployee by agent data*/\n-  const AgentByEmployeeData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallEmployeeData(\n-        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n-        //   ? jobId\n-        //   :\n-        null,\n-        \"\", //skillFilterValue\",\n-        \"\", //experienceTypeFilterValue,\n-        \"\", //search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder,\n-        \"\", //props.filter_by_time,\n-        \"\", //limiaFilterValue,\n-        \"\", //props.status,\n-        \"\", // props.employee_id,\n-        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n-        \"\",\n-        \"\",\n-        props.Agentid,\n-        props.AdminId\n-      );\n-      if (userData.data.length === 0) {\n-        // setResData([]);\n-        setAgentByEmployeeData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAgentByEmployeeData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    AgentByEmployeeData();\n-    // JsonData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-      //   setChangeJob(false);\n-    }\n-  }, [\n-    // skillFilterValue,\n-    // experienceTypeFilterValue,\n-    // search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    // props.filter_by_time,\n-    apiCall,\n-  ]);\n-\n-  /*Search Onchange function to Search EMployee by agent data */\n-  //   const onSearch = (e) => {\n-  //     const inputValue = e.target.value;\n-  //     setSearch(inputValue);\n-  //     if (inputValue.length > 0) {\n-  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-  //         setSearchError(\"Category Name cannot start with a number.\");\n-  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-  //         setSearchError(\"Cannot use special characters.\");\n-  //       } else {\n-  //         setSearchError(\"\");\n-  //       }\n-  //     } else {\n-  //       setSearchError(\"\");\n-  //     }\n-  //   };\n-\n-  /*Function to Reserved Employee */\n-  //   const ReservedEmployee = async (e) => {\n-  //     // Api call to set employee reserved\n-  //     try {\n-  //       let response = await ReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id,\n-  //         \"1\"\n-  //       );\n-  //       if (response.message === \"Successfully\") {\n-  //         // Api call to set employee Visa\n-  //         let state = { status: \"onboard\", country: e.location };\n-  //         try {\n-  //           const lmia = {\n-  //             lmia_status: \"candidate placement\",\n-  //             apply_id: e.apply_id,\n-  //           };\n-  //           let LimiaResponse = await AddLimia(lmia);\n-  //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n-  //               position: toast.POSITION.TOP_RIGHT,\n-  //               autoClose: 1000,\n-  //             });\n-  //             setApiCall(true);\n-\n-  //             // props.setApiCall(true);\n-  //           }\n-  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n-  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n-  //             // Api call to set employee Limia\n-\n-  //             try {\n-  //             } catch (err) {\n-  //               console.log(err);\n-  //             }\n-  //           }\n-  //         } catch (err) {\n-  //           console.log(err);\n-  //         }\n-  //         ResponseData();\n-  //       }\n-  //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         ResponseData();\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to removed reserved employee */\n-  //   const OnRemoveReservedClick = async (e) => {\n-  //     try {\n-  //       let Response = await RemoveReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id\n-  //       );\n-  //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         // props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to remove Response */\n-  //   const onResponseDelte = async (e) => {\n-  //     try {\n-  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n-  //       if (response.message === \"successfully deleted\") {\n-  //         toast.success(\"Response Deleted successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  /*Function to open add follow up modal */\n-  // const addFollow = (e) => {\n-  //   setFollowUp(true);\n-  //   setResData(e);\n-  //   setJobId(e.job_id);\n-  // };\n-\n-  /*Function to open add Interview up modal */\n-  //   const addnterview = (e) => {\n-  //     setInterview(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /*Function to open add Limia up modal */\n-  //   const addLimia = (e) => {\n-  //     setLimia(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /* Function to show the single data to update job */\n-  //   const OpenChangeJob = (e) => {\n-  //     // e.preventDefault();\n-  //     setShowChangeJobModal(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-  /* Function to show the single data to update visa*/\n-  //   const editVisa = (e) => {\n-  //     setVisaModal(true);\n-  //     setemployeeId(e);\n-  //   };\n-  /*Function to open add Document up modal */\n-  //   const AddDoucument = (e) => {\n-  //     setDocumentModal(true);\n-  //     setemployeeId(e.employee_id);\n-  //     setLmiaStatus(e.lmia_status);\n-  //   };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-\n-  /*Funcion to get the user time from updated time */\n-  function isTimeWithin24Hours(createdTime) {\n-    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n-  }\n-  return (\n-    <div\n-      className={\n-        // props.heading === \"Response\" ||\n-        // (props.heading === undefined && user_type === \"admin\")\n-        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n-        //   : props.heading === \"Dashboard\"\n-        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n-        //   :\n-        \"response_main_div\"\n-      }\n-    >\n-      {/* {props.heading === \"Response\" ||\n-      (props.heading === undefined && user_type === \"admin\") ? (\n-        <>\n-          <!-- Header Area -->\n-          <AdminHeader heading={\"Response\"} />\n-          <!-- navbar- -->\n-          <AdminSidebar heading={\"Response\"} />\n-          <ToastContainer />\n-        </>\n-      ) : null} */}\n-{showChangeAssignedAdminModal&&<PersonalDetails user_of_page={props.user_of_page}\n-employeeId={employeeId}/>}\n-      <div\n-        className={\n-          //   props.heading === \"Response\" ||\n-          //   (props.heading === undefined && user_type === \"admin\")\n-          //     ? \"dashboard-main-container mt-16\"\n-          //     : props.heading === \"Dashboard\"\n-          //     ? \"\"\n-          //     :\n-          \"response__container\"\n-        }\n-      >\n-        <div\n-          className={\n-            // props.heading === \"Response\" ||\n-            // (props.heading === undefined && user_type === \"admin\")\n-            //   ? \"container\"\n-            //   : props.heading === \"Dashboard\"\n-            //   ? \"\"\n-            //   :\n-            \"container-fluid p-0 m-0\"\n-          }\n-        >\n-          {/* <div\n-            //   className={\n-            //     props.heading === \"Manage Agent\"\n-            //       ? \"response_filters mb-2 align-items-center\"\n-            //       : \"align-items-center\"\n-            //   }\n-            // >\n-            //   <div className=\"page___heading\">\n-            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n-            //   </div>\n-            //   <div\n-            //     className={\n-            //       props.heading === \"Response\" ||\n-            //       (props.heading === undefined && user_type === \"admin\")\n-            //         ? \"row m-0 align-items-center\"\n-            //         : \"d-none\"\n-            //     }\n-            //   >\n-            //     {props.heading === \"\" ? null : (\n-            //       <div className=\"col p-1 form_group mb-3\">\n-            //         <p className=\"input_label\">Search :</p>\n-            //         <input\n-            //           required\n-            //           type=\"text\"\n-            //           className=\"form-control\"\n-            //           placeholder={\"Search Company / Name\"}\n-            //           value={search}\n-            //           name={\"category_name\"}\n-            //           onChange={(e) => {\n-            //             onSearch(e);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //         />\n-            //       </div>\n-            //     )}\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={skillFilterValue}\n-            //           onChange={(e) => {\n-            //             setSkillFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Skil</option>\n-            //           {(Json.Skill || []).map((skill) => (\n-            //             <option value={skill.value} key={skill.id}>\n-            //               {skill.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={limiaFilterValue}\n-            //           onChange={(e) => {\n-            //             setLmiaFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select LMIA</option>\n-            //           {(Json.lmia || []).map((lmia) => (\n-            //             <option value={lmia.value} key={lmia.id}>\n-            //               {lmia.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Experience:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"experience\"\n-            //           id=\"experience\"\n-            //           value={experienceTypeFilterValue}\n-            //           onChange={(e) => {\n-            //             setExperienceTypeFilterValue(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Experience</option>\n-            //           {(FilterJson.experience || []).map((ex, i) => (\n-            //             <option value={ex} key={i}>\n-            //               {ex}\n-            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"float-md-right mt-6\"></div>\n-            //   </div>\n-            //   <small className=\"text-danger\">{searchError}</small>\n-            // </div>\n-        */}\n-          <div className=\"mb-0\">\n-            <div\n-              className={\n-                // props.heading === \"Response\" ||\n-                // (props.heading === undefined && user_type === \"admin\")\n-                //   ? \"\"\n-                //   : props.heading === \"Dashboard\"\n-                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n-                //   :\n-                \"\"\n-              }\n-            >\n-              <div className=\"table-responsive main_table_div\">\n-                {isLoading ? (\n-                  <Loader />\n-                ) : (\n-                  <table className=\"table table-striped main_data_table_inn mb-0\">\n-                    <thead>\n-                      <tr className=\"\">\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          EID\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"name\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Name\"\n-                          >\n-                            Name\n-                          </Link>\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"contact_no\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Contact\"\n-                          >\n-                            Contact\n-                          </Link>\n-                        </th>\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"created_at\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by date added\"\n-                            >\n-                              Date added\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"education\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Education\"\n-                            >\n-                              Education\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"skill\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Skill\"\n-                            >\n-                              Skills\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"experience\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Experience\"\n-                            >\n-                              Experience\n-                            </Link>\n-                          </th>\n-                        )}\n-                        <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          Profile\n-                        </th>\n-                        {props.visa === \"yes\" ? null : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Status\n-                          </th>\n-                        )}\n-                        {props.user_of_page===\"assignedUser\"&& (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Action\n-                          </th>\n-                        )}\n-                      </tr>\n-                    </thead>\n-                    <tbody>\n-                      {/* Map function to show the data in the list*/}\n-                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n-                        <tr>\n-                          <th\n-                            colSpan={9}\n-                            className=\"bg-white text-center font-size-3\"\n-                          ></th>\n-                        </tr>\n-                      ) : (\n-                        (agentByEmployeeData || []).map((empdata) => (\n-                          <tr\n-                            className=\"text-capitalize applicant_row\"\n-                            key={empdata.employee_id}\n-                          >\n-                            <td className=\"font-size-3 py-2\">\n-                              {empdata.employee_id}\n-                            </td>\n-                            <td className=\" py-2\">\n-                              <Link\n-                                to={`/${empdata.employee_id}`}\n-                                // onClick={\n-                                //   empdata.name !== null\n-                                //     ? () => employeeDetails(empdata.employee_id)\n-                                //     : null\n-                                // }\n-                                title=\"Employee Details\"\n-                              >\n-                                <div className=\"d-flex profile_box gx-2\">\n-                                  <div className=\"media  align-items-center\">\n-                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n-                                        <img\n-                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      ) : (\n-                                        <img\n-                                          src={empdata.profile_photo}\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      )}\n-                                    </div>\n-                                  </div>\n-\n-                                  <div className=\" mb-0\">\n-                                    {empdata.name === null ||\n-                                    empdata.name === undefined ||\n-                                    empdata.name === \"undefined\" ||\n-                                    empdata.name === \"\" ? (\n-                                      <p className=\"font-size-3  mb-0\">N/A</p>\n-                                    ) : (\n-                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n-                                        {empdata.name}\n-                                      </p>\n-                                    )}\n-                                    {empdata.gender ||\n-                                    empdata.marital_status ? (\n-                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n-                                        {empdata.gender === \"female\"\n-                                          ? \"F\"\n-                                          : empdata.gender === \"male\"\n-                                          ? \"M\"\n-                                          : \"O\"}\n-                                        {/*Calculation of age from date of birth*/}\n-                                        (\n-                                        {empdata.marital_status ||\n-                                        empdata.date_of_birth\n-                                          ? `${\n-                                              empdata.marital_status\n-                                            },${moment().diff(\n-                                              empdata.date_of_birth,\n-                                              \"years\"\n-                                            )} Y`\n-                                          : null}\n-                                        )\n-                                      </p>\n-                                    ) : null}\n-                                    {empdata.is_featured === \"1\" ||\n-                                    empdata.is_featured === 1 ? (\n-                                      <span className=\"bg-orange text-white featured_tag\">\n-                                        Featured\n-                                      </span>\n-                                    ) : null}\n-                                    {empdata.created_by_admin === \"0\" ||\n-                                    empdata.created_by_admin === 0 ? (\n-                                      <span className=\"bg-info text-white web_tag\">\n-                                        Web\n-                                      </span>\n-                                    ) : null}\n-                                  </div>\n-                                </div>\n-                              </Link>\n-                            </td>\n-                            <td className=\"py-2 \">\n-                              {empdata.contact_no === null ? null : (\n-                                <p className=\"m-0\">\n-                                  +\n-                                  <Link\n-                                    className=\"text-dark font-size-3\"\n-                                    to={`tel:${empdata.contact_no}`}\n-                                  >\n-                                    {empdata.contact_no}\n-                                  </Link>\n-                                </p>\n-                              )}\n-                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                <p className=\"text-gray font-size-2 m-0\">\n-                                  <Link\n-                                    className=\"text-dark\"\n-                                    to={`mailto:${empdata.email}`}\n-                                  >\n-                                    {empdata.email}\n-                                  </Link>\n-                                </p>\n-                              </h3>\n-                            </td>\n-\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.language === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {/* {empdata.language} */}\n-                                    {/* {moment(\n-                                      empdata.created_at,\n-                                      \"YYYY-MM-DD HH:mm:ss\"\n-                                    ).fromNow()} */}\n-                                    {moment(empdata.created_at).format(\n-                                      \"DD MMMM, YYYY\"\n-                                    )}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.education === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.education}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.skill === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.skill}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.experience === null ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {empdata.experience} Years\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            <td className=\" py-2\">\n-                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                {empdata.profile_complete === \"100.00\" ? (\n-                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                    Complete\n-                                  </span>\n-                                ) : (\n-                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                    Incomplete\n-                                  </span>\n-                                )}\n-                              </p>\n-                            </td>\n-                            {props.visa === \"yes\" ? null : (\n-                              <td className=\"py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n-                                </p>\n-                              </td>\n-                            )}\n-                             <Link\n-                                    style={{\n-                                      padding: \"0 5px\",\n-                                      minWidth: \"auto\",\n-                                      height: \"auto\",\n-                                    }}\n-                                    className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                                    // to={`/${empdata.employee_id}`}\n-                                    title=\"Employee Details\"\n-                                    onClick={() => {setShowChangeAssignedAdminModal(true)\n-                                      setemployeeId(empdata.employee_id)}}\n-                                  >\n-                                    Update\n-                                  </Link>\n-                            {/* Calulation to get user is new or retained */}\n-                            {/* <td className=\" py-2\">\n-                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n-                                </p>\n-                            </td> */}\n-                            {/* <td className=\" py-2 min-width-px-100\">\n-                              <div\n-                                className=\"btn-group button_group\"\n-                                role=\"group\"\n-                                aria-label=\"Basic example\"\n-                              ></div>\n-                            </td> */}\n-                          </tr>\n-                        ))\n-                      )}\n-                    </tbody>\n-                  </table>\n-                )}\n-              </div>\n-              <div className=\"pt-2\">\n-                <Pagination\n-                  nPages={nPages}\n-                  currentPage={currentPage}\n-                  setCurrentPage={setCurrentPage}\n-                  total={totalData}\n-                  count={agentByEmployeeData.length}\n-                />\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default AgentsEmployee;\n"
                },
                {
                    "date": 1709613229047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -504,9 +504,9 @@\n                           >\n                             Name\n                           </Link>\n                         </th>\n-                        {props.user_of_page===\"agentAssigned\"?null:<th\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n                           scope=\"col\"\n                           className=\"border-0 font-size-3 font-weight-normal py-2\"\n                         >\n                           <Link\n@@ -595,9 +595,9 @@\n                               Experience\n                             </Link>\n                           </th>\n                         )}\n-                       {props.user_of_page===\"agentAssigned\"?null: <th\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n                           scope=\"col\"\n                           className=\"border-0 font-size-3 font-weight-normal py-2\"\n                         >\n                           Profile\n"
                },
                {
                    "date": 1709613302382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,913 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Employee Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //         toast.error(\"Employee already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Employee Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>}\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {(\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          ></th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-3 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Employee Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            {props.user_of_page === \"agentAssigned\" ? null : <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>}\n+\n+                            {props.heading === \"Dashboard\" ||\n+                              props.user_of_page === \"agentAssigned\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            <td className=\" py-2\">\n+                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                {empdata.profile_complete === \"100.00\" ? (\n+                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    Complete\n+                                  </span>\n+                                ) : (\n+                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    Incomplete\n+                                  </span>\n+                                )}\n+                              </p>\n+                            </td>\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.status === \"1\" ? (\n+                                    <span\n+                                      className={\n+                                        !isTimeWithin24Hours(empdata.created_at)\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                      }\n+                                    >\n+                                      New\n+                                    </span>\n+                                  ) : empdata.status === \"2\" ? (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Prospect\n+                                    </span>\n+                                  ) : empdata.status === \"3\" ? (\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                      Lead\n+                                    </span>\n+                                  ) : empdata.status === \"4\" ? (\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                      Reatined\n+                                    </span>\n+                                  ) : empdata.status === \"5\" ? (\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                      Lost\n+                                    </span>\n+                                  ) : empdata.status === \"6\" ? (\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                      Dead\n+                                    </span>\n+                                  ) : empdata.status === \"7\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Reserved\n+                                    </span>\n+                                  ) : empdata.status === \"0\" ? (\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                      New\n+                                    </span>\n+                                  ) : null}\n+                                </p>\n+                              </td>\n+                            )}\n+                            <Link\n+                              style={{\n+                                padding: \"0 5px\",\n+                                minWidth: \"auto\",\n+                                height: \"auto\",\n+                              }}\n+                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                              // to={`/${empdata.employee_id}`}\n+                              title=\"Employee Details\"\n+                              onClick={() => {\n+                                setShowChangeAssignedAdminModal(true)\n+                                setemployeeId(empdata.employee_id)\n+                              }}\n+                            >\n+                              Update\n+                            </Link>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                },
                {
                    "date": 1709613383382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -738,10 +738,9 @@\n                                 </p>\n                               </h3>\n                             </td>}\n \n-                            {props.heading === \"Dashboard\" ||\n-                              props.user_of_page === \"agentAssigned\" ? (\n+                            {props.heading === \"Dashboard\" ? (\n                               \"\"\n                             ) : (\n                               <td className=\" py-2\">\n                                 {empdata.language === null ? (\n@@ -798,21 +797,22 @@\n                                   </p>\n                                 )}\n                               </td>\n                             )}\n-                            <td className=\" py-2\">\n-                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                {empdata.profile_complete === \"100.00\" ? (\n-                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                    Complete\n-                                  </span>\n-                                ) : (\n-                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                    Incomplete\n-                                  </span>\n-                                )}\n-                              </p>\n-                            </td>\n+                            {props.user_of_page === \"agentAssigned\" ? null :\n+                              <td className=\" py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.profile_complete === \"100.00\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Complete\n+                                    </span>\n+                                  ) : (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Incomplete\n+                                    </span>\n+                                  )}\n+                                </p>\n+                              </td>}\n                             {props.visa === \"yes\" ? null : (\n                               <td className=\"py-2\">\n                                 <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n                                   {empdata.status === \"1\" ? (\n"
                },
                {
                    "date": 1709613470553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -634,9 +634,9 @@\n                           <tr\n                             className=\"text-capitalize applicant_row\"\n                             key={empdata.employee_id}\n                           >\n-                            <td className=\"font-size-3 py-2\">\n+                            <td className=\"font-size-2 py-2\">\n                               {empdata.employee_id}\n                             </td>\n                             <td className=\" py-2\">\n                               <Link\n@@ -654,9 +654,9 @@\n                                       {empdata.profile_photo === null ? (\n                                         <img\n                                           src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                           alt=\"\"\n-                                          className=\"w-100\"\n+                                          className=\"w-75\"\n                                         />\n                                       ) : (\n                                         <img\n                                           src={empdata.profile_photo}\n"
                },
                {
                    "date": 1709614933725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   //   DeletRespone,\n } from \"../../api/api\";\n import moment from \"moment\";\n import Pagination from \"../common/pagination\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n // import FilterJson from \"../json/filterjson\";\n // import AddInterview from \"../forms/admin/addInterview.js\";\n // import LmiaStatus from \"../forms/admin/lmiastatus\";\n // import { toast, ToastContainer } from \"react-toastify\";\n@@ -634,9 +635,9 @@\n                           <tr\n                             className=\"text-capitalize applicant_row\"\n                             key={empdata.employee_id}\n                           >\n-                            <td className=\"font-size-2 py-2\">\n+                            <td className=\"font-size-3 py-2\">\n                               {empdata.employee_id}\n                             </td>\n                             <td className=\" py-2\">\n                               <Link\n@@ -654,9 +655,9 @@\n                                       {empdata.profile_photo === null ? (\n                                         <img\n                                           src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                           alt=\"\"\n-                                          className=\"w-75\"\n+                                          className=\"w-100\"\n                                         />\n                                       ) : (\n                                         <img\n                                           src={empdata.profile_photo}\n@@ -870,9 +871,9 @@\n                                 setShowChangeAssignedAdminModal(true)\n                                 setemployeeId(empdata.employee_id)\n                               }}\n                             >\n-                              Update\n+                              <LiaUserEditSolid />\n                             </Link>\n                             {/* Calulation to get user is new or retained */}\n                             {/* <td className=\" py-2\">\n                               <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n"
                },
                {
                    "date": 1709614985440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -865,9 +865,9 @@\n                                 height: \"auto\",\n                               }}\n                               className=\"btn btn-sm btn-outline-info action_btn text-center\"\n                               // to={`/${empdata.employee_id}`}\n-                              title=\"Employee Details\"\n+                              title=\"Update Applicant\"\n                               onClick={() => {\n                                 setShowChangeAssignedAdminModal(true)\n                                 setemployeeId(empdata.employee_id)\n                               }}\n@@ -911,916 +911,4 @@\n   );\n }\n \n export default AgentsEmployee;\n-import React, { useState, useEffect } from \"react\";\n-// import AdminHeader from \"./header\";\n-// import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-// import { RiDeleteBin5Line } from \"react-icons/ri\";\n-// import Addfollowup from \"../forms/admin/addfollowup\";\n-import {\n-  //   AddLimia,\n-  //   ReservedEmployeeForJob,\n-  getallEmployeeData,\n-  //   GetFilter,\n-  //   AddUpdateVisa,\n-  //   RemoveReservedEmployeeForJob,\n-  //   DeletRespone,\n-} from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"../common/pagination\";\n-// import FilterJson from \"../json/filterjson\";\n-// import AddInterview from \"../forms/admin/addInterview.js\";\n-// import LmiaStatus from \"../forms/admin/lmiastatus\";\n-// import { toast, ToastContainer } from \"react-toastify\";\n-// import ChangeJob from \"../forms/admin/changeJobs\";\n-import Loader from \"../common/loader\";\n-import PersonalDetails from \"../forms/user/personal\";\n-// import VisaStatus from \"../forms/user/visaStatus\";\n-// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n-// import { BsArrow90DegRight } from \"react-icons/bs\";\n-// import { RiChatFollowUpLine } from \"react-icons/ri\";\n-// import { LiaCcVisa } from \"react-icons/lia\";\n-// import { PiBriefcaseLight } from \"react-icons/pi\";\n-// import { ImCalendar } from \"react-icons/im\";\n-// import { GrDocumentUser } from \"react-icons/gr\";\n-function AgentsEmployee(props) {\n-  /*show modal and data states assignedUser*/\n-  //   let [documentModal, setDocumentModal] = useState(false);\n-  //   let [showVisaModal, setVisaModal] = useState(false);\n-  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-  // let [followup, setFollowUp] = useState(false);\n-  //   let [interview, setInterview] = useState(false);\n-  //   let [lmia, setLimia] = useState(false);\n-  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n-  //   let [resData, setResData] = useState(\"\");\n-  //   let [searchError, setSearchError] = useState(\"\");\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [employeeId, setemployeeId] = useState();\n-  //   let [lmiaStatus, setLmiaStatus] = useState();\n-\n-  /*Filter and search state */\n-  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n-  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n-  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n-  //     useState(\"\");\n-  //   let [Json, setJson] = useState([]);\n-  //   const [search, setSearch] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"employee_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  //   const user_type = localStorage.getItem(\"userType\");\n-  //   let [changeJob, setChangeJob] = useState(false);\n-\n-  /*Function to get the jSon */\n-  //   const JsonData = async () => {\n-  //     try {\n-  //       let Json = await GetFilter();\n-  //       if (Json.data.message === \"No data found\") {\n-  //         setJson([]);\n-  //       } else {\n-  //         setJson(Json.data.data);\n-  //       }\n-  //       setJson(Json.data.data);\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  if (\n-    apiCall === true &&\n-    // showChangeJobModal === false &&\n-    // changeJob === true &&\n-    props.setApiCall\n-  ) {\n-    props.setApiCall(true);\n-  }\n-\n-  /* Function to get the EMployee by agent data*/\n-  const AgentByEmployeeData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallEmployeeData(\n-        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n-        //   ? jobId\n-        //   :\n-        null,\n-        \"\", //skillFilterValue\",\n-        \"\", //experienceTypeFilterValue,\n-        \"\", //search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder,\n-        \"\", //props.filter_by_time,\n-        \"\", //limiaFilterValue,\n-        \"\", //props.status,\n-        \"\", // props.employee_id,\n-        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n-        \"\",\n-        \"\",\n-        props.Agentid,\n-        props.AdminId\n-      );\n-      if (userData.data.length === 0) {\n-        // setResData([]);\n-        setAgentByEmployeeData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAgentByEmployeeData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    AgentByEmployeeData();\n-    // JsonData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-      //   setChangeJob(false);\n-    }\n-  }, [\n-    // skillFilterValue,\n-    // experienceTypeFilterValue,\n-    // search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    // props.filter_by_time,\n-    apiCall,\n-  ]);\n-\n-  /*Search Onchange function to Search EMployee by agent data */\n-  //   const onSearch = (e) => {\n-  //     const inputValue = e.target.value;\n-  //     setSearch(inputValue);\n-  //     if (inputValue.length > 0) {\n-  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-  //         setSearchError(\"Category Name cannot start with a number.\");\n-  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-  //         setSearchError(\"Cannot use special characters.\");\n-  //       } else {\n-  //         setSearchError(\"\");\n-  //       }\n-  //     } else {\n-  //       setSearchError(\"\");\n-  //     }\n-  //   };\n-\n-  /*Function to Reserved Employee */\n-  //   const ReservedEmployee = async (e) => {\n-  //     // Api call to set employee reserved\n-  //     try {\n-  //       let response = await ReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id,\n-  //         \"1\"\n-  //       );\n-  //       if (response.message === \"Successfully\") {\n-  //         // Api call to set employee Visa\n-  //         let state = { status: \"onboard\", country: e.location };\n-  //         try {\n-  //           const lmia = {\n-  //             lmia_status: \"candidate placement\",\n-  //             apply_id: e.apply_id,\n-  //           };\n-  //           let LimiaResponse = await AddLimia(lmia);\n-  //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n-  //               position: toast.POSITION.TOP_RIGHT,\n-  //               autoClose: 1000,\n-  //             });\n-  //             setApiCall(true);\n-\n-  //             // props.setApiCall(true);\n-  //           }\n-  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n-  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n-  //             // Api call to set employee Limia\n-\n-  //             try {\n-  //             } catch (err) {\n-  //               console.log(err);\n-  //             }\n-  //           }\n-  //         } catch (err) {\n-  //           console.log(err);\n-  //         }\n-  //         ResponseData();\n-  //       }\n-  //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         ResponseData();\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to removed reserved employee */\n-  //   const OnRemoveReservedClick = async (e) => {\n-  //     try {\n-  //       let Response = await RemoveReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id\n-  //       );\n-  //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         // props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to remove Response */\n-  //   const onResponseDelte = async (e) => {\n-  //     try {\n-  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n-  //       if (response.message === \"successfully deleted\") {\n-  //         toast.success(\"Response Deleted successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  /*Function to open add follow up modal */\n-  // const addFollow = (e) => {\n-  //   setFollowUp(true);\n-  //   setResData(e);\n-  //   setJobId(e.job_id);\n-  // };\n-\n-  /*Function to open add Interview up modal */\n-  //   const addnterview = (e) => {\n-  //     setInterview(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /*Function to open add Limia up modal */\n-  //   const addLimia = (e) => {\n-  //     setLimia(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /* Function to show the single data to update job */\n-  //   const OpenChangeJob = (e) => {\n-  //     // e.preventDefault();\n-  //     setShowChangeJobModal(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-  /* Function to show the single data to update visa*/\n-  //   const editVisa = (e) => {\n-  //     setVisaModal(true);\n-  //     setemployeeId(e);\n-  //   };\n-  /*Function to open add Document up modal */\n-  //   const AddDoucument = (e) => {\n-  //     setDocumentModal(true);\n-  //     setemployeeId(e.employee_id);\n-  //     setLmiaStatus(e.lmia_status);\n-  //   };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-\n-  /*Funcion to get the user time from updated time */\n-  function isTimeWithin24Hours(createdTime) {\n-    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n-  }\n-  return (\n-    <div\n-      className={\n-        // props.heading === \"Response\" ||\n-        // (props.heading === undefined && user_type === \"admin\")\n-        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n-        //   : props.heading === \"Dashboard\"\n-        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n-        //   :\n-        \"response_main_div\"\n-      }\n-    >\n-      {/* {props.heading === \"Response\" ||\n-      (props.heading === undefined && user_type === \"admin\") ? (\n-        <>\n-          <!-- Header Area -->\n-          <AdminHeader heading={\"Response\"} />\n-          <!-- navbar- -->\n-          <AdminSidebar heading={\"Response\"} />\n-          <ToastContainer />\n-        </>\n-      ) : null} */}\n-      {showChangeAssignedAdminModal &&\n-        <PersonalDetails\n-          user_of_page={props.user_of_page}\n-          employeeId={employeeId}\n-          show={showChangeAssignedAdminModal}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          close={() => setShowChangeAssignedAdminModal(false)} />}\n-      <div\n-        className={\n-          //   props.heading === \"Response\" ||\n-          //   (props.heading === undefined && user_type === \"admin\")\n-          //     ? \"dashboard-main-container mt-16\"\n-          //     : props.heading === \"Dashboard\"\n-          //     ? \"\"\n-          //     :\n-          \"response__container\"\n-        }\n-      >\n-        <div\n-          className={\n-            // props.heading === \"Response\" ||\n-            // (props.heading === undefined && user_type === \"admin\")\n-            //   ? \"container\"\n-            //   : props.heading === \"Dashboard\"\n-            //   ? \"\"\n-            //   :\n-            \"container-fluid p-0 m-0\"\n-          }\n-        >\n-          {/* <div\n-            //   className={\n-            //     props.heading === \"Manage Agent\"\n-            //       ? \"response_filters mb-2 align-items-center\"\n-            //       : \"align-items-center\"\n-            //   }\n-            // >\n-            //   <div className=\"page___heading\">\n-            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n-            //   </div>\n-            //   <div\n-            //     className={\n-            //       props.heading === \"Response\" ||\n-            //       (props.heading === undefined && user_type === \"admin\")\n-            //         ? \"row m-0 align-items-center\"\n-            //         : \"d-none\"\n-            //     }\n-            //   >\n-            //     {props.heading === \"\" ? null : (\n-            //       <div className=\"col p-1 form_group mb-3\">\n-            //         <p className=\"input_label\">Search :</p>\n-            //         <input\n-            //           required\n-            //           type=\"text\"\n-            //           className=\"form-control\"\n-            //           placeholder={\"Search Company / Name\"}\n-            //           value={search}\n-            //           name={\"category_name\"}\n-            //           onChange={(e) => {\n-            //             onSearch(e);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //         />\n-            //       </div>\n-            //     )}\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={skillFilterValue}\n-            //           onChange={(e) => {\n-            //             setSkillFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Skil</option>\n-            //           {(Json.Skill || []).map((skill) => (\n-            //             <option value={skill.value} key={skill.id}>\n-            //               {skill.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={limiaFilterValue}\n-            //           onChange={(e) => {\n-            //             setLmiaFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select LMIA</option>\n-            //           {(Json.lmia || []).map((lmia) => (\n-            //             <option value={lmia.value} key={lmia.id}>\n-            //               {lmia.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Experience:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"experience\"\n-            //           id=\"experience\"\n-            //           value={experienceTypeFilterValue}\n-            //           onChange={(e) => {\n-            //             setExperienceTypeFilterValue(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Experience</option>\n-            //           {(FilterJson.experience || []).map((ex, i) => (\n-            //             <option value={ex} key={i}>\n-            //               {ex}\n-            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"float-md-right mt-6\"></div>\n-            //   </div>\n-            //   <small className=\"text-danger\">{searchError}</small>\n-            // </div>\n-        */}\n-          <div className=\"mb-0\">\n-            <div\n-              className={\n-                // props.heading === \"Response\" ||\n-                // (props.heading === undefined && user_type === \"admin\")\n-                //   ? \"\"\n-                //   : props.heading === \"Dashboard\"\n-                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n-                //   :\n-                \"\"\n-              }\n-            >\n-              <div className=\"table-responsive main_table_div\">\n-                {isLoading ? (\n-                  <Loader />\n-                ) : (\n-                  <table className=\"table table-striped main_data_table_inn mb-0\">\n-                    <thead>\n-                      <tr className=\"\">\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          EID\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"name\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Name\"\n-                          >\n-                            Name\n-                          </Link>\n-                        </th>\n-                        {props.user_of_page === \"agentAssigned\" ? null : <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"contact_no\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Contact\"\n-                          >\n-                            Contact\n-                          </Link>\n-                        </th>}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"created_at\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by date added\"\n-                            >\n-                              Date added\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"education\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Education\"\n-                            >\n-                              Education\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"skill\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Skill\"\n-                            >\n-                              Skills\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"experience\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Experience\"\n-                            >\n-                              Experience\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.user_of_page === \"agentAssigned\" ? null : <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          Profile\n-                        </th>}\n-                        {props.visa === \"yes\" ? null : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Status\n-                          </th>\n-                        )}\n-                        {(\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Action\n-                          </th>\n-                        )}\n-                      </tr>\n-                    </thead>\n-                    <tbody>\n-                      {/* Map function to show the data in the list*/}\n-                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n-                        <tr>\n-                          <th\n-                            colSpan={9}\n-                            className=\"bg-white text-center font-size-3\"\n-                          ></th>\n-                        </tr>\n-                      ) : (\n-                        (agentByEmployeeData || []).map((empdata) => (\n-                          <tr\n-                            className=\"text-capitalize applicant_row\"\n-                            key={empdata.employee_id}\n-                          >\n-                            <td className=\"font-size-3 py-2\">\n-                              {empdata.employee_id}\n-                            </td>\n-                            <td className=\" py-2\">\n-                              <Link\n-                                to={`/${empdata.employee_id}`}\n-                                // onClick={\n-                                //   empdata.name !== null\n-                                //     ? () => employeeDetails(empdata.employee_id)\n-                                //     : null\n-                                // }\n-                                title=\"Employee Details\"\n-                              >\n-                                <div className=\"d-flex profile_box gx-2\">\n-                                  <div className=\"media  align-items-center\">\n-                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n-                                        <img\n-                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      ) : (\n-                                        <img\n-                                          src={empdata.profile_photo}\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      )}\n-                                    </div>\n-                                  </div>\n-\n-                                  <div className=\" mb-0\">\n-                                    {empdata.name === null ||\n-                                      empdata.name === undefined ||\n-                                      empdata.name === \"undefined\" ||\n-                                      empdata.name === \"\" ? (\n-                                      <p className=\"font-size-3  mb-0\">N/A</p>\n-                                    ) : (\n-                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n-                                        {empdata.name}\n-                                      </p>\n-                                    )}\n-                                    {empdata.gender ||\n-                                      empdata.marital_status ? (\n-                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n-                                        {empdata.gender === \"female\"\n-                                          ? \"F\"\n-                                          : empdata.gender === \"male\"\n-                                            ? \"M\"\n-                                            : \"O\"}\n-                                        {/*Calculation of age from date of birth*/}\n-                                        (\n-                                        {empdata.marital_status ||\n-                                          empdata.date_of_birth\n-                                          ? `${empdata.marital_status\n-                                          },${moment().diff(\n-                                            empdata.date_of_birth,\n-                                            \"years\"\n-                                          )} Y`\n-                                          : null}\n-                                        )\n-                                      </p>\n-                                    ) : null}\n-                                    {empdata.is_featured === \"1\" ||\n-                                      empdata.is_featured === 1 ? (\n-                                      <span className=\"bg-orange text-white featured_tag\">\n-                                        Featured\n-                                      </span>\n-                                    ) : null}\n-                                    {empdata.created_by_admin === \"0\" ||\n-                                      empdata.created_by_admin === 0 ? (\n-                                      <span className=\"bg-info text-white web_tag\">\n-                                        Web\n-                                      </span>\n-                                    ) : null}\n-                                  </div>\n-                                </div>\n-                              </Link>\n-                            </td>\n-                            <td className=\"py-2 \">\n-                              {empdata.contact_no === null ? null : (\n-                                <p className=\"m-0\">\n-                                  +\n-                                  <Link\n-                                    className=\"text-dark font-size-3\"\n-                                    to={`tel:${empdata.contact_no}`}\n-                                  >\n-                                    {empdata.contact_no}\n-                                  </Link>\n-                                </p>\n-                              )}\n-                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                <p className=\"text-gray font-size-2 m-0\">\n-                                  <Link\n-                                    className=\"text-dark\"\n-                                    to={`mailto:${empdata.email}`}\n-                                  >\n-                                    {empdata.email}\n-                                  </Link>\n-                                </p>\n-                              </h3>\n-                            </td>\n-\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.language === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {/* {empdata.language} */}\n-                                    {/* {moment(\n-                                      empdata.created_at,\n-                                      \"YYYY-MM-DD HH:mm:ss\"\n-                                    ).fromNow()} */}\n-                                    {moment(empdata.created_at).format(\n-                                      \"DD MMMM, YYYY\"\n-                                    )}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.education === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.education}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.skill === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.skill}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.experience === null ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {empdata.experience} Years\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            <td className=\" py-2\">\n-                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                {empdata.profile_complete === \"100.00\" ? (\n-                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                    Complete\n-                                  </span>\n-                                ) : (\n-                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                    Incomplete\n-                                  </span>\n-                                )}\n-                              </p>\n-                            </td>\n-                            {props.visa === \"yes\" ? null : (\n-                              <td className=\"py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n-                                </p>\n-                              </td>\n-                            )}\n-                            <Link\n-                              style={{\n-                                padding: \"0 5px\",\n-                                minWidth: \"auto\",\n-                                height: \"auto\",\n-                              }}\n-                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                              // to={`/${empdata.employee_id}`}\n-                              title=\"Employee Details\"\n-                              onClick={() => {\n-                                setShowChangeAssignedAdminModal(true)\n-                                setemployeeId(empdata.employee_id)\n-                              }}\n-                            >\n-                              Update\n-                            </Link>\n-                            {/* Calulation to get user is new or retained */}\n-                            {/* <td className=\" py-2\">\n-                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n-                                </p>\n-                            </td> */}\n-                            {/* <td className=\" py-2 min-width-px-100\">\n-                              <div\n-                                className=\"btn-group button_group\"\n-                                role=\"group\"\n-                                aria-label=\"Basic example\"\n-                              ></div>\n-                            </td> */}\n-                          </tr>\n-                        ))\n-                      )}\n-                    </tbody>\n-                  </table>\n-                )}\n-              </div>\n-              <div className=\"pt-2\">\n-                <Pagination\n-                  nPages={nPages}\n-                  currentPage={currentPage}\n-                  setCurrentPage={setCurrentPage}\n-                  total={totalData}\n-                  count={agentByEmployeeData.length}\n-                />\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default AgentsEmployee;\n"
                },
                {
                    "date": 1709615054172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -819,40 +819,40 @@\n                                   {empdata.status === \"1\" ? (\n                                     <span\n                                       className={\n                                         !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                          ? \" bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \" bg-info text-white text-center w-100 border rounded-pill\"\n                                       }\n                                     >\n                                       New\n                                     </span>\n                                   ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-warning text-white text-center w-100 border rounded-pill\">\n                                       Prospect\n                                     </span>\n                                   ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n                                       Lead\n                                     </span>\n                                   ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-secondary text-white text-center w-100 border rounded-pill\">\n                                       Reatined\n                                     </span>\n                                   ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-spray text-white text-center w-100 border rounded-pill\">\n                                       Lost\n                                     </span>\n                                   ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-dark text-white text-center w-100 border rounded-pill\">\n                                       Dead\n                                     </span>\n                                   ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                       Reserved\n                                     </span>\n                                   ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\" bg-info text-white text-center w-100 border rounded-pill\">\n                                       New\n                                     </span>\n                                   ) : null}\n                                 </p>\n"
                },
                {
                    "date": 1709615072312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -814,45 +814,45 @@\n                                 </p>\n                               </td>}\n                             {props.visa === \"yes\" ? null : (\n                               <td className=\"py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"font-size-2  text-black-2 mb-0\">\n                                   {empdata.status === \"1\" ? (\n                                     <span\n                                       className={\n                                         !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \" bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \" bg-info text-white text-center w-100 border rounded-pill\"\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n                                       }\n                                     >\n                                       New\n                                     </span>\n                                   ) : empdata.status === \"2\" ? (\n-                                    <span className=\" bg-warning text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n                                       Prospect\n                                     </span>\n                                   ) : empdata.status === \"3\" ? (\n-                                    <span className=\" bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n                                       Lead\n                                     </span>\n                                   ) : empdata.status === \"4\" ? (\n-                                    <span className=\" bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n                                       Reatined\n                                     </span>\n                                   ) : empdata.status === \"5\" ? (\n-                                    <span className=\" bg-spray text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n                                       Lost\n                                     </span>\n                                   ) : empdata.status === \"6\" ? (\n-                                    <span className=\" bg-dark text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n                                       Dead\n                                     </span>\n                                   ) : empdata.status === \"7\" ? (\n-                                    <span className=\" bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                       Reserved\n                                     </span>\n                                   ) : empdata.status === \"0\" ? (\n-                                    <span className=\" bg-info text-white text-center w-100 border rounded-pill\">\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n                                       New\n                                     </span>\n                                   ) : null}\n                                 </p>\n"
                },
                {
                    "date": 1709615147471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -635,9 +635,9 @@\n                           <tr\n                             className=\"text-capitalize applicant_row\"\n                             key={empdata.employee_id}\n                           >\n-                            <td className=\"font-size-3 py-2\">\n+                            <td className=\"font-size-2 py-2\">\n                               {empdata.employee_id}\n                             </td>\n                             <td className=\" py-2\">\n                               <Link\n"
                },
                {
                    "date": 1709615168377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -486,9 +486,9 @@\n                     <thead>\n                       <tr className=\"\">\n                         <th\n                           scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                          className=\" border-0 font-size-2 font-weight-normal py-2\"\n                         >\n                           EID\n                         </th>\n                         <th\n"
                },
                {
                    "date": 1709621340766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -857,24 +857,26 @@\n                                   ) : null}\n                                 </p>\n                               </td>\n                             )}\n-                            <Link\n-                              style={{\n-                                padding: \"0 5px\",\n-                                minWidth: \"auto\",\n-                                height: \"auto\",\n-                              }}\n-                              className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                              // to={`/${empdata.employee_id}`}\n-                              title=\"Update Applicant\"\n-                              onClick={() => {\n-                                setShowChangeAssignedAdminModal(true)\n-                                setemployeeId(empdata.employee_id)\n-                              }}\n-                            >\n-                              <LiaUserEditSolid />\n-                            </Link>\n+                            <td>\n+                              <Link\n+                                style={{\n+                                  padding: \"0 5px\",\n+                                  minWidth: \"auto\",\n+                                  height: \"auto\",\n+                                }}\n+                                className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                                // to={`/${empdata.employee_id}`}\n+                                title=\"Update Applicant\"\n+                                onClick={() => {\n+                                  setShowChangeAssignedAdminModal(true)\n+                                  setemployeeId(empdata.employee_id)\n+                                }}\n+                              >\n+                                <LiaUserEditSolid />\n+                              </Link>\n+                            </td>\n                             {/* Calulation to get user is new or retained */}\n                             {/* <td className=\" py-2\">\n                               <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                 {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n"
                },
                {
                    "date": 1709628810748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,916 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Employee Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //         toast.error(\"Employee already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Employee Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-2 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {<th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>}\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {(\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          ></th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-2 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Employee Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            {props.user_of_page === \"agentAssigned\" ? null : <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>}\n+\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {\n+                              <td className=\" py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.profile_complete === \"100.00\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Complete\n+                                    </span>\n+                                  ) : (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Incomplete\n+                                    </span>\n+                                  )}\n+                                </p>\n+                              </td>}\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2  text-black-2 mb-0\">\n+                                  {empdata.status === \"1\" ? (\n+                                    <span\n+                                      className={\n+                                        !isTimeWithin24Hours(empdata.created_at)\n+                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n+                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n+                                      }\n+                                    >\n+                                      New\n+                                    </span>\n+                                  ) : empdata.status === \"2\" ? (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Prospect\n+                                    </span>\n+                                  ) : empdata.status === \"3\" ? (\n+                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n+                                      Lead\n+                                    </span>\n+                                  ) : empdata.status === \"4\" ? (\n+                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n+                                      Reatined\n+                                    </span>\n+                                  ) : empdata.status === \"5\" ? (\n+                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n+                                      Lost\n+                                    </span>\n+                                  ) : empdata.status === \"6\" ? (\n+                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n+                                      Dead\n+                                    </span>\n+                                  ) : empdata.status === \"7\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Reserved\n+                                    </span>\n+                                  ) : empdata.status === \"0\" ? (\n+                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n+                                      New\n+                                    </span>\n+                                  ) : null}\n+                                </p>\n+                              </td>\n+                            )}\n+                            <td>\n+                              <Link\n+                                style={{\n+                                  padding: \"0 5px\",\n+                                  minWidth: \"auto\",\n+                                  height: \"auto\",\n+                                }}\n+                                className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                                // to={`/${empdata.employee_id}`}\n+                                title=\"Update Applicant\"\n+                                onClick={() => {\n+                                  setShowChangeAssignedAdminModal(true)\n+                                  setemployeeId(empdata.employee_id)\n+                                }}\n+                              >\n+                                <LiaUserEditSolid />\n+                              </Link>\n+                            </td>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                },
                {
                    "date": 1710132787278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -646,9 +646,9 @@\n                                 //   empdata.name !== null\n                                 //     ? () => employeeDetails(empdata.employee_id)\n                                 //     : null\n                                 // }\n-                                title=\"Employee Details\"\n+                                title=\"Candidate Details\"\n                               >\n                                 <div className=\"d-flex profile_box gx-2\">\n                                   <div className=\"media  align-items-center\">\n                                     <div className=\"circle-30 mx-auto overflow-hidden\">\n@@ -913,920 +913,4 @@\n   );\n }\n \n export default AgentsEmployee;\n-import React, { useState, useEffect } from \"react\";\n-// import AdminHeader from \"./header\";\n-// import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-// import { RiDeleteBin5Line } from \"react-icons/ri\";\n-// import Addfollowup from \"../forms/admin/addfollowup\";\n-import {\n-  //   AddLimia,\n-  //   ReservedEmployeeForJob,\n-  getallEmployeeData,\n-  //   GetFilter,\n-  //   AddUpdateVisa,\n-  //   RemoveReservedEmployeeForJob,\n-  //   DeletRespone,\n-} from \"../../api/api\";\n-import moment from \"moment\";\n-import Pagination from \"../common/pagination\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-// import FilterJson from \"../json/filterjson\";\n-// import AddInterview from \"../forms/admin/addInterview.js\";\n-// import LmiaStatus from \"../forms/admin/lmiastatus\";\n-// import { toast, ToastContainer } from \"react-toastify\";\n-// import ChangeJob from \"../forms/admin/changeJobs\";\n-import Loader from \"../common/loader\";\n-import PersonalDetails from \"../forms/user/personal\";\n-// import VisaStatus from \"../forms/user/visaStatus\";\n-// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n-// import { BsArrow90DegRight } from \"react-icons/bs\";\n-// import { RiChatFollowUpLine } from \"react-icons/ri\";\n-// import { LiaCcVisa } from \"react-icons/lia\";\n-// import { PiBriefcaseLight } from \"react-icons/pi\";\n-// import { ImCalendar } from \"react-icons/im\";\n-// import { GrDocumentUser } from \"react-icons/gr\";\n-function AgentsEmployee(props) {\n-  /*show modal and data states assignedUser*/\n-  //   let [documentModal, setDocumentModal] = useState(false);\n-  //   let [showVisaModal, setVisaModal] = useState(false);\n-  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n-  let [apiCall, setApiCall] = useState(props.apiCall);\n-  // let [followup, setFollowUp] = useState(false);\n-  //   let [interview, setInterview] = useState(false);\n-  //   let [lmia, setLimia] = useState(false);\n-  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n-  //   let [resData, setResData] = useState(\"\");\n-  //   let [searchError, setSearchError] = useState(\"\");\n-  let [isLoading, setIsLoading] = useState(true);\n-  let [employeeId, setemployeeId] = useState();\n-  //   let [lmiaStatus, setLmiaStatus] = useState();\n-\n-  /*Filter and search state */\n-  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n-  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n-  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n-  //     useState(\"\");\n-  //   let [Json, setJson] = useState([]);\n-  //   const [search, setSearch] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"employee_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  //   const user_type = localStorage.getItem(\"userType\");\n-  //   let [changeJob, setChangeJob] = useState(false);\n-\n-  /*Function to get the jSon */\n-  //   const JsonData = async () => {\n-  //     try {\n-  //       let Json = await GetFilter();\n-  //       if (Json.data.message === \"No data found\") {\n-  //         setJson([]);\n-  //       } else {\n-  //         setJson(Json.data.data);\n-  //       }\n-  //       setJson(Json.data.data);\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  if (\n-    apiCall === true &&\n-    // showChangeJobModal === false &&\n-    // changeJob === true &&\n-    props.setApiCall\n-  ) {\n-    props.setApiCall(true);\n-  }\n-\n-  /* Function to get the EMployee by agent data*/\n-  const AgentByEmployeeData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallEmployeeData(\n-        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n-        //   ? jobId\n-        //   :\n-        null,\n-        \"\", //skillFilterValue\",\n-        \"\", //experienceTypeFilterValue,\n-        \"\", //search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder,\n-        \"\", //props.filter_by_time,\n-        \"\", //limiaFilterValue,\n-        \"\", //props.status,\n-        \"\", // props.employee_id,\n-        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n-        \"\",\n-        \"\",\n-        props.Agentid,\n-        props.AdminId\n-      );\n-      if (userData.data.length === 0) {\n-        // setResData([]);\n-        setAgentByEmployeeData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAgentByEmployeeData(userData.data);\n-        setTotalData(userData.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    AgentByEmployeeData();\n-    // JsonData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-      //   setChangeJob(false);\n-    }\n-  }, [\n-    // skillFilterValue,\n-    // experienceTypeFilterValue,\n-    // search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    // props.filter_by_time,\n-    apiCall,\n-  ]);\n-\n-  /*Search Onchange function to Search EMployee by agent data */\n-  //   const onSearch = (e) => {\n-  //     const inputValue = e.target.value;\n-  //     setSearch(inputValue);\n-  //     if (inputValue.length > 0) {\n-  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-  //         setSearchError(\"Category Name cannot start with a number.\");\n-  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-  //         setSearchError(\"Cannot use special characters.\");\n-  //       } else {\n-  //         setSearchError(\"\");\n-  //       }\n-  //     } else {\n-  //       setSearchError(\"\");\n-  //     }\n-  //   };\n-\n-  /*Function to Reserved Employee */\n-  //   const ReservedEmployee = async (e) => {\n-  //     // Api call to set employee reserved\n-  //     try {\n-  //       let response = await ReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id,\n-  //         \"1\"\n-  //       );\n-  //       if (response.message === \"Successfully\") {\n-  //         // Api call to set employee Visa\n-  //         let state = { status: \"onboard\", country: e.location };\n-  //         try {\n-  //           const lmia = {\n-  //             lmia_status: \"candidate placement\",\n-  //             apply_id: e.apply_id,\n-  //           };\n-  //           let LimiaResponse = await AddLimia(lmia);\n-  //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n-  //               position: toast.POSITION.TOP_RIGHT,\n-  //               autoClose: 1000,\n-  //             });\n-  //             setApiCall(true);\n-\n-  //             // props.setApiCall(true);\n-  //           }\n-  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n-  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n-  //             // Api call to set employee Limia\n-\n-  //             try {\n-  //             } catch (err) {\n-  //               console.log(err);\n-  //             }\n-  //           }\n-  //         } catch (err) {\n-  //           console.log(err);\n-  //         }\n-  //         ResponseData();\n-  //       }\n-  //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         ResponseData();\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to removed reserved employee */\n-  //   const OnRemoveReservedClick = async (e) => {\n-  //     try {\n-  //       let Response = await RemoveReservedEmployeeForJob(\n-  //         e.apply_id,\n-  //         e.employee_id\n-  //       );\n-  //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         // props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-\n-  /*Function to remove Response */\n-  //   const onResponseDelte = async (e) => {\n-  //     try {\n-  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n-  //       if (response.message === \"successfully deleted\") {\n-  //         toast.success(\"Response Deleted successfully\", {\n-  //           position: toast.POSITION.TOP_RIGHT,\n-  //           autoClose: 1000,\n-  //         });\n-  //         setApiCall(true);\n-  //         props.setApiCall(true);\n-  //       }\n-  //     } catch (err) {\n-  //       console.log(err);\n-  //     }\n-  //   };\n-  /*Function to open add follow up modal */\n-  // const addFollow = (e) => {\n-  //   setFollowUp(true);\n-  //   setResData(e);\n-  //   setJobId(e.job_id);\n-  // };\n-\n-  /*Function to open add Interview up modal */\n-  //   const addnterview = (e) => {\n-  //     setInterview(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /*Function to open add Limia up modal */\n-  //   const addLimia = (e) => {\n-  //     setLimia(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-\n-  /* Function to show the single data to update job */\n-  //   const OpenChangeJob = (e) => {\n-  //     // e.preventDefault();\n-  //     setShowChangeJobModal(true);\n-  //     setResData(e);\n-  //     setJobId(e.job_id);\n-  //   };\n-  /* Function to show the single data to update visa*/\n-  //   const editVisa = (e) => {\n-  //     setVisaModal(true);\n-  //     setemployeeId(e);\n-  //   };\n-  /*Function to open add Document up modal */\n-  //   const AddDoucument = (e) => {\n-  //     setDocumentModal(true);\n-  //     setemployeeId(e.employee_id);\n-  //     setLmiaStatus(e.lmia_status);\n-  //   };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-\n-  /*Funcion to get the user time from updated time */\n-  function isTimeWithin24Hours(createdTime) {\n-    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n-  }\n-  return (\n-    <div\n-      className={\n-        // props.heading === \"Response\" ||\n-        // (props.heading === undefined && user_type === \"admin\")\n-        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n-        //   : props.heading === \"Dashboard\"\n-        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n-        //   :\n-        \"response_main_div\"\n-      }\n-    >\n-      {/* {props.heading === \"Response\" ||\n-      (props.heading === undefined && user_type === \"admin\") ? (\n-        <>\n-          <!-- Header Area -->\n-          <AdminHeader heading={\"Response\"} />\n-          <!-- navbar- -->\n-          <AdminSidebar heading={\"Response\"} />\n-          <ToastContainer />\n-        </>\n-      ) : null} */}\n-      {showChangeAssignedAdminModal &&\n-        <PersonalDetails\n-          user_of_page={props.user_of_page}\n-          employeeId={employeeId}\n-          show={showChangeAssignedAdminModal}\n-          apiCall={apiCall}\n-          setApiCall={setApiCall}\n-          close={() => setShowChangeAssignedAdminModal(false)} />}\n-      <div\n-        className={\n-          //   props.heading === \"Response\" ||\n-          //   (props.heading === undefined && user_type === \"admin\")\n-          //     ? \"dashboard-main-container mt-16\"\n-          //     : props.heading === \"Dashboard\"\n-          //     ? \"\"\n-          //     :\n-          \"response__container\"\n-        }\n-      >\n-        <div\n-          className={\n-            // props.heading === \"Response\" ||\n-            // (props.heading === undefined && user_type === \"admin\")\n-            //   ? \"container\"\n-            //   : props.heading === \"Dashboard\"\n-            //   ? \"\"\n-            //   :\n-            \"container-fluid p-0 m-0\"\n-          }\n-        >\n-          {/* <div\n-            //   className={\n-            //     props.heading === \"Manage Agent\"\n-            //       ? \"response_filters mb-2 align-items-center\"\n-            //       : \"align-items-center\"\n-            //   }\n-            // >\n-            //   <div className=\"page___heading\">\n-            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n-            //   </div>\n-            //   <div\n-            //     className={\n-            //       props.heading === \"Response\" ||\n-            //       (props.heading === undefined && user_type === \"admin\")\n-            //         ? \"row m-0 align-items-center\"\n-            //         : \"d-none\"\n-            //     }\n-            //   >\n-            //     {props.heading === \"\" ? null : (\n-            //       <div className=\"col p-1 form_group mb-3\">\n-            //         <p className=\"input_label\">Search :</p>\n-            //         <input\n-            //           required\n-            //           type=\"text\"\n-            //           className=\"form-control\"\n-            //           placeholder={\"Search Company / Name\"}\n-            //           value={search}\n-            //           name={\"category_name\"}\n-            //           onChange={(e) => {\n-            //             onSearch(e);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //         />\n-            //       </div>\n-            //     )}\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={skillFilterValue}\n-            //           onChange={(e) => {\n-            //             setSkillFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Skil</option>\n-            //           {(Json.Skill || []).map((skill) => (\n-            //             <option value={skill.value} key={skill.id}>\n-            //               {skill.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Skill:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"job\"\n-            //           id=\"job\"\n-            //           value={limiaFilterValue}\n-            //           onChange={(e) => {\n-            //             setLmiaFilter(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select LMIA</option>\n-            //           {(Json.lmia || []).map((lmia) => (\n-            //             <option value={lmia.value} key={lmia.id}>\n-            //               {lmia.value}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"col p-1 form_group mb-3\">\n-            //       <p className=\"input_label\">Filter by Experience:</p>\n-            //       <div className=\"select_div\">\n-            //         <select\n-            //           name=\"experience\"\n-            //           id=\"experience\"\n-            //           value={experienceTypeFilterValue}\n-            //           onChange={(e) => {\n-            //             setExperienceTypeFilterValue(e.target.value);\n-            //             setCurrentPage(1);\n-            //           }}\n-            //           className=\"text-capitalize form-control\"\n-            //         >\n-            //           <option value=\"\">Select Experience</option>\n-            //           {(FilterJson.experience || []).map((ex, i) => (\n-            //             <option value={ex} key={i}>\n-            //               {ex}\n-            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n-            //             </option>\n-            //           ))}\n-            //         </select>\n-            //       </div>\n-            //     </div>\n-            //     <div className=\"float-md-right mt-6\"></div>\n-            //   </div>\n-            //   <small className=\"text-danger\">{searchError}</small>\n-            // </div>\n-        */}\n-          <div className=\"mb-0\">\n-            <div\n-              className={\n-                // props.heading === \"Response\" ||\n-                // (props.heading === undefined && user_type === \"admin\")\n-                //   ? \"\"\n-                //   : props.heading === \"Dashboard\"\n-                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n-                //   :\n-                \"\"\n-              }\n-            >\n-              <div className=\"table-responsive main_table_div\">\n-                {isLoading ? (\n-                  <Loader />\n-                ) : (\n-                  <table className=\"table table-striped main_data_table_inn mb-0\">\n-                    <thead>\n-                      <tr className=\"\">\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-2 font-weight-normal py-2\"\n-                        >\n-                          EID\n-                        </th>\n-                        <th\n-                          scope=\"col\"\n-                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"name\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Name\"\n-                          >\n-                            Name\n-                          </Link>\n-                        </th>\n-                        {props.user_of_page === \"agentAssigned\" ? null : <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          <Link\n-                            to={\"\"}\n-                            onClick={() => {\n-                              handleSort(\"contact_no\");\n-                            }}\n-                            className=\"text-gray\"\n-                            title=\"Sort by Contact\"\n-                          >\n-                            Contact\n-                          </Link>\n-                        </th>}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"created_at\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by date added\"\n-                            >\n-                              Date added\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"education\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Education\"\n-                            >\n-                              Education\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"skill\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Skill\"\n-                            >\n-                              Skills\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.heading === \"Dashboard\" ? (\n-                          \"\"\n-                        ) : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            <Link\n-                              to={\"\"}\n-                              onClick={() => {\n-                                handleSort(\"experience\");\n-                              }}\n-                              className=\"text-gray\"\n-                              title=\"Sort by Experience\"\n-                            >\n-                              Experience\n-                            </Link>\n-                          </th>\n-                        )}\n-                        {props.user_of_page === \"agentAssigned\" ? null : <th\n-                          scope=\"col\"\n-                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                        >\n-                          Profile\n-                        </th>}\n-                        {props.visa === \"yes\" ? null : (\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Status\n-                          </th>\n-                        )}\n-                        {(\n-                          <th\n-                            scope=\"col\"\n-                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n-                          >\n-                            Action\n-                          </th>\n-                        )}\n-                      </tr>\n-                    </thead>\n-                    <tbody>\n-                      {/* Map function to show the data in the list*/}\n-                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n-                        <tr>\n-                          <th\n-                            colSpan={9}\n-                            className=\"bg-white text-center font-size-3\"\n-                          ></th>\n-                        </tr>\n-                      ) : (\n-                        (agentByEmployeeData || []).map((empdata) => (\n-                          <tr\n-                            className=\"text-capitalize applicant_row\"\n-                            key={empdata.employee_id}\n-                          >\n-                            <td className=\"font-size-2 py-2\">\n-                              {empdata.employee_id}\n-                            </td>\n-                            <td className=\" py-2\">\n-                              <Link\n-                                to={`/${empdata.employee_id}`}\n-                                // onClick={\n-                                //   empdata.name !== null\n-                                //     ? () => employeeDetails(empdata.employee_id)\n-                                //     : null\n-                                // }\n-                                title=\"Employee Details\"\n-                              >\n-                                <div className=\"d-flex profile_box gx-2\">\n-                                  <div className=\"media  align-items-center\">\n-                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n-                                        <img\n-                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      ) : (\n-                                        <img\n-                                          src={empdata.profile_photo}\n-                                          alt=\"\"\n-                                          className=\"w-100\"\n-                                        />\n-                                      )}\n-                                    </div>\n-                                  </div>\n-\n-                                  <div className=\" mb-0\">\n-                                    {empdata.name === null ||\n-                                      empdata.name === undefined ||\n-                                      empdata.name === \"undefined\" ||\n-                                      empdata.name === \"\" ? (\n-                                      <p className=\"font-size-3  mb-0\">N/A</p>\n-                                    ) : (\n-                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n-                                        {empdata.name}\n-                                      </p>\n-                                    )}\n-                                    {empdata.gender ||\n-                                      empdata.marital_status ? (\n-                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n-                                        {empdata.gender === \"female\"\n-                                          ? \"F\"\n-                                          : empdata.gender === \"male\"\n-                                            ? \"M\"\n-                                            : \"O\"}\n-                                        {/*Calculation of age from date of birth*/}\n-                                        (\n-                                        {empdata.marital_status ||\n-                                          empdata.date_of_birth\n-                                          ? `${empdata.marital_status\n-                                          },${moment().diff(\n-                                            empdata.date_of_birth,\n-                                            \"years\"\n-                                          )} Y`\n-                                          : null}\n-                                        )\n-                                      </p>\n-                                    ) : null}\n-                                    {empdata.is_featured === \"1\" ||\n-                                      empdata.is_featured === 1 ? (\n-                                      <span className=\"bg-orange text-white featured_tag\">\n-                                        Featured\n-                                      </span>\n-                                    ) : null}\n-                                    {empdata.created_by_admin === \"0\" ||\n-                                      empdata.created_by_admin === 0 ? (\n-                                      <span className=\"bg-info text-white web_tag\">\n-                                        Web\n-                                      </span>\n-                                    ) : null}\n-                                  </div>\n-                                </div>\n-                              </Link>\n-                            </td>\n-                            {props.user_of_page === \"agentAssigned\" ? null : <td className=\"py-2 \">\n-                              {empdata.contact_no === null ? null : (\n-                                <p className=\"m-0\">\n-                                  +\n-                                  <Link\n-                                    className=\"text-dark font-size-3\"\n-                                    to={`tel:${empdata.contact_no}`}\n-                                  >\n-                                    {empdata.contact_no}\n-                                  </Link>\n-                                </p>\n-                              )}\n-                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                <p className=\"text-gray font-size-2 m-0\">\n-                                  <Link\n-                                    className=\"text-dark\"\n-                                    to={`mailto:${empdata.email}`}\n-                                  >\n-                                    {empdata.email}\n-                                  </Link>\n-                                </p>\n-                              </h3>\n-                            </td>}\n-\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.language === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {/* {empdata.language} */}\n-                                    {/* {moment(\n-                                      empdata.created_at,\n-                                      \"YYYY-MM-DD HH:mm:ss\"\n-                                    ).fromNow()} */}\n-                                    {moment(empdata.created_at).format(\n-                                      \"DD MMMM, YYYY\"\n-                                    )}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.education === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.education}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.skill === null ? (\n-                                  <p className=\"font-size-3  mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n-                                    {empdata.skill}\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.heading === \"Dashboard\" ? (\n-                              \"\"\n-                            ) : (\n-                              <td className=\" py-2\">\n-                                {empdata.experience === null ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                    {empdata.experience} Years\n-                                  </p>\n-                                )}\n-                              </td>\n-                            )}\n-                            {props.user_of_page === \"agentAssigned\" ? null :\n-                              <td className=\" py-2\">\n-                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n-                                  {empdata.profile_complete === \"100.00\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Complete\n-                                    </span>\n-                                  ) : (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Incomplete\n-                                    </span>\n-                                  )}\n-                                </p>\n-                              </td>}\n-                            {props.visa === \"yes\" ? null : (\n-                              <td className=\"py-2\">\n-                                <p className=\"font-size-2  text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n-                                </p>\n-                              </td>\n-                            )}\n-                            <td>\n-                              <Link\n-                                style={{\n-                                  padding: \"0 5px\",\n-                                  minWidth: \"auto\",\n-                                  height: \"auto\",\n-                                }}\n-                                className=\"btn btn-sm btn-outline-info action_btn text-center\"\n-                                // to={`/${empdata.employee_id}`}\n-                                title=\"Update Applicant\"\n-                                onClick={() => {\n-                                  setShowChangeAssignedAdminModal(true)\n-                                  setemployeeId(empdata.employee_id)\n-                                }}\n-                              >\n-                                <LiaUserEditSolid />\n-                              </Link>\n-                            </td>\n-                            {/* Calulation to get user is new or retained */}\n-                            {/* <td className=\" py-2\">\n-                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n-                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n-                                </p>\n-                            </td> */}\n-                            {/* <td className=\" py-2 min-width-px-100\">\n-                              <div\n-                                className=\"btn-group button_group\"\n-                                role=\"group\"\n-                                aria-label=\"Basic example\"\n-                              ></div>\n-                            </td> */}\n-                          </tr>\n-                        ))\n-                      )}\n-                    </tbody>\n-                  </table>\n-                )}\n-              </div>\n-              <div className=\"pt-2\">\n-                <Pagination\n-                  nPages={nPages}\n-                  currentPage={currentPage}\n-                  setCurrentPage={setCurrentPage}\n-                  total={totalData}\n-                  count={agentByEmployeeData.length}\n-                />\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n-\n-export default AgentsEmployee;\n"
                },
                {
                    "date": 1710134375252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,9 @@\n   //             apply_id: e.apply_id,\n   //           };\n   //           let LimiaResponse = await AddLimia(lmia);\n   //           if (LimiaResponse.message === \"Data added successfully\") {\n-  //             toast.success(\"Employee Reserved successfully\", {\n+  //             toast.success(\"Candidate Reserved successfully\", {\n   //               position: toast.POSITION.TOP_RIGHT,\n   //               autoClose: 1000,\n   //             });\n   //             setApiCall(true);\n@@ -225,9 +225,9 @@\n   //         e.apply_id,\n   //         e.employee_id\n   //       );\n   //       if (Response.message === \"successfully\") {\n-  //         toast.success(\"Employee Removed successfully\", {\n+  //         toast.success(\"Candidate Removed successfully\", {\n   //           position: toast.POSITION.TOP_RIGHT,\n   //           autoClose: 1000,\n   //         });\n   //         setApiCall(true);\n"
                },
                {
                    "date": 1710135185762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n   //         }\n   //         ResponseData();\n   //       }\n   //       if (response.message === \"already reserved\") {\n-  //         toast.error(\"Employee already reserved for another job\", {\n+  //          toast.error(\"Candidateerror(\"Employee already reserved for another job\", {\n   //           position: toast.POSITION.TOP_RIGHT,\n   //           autoClose: 1000,\n   //         });\n   //         ResponseData();\n"
                },
                {
                    "date": 1710135205829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n   //         }\n   //         ResponseData();\n   //       }\n   //       if (response.message === \"already reserved\") {\n-  //          toast.error(\"Candidateerror(\"Employee already reserved for another job\", {\n+  //           toast.error(\"Candidate already reserved for another job\", {\n   //           position: toast.POSITION.TOP_RIGHT,\n   //           autoClose: 1000,\n   //         });\n   //         ResponseData();\n"
                },
                {
                    "date": 1710320971204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -815,47 +815,32 @@\n                               </td>}\n                             {props.visa === \"yes\" ? null : (\n                               <td className=\"py-2\">\n                                 <p className=\"font-size-2  text-black-2 mb-0\">\n-                                  {empdata.status === \"1\" ? (\n-                                    <span\n-                                      className={\n-                                        !isTimeWithin24Hours(empdata.created_at)\n-                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n-                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n-                                      }\n-                                    >\n-                                      New\n-                                    </span>\n-                                  ) : empdata.status === \"2\" ? (\n-                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n-                                      Prospect\n-                                    </span>\n-                                  ) : empdata.status === \"3\" ? (\n-                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n-                                      Lead\n-                                    </span>\n-                                  ) : empdata.status === \"4\" ? (\n-                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n-                                      Reatined\n-                                    </span>\n-                                  ) : empdata.status === \"5\" ? (\n-                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n-                                      Lost\n-                                    </span>\n-                                  ) : empdata.status === \"6\" ? (\n-                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n-                                      Dead\n-                                    </span>\n-                                  ) : empdata.status === \"7\" ? (\n-                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n-                                      Reserved\n-                                    </span>\n-                                  ) : empdata.status === \"0\" ? (\n-                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n-                                      New\n-                                    </span>\n-                                  ) : null}\n+                                <span\n+                              className={`p-1 text-white text-center w-100 border rounded-pill ${empdata.status === \"1\" || empdata.status === \"0\" ? (\n+                                !isTimeWithin24Hours(empdata.created_at)\n+                                  ? \"bg-danger \"\n+                                  : \"bg-info \") : empdata.status === \"2\" ?\n+                                \"bg-warning\" : empdata.status === \"3\" ?\n+                                  \"bg-coral-opacity-visible\" : empdata.status === \"4\" ?\n+                                    \"bg-secondary\" : empdata.status === \"5\" ?\n+                                      \"bg-spray\" : empdata.status === \"6\" ?\n+                                        \"bg-dark\" : empdata.status === \"7\" ?\n+                                          \"bg-primary-opacity-8\" : empdata.status === \"8\" ?\n+                                            \"bg-eastern\" : \"\"\n+                                }`}\n+                            >\n+                              {empdata.status === \"1\" || empdata.status === \"0\" ?\n+                                \"New\" : empdata.status === \"2\" ?\n+                                  \"Prospect\" : empdata.status === \"3\" ?\n+                                    \"Lead\" : empdata.status === \"4\" ?\n+                                      \"Retained\" : empdata.status === \"5\" ?\n+                                        \"Lost\" : empdata.status === \"6\" ?\n+                                          \"Dead\" : empdata.status === \"7\" ?\n+                                            \"Working on\" : empdata.status === \"8\" ?\n+                                              \"Submitted\" : \"\"}\n+                            </span>\n                                 </p>\n                               </td>\n                             )}\n                             <td>\n"
                },
                {
                    "date": 1711173822331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -651,9 +651,9 @@\n                               >\n                                 <div className=\"d-flex profile_box gx-2\">\n                                   <div className=\"media  align-items-center\">\n                                     <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                      {empdata.profile_photo === null ? (\n+                                      {!empdata.profile_photo||empdata.profile_photo === null ? (\n                                         <img\n                                           src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                           alt=\"\"\n                                           className=\"w-100\"\n"
                },
                {
                    "date": 1712035474473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import React, { useState, useEffect } from \"react\";\n+// import AdminHeader from \"./header\";\n+// import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+// import { RiDeleteBin5Line } from \"react-icons/ri\";\n+// import Addfollowup from \"../forms/admin/addfollowup\";\n+import {\n+  //   AddLimia,\n+  //   ReservedEmployeeForJob,\n+  getallEmployeeData,\n+  //   GetFilter,\n+  //   AddUpdateVisa,\n+  //   RemoveReservedEmployeeForJob,\n+  //   DeletRespone,\n+} from \"../../api/api\";\n+import moment from \"moment\";\n+import Pagination from \"../common/pagination\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+// import FilterJson from \"../json/filterjson\";\n+// import AddInterview from \"../forms/admin/addInterview.js\";\n+// import LmiaStatus from \"../forms/admin/lmiastatus\";\n+// import { toast, ToastContainer } from \"react-toastify\";\n+// import ChangeJob from \"../forms/admin/changeJobs\";\n+import Loader from \"../common/loader\";\n+import PersonalDetails from \"../forms/user/personal\";\n+// import VisaStatus from \"../forms/user/visaStatus\";\n+// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n+// import { BsArrow90DegRight } from \"react-icons/bs\";\n+// import { RiChatFollowUpLine } from \"react-icons/ri\";\n+// import { LiaCcVisa } from \"react-icons/lia\";\n+// import { PiBriefcaseLight } from \"react-icons/pi\";\n+// import { ImCalendar } from \"react-icons/im\";\n+// import { GrDocumentUser } from \"react-icons/gr\";\n+function AgentsEmployee(props) {\n+  /*show modal and data states assignedUser*/\n+  //   let [documentModal, setDocumentModal] = useState(false);\n+  //   let [showVisaModal, setVisaModal] = useState(false);\n+  let [showChangeAssignedAdminModal, setShowChangeAssignedAdminModal] = useState(false);\n+  let [apiCall, setApiCall] = useState(props.apiCall);\n+  // let [followup, setFollowUp] = useState(false);\n+  //   let [interview, setInterview] = useState(false);\n+  //   let [lmia, setLimia] = useState(false);\n+  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n+  //   let [resData, setResData] = useState(\"\");\n+  //   let [searchError, setSearchError] = useState(\"\");\n+  let [isLoading, setIsLoading] = useState(true);\n+  let [employeeId, setemployeeId] = useState();\n+  //   let [lmiaStatus, setLmiaStatus] = useState();\n+\n+  /*Filter and search state */\n+  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n+  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n+  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n+  //     useState(\"\");\n+  //   let [Json, setJson] = useState([]);\n+  //   const [search, setSearch] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"employee_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  //   const user_type = localStorage.getItem(\"userType\");\n+  //   let [changeJob, setChangeJob] = useState(false);\n+\n+  /*Function to get the jSon */\n+  //   const JsonData = async () => {\n+  //     try {\n+  //       let Json = await GetFilter();\n+  //       if (Json.data.message === \"No data found\") {\n+  //         setJson([]);\n+  //       } else {\n+  //         setJson(Json.data.data);\n+  //       }\n+  //       setJson(Json.data.data);\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  if (\n+    apiCall === true &&\n+    // showChangeJobModal === false &&\n+    // changeJob === true &&\n+    props.setApiCall\n+  ) {\n+    props.setApiCall(true);\n+  }\n+\n+  /* Function to get the EMployee by agent data*/\n+  const AgentByEmployeeData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallEmployeeData(\n+        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n+        //   ? jobId\n+        //   :\n+        null,\n+        \"\", //skillFilterValue\",\n+        \"\", //experienceTypeFilterValue,\n+        \"\", //search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder,\n+        \"\", //props.filter_by_time,\n+        \"\", //limiaFilterValue,\n+        \"\", //props.status,\n+        \"\", // props.employee_id,\n+        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n+        \"\",\n+        \"\",\n+        props.Agentid,\n+        props.AdminId\n+      );\n+      if (userData.data.length === 0) {\n+        // setResData([]);\n+        setAgentByEmployeeData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAgentByEmployeeData(userData.data);\n+        setTotalData(userData.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    AgentByEmployeeData();\n+    // JsonData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+      //   setChangeJob(false);\n+    }\n+  }, [\n+    // skillFilterValue,\n+    // experienceTypeFilterValue,\n+    // search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    // props.filter_by_time,\n+    apiCall,\n+  ]);\n+\n+  /*Search Onchange function to Search EMployee by agent data */\n+  //   const onSearch = (e) => {\n+  //     const inputValue = e.target.value;\n+  //     setSearch(inputValue);\n+  //     if (inputValue.length > 0) {\n+  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+  //         setSearchError(\"Category Name cannot start with a number.\");\n+  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+  //         setSearchError(\"Cannot use special characters.\");\n+  //       } else {\n+  //         setSearchError(\"\");\n+  //       }\n+  //     } else {\n+  //       setSearchError(\"\");\n+  //     }\n+  //   };\n+\n+  /*Function to Reserved Employee */\n+  //   const ReservedEmployee = async (e) => {\n+  //     // Api call to set employee reserved\n+  //     try {\n+  //       let response = await ReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id,\n+  //         \"1\"\n+  //       );\n+  //       if (response.message === \"Successfully\") {\n+  //         // Api call to set employee Visa\n+  //         let state = { status: \"onboard\", country: e.location };\n+  //         try {\n+  //           const lmia = {\n+  //             lmia_status: \"candidate placement\",\n+  //             apply_id: e.apply_id,\n+  //           };\n+  //           let LimiaResponse = await AddLimia(lmia);\n+  //           if (LimiaResponse.message === \"Data added successfully\") {\n+  //             toast.success(\"Candidate Reserved successfully\", {\n+  //               position: toast.POSITION.TOP_RIGHT,\n+  //               autoClose: 1000,\n+  //             });\n+  //             setApiCall(true);\n+\n+  //             // props.setApiCall(true);\n+  //           }\n+  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n+  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n+  //             // Api call to set employee Limia\n+\n+  //             try {\n+  //             } catch (err) {\n+  //               console.log(err);\n+  //             }\n+  //           }\n+  //         } catch (err) {\n+  //           console.log(err);\n+  //         }\n+  //         ResponseData();\n+  //       }\n+  //       if (response.message === \"already reserved\") {\n+  //           toast.error(\"Candidate already reserved for another job\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         ResponseData();\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to removed reserved employee */\n+  //   const OnRemoveReservedClick = async (e) => {\n+  //     try {\n+  //       let Response = await RemoveReservedEmployeeForJob(\n+  //         e.apply_id,\n+  //         e.employee_id\n+  //       );\n+  //       if (Response.message === \"successfully\") {\n+  //         toast.success(\"Candidate Removed successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         // props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+\n+  /*Function to remove Response */\n+  //   const onResponseDelte = async (e) => {\n+  //     try {\n+  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n+  //       if (response.message === \"successfully deleted\") {\n+  //         toast.success(\"Response Deleted successfully\", {\n+  //           position: toast.POSITION.TOP_RIGHT,\n+  //           autoClose: 1000,\n+  //         });\n+  //         setApiCall(true);\n+  //         props.setApiCall(true);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   };\n+  /*Function to open add follow up modal */\n+  // const addFollow = (e) => {\n+  //   setFollowUp(true);\n+  //   setResData(e);\n+  //   setJobId(e.job_id);\n+  // };\n+\n+  /*Function to open add Interview up modal */\n+  //   const addnterview = (e) => {\n+  //     setInterview(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /*Function to open add Limia up modal */\n+  //   const addLimia = (e) => {\n+  //     setLimia(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+\n+  /* Function to show the single data to update job */\n+  //   const OpenChangeJob = (e) => {\n+  //     // e.preventDefault();\n+  //     setShowChangeJobModal(true);\n+  //     setResData(e);\n+  //     setJobId(e.job_id);\n+  //   };\n+  /* Function to show the single data to update visa*/\n+  //   const editVisa = (e) => {\n+  //     setVisaModal(true);\n+  //     setemployeeId(e);\n+  //   };\n+  /*Function to open add Document up modal */\n+  //   const AddDoucument = (e) => {\n+  //     setDocumentModal(true);\n+  //     setemployeeId(e.employee_id);\n+  //     setLmiaStatus(e.lmia_status);\n+  //   };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+\n+  /*Funcion to get the user time from updated time */\n+  function isTimeWithin24Hours(createdTime) {\n+    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n+  }\n+  return (\n+    <div\n+      className={\n+        // props.heading === \"Response\" ||\n+        // (props.heading === undefined && user_type === \"admin\")\n+        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n+        //   : props.heading === \"Dashboard\"\n+        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n+        //   :\n+        \"response_main_div\"\n+      }\n+    >\n+      {/* {props.heading === \"Response\" ||\n+      (props.heading === undefined && user_type === \"admin\") ? (\n+        <>\n+          <!-- Header Area -->\n+          <AdminHeader heading={\"Response\"} />\n+          <!-- navbar- -->\n+          <AdminSidebar heading={\"Response\"} />\n+          <ToastContainer />\n+        </>\n+      ) : null} */}\n+      {showChangeAssignedAdminModal &&\n+        <PersonalDetails\n+          user_of_page={props.user_of_page}\n+          employeeId={employeeId}\n+          show={showChangeAssignedAdminModal}\n+          apiCall={apiCall}\n+          setApiCall={setApiCall}\n+          close={() => setShowChangeAssignedAdminModal(false)} />}\n+      <div\n+        className={\n+          //   props.heading === \"Response\" ||\n+          //   (props.heading === undefined && user_type === \"admin\")\n+          //     ? \"dashboard-main-container mt-16\"\n+          //     : props.heading === \"Dashboard\"\n+          //     ? \"\"\n+          //     :\n+          \"response__container\"\n+        }\n+      >\n+        <div\n+          className={\n+            // props.heading === \"Response\" ||\n+            // (props.heading === undefined && user_type === \"admin\")\n+            //   ? \"container\"\n+            //   : props.heading === \"Dashboard\"\n+            //   ? \"\"\n+            //   :\n+            \"container-fluid p-0 m-0\"\n+          }\n+        >\n+          {/* <div\n+            //   className={\n+            //     props.heading === \"Manage Agent\"\n+            //       ? \"response_filters mb-2 align-items-center\"\n+            //       : \"align-items-center\"\n+            //   }\n+            // >\n+            //   <div className=\"page___heading\">\n+            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n+            //   </div>\n+            //   <div\n+            //     className={\n+            //       props.heading === \"Response\" ||\n+            //       (props.heading === undefined && user_type === \"admin\")\n+            //         ? \"row m-0 align-items-center\"\n+            //         : \"d-none\"\n+            //     }\n+            //   >\n+            //     {props.heading === \"\" ? null : (\n+            //       <div className=\"col p-1 form_group mb-3\">\n+            //         <p className=\"input_label\">Search :</p>\n+            //         <input\n+            //           required\n+            //           type=\"text\"\n+            //           className=\"form-control\"\n+            //           placeholder={\"Search Company / Name\"}\n+            //           value={search}\n+            //           name={\"category_name\"}\n+            //           onChange={(e) => {\n+            //             onSearch(e);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //         />\n+            //       </div>\n+            //     )}\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={skillFilterValue}\n+            //           onChange={(e) => {\n+            //             setSkillFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Skil</option>\n+            //           {(Json.Skill || []).map((skill) => (\n+            //             <option value={skill.value} key={skill.id}>\n+            //               {skill.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Skill:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"job\"\n+            //           id=\"job\"\n+            //           value={limiaFilterValue}\n+            //           onChange={(e) => {\n+            //             setLmiaFilter(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select LMIA</option>\n+            //           {(Json.lmia || []).map((lmia) => (\n+            //             <option value={lmia.value} key={lmia.id}>\n+            //               {lmia.value}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"col p-1 form_group mb-3\">\n+            //       <p className=\"input_label\">Filter by Experience:</p>\n+            //       <div className=\"select_div\">\n+            //         <select\n+            //           name=\"experience\"\n+            //           id=\"experience\"\n+            //           value={experienceTypeFilterValue}\n+            //           onChange={(e) => {\n+            //             setExperienceTypeFilterValue(e.target.value);\n+            //             setCurrentPage(1);\n+            //           }}\n+            //           className=\"text-capitalize form-control\"\n+            //         >\n+            //           <option value=\"\">Select Experience</option>\n+            //           {(FilterJson.experience || []).map((ex, i) => (\n+            //             <option value={ex} key={i}>\n+            //               {ex}\n+            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n+            //             </option>\n+            //           ))}\n+            //         </select>\n+            //       </div>\n+            //     </div>\n+            //     <div className=\"float-md-right mt-6\"></div>\n+            //   </div>\n+            //   <small className=\"text-danger\">{searchError}</small>\n+            // </div>\n+        */}\n+          <div className=\"mb-0\">\n+            <div\n+              className={\n+                // props.heading === \"Response\" ||\n+                // (props.heading === undefined && user_type === \"admin\")\n+                //   ? \"\"\n+                //   : props.heading === \"Dashboard\"\n+                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n+                //   :\n+                \"\"\n+              }\n+            >\n+              <div className=\"table-responsive main_table_div\">\n+                {isLoading ? (\n+                  <Loader />\n+                ) : (\n+                  <table className=\"table table-striped main_data_table_inn mb-0\">\n+                    <thead>\n+                      <tr className=\"\">\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-2 font-weight-normal py-2\"\n+                        >\n+                          EID\n+                        </th>\n+                        <th\n+                          scope=\"col\"\n+                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"name\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Name\"\n+                          >\n+                            Name\n+                          </Link>\n+                        </th>\n+                        {props.user_of_page === \"agentAssigned\" ? null : <th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          <Link\n+                            to={\"\"}\n+                            onClick={() => {\n+                              handleSort(\"contact_no\");\n+                            }}\n+                            className=\"text-gray\"\n+                            title=\"Sort by Contact\"\n+                          >\n+                            Contact\n+                          </Link>\n+                        </th>}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"created_at\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by date added\"\n+                            >\n+                              Date added\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"education\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Education\"\n+                            >\n+                              Education\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"skill\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Skill\"\n+                            >\n+                              Skills\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {props.heading === \"Dashboard\" ? (\n+                          \"\"\n+                        ) : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            <Link\n+                              to={\"\"}\n+                              onClick={() => {\n+                                handleSort(\"experience\");\n+                              }}\n+                              className=\"text-gray\"\n+                              title=\"Sort by Experience\"\n+                            >\n+                              Experience\n+                            </Link>\n+                          </th>\n+                        )}\n+                        {<th\n+                          scope=\"col\"\n+                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                        >\n+                          Profile\n+                        </th>}\n+                        {props.visa === \"yes\" ? null : (\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Status\n+                          </th>\n+                        )}\n+                        {(\n+                          <th\n+                            scope=\"col\"\n+                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n+                          >\n+                            Action\n+                          </th>\n+                        )}\n+                      </tr>\n+                    </thead>\n+                    <tbody>\n+                      {/* Map function to show the data in the list*/}\n+                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n+                        <tr>\n+                          <th\n+                            colSpan={9}\n+                            className=\"bg-white text-center font-size-3\"\n+                          >\n+                            No Data Found\n+                          </th>\n+                        </tr>\n+                      ) : (\n+                        (agentByEmployeeData || []).map((empdata) => (\n+                          <tr\n+                            className=\"text-capitalize applicant_row\"\n+                            key={empdata.employee_id}\n+                          >\n+                            <td className=\"font-size-2 py-2\">\n+                              {empdata.employee_id}\n+                            </td>\n+                            <td className=\" py-2\">\n+                              <Link\n+                                to={`/${empdata.employee_id}`}\n+                                // onClick={\n+                                //   empdata.name !== null\n+                                //     ? () => employeeDetails(empdata.employee_id)\n+                                //     : null\n+                                // }\n+                                title=\"Candidate Details\"\n+                              >\n+                                <div className=\"d-flex profile_box gx-2\">\n+                                  <div className=\"media  align-items-center\">\n+                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                      {!empdata.profile_photo || empdata.profile_photo === null ? (\n+                                        <img\n+                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      ) : (\n+                                        <img\n+                                          src={empdata.profile_photo}\n+                                          alt=\"\"\n+                                          className=\"w-100\"\n+                                        />\n+                                      )}\n+                                    </div>\n+                                  </div>\n+\n+                                  <div className=\" mb-0\">\n+                                    {empdata.name === null ||\n+                                      empdata.name === undefined ||\n+                                      empdata.name === \"undefined\" ||\n+                                      empdata.name === \"\" ? (\n+                                      <p className=\"font-size-3  mb-0\">N/A</p>\n+                                    ) : (\n+                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n+                                        {empdata.name}\n+                                      </p>\n+                                    )}\n+                                    {empdata.gender ||\n+                                      empdata.marital_status ? (\n+                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n+                                        {empdata.gender === \"female\"\n+                                          ? \"F\"\n+                                          : empdata.gender === \"male\"\n+                                            ? \"M\"\n+                                            : \"O\"}\n+                                        {/*Calculation of age from date of birth*/}\n+                                        (\n+                                        {empdata.marital_status ||\n+                                          empdata.date_of_birth\n+                                          ? `${empdata.marital_status\n+                                          },${moment().diff(\n+                                            empdata.date_of_birth,\n+                                            \"years\"\n+                                          )} Y`\n+                                          : null}\n+                                        )\n+                                      </p>\n+                                    ) : null}\n+                                    {empdata.is_featured === \"1\" ||\n+                                      empdata.is_featured === 1 ? (\n+                                      <span className=\"bg-orange text-white featured_tag\">\n+                                        Featured\n+                                      </span>\n+                                    ) : null}\n+                                    {empdata.created_by_admin === \"0\" ||\n+                                      empdata.created_by_admin === 0 ? (\n+                                      <span className=\"bg-info text-white web_tag\">\n+                                        Web\n+                                      </span>\n+                                    ) : null}\n+                                  </div>\n+                                </div>\n+                              </Link>\n+                            </td>\n+                            {props.user_of_page === \"agentAssigned\" ? null : <td className=\"py-2 \">\n+                              {empdata.contact_no === null ? null : (\n+                                <p className=\"m-0\">\n+                                  +\n+                                  <Link\n+                                    className=\"text-dark font-size-3\"\n+                                    to={`tel:${empdata.contact_no}`}\n+                                  >\n+                                    {empdata.contact_no}\n+                                  </Link>\n+                                </p>\n+                              )}\n+                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                <p className=\"text-gray font-size-2 m-0\">\n+                                  <Link\n+                                    className=\"text-dark\"\n+                                    to={`mailto:${empdata.email}`}\n+                                  >\n+                                    {empdata.email}\n+                                  </Link>\n+                                </p>\n+                              </h3>\n+                            </td>}\n+\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.language === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {/* {empdata.language} */}\n+                                    {/* {moment(\n+                                      empdata.created_at,\n+                                      \"YYYY-MM-DD HH:mm:ss\"\n+                                    ).fromNow()} */}\n+                                    {moment(empdata.created_at).format(\n+                                      \"DD MMMM, YYYY\"\n+                                    )}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.education === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.education}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.skill === null ? (\n+                                  <p className=\"font-size-3  mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n+                                    {empdata.skill}\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {props.heading === \"Dashboard\" ? (\n+                              \"\"\n+                            ) : (\n+                              <td className=\" py-2\">\n+                                {empdata.experience === null ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                    {empdata.experience} Years\n+                                  </p>\n+                                )}\n+                              </td>\n+                            )}\n+                            {\n+                              <td className=\" py-2\">\n+                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n+                                  {empdata.profile_complete === \"100.00\" ? (\n+                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n+                                      Complete\n+                                    </span>\n+                                  ) : (\n+                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n+                                      Incomplete\n+                                    </span>\n+                                  )}\n+                                </p>\n+                              </td>}\n+                            {props.visa === \"yes\" ? null : (\n+                              <td className=\"py-2\">\n+                                <p className=\"font-size-2  text-black-2 mb-0\">\n+                                  <span\n+                                    className={`p-1 text-white text-center w-100 border rounded-pill ${empdata.status === \"1\" || empdata.status === \"0\" ? (\n+                                      !isTimeWithin24Hours(empdata.created_at)\n+                                        ? \"bg-danger \"\n+                                        : \"bg-info \") : empdata.status === \"2\" ?\n+                                      \"bg-warning\" : empdata.status === \"3\" ?\n+                                        \"bg-coral-opacity-visible\" : empdata.status === \"4\" ?\n+                                          \"bg-secondary\" : empdata.status === \"5\" ?\n+                                            \"bg-spray\" : empdata.status === \"6\" ?\n+                                              \"bg-dark\" : empdata.status === \"7\" ?\n+                                                \"bg-primary-opacity-8\" : empdata.status === \"8\" ?\n+                                                  \"bg-eastern\" : \"\"\n+                                      }`}\n+                                  >\n+                                    {empdata.status === \"1\" || empdata.status === \"0\" ?\n+                                      \"New\" : empdata.status === \"2\" ?\n+                                        \"Prospect\" : empdata.status === \"3\" ?\n+                                          \"Lead\" : empdata.status === \"4\" ?\n+                                            \"Retained\" : empdata.status === \"5\" ?\n+                                              \"Lost\" : empdata.status === \"6\" ?\n+                                                \"Dead\" : empdata.status === \"7\" ?\n+                                                  \"Working on\" : empdata.status === \"8\" ?\n+                                                    \"Submitted\" : \"\"}\n+                                  </span>\n+                                </p>\n+                              </td>\n+                            )}\n+                            <td>\n+                              <Link\n+                                style={{\n+                                  padding: \"0 5px\",\n+                                  minWidth: \"auto\",\n+                                  height: \"auto\",\n+                                }}\n+                                className=\"btn btn-sm btn-outline-info action_btn text-center\"\n+                                // to={`/${empdata.employee_id}`}\n+                                title=\"Update Applicant\"\n+                                onClick={() => {\n+                                  setShowChangeAssignedAdminModal(true)\n+                                  setemployeeId(empdata.employee_id)\n+                                }}\n+                              >\n+                                <LiaUserEditSolid />\n+                              </Link>\n+                            </td>\n+                            {/* Calulation to get user is new or retained */}\n+                            {/* <td className=\" py-2\">\n+                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n+                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n+                                </p>\n+                            </td> */}\n+                            {/* <td className=\" py-2 min-width-px-100\">\n+                              <div\n+                                className=\"btn-group button_group\"\n+                                role=\"group\"\n+                                aria-label=\"Basic example\"\n+                              ></div>\n+                            </td> */}\n+                          </tr>\n+                        ))\n+                      )}\n+                    </tbody>\n+                  </table>\n+                )}\n+              </div>\n+              <div className=\"pt-2\">\n+                <Pagination\n+                  nPages={nPages}\n+                  currentPage={currentPage}\n+                  setCurrentPage={setCurrentPage}\n+                  total={totalData}\n+                  count={agentByEmployeeData.length}\n+                />\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+\n+export default AgentsEmployee;\n"
                }
            ],
            "date": 1709117039268,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\n// import AdminHeader from \"./header\";\n// import AdminSidebar from \"./sidebar\";\nimport { Link } from \"react-router-dom\";\n// import { RiDeleteBin5Line } from \"react-icons/ri\";\n// import Addfollowup from \"../forms/admin/addfollowup\";\nimport {\n  //   AddLimia,\n  //   ReservedEmployeeForJob,\n  getallEmployeeData,\n  //   GetFilter,\n  //   AddUpdateVisa,\n  //   RemoveReservedEmployeeForJob,\n  //   DeletRespone,\n} from \"../../api/api\";\nimport moment from \"moment\";\nimport Pagination from \"../common/pagination\";\n// import FilterJson from \"../json/filterjson\";\n// import AddInterview from \"../forms/admin/addInterview.js\";\n// import LmiaStatus from \"../forms/admin/lmiastatus\";\n// import { toast, ToastContainer } from \"react-toastify\";\n// import ChangeJob from \"../forms/admin/changeJobs\";\nimport Loader from \"../common/loader\";\n// import VisaStatus from \"../forms/user/visaStatus\";\n// import DocumentModal from \"../forms/admin/EmployeeDocumentModal\";\n// import { BsArrow90DegRight } from \"react-icons/bs\";\n// import { RiChatFollowUpLine } from \"react-icons/ri\";\n// import { LiaCcVisa } from \"react-icons/lia\";\n// import { PiBriefcaseLight } from \"react-icons/pi\";\n// import { ImCalendar } from \"react-icons/im\";\n// import { GrDocumentUser } from \"react-icons/gr\";\nfunction AgentsEmployee(props) {\n  /*show modal and data states */\n  //   let [documentModal, setDocumentModal] = useState(false);\n  //   let [showVisaModal, setVisaModal] = useState(false);\n  //   let [showChangeJobModal, setShowChangeJobModal] = useState(false);\n  let [apiCall, setApiCall] = useState(props.apiCall);\n  // let [followup, setFollowUp] = useState(false);\n  //   let [interview, setInterview] = useState(false);\n  //   let [lmia, setLimia] = useState(false);\n  let [agentByEmployeeData, setAgentByEmployeeData] = useState([]);\n  //   let [resData, setResData] = useState(\"\");\n  //   let [searchError, setSearchError] = useState(\"\");\n  let [isLoading, setIsLoading] = useState(true);\n  //   let [employeeId, setemployeeId] = useState();\n  //   let [lmiaStatus, setLmiaStatus] = useState();\n\n  /*Filter and search state */\n  //   const [skillFilterValue, setSkillFilter] = useState(\"\");\n  //   const [limiaFilterValue, setLmiaFilter] = useState(\"\");\n  //   const [experienceTypeFilterValue, setExperienceTypeFilterValue] =\n  //     useState(\"\");\n  //   let [Json, setJson] = useState([]);\n  //   const [search, setSearch] = useState(\"\");\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"employee_id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  //   const user_type = localStorage.getItem(\"userType\");\n  //   let [changeJob, setChangeJob] = useState(false);\n\n  /*Function to get the jSon */\n  //   const JsonData = async () => {\n  //     try {\n  //       let Json = await GetFilter();\n  //       if (Json.data.message === \"No data found\") {\n  //         setJson([]);\n  //       } else {\n  //         setJson(Json.data.data);\n  //       }\n  //       setJson(Json.data.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  if (\n    apiCall === true &&\n    // showChangeJobModal === false &&\n    // changeJob === true &&\n    props.setApiCall\n  ) {\n    props.setApiCall(true);\n  }\n\n  /* Function to get the EMployee by agent data*/\n  const AgentByEmployeeData = async () => {\n    setIsLoading(true);\n    try {\n      const userData = await getallEmployeeData(\n        // props.heading === \"Manage Jobs\" || user_type === \"company\"\n        //   ? jobId\n        //   :\n        null,\n        \"\", //skillFilterValue\",\n        \"\", //experienceTypeFilterValue,\n        \"\", //search,\n        currentPage,\n        recordsPerPage,\n        columnName,\n        sortOrder,\n        \"\", //props.filter_by_time,\n        \"\", //limiaFilterValue,\n        \"\", //props.status,\n        \"\", // props.employee_id,\n        \"\", // props.response === \"lmia\" ? \"1\" : \"\"\n        \"\",\n        \"\",\n        props.Agentid,\n        props.AdminId\n      );\n      if (userData.data.length === 0) {\n        // setResData([]);\n        setAgentByEmployeeData([]);\n        setIsLoading(false);\n      } else {\n        setAgentByEmployeeData(userData.data);\n        setTotalData(userData.total_rows);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n\n  /*Render function to get the Response*/\n  useEffect(() => {\n    AgentByEmployeeData();\n    // JsonData();\n    if (apiCall === true) {\n      setApiCall(false);\n      //   setChangeJob(false);\n    }\n  }, [\n    // skillFilterValue,\n    // experienceTypeFilterValue,\n    // search,\n    currentPage,\n    recordsPerPage,\n    columnName,\n    sortOrder,\n    // props.filter_by_time,\n    apiCall,\n  ]);\n\n  /*Search Onchange function to Search EMployee by agent data */\n  //   const onSearch = (e) => {\n  //     const inputValue = e.target.value;\n  //     setSearch(inputValue);\n  //     if (inputValue.length > 0) {\n  //       if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n  //         setSearchError(\"Category Name cannot start with a number.\");\n  //       } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n  //         setSearchError(\"Cannot use special characters.\");\n  //       } else {\n  //         setSearchError(\"\");\n  //       }\n  //     } else {\n  //       setSearchError(\"\");\n  //     }\n  //   };\n\n  /*Function to Reserved Employee */\n  //   const ReservedEmployee = async (e) => {\n  //     // Api call to set employee reserved\n  //     try {\n  //       let response = await ReservedEmployeeForJob(\n  //         e.apply_id,\n  //         e.employee_id,\n  //         \"1\"\n  //       );\n  //       if (response.message === \"Successfully\") {\n  //         // Api call to set employee Visa\n  //         let state = { status: \"onboard\", country: e.location };\n  //         try {\n  //           const lmia = {\n  //             lmia_status: \"candidate placement\",\n  //             apply_id: e.apply_id,\n  //           };\n  //           let LimiaResponse = await AddLimia(lmia);\n  //           if (LimiaResponse.message === \"Data added successfully\") {\n  //             toast.success(\"Employee Reserved successfully\", {\n  //               position: toast.POSITION.TOP_RIGHT,\n  //               autoClose: 1000,\n  //             });\n  //             setApiCall(true);\n\n  //             // props.setApiCall(true);\n  //           }\n  //           let VisaResponse = await AddUpdateVisa(e.employee_id, state);\n  //           if (VisaResponse.data.message === \"visa inserted successfully\") {\n  //             // Api call to set employee Limia\n\n  //             try {\n  //             } catch (err) {\n  //               console.log(err);\n  //             }\n  //           }\n  //         } catch (err) {\n  //           console.log(err);\n  //         }\n  //         ResponseData();\n  //       }\n  //       if (response.message === \"already reserved\") {\n  //         toast.error(\"Employee already reserved for another job\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           autoClose: 1000,\n  //         });\n  //         ResponseData();\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n\n  /*Function to removed reserved employee */\n  //   const OnRemoveReservedClick = async (e) => {\n  //     try {\n  //       let Response = await RemoveReservedEmployeeForJob(\n  //         e.apply_id,\n  //         e.employee_id\n  //       );\n  //       if (Response.message === \"successfully\") {\n  //         toast.success(\"Employee Removed successfully\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           autoClose: 1000,\n  //         });\n  //         setApiCall(true);\n  //         // props.setApiCall(true);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n\n  /*Function to remove Response */\n  //   const onResponseDelte = async (e) => {\n  //     try {\n  //       let response = await DeletRespone(e.apply_id, e.employee_id);\n  //       if (response.message === \"successfully deleted\") {\n  //         toast.success(\"Response Deleted successfully\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           autoClose: 1000,\n  //         });\n  //         setApiCall(true);\n  //         props.setApiCall(true);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  /*Function to open add follow up modal */\n  // const addFollow = (e) => {\n  //   setFollowUp(true);\n  //   setResData(e);\n  //   setJobId(e.job_id);\n  // };\n\n  /*Function to open add Interview up modal */\n  //   const addnterview = (e) => {\n  //     setInterview(true);\n  //     setResData(e);\n  //     setJobId(e.job_id);\n  //   };\n\n  /*Function to open add Limia up modal */\n  //   const addLimia = (e) => {\n  //     setLimia(true);\n  //     setResData(e);\n  //     setJobId(e.job_id);\n  //   };\n\n  /* Function to show the single data to update job */\n  //   const OpenChangeJob = (e) => {\n  //     // e.preventDefault();\n  //     setShowChangeJobModal(true);\n  //     setResData(e);\n  //     setJobId(e.job_id);\n  //   };\n  /* Function to show the single data to update visa*/\n  //   const editVisa = (e) => {\n  //     setVisaModal(true);\n  //     setemployeeId(e);\n  //   };\n  /*Function to open add Document up modal */\n  //   const AddDoucument = (e) => {\n  //     setDocumentModal(true);\n  //     setemployeeId(e.employee_id);\n  //     setLmiaStatus(e.lmia_status);\n  //   };\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n    setCurrentPage(1);\n  };\n\n  /*Funcion to get the user time from updated time */\n  function isTimeWithin24Hours(createdTime) {\n    return Date.now() - new Date(createdTime).getTime() <= 86400000;\n  }\n  return (\n    <div\n      className={\n        // props.heading === \"Response\" ||\n        // (props.heading === undefined && user_type === \"admin\")\n        //   ? \"site-wrapper overflow-hidden bg-default-2  \"\n        //   : props.heading === \"Dashboard\"\n        //   ? \"site-wrapper overflow-hidden bg-default-2 bg-white\"\n        //   :\n        \"response_main_div\"\n      }\n    >\n      {/* {props.heading === \"Response\" ||\n      (props.heading === undefined && user_type === \"admin\") ? (\n        <>\n          <!-- Header Area -->\n          <AdminHeader heading={\"Response\"} />\n          <!-- navbar- -->\n          <AdminSidebar heading={\"Response\"} />\n          <ToastContainer />\n        </>\n      ) : null} */}\n\n      <div\n        className={\n          //   props.heading === \"Response\" ||\n          //   (props.heading === undefined && user_type === \"admin\")\n          //     ? \"dashboard-main-container mt-16\"\n          //     : props.heading === \"Dashboard\"\n          //     ? \"\"\n          //     :\n          \"response__container\"\n        }\n      >\n        <div\n          className={\n            // props.heading === \"Response\" ||\n            // (props.heading === undefined && user_type === \"admin\")\n            //   ? \"container\"\n            //   : props.heading === \"Dashboard\"\n            //   ? \"\"\n            //   :\n            \"container-fluid p-0 m-0\"\n          }\n        >\n          {/* <div\n            //   className={\n            //     props.heading === \"Manage Agent\"\n            //       ? \"response_filters mb-2 align-items-center\"\n            //       : \"align-items-center\"\n            //   }\n            // >\n            //   <div className=\"page___heading\">\n            //     <h3 className=\"font-size-6 mb-0\">Follow Up</h3>\n            //   </div>\n            //   <div\n            //     className={\n            //       props.heading === \"Response\" ||\n            //       (props.heading === undefined && user_type === \"admin\")\n            //         ? \"row m-0 align-items-center\"\n            //         : \"d-none\"\n            //     }\n            //   >\n            //     {props.heading === \"\" ? null : (\n            //       <div className=\"col p-1 form_group mb-3\">\n            //         <p className=\"input_label\">Search :</p>\n            //         <input\n            //           required\n            //           type=\"text\"\n            //           className=\"form-control\"\n            //           placeholder={\"Search Company / Name\"}\n            //           value={search}\n            //           name={\"category_name\"}\n            //           onChange={(e) => {\n            //             onSearch(e);\n            //             setCurrentPage(1);\n            //           }}\n            //         />\n            //       </div>\n            //     )}\n            //     <div className=\"col p-1 form_group mb-3\">\n            //       <p className=\"input_label\">Filter by Skill:</p>\n            //       <div className=\"select_div\">\n            //         <select\n            //           name=\"job\"\n            //           id=\"job\"\n            //           value={skillFilterValue}\n            //           onChange={(e) => {\n            //             setSkillFilter(e.target.value);\n            //             setCurrentPage(1);\n            //           }}\n            //           className=\"text-capitalize form-control\"\n            //         >\n            //           <option value=\"\">Select Skil</option>\n            //           {(Json.Skill || []).map((skill) => (\n            //             <option value={skill.value} key={skill.id}>\n            //               {skill.value}\n            //             </option>\n            //           ))}\n            //         </select>\n            //       </div>\n            //     </div>\n            //     <div className=\"col p-1 form_group mb-3\">\n            //       <p className=\"input_label\">Filter by Skill:</p>\n            //       <div className=\"select_div\">\n            //         <select\n            //           name=\"job\"\n            //           id=\"job\"\n            //           value={limiaFilterValue}\n            //           onChange={(e) => {\n            //             setLmiaFilter(e.target.value);\n            //             setCurrentPage(1);\n            //           }}\n            //           className=\"text-capitalize form-control\"\n            //         >\n            //           <option value=\"\">Select LMIA</option>\n            //           {(Json.lmia || []).map((lmia) => (\n            //             <option value={lmia.value} key={lmia.id}>\n            //               {lmia.value}\n            //             </option>\n            //           ))}\n            //         </select>\n            //       </div>\n            //     </div>\n            //     <div className=\"col p-1 form_group mb-3\">\n            //       <p className=\"input_label\">Filter by Experience:</p>\n            //       <div className=\"select_div\">\n            //         <select\n            //           name=\"experience\"\n            //           id=\"experience\"\n            //           value={experienceTypeFilterValue}\n            //           onChange={(e) => {\n            //             setExperienceTypeFilterValue(e.target.value);\n            //             setCurrentPage(1);\n            //           }}\n            //           className=\"text-capitalize form-control\"\n            //         >\n            //           <option value=\"\">Select Experience</option>\n            //           {(FilterJson.experience || []).map((ex, i) => (\n            //             <option value={ex} key={i}>\n            //               {ex}\n            //               {ex === \"fresher\" || ex === \"Other\" ? \"\" : \"Year\"}\n            //             </option>\n            //           ))}\n            //         </select>\n            //       </div>\n            //     </div>\n            //     <div className=\"float-md-right mt-6\"></div>\n            //   </div>\n            //   <small className=\"text-danger\">{searchError}</small>\n            // </div>\n        */}\n          <div className=\"mb-0\">\n            <div\n              className={\n                // props.heading === \"Response\" ||\n                // (props.heading === undefined && user_type === \"admin\")\n                //   ? \"\"\n                //   : props.heading === \"Dashboard\"\n                //   ? \"bg-white shadow-8 datatable_div pt-7 rounded pb-9 px-5\"\n                //   :\n                \"\"\n              }\n            >\n              <div className=\"table-responsive main_table_div\">\n                {isLoading ? (\n                  <Loader />\n                ) : (\n                  <table className=\"table table-striped main_data_table_inn mb-0\">\n                    <thead>\n                      <tr className=\"\">\n                        <th\n                          scope=\"col\"\n                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n                        >\n                          EID\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\" border-0 font-size-3 font-weight-normal py-2\"\n                        >\n                          <Link\n                            to={\"\"}\n                            onClick={() => {\n                              handleSort(\"name\");\n                            }}\n                            className=\"text-gray\"\n                            title=\"Sort by Name\"\n                          >\n                            Name\n                          </Link>\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n                        >\n                          <Link\n                            to={\"\"}\n                            onClick={() => {\n                              handleSort(\"contact_no\");\n                            }}\n                            className=\"text-gray\"\n                            title=\"Sort by Contact\"\n                          >\n                            Contact\n                          </Link>\n                        </th>\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            <Link\n                              to={\"\"}\n                              onClick={() => {\n                                handleSort(\"created_at\");\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by date added\"\n                            >\n                              Date added\n                            </Link>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            <Link\n                              to={\"\"}\n                              onClick={() => {\n                                handleSort(\"education\");\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Education\"\n                            >\n                              Education\n                            </Link>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            <Link\n                              to={\"\"}\n                              onClick={() => {\n                                handleSort(\"skill\");\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Skill\"\n                            >\n                              Skills\n                            </Link>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            <Link\n                              to={\"\"}\n                              onClick={() => {\n                                handleSort(\"experience\");\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Experience\"\n                            >\n                              Experience\n                            </Link>\n                          </th>\n                        )}\n                        <th\n                          scope=\"col\"\n                          className=\"border-0 font-size-3 font-weight-normal py-2\"\n                        >\n                          Profile\n                        </th>\n                        {props.visa === \"yes\" ? null : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            Status\n                          </th>\n                        )}\n                        {/* {props.heading === (\"Dashboard\") ? (\n                          \"\"\n                        ) : (\n                          <th\n                            scope=\"col\"\n                            className=\"border-0 font-size-3 font-weight-normal py-2\"\n                          >\n                            Action\n                          </th>\n                        )} */}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* Map function to show the data in the list*/}\n                      {totalData === 0 || agentByEmployeeData.length === 0 ? (\n                        <tr>\n                          <th\n                            colSpan={9}\n                            className=\"bg-white text-center font-size-3\"\n                          ></th>\n                        </tr>\n                      ) : (\n                        (agentByEmployeeData || []).map((empdata) => (\n                          <tr\n                            className=\"text-capitalize applicant_row\"\n                            key={empdata.employee_id}\n                          >\n                            <td className=\"font-size-3 py-2\">\n                              {empdata.employee_id}\n                            </td>\n                            <td className=\" py-2\">\n                              <Link\n                                to={`/${empdata.employee_id}`}\n                                // onClick={\n                                //   empdata.name !== null\n                                //     ? () => employeeDetails(empdata.employee_id)\n                                //     : null\n                                // }\n                                title=\"Employee Details\"\n                              >\n                                <div className=\"d-flex profile_box gx-2\">\n                                  <div className=\"media  align-items-center\">\n                                    <div className=\"circle-30 mx-auto overflow-hidden\">\n                                      {empdata.profile_photo === null ? (\n                                        <img\n                                          src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                          alt=\"\"\n                                          className=\"w-100\"\n                                        />\n                                      ) : (\n                                        <img\n                                          src={empdata.profile_photo}\n                                          alt=\"\"\n                                          className=\"w-100\"\n                                        />\n                                      )}\n                                    </div>\n                                  </div>\n\n                                  <div className=\" mb-0\">\n                                    {empdata.name === null ||\n                                    empdata.name === undefined ||\n                                    empdata.name === \"undefined\" ||\n                                    empdata.name === \"\" ? (\n                                      <p className=\"font-size-3  mb-0\">N/A</p>\n                                    ) : (\n                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n                                        {empdata.name}\n                                      </p>\n                                    )}\n                                    {empdata.gender ||\n                                    empdata.marital_status ? (\n                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                        {empdata.gender === \"female\"\n                                          ? \"F\"\n                                          : empdata.gender === \"male\"\n                                          ? \"M\"\n                                          : \"O\"}\n                                        {/*Calculation of age from date of birth*/}\n                                        (\n                                        {empdata.marital_status ||\n                                        empdata.date_of_birth\n                                          ? `${\n                                              empdata.marital_status\n                                            },${moment().diff(\n                                              empdata.date_of_birth,\n                                              \"years\"\n                                            )} Y`\n                                          : null}\n                                        )\n                                      </p>\n                                    ) : null}\n                                    {empdata.is_featured === \"1\" ||\n                                    empdata.is_featured === 1 ? (\n                                      <span className=\"bg-orange text-white featured_tag\">\n                                        Featured\n                                      </span>\n                                    ) : null}\n                                    {empdata.created_by_admin === \"0\" ||\n                                    empdata.created_by_admin === 0 ? (\n                                      <span className=\"bg-info text-white web_tag\">\n                                        Web\n                                      </span>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              </Link>\n                            </td>\n                            <td className=\"py-2 \">\n                              {empdata.contact_no === null ? null : (\n                                <p className=\"m-0\">\n                                  +\n                                  <Link\n                                    className=\"text-dark font-size-3\"\n                                    to={`tel:${empdata.contact_no}`}\n                                  >\n                                    {empdata.contact_no}\n                                  </Link>\n                                </p>\n                              )}\n                              <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                <p className=\"text-gray font-size-2 m-0\">\n                                  <Link\n                                    className=\"text-dark\"\n                                    to={`mailto:${empdata.email}`}\n                                  >\n                                    {empdata.email}\n                                  </Link>\n                                </p>\n                              </h3>\n                            </td>\n\n                            {props.heading === \"Dashboard\" ? (\n                              \"\"\n                            ) : (\n                              <td className=\" py-2\">\n                                {empdata.language === null ? (\n                                  <p className=\"font-size-3  mb-0\">N/A</p>\n                                ) : (\n                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {/* {empdata.language} */}\n                                    {/* {moment(\n                                      empdata.created_at,\n                                      \"YYYY-MM-DD HH:mm:ss\"\n                                    ).fromNow()} */}\n                                    {moment(empdata.created_at).format(\n                                      \"DD MMMM, YYYY\"\n                                    )}\n                                  </p>\n                                )}\n                              </td>\n                            )}\n                            {props.heading === \"Dashboard\" ? (\n                              \"\"\n                            ) : (\n                              <td className=\" py-2\">\n                                {empdata.education === null ? (\n                                  <p className=\"font-size-3  mb-0\">N/A</p>\n                                ) : (\n                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n                                    {empdata.education}\n                                  </p>\n                                )}\n                              </td>\n                            )}\n                            {props.heading === \"Dashboard\" ? (\n                              \"\"\n                            ) : (\n                              <td className=\" py-2\">\n                                {empdata.skill === null ? (\n                                  <p className=\"font-size-3  mb-0\">N/A</p>\n                                ) : (\n                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n                                    {empdata.skill}\n                                  </p>\n                                )}\n                              </td>\n                            )}\n                            {props.heading === \"Dashboard\" ? (\n                              \"\"\n                            ) : (\n                              <td className=\" py-2\">\n                                {empdata.experience === null ? (\n                                  <p className=\"font-size-3 mb-0\">N/A</p>\n                                ) : (\n                                  <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {empdata.experience} Years\n                                  </p>\n                                )}\n                              </td>\n                            )}\n                            <td className=\" py-2\">\n                              <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n                                {empdata.profile_complete === \"100.00\" ? (\n                                  <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                    Complete\n                                  </span>\n                                ) : (\n                                  <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n                                    Incomplete\n                                  </span>\n                                )}\n                              </p>\n                            </td>\n                            {props.visa === \"yes\" ? null : (\n                              <td className=\"py-2\">\n                                <p className=\"font-size-2 font-weight-normal text-black-2 mb-0\">\n                                  {empdata.status === \"1\" ? (\n                                    <span\n                                      className={\n                                        !isTimeWithin24Hours(empdata.created_at)\n                                          ? \"p-1 bg-danger text-white text-center w-100 border rounded-pill\"\n                                          : \"p-1 bg-info text-white text-center w-100 border rounded-pill\"\n                                      }\n                                    >\n                                      New\n                                    </span>\n                                  ) : empdata.status === \"2\" ? (\n                                    <span className=\"p-1 bg-warning text-white text-center w-100 border rounded-pill\">\n                                      Prospect\n                                    </span>\n                                  ) : empdata.status === \"3\" ? (\n                                    <span className=\"p-1 bg-coral-opacity-visible text-white text-center w-100 border rounded-pill\">\n                                      Lead\n                                    </span>\n                                  ) : empdata.status === \"4\" ? (\n                                    <span className=\"p-1 bg-secondary text-white text-center w-100 border rounded-pill\">\n                                      Reatined\n                                    </span>\n                                  ) : empdata.status === \"5\" ? (\n                                    <span className=\"p-1 bg-spray text-white text-center w-100 border rounded-pill\">\n                                      Lost\n                                    </span>\n                                  ) : empdata.status === \"6\" ? (\n                                    <span className=\"p-1 bg-dark text-white text-center w-100 border rounded-pill\">\n                                      Dead\n                                    </span>\n                                  ) : empdata.status === \"7\" ? (\n                                    <span className=\"p-1 bg-primary-opacity-8 text-white text-center w-100 border rounded-pill\">\n                                      Reserved\n                                    </span>\n                                  ) : empdata.status === \"0\" ? (\n                                    <span className=\"p-1 bg-info text-white text-center w-100 border rounded-pill\">\n                                      New\n                                    </span>\n                                  ) : null}\n                                </p>\n                              </td>\n                            )}\n                            {/* Calulation to get user is new or retained */}\n                            {/* <td className=\" py-2\">\n                              <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                {(new Date(empdata.created_at) >= oneMonthAgo && new Date(empdata.created_at) <= currentDate) === true ? \"New\" : \"Retained\"}                        \n                                </p>\n                            </td> */}\n                            {/* <td className=\" py-2 min-width-px-100\">\n                              <div\n                                className=\"btn-group button_group\"\n                                role=\"group\"\n                                aria-label=\"Basic example\"\n                              ></div>\n                            </td> */}\n                          </tr>\n                        ))\n                      )}\n                    </tbody>\n                  </table>\n                )}\n              </div>\n              <div className=\"pt-2\">\n                <Pagination\n                  nPages={nPages}\n                  currentPage={currentPage}\n                  setCurrentPage={setCurrentPage}\n                  total={totalData}\n                  count={agentByEmployeeData.length}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AgentsEmployee;\n"
        }
    ]
}