{
    "sourceFile": "src/components/common/jobTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1692954697384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693027793164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,9 @@\n                     className=\" border-0 font-size-4 font-weight-normal\"\n                   >\n                     LMIA status\n                   </th>\n-                  {props.heading === \"Dashboard\" || user_type === \"user\"||user_type === \"company\" ? null : (\n+                  {props.heading === \"Dashboard\" || user_type === \"user\" ? null : (\n                     <th\n                       scope=\"col\"\n                       className=\" border-0 font-size-4 font-weight-normal\"\n                     >\n@@ -585,9 +585,9 @@\n                               <span>NA</span>\n                             )}\n                           </div>\n                         </th>\n-                        {props.heading === \"Dashboard\" ||user_type === \"user\"||user_type === \"company\" ? null : (\n+                        {props.heading === \"Dashboard\" ||user_type === \"user\" ? null : (\n                           <th className=\"py-5 min-width-px-100\">\n                             <div\n                               className=\"btn-group button_group\"\n                               role=\"group\"\n"
                },
                {
                    "date": 1693027873786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -706,9 +706,9 @@\n                                           {/* <span className=\"fas fa-user-tie text-gray\"></span> */}\n                                         </button>\n                                         <button\n                                           className={\n-                                            props.response === \"lmia\" ||\n+                                           ( props.response === \"lmia\" && user_type === \"admin\")||\n                                               props.response === \"visa\"\n                                               ? \"d-none\"\n                                               : \"btn btn-outline-info action_btn\"\n                                           }\n"
                }
            ],
            "date": 1692954697384,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport AddJobModal from \"../forms/employer/job\";\nimport EmployerDocumentModal from \"../forms/admin/EmployerDocumetModal\";\nimport {\n  GetAllJobs,\n  DeleteJob,\n  ApplyJob,\n  GetEmployeeFilterJob,\n} from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport SAlert from \"../common/sweetAlert\";\nimport Pagination from \"../common/pagination\";\nimport Loader from \"../common/loader\";\nimport EmployeeModal from \"../admin/Modal/employeeModal\";\nimport JobResponse from \"../admin/response\";\nimport LmiaStatus from \"../forms/admin/lmiastatus\";\nimport { LiaUserEditSolid, LiaUserTieSolid } from \"react-icons/lia\";\nimport { BsArrow90DegRight } from \"react-icons/bs\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { MdFormatListBulletedAdd } from \"react-icons/md\";\nimport { GrDocumentUpload } from \"react-icons/gr\";\nexport default function JobTable(props) {\n  /*show Modal and props state */\n  let [isLoading, setIsLoading] = useState(true);\n  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n  let [showAddCompanyDocModal, setShowAddCompanyDocModal] = useState(false);\n  let [openLimia, setOpenLimia] = useState(false);\n  let [showCandidateModal, setShowCandidateModal] = useState(false);\n  let [apiCall, setApiCall] = useState(false);\n  const [jobData, setjobData] = useState([]);\n  const [JobId, setJobId] = useState();\n  const [CompanyId, setCompanyId] = useState();\n  const [candidateSkill, setCandidateSkill] = useState();\n  /*Delete state */\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"job_id\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  /*Response states */\n  const [responseId, setresponseId] = useState();\n  const [responseDropDown, setresponseDropDown] = useState(false);\n  let location = useLocation();\n  let user_type = localStorage.getItem(\"userType\")\n  let job_id =  location.state ? location.state.id : location.pathname===  \"/jobdetailpage\"?localStorage.getItem(\"job_id\"):\"\";\n  /* Function to get Job data*/\n  const JobData = async () => {\n    setIsLoading(true);\n    try {\n      let userData;\n      if (props.employee_id) {\n        userData = await GetEmployeeFilterJob(\n          props.employee_id,\n          // props.SkillFilterValue\n          props.search,\n          props.locationFilterValue,\n          props.categoryFilterValue,\n          props.SkillFilterValue,\n          props.jobSwapFilterValue,\n          props.company ||\n            props.search ||\n            props.locationFilterValue ||\n            props.categoryFilterValue ||\n            props.SkillFilterValue ||\n            props.jobSwapFilterValue ||\n            props.filter_by_time ||\n            sortOrder\n            ? 1\n            : currentPage,\n          recordsPerPage,\n          columnName,\n          sortOrder,\n          props.company\n        );\n      } else {\n        userData = await GetAllJobs(\n          props.search,\n          props.locationFilterValue,\n          props.categoryFilterValue,\n          props.SkillFilterValue,\n          props.jobSwapFilterValue,\n          props.company ||\n            props.search ||\n            props.locationFilterValue ||\n            props.categoryFilterValue ||\n            props.SkillFilterValue ||\n            props.jobSwapFilterValue ||\n            props.filter_by_time ||\n            sortOrder\n            ? 1\n            : currentPage,\n          recordsPerPage,\n          columnName,\n          sortOrder,\n          props.company,\n          props.filter_by_time,\n          job_id,\n          props.response === \"self\" ? \"1\" : \"0\",\n          props.response === \"lmia\" ? \"1\" : \"0\",\n          props.response === \"lmia\" ? \"1\" : \"0\",\n          props.company_id\n        );\n      }\n      if (\n        userData.data.data.length === 0 ||\n        userData.data.length === 0 ||\n        userData.data.data === undefined\n      ) {\n        setjobData([]);\n        setresponseId();\n        setIsLoading(false);\n      } else {\n        if (\n          props.heading === \"Dashboard\" ||\n          location.pathname === \"/employee\" ||\n          props.lima === \"no\" || user_type === \"user\"\n        ) {\n          setresponseId();\n        } else {\n          setresponseId(userData.data.data[0].job_id);\n        }\n        setjobData(userData.data.data);\n        props.setLmia(userData.data.data)\n        setTotalData(userData.data.total_rows);\n        setIsLoading(false);\n        //condition for limia and visa page\n        // if (props.response === \"lmia\" || props.response === \"visa\") {\n        //   setjobData(userData.data.data.filter((item) => item.applied_by_self !== \"0\" || item.applied_by_admin !== \"0\"));\n        //   setIsLoading(false);\n        // }\n        // //condition for Self job applied page\n        // else if (props.response === \"self\") {\n        //   setjobData(userData.data.data.filter((item) => item.applied_by_self !== \"0\"));\n        //   setresponseId(userData.data.data.filter((item) => item.applied_by_self !== \"0\")[0].job_id)\n        //   setIsLoading(false);\n        // } else\n\n      }\n    } catch (err) {\n      console.log(err)\n      setIsLoading(false);\n    }\n  };\n\n  /*Render function to get the job */\n  useEffect(() => {\n    JobData();\n    if (apiCall === true || props.apiCall === true) {\n      props.setApiCall(false);\n      setApiCall(false);\n    }\n  }, [\n    props.categoryFilterValue,\n    props.SkillFilterValue,\n    props.locationFilterValue,\n    props.jobSwapFilterValue,\n    props.search,\n    currentPage,\n    sortOrder,\n    props.company,\n    props.filter_by_time,\n    apiCall,\n    props.apiCall,\n  ]);\n\n  /* Function to show the Job detail data */\n  // const JobDetail = (e) => {\n  //   props.JobDetail(e);\n  // };\n\n  /* Function to show the Table of the employee of perticular skill */\n  const matchingCandidates = (e) => {\n    setShowCandidateModal(true);\n    setCandidateSkill(e);\n  };\n\n  /* Function to show the single data to update job */\n  const editJob = (e) => {\n    setShowAddJobsModal(true);\n    setJobId(e);\n  };\n\n  /**function to open document modal */\n  const OpenAddDocModal = (e) => {\n    setShowAddCompanyDocModal(true);\n    setCompanyId(e);\n  };\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.job_id);\n    setDeleteName(e.job_title);\n    setDeleteAlert(true);\n  };\n\n  /*To call Api to delete Job */\n  async function deleteJob(e) {\n    try {\n      const responseData = await DeleteJob(e);\n      if (responseData.message === \"job has been deleted\") {\n        toast.error(\"Job deleted Successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n        setDeleteAlert(false);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n    setApiCall(true);\n  };\n\n  /*Function to change job */\n  const onChangeJobClick = async (id) => {\n    try {\n      const responseData = await ApplyJob(id, props.employee_id, 0);\n      if (responseData.message === \"already applied on this job\") {\n        toast.error(\"Already applied on this job\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n      }\n      if (responseData.message === \"Job applied successfully\") {\n        toast.success(\"Applied successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  /*Function to open update LIMA */\n  const updateLima = (job) => {\n    setJobId(job);\n    setOpenLimia(true);\n  };\n  return (\n    <>\n      <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n        <div className=\"table-responsive main_table_div\">\n          {isLoading ? (\n            <Loader load={\"yes\"} />\n          ) : (\n            <table className=\"table table-striped main_data_table\">\n              <thead>\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      onClick={() => {\n                        handleSort(\"job_title\");\n                        setCurrentPage(1);\n                      }}\n                      title=\"Sort by Industry\"\n                      className=\"text-gray\"\n                    >\n                      Job title / Industry\n                    </Link>\n                  </th>\n                  {props.heading === \"Dashboard\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to=\"\"\n                        onClick={() => {\n                          handleSort(\"job_type\");\n                          setCurrentPage(1);\n                        }}\n                        title=\"Sort by Job\"\n                        className=\"text-gray\"\n                      >\n                        Job Type\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to=\"\"\n                        onClick={() => {\n                          handleSort(\"location\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Address\"\n                      >\n                        Address\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to=\"\"\n                        onClick={() => {\n                          handleSort(\"education\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Education\"\n                      >\n                        Education\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to=\"\"\n                        onClick={() => {\n                          handleSort(\"keyskill\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Skill\"\n                      >\n                        Skills\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to=\"\"\n                        onClick={() => {\n                          handleSort(\"language\");\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Language\"\n                      >\n                        Language\n                      </Link>\n                    </th>\n                  )}\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => {\n                        handleSort(\"salary\");\n                        setCurrentPage(1);\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Salary\"\n                    >\n                      Salary\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => {\n                        handleSort(\"experience_required\");\n                        setCurrentPage(1);\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Experience\"\n                    >\n                      Experience\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    Vacancies/ Responses\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    LMIA status\n                  </th>\n                  {props.heading === \"Dashboard\" || user_type === \"user\"||user_type === \"company\" ? null : (\n                    <th\n                      scope=\"col\"\n                      className=\" border-0 font-size-4 font-weight-normal\"\n                    >\n                      Action\n                    </th>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n\n                {/* Map function to show the data in the list*/}\n                {totalData === 0 || jobData.length === 0 ? (\n                  <tr>\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                    {props.heading === \"Dashboard\" ? (\n                      <th className=\"bg-white text-center\">No Data Found</th>\n                    ) : (\n                      <th className=\"bg-white\"></th>\n                    )}\n                    <th className=\"bg-white\"></th>\n                    {props.heading !== \"Dashboard\" ? (\n                      <>\n                        <th className=\"bg-white\"></th>\n                        <th className=\"bg-white text-center\">No Data Found</th>\n                        <th className=\"bg-white\"></th>\n                        <th className=\"bg-white\"></th>\n                        <th className=\"bg-white\"></th>\n                        <th className=\"bg-white\"></th>\n                        <th className=\"bg-white\"></th>\n                      </>\n                    ) : null}\n                  </tr>\n                ) : (\n                  (jobData || []).map((job) => (\n                    <React.Fragment key={job.job_id}>\n                      <tr\n                        className={\n                          /*job.is_applied === \"1\" ? \"d-none\" : */ \"text-capitalize job_row\"\n                        }\n                      >\n                        <th scope=\"row\" className=\"py-5 \">\n                          <div className=\"\">\n                             \n                              <Link\n                                title=\"Job Details\"\n                                to={`/jobdetailpage`}\n                                onClick={() => localStorage.setItem(\"job_id\",job.job_id)\n                                  // JobDetail(job.job_id)\n                                }\n                                className=\"font-size-3 mb-0 font-weight-semibold text-black-2\"\n                              >\n                                <>\n                                  <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n                                    {job.job_title}\n                                  </p>\n                                  <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                    {job.company_name} - {job.industry_type}\n                                    <br />\n                                    {job.is_featured === \"1\" ? (\n                                      <span className=\"bg-orange text-white featured_tag\">\n                                        {\" \"}\n                                        Featured{\" \"}\n                                      </span>\n                                    ) : null}\n                                  </p>\n                                </>\n                              </Link>\n                            \n                          </div>\n                        </th>\n                        {props.heading === \"Dashboard\" ? null : (\n                          <th className=\" py-5\">\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                              {job.employement} - {job.job_type}\n                            </h3>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? null : (\n                          <th className=\" py-5\">\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                              {job.location}\n                            </h3>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? null : (\n                          <th className=\"py-5 \">\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                              {job.education ? job.education : \"N/A\"}\n                            </h3>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? null : (\n                          <th className=\"py-5 \">\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n                              {job.keyskill ? job.keyskill : \"N/A\"}\n                            </h3>\n                          </th>\n                        )}\n                        {props.heading === \"Dashboard\" ? null : (\n                          <th className=\"py-5 \">\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\">\n                              {job.language ? job.language : \"N/A\"}\n                            </h3>\n                          </th>\n                        )}\n                        <th className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.salary ? job.salary : \"N/A\"}\n                          </h3>\n                        </th>\n                        <th className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.experience_required}\n                            {job.experience_required === \"fresher\"\n                              ? \"\"\n                              : \"years\"}\n                          </h3>\n                        </th>\n                        <th className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-bold text-black-2 mb-0\">\n                            <Link\n                              onClick={() => {\n                                setresponseId(job.job_id);\n                                setresponseDropDown(\n                                  responseDropDown === false ? true : false\n                                );\n                              }}\n                              className=\"text-dark\"\n                            >\n                              {job.role_category} /{\" \"}\n                              {props.selfJob === \"yes\"\n                                ? job.applied_by_self\n                                : job.applied_by_admin}\n                            </Link>\n                          </h3>\n                        </th>\n                        <th className=\" py-5\">\n                          <div className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.lmia_status === \"onboarding\" ? (\n                              <span className=\"px-3 py-2 badge badge-pill badge-warning\">\n                                Onboarding\n                              </span>\n                            ) : job.lmia_status === \"advertisements\" ? (\n                              <span className=\"px-3 py-2 badge badge-pill bg-info text-white\">\n                                Advertisements\n                              </span>\n                            ) : job.lmia_status === \"documentation\" ? (\n                              <span className=\"px-3 py-2 badge badge-pill badge-gray\">\n                                Documentation\n                              </span>\n                            ) : (\n                              // : job.lmia_status === \"additional information required\" ? (\n                              //   <span className=\"px-3 py-2 badge badge-pill bg-primary-opacity-9 text-white\">\n                              //     Additional information required\n                              //   </span>\n                              // ) : job.lmia_status === \"need to start\" ? (\n                              //   <span className=\"px-3 py-2 badge badge-pill badge-warning\">\n                              //     Need to start\n                              //   </span>\n                              // ) : job.lmia_status === \"working on it\" ? (\n                              //   <span className=\"px-3 py-2 badge badge-pill badge-dark\">\n                              //     Working on it\n                              //   </span>\n                              // ) : (job.lmia_status === \"application submitted\" ? (\n                              //   <span className=\"px-3 py-2 badge badge-pill badge-info\">\n                              //     Application submitted\n                              //   </span>\n                              // )\n                              <span>NA</span>\n                            )}\n                          </div>\n                        </th>\n                        {props.heading === \"Dashboard\" ||user_type === \"user\"||user_type === \"company\" ? null : (\n                          <th className=\"py-5 min-width-px-100\">\n                            <div\n                              className=\"btn-group button_group\"\n                              role=\"group\"\n                            >\n                              {\n                                // props.response === \"lmia\" ?\n                                // <>\n                                //   <button\n                                //     className=\"btn btn-outline-info action_btn\"\n                                //     onClick={() => {\n                                //       setresponseId(job.job_id);\n                                //       setresponseDropDown(\n                                //         responseDropDown === false\n                                //           ? true\n                                //           : false\n                                //       );\n                                //     }}\n                                //     disabled={\n                                //       props.selfJob === \"yes\"\n                                //         ? job.applied_by_self > 0 ? false : true\n                                //         : job.applied_by_admin > 0 ? false : true\n                                //     }\n                                //     title=\"Job LMIA\"\n                                //   >\n                                //     LMIA Responses\n                                //   </button>\n                                //   <button\n                                //             className=\"btn btn-outline-info action_btn\"\n                                //             onClick={() => updateLima(job)}\n                                //             title=\"Update LMIA for jobs\"\n                                //           >\n                                //             LMIA\n                                //           </button>\n                                //           </>:\n                                //   props.response === \"visa\" ?\n                                //     <button\n                                //       className=\"btn btn-outline-info action_btn\"\n                                //       onClick={() => {\n                                //         setresponseId(job.job_id);\n                                //         setresponseDropDown(\n                                //           responseDropDown === false\n                                //             ? true\n                                //             : false\n                                //         );\n                                //       }}\n                                //       disabled={\n                                //         props.selfJob === \"yes\"\n                                //           ? job.applied_by_self > 0 ? false : true\n                                //           : job.applied_by_admin > 0 ? false : true\n                                //       }\n                                //       title=\"Job visa\"\n                                //     >\n                                //       Visa Responses\n                                //     </button> :\n                                props.skill === null ||\n                                  props.skill === undefined ||\n                                  Object.keys(props.skill).length === 0 ? (\n                                  <>\n                                    <div\n                                      className=\"btn-group button_group\"\n                                    // role=\"group\"\n                                    >\n                                      <button\n                                        className=\"btn btn-outline-info action_btn\"\n                                        onClick={() => {\n                                          setresponseId(job.job_id);\n                                        }}\n                                        disabled={\n                                          props.selfJob === \"yes\"\n                                            ? job.applied_by_self > 0\n                                              ? false\n                                              : true\n                                            : job.applied_by_admin > 0\n                                              ? false\n                                              : true\n                                        }\n                                        title=\"Job Response\"\n                                      >\n                                        <span className=\"text-gray px-2\">\n                                          <MdFormatListBulletedAdd />\n                                        </span>\n                                        {/* <i className=\"fa fa-list\"></i> */}\n                                      </button>\n                                    </div>\n                                    {props.selfJob === \"yes\" ? null : (\n                                      <>\n                                        <button\n                                          className={user_type === \"admin\"?\"btn btn-outline-info action_btn \":\"d-none\"}\n                                          onClick={() => updateLima(job)}\n                                          title=\"Update LIMA\"\n                                        >\n                                          <span className=\"text-gray px-2\">\n                                            LMIA\n                                          </span>\n                                        </button>\n                                        <button\n                                          className={\n                                            props.response === \"lmia\" ||\n                                              props.response === \"visa\"\n                                              ? \"d-none\"\n                                              : \"btn btn-outline-info action_btn\"\n                                          }\n                                          onClick={() =>\n                                            matchingCandidates(job)\n                                          }\n                                          title=\"All candidates\"\n                                        // disabled={\n                                        //   Number(job.applied_by_admin) >= Number(job.role_category)\n                                        //     ? true\n                                        //     : false\n                                        // }\n                                        >\n                                          <span className=\"text-gray px-2\">\n                                            <LiaUserTieSolid />\n                                          </span>\n                                          {/* <span className=\"fas fa-user-tie text-gray\"></span> */}\n                                        </button>\n                                        <button\n                                          className={\n                                            props.response === \"lmia\" ||\n                                              props.response === \"visa\"\n                                              ? \"d-none\"\n                                              : \"btn btn-outline-info action_btn\"\n                                          }\n                                          onClick={() => editJob(job.job_id)}\n                                          title=\"Edit Job\"\n                                        >\n                                          <span className=\"text-gray px-1\">\n                                            <LiaUserEditSolid />\n                                          </span>\n                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                        </button>\n                                        <button\n                                          className={\n                                            props.response === \"lmia\" ||\n                                              props.response === \"visa\"\n                                              ? \"d-none\"\n                                              : \"btn btn-outline-info action_btn\"\n                                          }\n                                          onClick={() => ShowDeleteAlert(job)}\n                                          title=\"Delete\"\n                                        >\n                                          <span className=\" text-danger px-1\">\n                                            <RiDeleteBin5Line />\n                                            {/* <i className=\"fa fa-trash\"></i> */}\n                                          </span>\n                                        </button>\n                                        <button\n                                          className={\n                                            props.response === \"response\" &&\n                                              location.pathname === \"/job\"\n                                              ? \"btn btn-outline-info action_btn\"\n                                              : \"d-none\"\n                                          }\n                                          title=\"Job LMIA\"\n                                        >\n                                          <Link\n                                            to=\"/lmia\"\n                                            className=\"text-dark\"\n                                            state={{ id: job.job_id }}\n                                          >\n                                            <span className=\"text-gray px-2\">\n                                              <BsArrow90DegRight />\n                                            </span>\n                                            {/* <span className=\"fas fa-arrow-left text-gray px-2\"></span> */}\n                                          </Link>\n                                        </button>\n                                        <button\n                                          className=\"btn btn-outline-info action_btn\"\n                                          title=\"Company's document\"\n                                          onClick={() =>\n                                            OpenAddDocModal(job.company_id)\n                                          }\n                                        >\n                                          <span className=\"text-gray px-2\">\n                                            <GrDocumentUpload />\n                                          </span>\n                                        </button>\n                                      </>\n                                    )}\n                                  </>\n                                ) : (\n                                  <button\n                                    className=\"btn btn-outline-info action_btn\"\n                                    disabled={\n                                      job.is_applied === \"1\"\n                                        ? true\n                                        : false ||\n                                          Number(job.applied_by_admin) >=\n                                          Number(job.role_category)\n                                          ? true\n                                          : false\n                                    }\n                                    onClick={() => onChangeJobClick(job.job_id)}\n                                    title=\"Apply For job\"\n                                  >\n                                    {job.is_applied === \"1\"\n                                      ? \"Already Applied\"\n                                      : \"Apply\"}\n                                  </button>\n                                )\n                              }\n                            </div>\n                          </th>\n                        )}\n                      </tr>\n                      {job.job_id === responseId && job.total_applicants > 0 ? (\n                        <tr>\n                          <td colSpan={11}>\n                            {\n                              <>\n                                {/* <!-- Job Responses --> */}\n                                <JobResponse\n                                  responseId={responseId}\n                                  apiCall={apiCall}\n                                  setApiCall={setApiCall}\n                                  heading={\"Manage Jobs\"}\n                                  self={props.selfJob}\n                                  total_applicants={job.total_applicants}\n                                  role_category={job.role_category}\n                                  status={\n                                    props.response === \"response\" ||\n                                      props.response === \"visa\" ||\n                                      props.response === \"lmia\" ||\n                                      props.response === \"companyprofile\"\n                                      ? \"1\"\n                                      : \"0\"\n                                  }\n                                  response={props.response}\n                                  employee_id={\n                                    location.state\n                                      ? location.state.employee_id\n                                        ? location.state.employee_id\n                                        : \"\"\n                                      : \"\"\n                                  }\n                                />\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      ) : null}\n                    </React.Fragment>\n                  ))\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n        {totalData === 0 || totalData === \"0\" ? null : (\n          <div className=\"pt-2\">\n            <Pagination\n              nPages={nPages}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              total={totalData}\n              count={jobData.length}\n            />\n          </div>\n        )}\n      </div>\n      {showAddCompanyDocModal ? (\n        <EmployerDocumentModal\n          employer_id={CompanyId}\n          show={showAddCompanyDocModal}\n          close={() => setShowAddCompanyDocModal(false)}\n        />\n      ) : null}\n      {showAddJobsModal ? (\n        <AddJobModal\n          show={showAddJobsModal}\n          jobdata={JobId}\n          admin={\"admin\"}\n          setApiCall={setApiCall}\n          apiCall={apiCall}\n          close={() => setShowAddJobsModal(false)}\n        />\n      ) : null}\n      {showCandidateModal ? (\n        <EmployeeModal\n          show={showCandidateModal}\n          close={() => setShowCandidateModal(false)}\n          data={candidateSkill}\n          setApiCall={setApiCall}\n          job_id={candidateSkill.job_id}\n        />\n      ) : null}\n      {openLimia ? (\n        <LmiaStatus\n          resData={JobId}\n          show={openLimia}\n          close={() => setOpenLimia(false)}\n          job={\"yes\"}\n          setApiCall={setApiCall}\n        />\n      ) : null}\n      <SAlert\n        show={deleteAlert}\n        title={deleteName}\n        text=\"Are you Sure you want to delete !\"\n        onConfirm={() => deleteJob(deleteId)}\n        showCancelButton={true}\n        onCancel={() => setDeleteAlert(false)}\n      />\n    </>\n  );\n}\n"
        }
    ]
}