{
    "sourceFile": "src/components/common/agentTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1710132787081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710309721743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,8 +562,9 @@\n           />\n         </div>\n       </div>\n       <SAlert\n+className=\"text-capitalize\"\n         show={deleteAlert}\n         title={deleteName}\n         text=\"Are you Sure you want to delete !\"\n         onConfirm={() => OnDeleteAgent(deleteId)}\n"
                },
                {
                    "date": 1710309859586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,9 +562,9 @@\n           />\n         </div>\n       </div>\n       <SAlert\n-className=\"text-capitalize\"\n+  style={{ textTransform: 'capitalize' }}\n         show={deleteAlert}\n         title={deleteName}\n         text=\"Are you Sure you want to delete !\"\n         onConfirm={() => OnDeleteAgent(deleteId)}\n"
                },
                {
                    "date": 1710310148532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,9 +562,8 @@\n           />\n         </div>\n       </div>\n       <SAlert\n-  style={{ textTransform: 'capitalize' }}\n         show={deleteAlert}\n         title={deleteName}\n         text=\"Are you Sure you want to delete !\"\n         onConfirm={() => OnDeleteAgent(deleteId)}\n"
                }
            ],
            "date": 1710132787081,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SAlert from \"../common/sweetAlert\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Pagination from \"../common/pagination\";\nimport Loader from \"../common/loader\";\nimport { LiaUserEditSolid } from \"react-icons/lia\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { GetAgent, DeleteAgent } from \"../../api/api\";\nimport { MdFormatListBulletedAdd } from \"react-icons/md\";\nimport AgentsEmployee from \"./AgentEmployee\";\nexport default function AgentTable(props) {\n  /*Show modal states */\n  let [apiCall, setApiCall] = useState(false);\n  let [isLoading, setIsLoading] = useState(true);\n  const [AgentId, setAgentId] = useState(\n    props.user === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\"\n  );\n  //   let [showAddEmployeeModal, setShowEmployeeMOdal] = useState(false);\n  //   let [showVisaModal, setVisaModal] = useState(false);\n  //   let [showChangeJobModal, setShowChangeJobModal] = useState(false);\n  //   let [showEducationModal, setShowEducationModal] = useState(false);\n  //   let [showSkillsModal, setShowSkillsModal] = useState(false);\n  //   // let [documentModal, setDocumentModal] = useState(false);\n  //   let [showStatusChangeModal, setShowStatusChange] = useState(false);\n  /*data and id states */\n  const [agenteData, setAgentData] = useState([]);\n  //   const [alredyApplied, setAlredyApplied] = useState(false);\n  //   let [employeeId, setemployeeId] = useState();\n  /*delete state */\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"id\");\n  const [sortOrder, setSortOrder] = useState(\"\");\n  /* Function to get Employee data*/\n  const AgentData = async () => {\n    // const params = useParams();\n    setIsLoading(true);\n    try {\n      const userData = await GetAgent(\n        props.user === \"agent\" ? AgentId : \"\",\n        props.search,\n        props.pageNo,\n        recordsPerPage,\n        columnName,\n        sortOrder\n      );\n      if (userData.data.data === undefined || userData.data.data.length === 0) {\n        setAgentData([]);\n        setIsLoading(false);\n        setTotalData(0);\n      } else {\n        setAgentData(userData.data.data);\n        setTotalData(userData.data.total_rows);\n        // setAgentId(userData.data.data[0].id);\n        //Condition to get the Employee of Agent id\n        const filteredItems = userData.data.data.filter(\n          (item) => item.agent_employee_count > 0\n        );\n        if (filteredItems.length === 0) {\n          setAgentId();\n        } else {\n          // setAgentId 4: Get the First Item\n          setAgentId(filteredItems[0].id);\n        }\n        setIsLoading(false);\n        // if (\n        //   props.heading === \"Dashboard\" ||\n        //   location.pathname === \"/employee\" ||\n        //   props.lima === \"no\" ||\n        //   props.user === \"user\"\n        // ) {\n        //   setresponseId();\n        // } else {\n        //   //condition to get the response from job id\n        //   const filteredItems = userData.data.filter(\n        //     (item) =>\n        //       (props.selfJob === \"yes\"\n        //         ? item.applied_by_self\n        //         : item.applied_by_admin) > 0\n        //   );\n        //   if (filteredItems.length === 0) {\n        //     setresponseId();\n        //   } else {\n        //     // Step 4: Get the First Item\n        //     setresponseId(filteredItems[0].job_id);\n        //   }\n        // }\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n\n  /*Render function to get the employer*/\n  useEffect(() => {\n    AgentData();\n    if (props.apiCall === true || apiCall === true) {\n      props.setApiCall(false);\n      setApiCall(false);\n      if (props.user === \"agent\") {\n        setAgentId(localStorage.getItem(\"agent_id\"));\n      } else {\n        setAgentId(\"\");\n      }\n    }\n    // if (alredyApplied === true) {\n    //   setAlredyApplied(false);\n    // }\n  }, [\n    props.search,\n    props.pageNo,\n    recordsPerPage,\n    columnName,\n    sortOrder,\n    props.apiCall,\n    apiCall,\n  ]);\n\n  /* Function to show the single data to update Employee*/\n  // const employeeDetails = (e) => {\n  //   props.employeeDetails(e);\n  // };\n\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.id);\n    setDeleteName(e.name);\n    setDeleteAlert(true);\n  };\n\n  //   /*To cancel the delete alert box */\n  const CancelDelete = () => {\n    setDeleteAlert(false);\n  };\n\n  /*Function to open add Document up modal */\n  // const AddDoucument = (e) => {\n  //   setDocumentModal(true);\n  //   setemployeeId(e);\n  // };\n  // /*\n  /*To call Api to delete employee */\n  async function OnDeleteAgent(e) {\n    try {\n      const responseData = await DeleteAgent(e);\n      if (responseData.message === \"successfully\") {\n        toast.error(\"Partner deleted Successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setDeleteAlert(false);\n        setApiCall(true);\n        props.setApiCall(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n\n  return (\n    <>\n      <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-8 px-2 \">\n        <div className=\"table-responsive main_table_div\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <table className=\"table table-striped main_data_table\">\n              <thead>\n                <tr className=\"\">\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"u_id\");\n                        props.setpageNo(1);\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Name\"\n                    >\n                      DN\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"name\");\n                        props.setpageNo(1);\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Name\"\n                    >\n                      Name\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"contact_no\");\n                        props.setpageNo(1);\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Contact\"\n                    >\n                      Contact\n                    </Link>\n                  </th>\n                  {/* {props.heading === \"Dashboard\" ? (\n                    \"\"\n                  ) : (\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"type\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Type\"\n                      >\n                        Type\n                      </Link>\n                    </th>\n                  )} */}\n                  {props.heading === \"Dashboard\" ? (\n                    \"\"\n                  ) : (\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"address\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Address\"\n                      >\n                        Address\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? (\n                    \"\"\n                  ) : (\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      <Link\n                        to={\"\"}\n                        onClick={() => {\n                          handleSort(\"country\");\n                          props.setpageNo(1);\n                        }}\n                        className=\"text-gray\"\n                        title=\"Sort by Country\"\n                      >\n                        Country\n                      </Link>\n                    </th>\n                  )}\n                  {props.heading === \"Dashboard\" ? (\n                    \"\"\n                  ) : (\n                    <th\n                      scope=\"col\"\n                      className=\"border-0 font-size-4 font-weight-normal\"\n                    >\n                      Action\n                    </th>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map function to show the data in the list*/}\n                {totalData === 0 || agenteData.length === 0 ? (\n                  <tr>\n                    <th colSpan={6} className=\"bg-white text-center\">\n                      No Data Found\n                    </th>\n                  </tr>\n                ) : (\n                  (agenteData || []).map((data) => (\n                    <React.Fragment key={data.id}>\n                      <tr className=\"text-capitalize applicant_row\">\n                        <td className=\" py-5\">\n                          <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {data.u_id}\n                          </p>\n                        </td>\n                        <td className=\" py-5\">\n                          {/* <Link\n                        //   to={`/${data.employee_id}`}\n                          // onClick={\n                          //   data.name !== null\n                          //     ? () => employeeDetails(data.employee_id)\n                          //     : null\n                          // }\n                          title=\"Candidate Details\"\n                        > */}\n                          <div className=\"d-flex profile_box gx-2\">\n                            <div className=\"media  align-items-center\">\n                              <div className=\"circle-30 mx-auto overflow-hidden\">\n                                {data.profile_image === null ? (\n                                  <img\n                                    src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                    alt=\"\"\n                                    className=\"w-100\"\n                                  />\n                                ) : (\n                                  <img\n                                    src={data.profile_image}\n                                    alt=\"\"\n                                    className=\"w-100\"\n                                  />\n                                )}\n                              </div>\n                            </div>\n\n                            <div className=\" mb-0\">\n                              {data.name === null ||\n                              data.name === undefined ||\n                              data.name === \"undefined\" ||\n                              data.name === \"\" ? (\n                                <p className=\"font-size-3  mb-0\">N/A</p>\n                              ) : (\n                                <p\n                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n                                  title={data.name}\n                                >\n                                  {data.name}\n                                </p>\n                              )}\n                              {/* {data.gender || data.marital_status ? (\n                                <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                  {data.gender === \"female\"\n                                    ? \"F\"\n                                    : data.gender === \"male\"\n                                    ? \"M\"\n                                    : \"O\"}\n                                  //Calculation of age from date of birth\n                                  (\n                                  {data.marital_status ||\n                                  data.date_of_birth\n                                    ? `${\n                                        data.marital_status\n                                      },${moment().diff(\n                                        data.date_of_birth,\n                                        \"years\"\n                                      )} Y`\n                                    : null}\n                                  )\n                                </p>\n                              ) : null} */}\n                            </div>\n                          </div>\n                          {/* </Link> */}\n                        </td>\n                        <td className=\"py-5 \">\n                          {(data.contact_no === null ||\n                            data.contact_no === undefined ||\n                            data.contact_no === \"undefined\" ||\n                            data.contact_no === \"\" ||\n                            data.contact_no === \"0\") &&\n                          (data.email === null ||\n                            data.email === undefined ||\n                            data.email === \"undefined\" ||\n                            data.email === \"\") ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <p className=\"m-0\">\n                              <Link\n                                className=\"text-dark\"\n                                to={`tel:${data.contact_no}`}\n                              >\n                                {data.contact_no === \"0\"\n                                  ? \"\"\n                                  : `+${data.contact_no}`}\n                              </Link>\n                              <p className=\"text-gray font-size-2 m-0\">\n                                <Link\n                                  className=\"text-dark\"\n                                  to={`mailto:${data.email}`}\n                                >\n                                  {data.email}\n                                </Link>\n                              </p>\n                            </p>\n                          )}\n                        </td>\n\n                        {/* {props.heading === \"Dashboard\" ? (\n                        \"\"\n                      ) : (\n                        <td className=\" py-5\">\n                          {data.type === null ? (\n                            <p className=\"font-size-3  mb-0\">N/A</p>\n                          ) : (\n                            <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                              <p className=\"text-gray font-size-2 m-0\">\n                                {data.type}\n                              </p>\n                            </h3>\n                          )}\n                        </td>\n                      )} */}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <td className=\" py-5\">\n                            {data.address === null ||\n                            data.address === undefined ||\n                            data.address === \"undefined\" ||\n                            data.address === \"\" ? (\n                              <p className=\"font-size-3  mb-0\">N/A</p>\n                            ) : (\n                              <p\n                                className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\"\n                                title={data.address}\n                              >\n                                {data.address}\n                              </p>\n                            )}\n                          </td>\n                        )}\n                        {props.heading === \"Dashboard\" ? (\n                          \"\"\n                        ) : (\n                          <td className=\" py-5\">\n                            {(data.city === null ||\n                              data.city === undefined ||\n                              data.city === \"undefined\" ||\n                              data.city === \"\") &&\n                            (data.state === null ||\n                              data.state === undefined ||\n                              data.state === \"undefined\" ||\n                              data.state === \"\") &&\n                            (data.country === null ||\n                              data.country === undefined ||\n                              data.country === \"undefined\" ||\n                              data.country === \"\") ? (\n                              <p className=\"font-size-3  mb-0\">N/A</p>\n                            ) : (\n                              <p\n                                className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\"\n                                title={` ${data.city},${data.state},${data.country}`}\n                              >\n                                {` ${data.city},${data.state},${data.country}`}\n                              </p>\n                            )}\n                          </td>\n                        )}\n                        <td className=\" py-5 min-width-px-100\">\n                          <div\n                            className=\"btn-group button_group\"\n                            role=\"group\"\n                            aria-label=\"Basic example\"\n                          >\n                            <button\n                              className=\"btn btn-outline-info action_btn\"\n                              onClick={() => {\n                                setAgentId(data.id);\n                              }}\n                              title=\"Candidate's\"\n                              disabled={data.agent_employee_count === \"0\" || 0}\n                            >\n                              <span className=\"text-gray px-2\">\n                                <MdFormatListBulletedAdd />\n                              </span>\n                              {/* <i className=\"fa fa-list\"></i> */}\n                            </button>\n                            <button\n                              className=\"btn btn-outline-info action_btn\"\n                              onClick={() => props.EditAgent(data.id)}\n                              title=\"Edit Partner\"\n                            >\n                              <span className=\"text-gray px-2\">\n                                <LiaUserEditSolid />\n                              </span>\n                            </button>\n                            <button\n                              className={\n                                props.user === \"agent\"\n                                  ? \"d-none\"\n                                  : \"btn btn-outline-info action_btn\"\n                              }\n                              onClick={() => ShowDeleteAlert(data)}\n                              title=\"Delete Partner\"\n                            >\n                              <span className=\"px-2 text-danger\">\n                                <RiDeleteBin5Line />\n                              </span>\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                      {data.id === AgentId &&\n                      data.agent_employee_count !== (0 || \"0\") ? (\n                        <tr>\n                          <td colSpan={11}>\n                            {\n                              <>\n                                {/* <!-- Agent by emmployee --> */}\n                                <AgentsEmployee\n                                  Agentid={AgentId}\n                                  apiCall={apiCall}\n                                  setApiCall={setApiCall}\n                                  heading={\"Manage Partner\"}\n                                />\n                              </>\n                            }\n                          </td>\n                        </tr>\n                      ) : null}\n                    </React.Fragment>\n                  ))\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n        <div className=\"pt-2\">\n          <Pagination\n            nPages={nPages}\n            currentPage={props.pageNo}\n            setCurrentPage={props.setpageNo}\n            total={totalData}\n            count={agenteData.length}\n          />\n        </div>\n      </div>\n      <SAlert\n        show={deleteAlert}\n        title={deleteName}\n        text=\"Are you Sure you want to delete !\"\n        onConfirm={() => OnDeleteAgent(deleteId)}\n        showCancelButton={true}\n        onCancel={CancelDelete}\n      />\n    </>\n  );\n}\n"
        }
    ]
}