{
    "sourceFile": "src/components/common/employeeNotesTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876552821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876552821,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { AddAllUserFollowup/*AddFollowup*/, getAllUsersFollowUpData,/* getSingleFollowup */ } from \"../../api/api\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { toast } from \"react-toastify\";\nimport Pagination from \"./pagination\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Loader from \"./loader\";\nexport default function EmployeeNotesTable({ search, userType }) {\n  let [isLoading, setIsLoading] = useState(true);\n  let [apiCall, setApiCall] = useState(false);\n  const [data, setData] = useState([]);\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /* Shorting states */\n  const [columnName, setcolumnName] = useState(\"id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  /*Function to get Employee's notes */\n  const EmployeeNotes = async () => {\n    try {\n      // let res = await getSingleFollowup(\n      //   \"\",\n      //   columnName,\n      //   sortOrder,\n      // currentPage,\n      // recordsPerPage,\n      //   \"1\",\n      //   search\n      // );\n      const res = await getAllUsersFollowUpData(\"\", userType, columnName, sortOrder, search, currentPage,\n        recordsPerPage,)\n\n      if (res.status === 1) {\n        setTotalData(res.data.total_rows);\n        setData(res.data.data);\n      }\n      setIsLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    EmployeeNotes();\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n    // eslint-disable-next-line\n  }, [apiCall, sortOrder, search]);\n\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n    setCurrentPage(1);\n  };\n  /*function to change Notes status */\n  const OnStatusChange = async (e, value) => {\n    // e.preventDefault()\n    let data = {\n      id: value.id,\n      status: e,\n\n    };\n    try {\n      // let responseData = await AddAllUserFollowup/*AddFollowup*/(data);\n      let responseData = await AddAllUserFollowup(data);\n      if (responseData.message === \"follow up updated successfully\") {\n        toast.success(\"Followup Updated successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div>\n      <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5 \">\n        <div className=\"table-responsive main_table_div\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <table className=\"table table-striped main_data_table text-capitalize \">\n              <thead>\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"user_id\");\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by User Id\"\n                    >\n                      {userType === \"employee\" ? \"EID\" : \"CID\"}\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"name\");\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by name\"\n                    >\n                      Name\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"created_at\");\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by aadded date\"\n                    >\n                      Date added\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"subject\");\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Subject\"\n                    >\n                      Subject\n                    </Link>\n                  </th>\n                  {/* <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to={\"\"}\n                      onClick={() => {\n                        handleSort(\"remark\");\n                      }}\n                      className=\"text-gray\"\n                      title=\"Sort by Description\"\n                    >\n                      Description\n                    </Link>\n                  </th> */}\n                  <th\n                    scope=\"col\"\n                    className=\"border-0 font-size-4 font-weight-normal\"\n                  >\n                    status\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map function to show the data in the list*/}\n                {totalData === 0 || data.length === 0 ? (\n                  <tr>\n                    <th colSpan={6} className=\"bg-white text-center\">\n                      No Data Found\n                    </th>\n                  </tr>\n                ) : (\n                  (data || []).map((data, i) => (\n                    <React.Fragment key={i}>\n                      <tr className=\"text-capitalize\" >\n                        <th className=\" py-5\">\n                          <p className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {data.user_id}\n                          </p>\n                        </th>\n                        <th className=\" py-5\">\n                          <Link\n                            to={userType === \"employee\" ? `/${data.user_id}` : `/client_detail`}\n                            // onClick={\n                            //   empdata.name !== null\n                            //     ? () => employeeDetails(empdata.employee_id)\n                            //     : null\n                            // }\n                            onClick={userType === \"employee\"\n                              ? null\n                              : () =>\n                                localStorage.setItem(\n                                  \"company_id\",\n                                  data.user_id\n                                )\n                            }\n                            title=\"User Details\"\n                          >\n                            <div className=\"d-flex profile_box gx-2\">\n                              <div className=\"media  align-items-center\">\n                                <div className=\"circle-30 mx-auto overflow-hidden\">\n                                  {data.profile_photo === null ||\n                                    data.profile_photo === \"\" ||\n                                    data.profile_photo === undefined ||\n                                    data.profile_photo === \"null\" ||\n                                    data.profile_photo ===\n                                    \"undefined\" ? (\n                                    <img\n                                      src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                      alt=\"\"\n                                      className=\"w-100\"\n                                    />\n                                  ) : (\n                                    <img\n                                      src={data.profile_photo}\n                                      alt=\"\"\n                                      className=\"w-100\"\n                                    />\n                                  )}\n                                </div>\n                              </div>\n\n                              <div className=\" mb-0\">\n                                {data.name === null ||\n                                  data.name === undefined ||\n                                  data.name === \"undefined\" ||\n                                  data.name === \"\" ? (\n                                  <p className=\"font-size-3  mb-0\">N/A</p>\n                                ) : (\n                                  <p\n                                    className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n                                    title={data.name}\n                                  >\n                                    {data.name}\n                                  </p>\n                                )}\n                                {/* {empdata.gender || empdata.marital_status ? (\n                                <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                  {empdata.gender === \"female\"\n                                    ? \"F\"\n                                    : empdata.gender === \"male\"\n                                      ? \"M\"\n                                      : \"O\"}\n                                  {/*Calculation of age from date of birth*/}\n                                {/* (\n                                  {empdata.marital_status ||\n                                    empdata.date_of_birth\n                                    ? `${empdata.marital_status\n                                    },${moment().diff(\n                                      empdata.date_of_birth,\n                                      \"years\"\n                                    )} Y`\n                                    : null}\n                                  )\n                                </p>\n                              ) : null} */}\n                                {/* {empdata.is_featured === \"1\" ||\n                                empdata.is_featured === 1 ? (\n                                <span className=\"bg-orange text-white featured_tag\">\n                                  Featured\n                                </span>\n                              ) : null}\n                              {empdata.created_by_admin === \"0\" ||\n                                empdata.created_by_admin === 0 ? (\n                                <span className=\"bg-info text-white web_tag\">\n                                  Web\n                                </span>\n                              ) : null} */}\n                              </div>\n                            </div>\n                          </Link>\n                        </th>\n                        <th className=\"py-5\">\n                          <div className=\"font-size-3 mb-0 font-weight-semibold text-black-2\">\n                            {moment(data.created_at).format(\"DD MMMM, YYYY\")}\n                          </div>\n                        </th>\n                        <th className=\"py-5 \">\n                          <div\n                            className=\"font-size-3 mb-0 font-weight-semibold text-black-2 text-truncate\"\n                            title={data.subject}\n                          >\n                            {data.subject}\n                          </div>\n                        </th>\n                        {/* <th className=\" py-5\">\n                        <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0  text-truncate\">\n                          {data.remark}\n                        </h3>\n                      </th> */}\n                        <th className=\"py-5 min-width-px-100 \">\n                          <div\n                            className=\"btn-group button_group d-flex\"\n                            role=\"group\"\n                          >\n                            <DropdownButton\n                              as={ButtonGroup}\n                              title={\n                                data.status === \"1\" ? \"Private\" : \"Complete\"\n                              }\n                              size=\"sm\"\n                              className=\"user_status_btn btn-primary text-white ml-1\"\n                              onSelect={(e) => OnStatusChange(e, data)}\n                            >\n                              <Dropdown.Item\n                                value={\"2\"}\n                                eventKey={2}\n                                className=\"text-capitalize\"\n                              >\n                                Complete\n                              </Dropdown.Item>\n                            </DropdownButton>\n                          </div>\n                        </th>\n                      </tr>\n                      <tr>\n\n                        <td\n                          colSpan={5}\n                          className=\"font-size-3 font-weight-normal text-black-2 mb-0text-truncate text-break\"\n                        >\n                          <div className=\" d-flex\">\n                            <b className=\"\">Description: { }</b>\n                            <span\n                              className=\"px-2\"\n                              dangerouslySetInnerHTML={{\n                                __html: data.remark,\n                              }}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    </React.Fragment>\n                  ))\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n      {/* <!-- Pagination- --> */}\n      <div className=\"pt-2\">\n        <Pagination\n          nPages={nPages}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          total={totalData}\n          count={data.length}\n        />\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}