{
    "sourceFile": "src/components/common/companyFollowUp.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1693200781915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486849666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n           props.setApiCall(true);\r\n           return close();\r\n         }\r\n       } catch (err) {\r\n-        toast.error(\"Something went wrong\", {\r\n+       console.log(err) {\r\n           position: toast.POSITION.TOP_RIGHT,\r\n           autoClose: 1000,\r\n         });\r\n         setLoading(false);\r\n"
                },
                {
                    "date": 1693486958314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,9 @@\n           props.setApiCall(true);\r\n           return close();\r\n         }\r\n       } catch (err) {\r\n-       console.log(err) {\r\n-          position: toast.POSITION.TOP_RIGHT,\r\n-          autoClose: 1000,\r\n-        });\r\n+       console.log(err) \r\n         setLoading(false);\r\n       }\r\n     } else {\r\n       setLoading(false);\r\n"
                },
                {
                    "date": 1693809887359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,301 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import useValidation from \"../common/useValidation\";\r\n+// import { Modal } from \"react-bootstrap\";\r\n+import { getSingleCompanyFollowup, AddCompanyFollowup } from \"../../api/api\";\r\n+import { toast, ToastContainer } from \"react-toastify\";\r\n+import \"react-toastify/dist/ReactToastify.css\";\r\n+\r\n+function AddCompanyfollowup(props) {\r\n+  let [response, setResponseData] = useState([]);\r\n+  let [loading, setLoading] = useState(false);\r\n+  let cid = props.company_id;\r\n+  // le/*tjobId*/ = props.job_id;\r\n+  /* Functionality to close the modal */\r\n+  const close = () => {\r\n+    setState(initialFormState);\r\n+    setErrors(\"\");\r\n+    setLoading(false);\r\n+    // props.close();\r\n+  };\r\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n+\r\n+  /* Function to get the Response data*/\r\n+  const ResponseData = async () => {\r\n+    try {\r\n+      const userData = await getSingleCompanyFollowup(\r\n+        props.company_id\r\n+        // props.job_id\r\n+      );\r\n+      if (\r\n+        userData.data.length === 0 ||\r\n+        props.company_id === \"\" ||\r\n+        props.company_id === undefined\r\n+      ) {\r\n+        setResponseData([]);\r\n+      } else {\r\n+        setResponseData(userData.data);\r\n+      }\r\n+    } catch (err) {\r\n+      console.log(err)\r\n+    }\r\n+  };\r\n+\r\n+  /*Render function to get the Response*/\r\n+  useEffect(() => {\r\n+    if (props.company_id === undefined /*|| props.job_id === undefined*/) {\r\n+    } else {\r\n+      ResponseData();\r\n+    }\r\n+  }, [props]);\r\n+\r\n+  // INITIAL STATE ASSIGNMENT\r\n+  const initialFormState = {\r\n+    remark: \"\",\r\n+    next_followup_date: \"\",\r\n+    company_id: cid,\r\n+    subject: \"\",\r\n+  };\r\n+  // VALIDATION CONDITIONS\r\n+  const validators = {\r\n+    remark: [\r\n+      (value) =>\r\n+        value === \"\" || value === null || value.trim() === \"\"\r\n+          ? \"Discription required\"\r\n+          : value.length < 2\r\n+          ? \"Discription should have 2 or more letters.\"\r\n+          : \"\",\r\n+    ],\r\n+    subject: [\r\n+      (value) =>\r\n+        value === \"\" || value === null || value.trim() === \"\"\r\n+          ? \"Subject required\"\r\n+          : value.length < 2\r\n+          ? \"Subject should have 2 or more letters.\"\r\n+          : \"\",\r\n+    ],\r\n+  };\r\n+  // CUSTOM VALIDATIONS IMPORT\r\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\r\n+    useValidation(initialFormState, validators);\r\n+\r\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\r\n+  const onAminFollowClick = async (event) => {\r\n+    event.preventDefault();\r\n+    if (validate()) {\r\n+      setLoading(true);\r\n+      try {\r\n+        let responseData = await AddCompanyFollowup(state);\r\n+        if (responseData.message === \"follow up updated successfully\") {\r\n+          toast.success(\"Followup Updated successfully\", {\r\n+            position: toast.POSITION.TOP_RIGHT,\r\n+            autoClose: 1000,\r\n+          });\r\n+          props.setApiCall(true);\r\n+          return close();\r\n+        }\r\n+      } catch (err) {\r\n+       console.log(err) \r\n+        setLoading(false);\r\n+      }\r\n+    } else {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n+  const moment = require(\"moment\");\r\n+  return (\r\n+    <>\r\n+      <ToastContainer />\r\n+      {/* <Modal\r\n+        show={props.show}\r\n+        size=\"lg\"\r\n+        aria-labelledby=\"contained-modal-title-vcenter\"\r\n+        centered\r\n+      > \r\n+        <button\r\n+          type=\"button\"\r\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\r\n+          data-dismiss=\"modal\"\r\n+          onClick={close}\r\n+        >\r\n+          <i className=\"fas fa-times\"></i>\r\n+        </button>*/}\r\n+      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n+        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n+        <div className=\"row\">\r\n+          <div className=\"activity_container col-md-8 border-right p-10\">\r\n+            {response.length === 0 ?\r\n+              <div className=\"single_note mb-5\">\r\n+                <div className=\"d-flex justify-content-center\">\r\n+                  <p className=\"text-italic font-size-3 m-0\">\r\n+                    No Data Found\r\n+                  </p>\r\n+                </div>\r\n+              </div> :\r\n+            (response || []).map((res, index) => (\r\n+              <div className=\"single_note mb-5\" key={index}>\r\n+                <div className=\"d-flex justify-content-between\">\r\n+                  <p className=\"text-italic font-size-3 m-0\">\r\n+                    Created on:{\" \"}\r\n+                    {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n+                  </p>\r\n+                </div>\r\n+                <div className=\"card rounded-3 py-2 px-5\">\r\n+                  <p className=\"fw-bold m-0\">\r\n+                    <b>{res.subject}</b>\r\n+                  </p>\r\n+                  <p className=\"m-0\">{res.remark}</p>\r\n+                </div>\r\n+              </div>\r\n+              // <div className=\"card mt-5 mb-5\" key={res.id}>\r\n+              //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\r\n+              //     <div className=\"card-head font-size-3 text-dark card_left\">\r\n+              //       <span className=\"text-dark\"> Posted date: </span>\r\n+              //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\r\n+              //     </div>\r\n+              //     {res.next_followup_date === \"0000-00-00\" ? null :\r\n+              //       <div className=\"card-head font-size-3 text-dark card_right\">\r\n+              //         <span className=\"text-dark\"> Next date: </span>\r\n+              //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\r\n+              //       </div>}\r\n+              //   </div>\r\n+              //   <div className=\"card-body p-3\">{res.remark}</div>\r\n+              // </div>\r\n+            ))}\r\n+          </div>\r\n+          <form className=\"col-md-4 p-10\">\r\n+            <div className=\"form-group col px-0 pr-3\">\r\n+              <label\r\n+                htmlFor=\"subject\"\r\n+                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n+              >\r\n+                Subject: <span className=\"text-danger\">*</span>\r\n+              </label>\r\n+              <div className=\"position-relative\">\r\n+                <input\r\n+                  maxLength={20}\r\n+                  name=\"subject\"\r\n+                  value={state.subject || \"\"}\r\n+                  onChange={onInputChange}\r\n+                  type=\"text\"\r\n+                  className={\r\n+                    errors.subject\r\n+                      ? \"form-control border border-danger\"\r\n+                      : \"form-control\"\r\n+                  }\r\n+                  placeholder=\"subject\"\r\n+                  id=\"subject\"\r\n+                />\r\n+              </div>\r\n+              {/*----ERROR MESSAGE FOR name----*/}\r\n+              {errors.subject && (\r\n+                <span key={errors.subject} className=\"text-danger font-size-3\">\r\n+                  {errors.subject}\r\n+                </span>\r\n+              )}\r\n+            </div>\r\n+            <div className=\"form-group col px-0 pr-3\">\r\n+              <label\r\n+                htmlFor=\"remark\"\r\n+                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n+              >\r\n+                Add New Note: <span className=\"text-danger\">*</span>\r\n+              </label>\r\n+              <div className=\"position-relative\">\r\n+                <div\r\n+                  className={\r\n+                    errors.remark\r\n+                      ? \"border border-danger rounded overflow-hidden\"\r\n+                      : \"border rounded overflow-hidden\"\r\n+                  }\r\n+                >\r\n+                  <textarea\r\n+                    name=\"remark\"\r\n+                    value={state.remark}\r\n+                    onChange={onInputChange}\r\n+                    rows={8}\r\n+                    style={{ height: \"140px\" }}\r\n+                    className={\r\n+                      errors.remark\r\n+                        ? \"form-control border border-danger\"\r\n+                        : \"form-control\"\r\n+                    }\r\n+                    id=\"remark\"\r\n+                    placeholder=\"Add Note here\"\r\n+                  ></textarea>\r\n+                </div>\r\n+                {/*----ERROR MESSAGE FOR DESRIPTION----*/}\r\n+                {errors.remark && (\r\n+                  <span key={errors.remark} className=\"text-danger font-size-3\">\r\n+                    {errors.remark}\r\n+                  </span>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+            <div className=\"form-group col px-0 pr-3\">\r\n+              <label\r\n+                htmlFor=\"next_followup_date\"\r\n+                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\r\n+              >\r\n+                Next Date :\r\n+              </label>\r\n+              <div className=\"position-relative\">\r\n+                <input\r\n+                  type=\"date\"\r\n+                  placeholder=\"Next followup date\"\r\n+                  id=\"next_followup_date\"\r\n+                  name=\"next_followup_date\"\r\n+                  min={moment().format(\"DD-MM-YYYY\")}\r\n+                  value={state.next_followup_date}\r\n+                  onChange={onInputChange}\r\n+                  onKeyDownCapture={(e) => e.preventDefault()}\r\n+                  className={\r\n+                    errors.next_followup_date\r\n+                      ? \"form-control coustam_datepicker border border-danger\"\r\n+                      : \"form-control coustam_datepicker\"\r\n+                  }\r\n+                />\r\n+                {/*----ERROR MESSAGE FOR next_followup_date----*/}\r\n+                {errors.next_followup_date && (\r\n+                  <span\r\n+                    key={errors.next_followup_date}\r\n+                    className=\"text-danger font-size-3\"\r\n+                  >\r\n+                    {errors.next_followup_date}\r\n+                  </span>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+            <div className=\"form-group text-center\">\r\n+              {loading === true ? (\r\n+                <button\r\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n+                  type=\"button\"\r\n+                  disabled\r\n+                >\r\n+                  <span\r\n+                    className=\"spinner-border spinner-border-sm \"\r\n+                    role=\"status\"\r\n+                    aria-hidden=\"true\"\r\n+                  ></span>\r\n+                  <span className=\"sr-only\">Loading...</span>\r\n+                </button>\r\n+              ) : (\r\n+                <button\r\n+                  onClick={(e) => onAminFollowClick(e)}\r\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n+                  type=\"button\"\r\n+                >\r\n+                  Submit\r\n+                </button>\r\n+              )}\r\n+            </div>\r\n+          </form>\r\n+        </div>\r\n+      </div>\r\n+      {/* </Modal> */}\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default AddCompanyfollowup;\r\n"
                },
                {
                    "date": 1693820064456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n             (response || []).map((res, index) => (\r\n               <div className=\"single_note mb-5\" key={index}>\r\n                 <div className=\"d-flex justify-content-between\">\r\n                   <p className=\"text-italic font-size-3 m-0\">\r\n-                    Created on:{\" \"}\r\n+                    Created on:\r\n                     {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n                   </p>\r\n                 </div>\r\n                 <div className=\"card rounded-3 py-2 px-5\">\r\n@@ -298,305 +298,4 @@\n   );\r\n }\r\n \r\n export default AddCompanyfollowup;\r\n-import React, { useState, useEffect } from \"react\";\r\n-import useValidation from \"../common/useValidation\";\r\n-// import { Modal } from \"react-bootstrap\";\r\n-import { getSingleCompanyFollowup, AddCompanyFollowup } from \"../../api/api\";\r\n-import { toast, ToastContainer } from \"react-toastify\";\r\n-import \"react-toastify/dist/ReactToastify.css\";\r\n-\r\n-function AddCompanyfollowup(props) {\r\n-  let [response, setResponseData] = useState([]);\r\n-  let [loading, setLoading] = useState(false);\r\n-  let cid = props.company_id;\r\n-  // le/*tjobId*/ = props.job_id;\r\n-  /* Functionality to close the modal */\r\n-  const close = () => {\r\n-    setState(initialFormState);\r\n-    setErrors(\"\");\r\n-    setLoading(false);\r\n-    // props.close();\r\n-  };\r\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n-\r\n-  /* Function to get the Response data*/\r\n-  const ResponseData = async () => {\r\n-    try {\r\n-      const userData = await getSingleCompanyFollowup(\r\n-        props.company_id\r\n-        // props.job_id\r\n-      );\r\n-      if (\r\n-        userData.data.length === 0 ||\r\n-        props.company_id === \"\" ||\r\n-        props.company_id === undefined\r\n-      ) {\r\n-        setResponseData([]);\r\n-      } else {\r\n-        setResponseData(userData.data);\r\n-      }\r\n-    } catch (err) {\r\n-      console.log(err)\r\n-    }\r\n-  };\r\n-\r\n-  /*Render function to get the Response*/\r\n-  useEffect(() => {\r\n-    if (props.company_id === undefined /*|| props.job_id === undefined*/) {\r\n-    } else {\r\n-      ResponseData();\r\n-    }\r\n-  }, [props]);\r\n-\r\n-  // INITIAL STATE ASSIGNMENT\r\n-  const initialFormState = {\r\n-    remark: \"\",\r\n-    next_followup_date: \"\",\r\n-    company_id: cid,\r\n-    subject: \"\",\r\n-  };\r\n-  // VALIDATION CONDITIONS\r\n-  const validators = {\r\n-    remark: [\r\n-      (value) =>\r\n-        value === \"\" || value === null || value.trim() === \"\"\r\n-          ? \"Discription required\"\r\n-          : value.length < 2\r\n-          ? \"Discription should have 2 or more letters.\"\r\n-          : \"\",\r\n-    ],\r\n-    subject: [\r\n-      (value) =>\r\n-        value === \"\" || value === null || value.trim() === \"\"\r\n-          ? \"Subject required\"\r\n-          : value.length < 2\r\n-          ? \"Subject should have 2 or more letters.\"\r\n-          : \"\",\r\n-    ],\r\n-  };\r\n-  // CUSTOM VALIDATIONS IMPORT\r\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\r\n-    useValidation(initialFormState, validators);\r\n-\r\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\r\n-  const onAminFollowClick = async (event) => {\r\n-    event.preventDefault();\r\n-    if (validate()) {\r\n-      setLoading(true);\r\n-      try {\r\n-        let responseData = await AddCompanyFollowup(state);\r\n-        if (responseData.message === \"follow up updated successfully\") {\r\n-          toast.success(\"Followup Updated successfully\", {\r\n-            position: toast.POSITION.TOP_RIGHT,\r\n-            autoClose: 1000,\r\n-          });\r\n-          props.setApiCall(true);\r\n-          return close();\r\n-        }\r\n-      } catch (err) {\r\n-       console.log(err) \r\n-        setLoading(false);\r\n-      }\r\n-    } else {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n-  const moment = require(\"moment\");\r\n-  return (\r\n-    <>\r\n-      <ToastContainer />\r\n-      {/* <Modal\r\n-        show={props.show}\r\n-        size=\"lg\"\r\n-        aria-labelledby=\"contained-modal-title-vcenter\"\r\n-        centered\r\n-      > \r\n-        <button\r\n-          type=\"button\"\r\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\r\n-          data-dismiss=\"modal\"\r\n-          onClick={close}\r\n-        >\r\n-          <i className=\"fas fa-times\"></i>\r\n-        </button>*/}\r\n-      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n-        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n-        <div className=\"row\">\r\n-          <div className=\"activity_container col-md-8 border-right p-10\">\r\n-            {response.length === 0 ?\r\n-              <div className=\"single_note mb-5\">\r\n-                <div className=\"d-flex justify-content-center\">\r\n-                  <p className=\"text-italic font-size-3 m-0\">\r\n-                    No Data Found\r\n-                  </p>\r\n-                </div>\r\n-              </div> :\r\n-            (response || []).map((res, index) => (\r\n-              <div className=\"single_note mb-5\" key={index}>\r\n-                <div className=\"d-flex justify-content-between\">\r\n-                  <p className=\"text-italic font-size-3 m-0\">\r\n-                    Created on:{\" \"}\r\n-                    {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n-                  </p>\r\n-                </div>\r\n-                <div className=\"card rounded-3 py-2 px-5\">\r\n-                  <p className=\"fw-bold m-0\">\r\n-                    <b>{res.subject}</b>\r\n-                  </p>\r\n-                  <p className=\"m-0\">{res.remark}</p>\r\n-                </div>\r\n-              </div>\r\n-              // <div className=\"card mt-5 mb-5\" key={res.id}>\r\n-              //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\r\n-              //     <div className=\"card-head font-size-3 text-dark card_left\">\r\n-              //       <span className=\"text-dark\"> Posted date: </span>\r\n-              //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\r\n-              //     </div>\r\n-              //     {res.next_followup_date === \"0000-00-00\" ? null :\r\n-              //       <div className=\"card-head font-size-3 text-dark card_right\">\r\n-              //         <span className=\"text-dark\"> Next date: </span>\r\n-              //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\r\n-              //       </div>}\r\n-              //   </div>\r\n-              //   <div className=\"card-body p-3\">{res.remark}</div>\r\n-              // </div>\r\n-            ))}\r\n-          </div>\r\n-          <form className=\"col-md-4 p-10\">\r\n-            <div className=\"form-group col px-0 pr-3\">\r\n-              <label\r\n-                htmlFor=\"subject\"\r\n-                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n-              >\r\n-                Subject: <span className=\"text-danger\">*</span>\r\n-              </label>\r\n-              <div className=\"position-relative\">\r\n-                <input\r\n-                  maxLength={20}\r\n-                  name=\"subject\"\r\n-                  value={state.subject || \"\"}\r\n-                  onChange={onInputChange}\r\n-                  type=\"text\"\r\n-                  className={\r\n-                    errors.subject\r\n-                      ? \"form-control border border-danger\"\r\n-                      : \"form-control\"\r\n-                  }\r\n-                  placeholder=\"subject\"\r\n-                  id=\"subject\"\r\n-                />\r\n-              </div>\r\n-              {/*----ERROR MESSAGE FOR name----*/}\r\n-              {errors.subject && (\r\n-                <span key={errors.subject} className=\"text-danger font-size-3\">\r\n-                  {errors.subject}\r\n-                </span>\r\n-              )}\r\n-            </div>\r\n-            <div className=\"form-group col px-0 pr-3\">\r\n-              <label\r\n-                htmlFor=\"remark\"\r\n-                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n-              >\r\n-                Add New Note: <span className=\"text-danger\">*</span>\r\n-              </label>\r\n-              <div className=\"position-relative\">\r\n-                <div\r\n-                  className={\r\n-                    errors.remark\r\n-                      ? \"border border-danger rounded overflow-hidden\"\r\n-                      : \"border rounded overflow-hidden\"\r\n-                  }\r\n-                >\r\n-                  <textarea\r\n-                    name=\"remark\"\r\n-                    value={state.remark}\r\n-                    onChange={onInputChange}\r\n-                    rows={8}\r\n-                    style={{ height: \"140px\" }}\r\n-                    className={\r\n-                      errors.remark\r\n-                        ? \"form-control border border-danger\"\r\n-                        : \"form-control\"\r\n-                    }\r\n-                    id=\"remark\"\r\n-                    placeholder=\"Add Note here\"\r\n-                  ></textarea>\r\n-                </div>\r\n-                {/*----ERROR MESSAGE FOR DESRIPTION----*/}\r\n-                {errors.remark && (\r\n-                  <span key={errors.remark} className=\"text-danger font-size-3\">\r\n-                    {errors.remark}\r\n-                  </span>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-            <div className=\"form-group col px-0 pr-3\">\r\n-              <label\r\n-                htmlFor=\"next_followup_date\"\r\n-                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\r\n-              >\r\n-                Next Date :\r\n-              </label>\r\n-              <div className=\"position-relative\">\r\n-                <input\r\n-                  type=\"date\"\r\n-                  placeholder=\"Next followup date\"\r\n-                  id=\"next_followup_date\"\r\n-                  name=\"next_followup_date\"\r\n-                  min={moment().format(\"DD-MM-YYYY\")}\r\n-                  value={moment(state.next_followup_date).format(\"DD-MM-YYYY\")}\r\n-                  onChange={onInputChange}\r\n-                  onKeyDownCapture={(e) => e.preventDefault()}\r\n-                  className={\r\n-                    errors.next_followup_date\r\n-                      ? \"form-control coustam_datepicker border border-danger\"\r\n-                      : \"form-control coustam_datepicker\"\r\n-                  }\r\n-                />\r\n-                {/*----ERROR MESSAGE FOR next_followup_date----*/}\r\n-                {errors.next_followup_date && (\r\n-                  <span\r\n-                    key={errors.next_followup_date}\r\n-                    className=\"text-danger font-size-3\"\r\n-                  >\r\n-                    {errors.next_followup_date}\r\n-                  </span>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-            <div className=\"form-group text-center\">\r\n-              {loading === true ? (\r\n-                <button\r\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n-                  type=\"button\"\r\n-                  disabled\r\n-                >\r\n-                  <span\r\n-                    className=\"spinner-border spinner-border-sm \"\r\n-                    role=\"status\"\r\n-                    aria-hidden=\"true\"\r\n-                  ></span>\r\n-                  <span className=\"sr-only\">Loading...</span>\r\n-                </button>\r\n-              ) : (\r\n-                <button\r\n-                  onClick={(e) => onAminFollowClick(e)}\r\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n-                  type=\"button\"\r\n-                >\r\n-                  Submit\r\n-                </button>\r\n-              )}\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-      </div>\r\n-      {/* </Modal> */}\r\n-    </>\r\n-  );\r\n-}\r\n-\r\n-export default AddCompanyfollowup;\r\n"
                }
            ],
            "date": 1693200781915,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport useValidation from \"../common/useValidation\";\r\n// import { Modal } from \"react-bootstrap\";\r\nimport { getSingleCompanyFollowup, AddCompanyFollowup } from \"../../api/api\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction AddCompanyfollowup(props) {\r\n  let [response, setResponseData] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n  let cid = props.company_id;\r\n  // le/*tjobId*/ = props.job_id;\r\n  /* Functionality to close the modal */\r\n  const close = () => {\r\n    setState(initialFormState);\r\n    setErrors(\"\");\r\n    setLoading(false);\r\n    // props.close();\r\n  };\r\n  // USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n\r\n  /* Function to get the Response data*/\r\n  const ResponseData = async () => {\r\n    try {\r\n      const userData = await getSingleCompanyFollowup(\r\n        props.company_id\r\n        // props.job_id\r\n      );\r\n      if (\r\n        userData.data.length === 0 ||\r\n        props.company_id === \"\" ||\r\n        props.company_id === undefined\r\n      ) {\r\n        setResponseData([]);\r\n      } else {\r\n        setResponseData(userData.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n  /*Render function to get the Response*/\r\n  useEffect(() => {\r\n    if (props.company_id === undefined /*|| props.job_id === undefined*/) {\r\n    } else {\r\n      ResponseData();\r\n    }\r\n  }, [props]);\r\n\r\n  // INITIAL STATE ASSIGNMENT\r\n  const initialFormState = {\r\n    remark: \"\",\r\n    next_followup_date: \"\",\r\n    company_id: cid,\r\n    subject: \"\",\r\n  };\r\n  // VALIDATION CONDITIONS\r\n  const validators = {\r\n    remark: [\r\n      (value) =>\r\n        value === \"\" || value === null || value.trim() === \"\"\r\n          ? \"Discription required\"\r\n          : value.length < 2\r\n          ? \"Discription should have 2 or more letters.\"\r\n          : \"\",\r\n    ],\r\n    subject: [\r\n      (value) =>\r\n        value === \"\" || value === null || value.trim() === \"\"\r\n          ? \"Subject required\"\r\n          : value.length < 2\r\n          ? \"Subject should have 2 or more letters.\"\r\n          : \"\",\r\n    ],\r\n  };\r\n  // CUSTOM VALIDATIONS IMPORT\r\n  const { state, setState, onInputChange, errors, setErrors, validate } =\r\n    useValidation(initialFormState, validators);\r\n\r\n  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\r\n  const onAminFollowClick = async (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      setLoading(true);\r\n      try {\r\n        let responseData = await AddCompanyFollowup(state);\r\n        if (responseData.message === \"follow up updated successfully\") {\r\n          toast.success(\"Followup Updated successfully\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            autoClose: 1000,\r\n          });\r\n          props.setApiCall(true);\r\n          return close();\r\n        }\r\n      } catch (err) {\r\n        toast.error(\"Something went wrong\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 1000,\r\n        });\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\r\n  const moment = require(\"moment\");\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      {/* <Modal\r\n        show={props.show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      > \r\n        <button\r\n          type=\"button\"\r\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\r\n          data-dismiss=\"modal\"\r\n          onClick={close}\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>*/}\r\n      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n        <div className=\"row\">\r\n          <div className=\"activity_container col-md-8 border-right p-10\">\r\n            {response.length === 0 ?\r\n              <div className=\"single_note mb-5\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <p className=\"text-italic font-size-3 m-0\">\r\n                    No Data Found\r\n                  </p>\r\n                </div>\r\n              </div> :\r\n            (response || []).map((res, index) => (\r\n              <div className=\"single_note mb-5\" key={index}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <p className=\"text-italic font-size-3 m-0\">\r\n                    Created on:{\" \"}\r\n                    {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"card rounded-3 py-2 px-5\">\r\n                  <p className=\"fw-bold m-0\">\r\n                    <b>{res.subject}</b>\r\n                  </p>\r\n                  <p className=\"m-0\">{res.remark}</p>\r\n                </div>\r\n              </div>\r\n              // <div className=\"card mt-5 mb-5\" key={res.id}>\r\n              //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\r\n              //     <div className=\"card-head font-size-3 text-dark card_left\">\r\n              //       <span className=\"text-dark\"> Posted date: </span>\r\n              //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\r\n              //     </div>\r\n              //     {res.next_followup_date === \"0000-00-00\" ? null :\r\n              //       <div className=\"card-head font-size-3 text-dark card_right\">\r\n              //         <span className=\"text-dark\"> Next date: </span>\r\n              //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\r\n              //       </div>}\r\n              //   </div>\r\n              //   <div className=\"card-body p-3\">{res.remark}</div>\r\n              // </div>\r\n            ))}\r\n          </div>\r\n          <form className=\"col-md-4 p-10\">\r\n            <div className=\"form-group col px-0 pr-3\">\r\n              <label\r\n                htmlFor=\"subject\"\r\n                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n              >\r\n                Subject: <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"position-relative\">\r\n                <input\r\n                  maxLength={20}\r\n                  name=\"subject\"\r\n                  value={state.subject || \"\"}\r\n                  onChange={onInputChange}\r\n                  type=\"text\"\r\n                  className={\r\n                    errors.subject\r\n                      ? \"form-control border border-danger\"\r\n                      : \"form-control\"\r\n                  }\r\n                  placeholder=\"subject\"\r\n                  id=\"subject\"\r\n                />\r\n              </div>\r\n              {/*----ERROR MESSAGE FOR name----*/}\r\n              {errors.subject && (\r\n                <span key={errors.subject} className=\"text-danger font-size-3\">\r\n                  {errors.subject}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group col px-0 pr-3\">\r\n              <label\r\n                htmlFor=\"remark\"\r\n                className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\r\n              >\r\n                Add New Note: <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"position-relative\">\r\n                <div\r\n                  className={\r\n                    errors.remark\r\n                      ? \"border border-danger rounded overflow-hidden\"\r\n                      : \"border rounded overflow-hidden\"\r\n                  }\r\n                >\r\n                  <textarea\r\n                    name=\"remark\"\r\n                    value={state.remark}\r\n                    onChange={onInputChange}\r\n                    rows={8}\r\n                    style={{ height: \"140px\" }}\r\n                    className={\r\n                      errors.remark\r\n                        ? \"form-control border border-danger\"\r\n                        : \"form-control\"\r\n                    }\r\n                    id=\"remark\"\r\n                    placeholder=\"Add Note here\"\r\n                  ></textarea>\r\n                </div>\r\n                {/*----ERROR MESSAGE FOR DESRIPTION----*/}\r\n                {errors.remark && (\r\n                  <span key={errors.remark} className=\"text-danger font-size-3\">\r\n                    {errors.remark}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group col px-0 pr-3\">\r\n              <label\r\n                htmlFor=\"next_followup_date\"\r\n                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\r\n              >\r\n                Next Date :\r\n              </label>\r\n              <div className=\"position-relative\">\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"Next followup date\"\r\n                  id=\"next_followup_date\"\r\n                  name=\"next_followup_date\"\r\n                  min={moment().format(\"DD-MM-YYYY\")}\r\n                  value={moment(state.next_followup_date).format(\"DD-MM-YYYY\")}\r\n                  onChange={onInputChange}\r\n                  onKeyDownCapture={(e) => e.preventDefault()}\r\n                  className={\r\n                    errors.next_followup_date\r\n                      ? \"form-control coustam_datepicker border border-danger\"\r\n                      : \"form-control coustam_datepicker\"\r\n                  }\r\n                />\r\n                {/*----ERROR MESSAGE FOR next_followup_date----*/}\r\n                {errors.next_followup_date && (\r\n                  <span\r\n                    key={errors.next_followup_date}\r\n                    className=\"text-danger font-size-3\"\r\n                  >\r\n                    {errors.next_followup_date}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group text-center\">\r\n              {loading === true ? (\r\n                <button\r\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n                  type=\"button\"\r\n                  disabled\r\n                >\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm \"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={(e) => onAminFollowClick(e)}\r\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\r\n                  type=\"button\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddCompanyfollowup;\r\n"
        }
    ]
}