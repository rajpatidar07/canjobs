{
    "sourceFile": "src/components/common/setting.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876352628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876352628,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { RiLockPasswordFill } from \"react-icons/ri\";\r\nimport {\r\n  GetEmployeeSetting,\r\n  GetEmployerSetting,\r\n  AddEmployeePermission,\r\n  AddEmployerPermission,\r\n} from \"../../api/api\";\r\nimport ChangePassword from \"./changepassword\";\r\nimport { toast } from \"react-toastify\";\r\nfunction Setting(props) {\r\n  const [apiCall, setApiCall] = useState(false);\r\n  const [showChangePass, setShowChangePass] = useState(false);\r\n  const [email, setEmail] = useState({\r\n    lmia: 0,\r\n    job: 0,\r\n    interview: 0,\r\n    visa: 0,\r\n  });\r\n  const [notification, setNotiication] = useState({\r\n    lmia: 0,\r\n    job: 0,\r\n    interview: 0,\r\n    visa: 0,\r\n  });\r\n  let userType = localStorage.getItem(\"userType\");\r\n  /*Function to get the permision data */\r\n  const GetPermissionData = async () => {\r\n    try {\r\n      let Response;\r\n      if (userType === \"user\") {\r\n        Response = await GetEmployeeSetting();\r\n      } else {\r\n        Response = await GetEmployerSetting();\r\n      }\r\n      const email_permissions = JSON.parse(Response.data.email_permission);\r\n      const notification_permission = JSON.parse(\r\n        Response.data.notification_permission\r\n      );\r\n      setEmail(email_permissions);\r\n      setNotiication(notification_permission);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  /*Render method */\r\n  useEffect(() => {\r\n    GetPermissionData();\r\n    if (apiCall === true) {\r\n      setApiCall(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [apiCall]);\r\n\r\n  /*Function to grant the permission */\r\n  const togglePermission = async (permissionName) => {\r\n    //condition to switch the button accordingly\r\n    const updatedPermissions = {\r\n      notification_permission: {\r\n        lmia:\r\n          permissionName === \"notification_lmia\"\r\n            ? notification.lmia === 0\r\n              ? 1\r\n              : 0\r\n            : notification.lmia,\r\n        visa:\r\n          permissionName === \"notification_visa\"\r\n            ? notification.visa === 0\r\n              ? 1\r\n              : 0\r\n            : notification.visa,\r\n        interview:\r\n          permissionName === \"notification_interview\"\r\n            ? notification.interview === 0\r\n              ? 1\r\n              : 0\r\n            : notification.interview,\r\n        job:\r\n          permissionName === \"notification_job\"\r\n            ? notification.job === 0\r\n              ? 1\r\n              : 0\r\n            : notification.job,\r\n      },\r\n      email_permission: {\r\n        lmia:\r\n          permissionName === \"lmia\" ? (email.lmia === 0 ? 1 : 0) : email.lmia,\r\n        visa:\r\n          permissionName === \"visa\" ? (email.visa === 0 ? 1 : 0) : email.visa,\r\n        interview:\r\n          permissionName === \"interview\"\r\n            ? email.interview === 0\r\n              ? 1\r\n              : 0\r\n            : email.interview,\r\n        job: permissionName === \"job\" ? (email.job === 0 ? 1 : 0) : email.job,\r\n      },\r\n    };\r\n\r\n    try {\r\n      let Response;\r\n      if (userType === \"user\") {\r\n        Response = await AddEmployeePermission(updatedPermissions);\r\n      } else {\r\n        Response = await AddEmployerPermission(updatedPermissions);\r\n      }\r\n      // conditions for the reponse toaster message\r\n      if (\r\n        Response.message === \"successfully\" &&\r\n        (permissionName === \"notification_lmia\"\r\n          ? updatedPermissions.notification_permission.lmia === 1\r\n          : permissionName === \"lmia\"\r\n          ? updatedPermissions.email_permission.lmia === 1\r\n          : permissionName === \"notification_visa\"\r\n          ? updatedPermissions.notification_permission.visa === 1\r\n          : permissionName === \"visa\"\r\n          ? updatedPermissions.email_permission.visa === 1\r\n          : permissionName === \"notification_interview\"\r\n          ? updatedPermissions.notification_permission.interview === 1\r\n          : permissionName === \"interview\"\r\n          ? updatedPermissions.email_permission.interview === 1\r\n          : permissionName === \"notification_job\"\r\n          ? updatedPermissions.notification_permission.job === 1\r\n          : updatedPermissions.email_permission.job === 1)\r\n      ) {\r\n        toast.success(\"Permission granted successfully\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 1000,\r\n        });\r\n        setApiCall(true);\r\n      }\r\n      if (\r\n        Response.message === \"successfully\" &&\r\n        (permissionName === \"notification_lmia\"\r\n          ? updatedPermissions.notification_permission.lmia === 0\r\n          : permissionName === \"lmia\"\r\n          ? updatedPermissions.email_permission.lmia === 0\r\n          : permissionName === \"notification_visa\"\r\n          ? updatedPermissions.notification_permission.visa === 0\r\n          : permissionName === \"visa\"\r\n          ? updatedPermissions.email_permission.visa === 0\r\n          : permissionName === \"notification_interview\"\r\n          ? updatedPermissions.notification_permission.interview === 0\r\n          : permissionName === \"interview\"\r\n          ? updatedPermissions.email_permission.interview === 0\r\n          : permissionName === \"notification_job\"\r\n          ? updatedPermissions.notification_permission.job === 0\r\n          : updatedPermissions.email_permission.job === 0)\r\n      ) {\r\n        toast.error(\"Permission Denay successfully\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 1000,\r\n        });\r\n        setApiCall(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\r\n          data-dismiss=\"modal\"\r\n          onClick={props.close}\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n        <div className=\"bg-white rounded h-100 px-11 pt-10\">\r\n          <h3 className=\"text-center\">Settings</h3>\r\n          <div>\r\n            <h6 className=\"text-start mt-4 text-grey\">\r\n              {userType === \"user\" ? \"Employee's\" : \"Client's\"} Email\r\n              Preferences\r\n            </h6>\r\n            <ul className=\"list-unstyled row\">\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch1\"\r\n                    checked={email.lmia === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"lmia\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch1\"\r\n                  >\r\n                    Lmia\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch2\"\r\n                    checked={email.visa === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"visa\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch2\"\r\n                  >\r\n                    Visa\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch3\"\r\n                    checked={email.interview === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"interview\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch3\"\r\n                  >\r\n                    Interview\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch4\"\r\n                    checked={email.job === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"job\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch4\"\r\n                  >\r\n                    Job\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <h6 className=\"text-start mt-4 text-grey\">\r\n              {userType === \"user\" ? \"Employee's\" : \"Client's\"} Notification\r\n              Preferences\r\n            </h6>\r\n            <ul className=\"list-unstyled row\">\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch6\"\r\n                    checked={notification.lmia === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"notification_lmia\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch6\"\r\n                  >\r\n                    Lmia\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch7\"\r\n                    checked={notification.visa === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"notification_visa\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch7\"\r\n                  >\r\n                    Visa\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch8\"\r\n                    checked={notification.interview === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"notification_interview\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch8\"\r\n                  >\r\n                    Interview\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li className=\"mb-3 col-6\">\r\n                <div className=\"custom-control custom-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customSwitch9\"\r\n                    checked={notification.job === 0 ? false : true}\r\n                    onChange={() => togglePermission(\"notification_job\")}\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customSwitch9\"\r\n                  >\r\n                    Job\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <div className=\"mb-3\">\r\n              <Link\r\n                to=\"\"\r\n                onClick={() => setShowChangePass(true)}\r\n                className=\"btn btn-primary  d-flex align-items-center\"\r\n              >\r\n                <RiLockPasswordFill className=\"mr-2\" /> Change Password\r\n              </Link>\r\n              {showChangePass && (\r\n                <ChangePassword\r\n                  show={showChangePass}\r\n                  close={() => setShowChangePass(false)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Setting;\r\n"
        }
    ]
}