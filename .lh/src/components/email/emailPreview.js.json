{
    "sourceFile": "src/components/email/emailPreview.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1699001857292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699001864629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {/* {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : ( */}\n+                  <div>{emailData.body_data}</div>\n+                {/* ))} */}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699001903537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                       __html: atob(emailData.body_data),\n                     }}\n                   />\n                 ) : ( */}\n-                  <div>{emailData.body_data}</div>\n+                  <p>{emailData.body_data}</p>\n                 {/* ))} */}\n             </div>\n             <div className=\"attachments\">\n               {emailData.attachment &&\n@@ -142,149 +142,4 @@\n   );\n };\n \n export default PreviewEmail;\n-// src/PreviewEmail.js\n-import React, { useState, useEffect } from \"react\";\n-import { GetPreviewEmail } from \"../../api/api\";\n-import Loader from \"../common/loader\";\n-// import { FileViewer } from \"react-file-viewer\";\n-// import { ToastContainer } from \"react-toastify\";\n-// import AdminSidebar from \"../admin/sidebar\";\n-// import AdminHeader from \"../admin/header\";\n-import { /*useNavigate,*/ Link } from \"react-router-dom\";\n-const PreviewEmail = ({ id }) => {\n-  /* states */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [isLoading, setIsLoading] = useState(true);\n-  const [emailData, setemailData] = useState([]);\n-  /* Function to get Employee visa data*/\n-  const EmailData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const Res = await GetPreviewEmail(id);\n-      // console.log(Res.data);\n-      if (\n-        Res.messsage === \"No data found\" ||\n-        Res.status === \"0\" ||\n-        Res.status === 0 ||\n-        Res.data === undefined ||\n-        Res.data.length === 0\n-      ) {\n-        setemailData({});\n-        setIsLoading(false);\n-      } else {\n-        setemailData(Res.data);\n-        // setTotalData(Res.data.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-      setemailData({});\n-    }\n-  };\n-\n-  /*Render function to get the employee data*/\n-  useEffect(() => {\n-    EmailData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [apiCall, id]);\n-\n-  /*Function to decode the email subject */\n-  function decodeEmailSubject(encodedSubject) {\n-    if (!encodedSubject) {\n-      return \"\";\n-    } else {\n-      return decodeURIComponent(\n-        encodedSubject\n-          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n-          .replace(/\\?=/g, \"\")\n-          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n-            String.fromCharCode(parseInt(p1, 16))\n-          )\n-      );\n-    }\n-  }\n-  /*Funcion to open pdf n new window */\n-  const openPDFInNewTab = (base64PDFData) => {\n-    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n-    const newWindow = window.open();\n-    newWindow.document.write(\n-      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n-    );\n-  };\n-\n-  return (\n-    /*---- Email preview Page ----*/\n-    <div>\n-      {isLoading ? (\n-        <Loader />\n-      ) : emailData === \"\" ? (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">No Email found</div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">\n-              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n-              <p>From: {emailData.from}</p>\n-              <p>To: {emailData.to}</p>\n-            </div>\n-            <div className=\"email-body\">\n-              {emailData.body_data &&\n-                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n-                true ? (\n-                  <div\n-                    dangerouslySetInnerHTML={{\n-                      __html: atob(emailData.body_data),\n-                    }}\n-                  />\n-                ) : (\n-                  <div>{emailData.body_data}</div>\n-                ))}\n-            </div>\n-            <div className=\"attachments\">\n-              {emailData.attachment &&\n-                (emailData.attachment[0] || []).map((item, index) => (\n-                  <>\n-                    {item.ext_type === \"pdf\" ? (\n-                      <Link\n-                        onClick={() => {\n-                          openPDFInNewTab(item.file_data);\n-                        }}\n-                      >\n-                        <img\n-                          key={index}\n-                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n-                          alt=\"pdf\"\n-                        />\n-                      </Link>\n-                    ) : item.ext_type === \"html\" ? (\n-                      <div\n-                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n-                      />\n-                    ) : (\n-                      <img\n-                        key={index}\n-                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n-                        alt={`attachment-${index}`}\n-                        width={500}\n-                        height={500}\n-                      />\n-                    )}\n-                  </>\n-                ))}\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  );\n-};\n-\n-export default PreviewEmail;\n"
                },
                {
                    "date": 1699002484162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n // src/PreviewEmail.js\n import React, { useState, useEffect } from \"react\";\n import { GetPreviewEmail } from \"../../api/api\";\n import Loader from \"../common/loader\";\n+import { Letter } from 'react-letter';\n+import { extract } from 'letterparser';\n // import { FileViewer } from \"react-file-viewer\";\n // import { ToastContainer } from \"react-toastify\";\n // import AdminSidebar from \"../admin/sidebar\";\n // import AdminHeader from \"../admin/header\";\n@@ -70,8 +72,9 @@\n       `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n     );\n   };\n \n+  const { html, text } = extract(emailData.body_data);\n   return (\n     /*---- Email preview Page ----*/\n     <div>\n       {isLoading ? (\n@@ -99,10 +102,12 @@\n                       __html: atob(emailData.body_data),\n                     }}\n                   />\n                 ) : ( */}\n-                  <p>{emailData.body_data}</p>\n+                  {/* <p>{emailData.body_data}</p> */}\n                 {/* ))} */}\n+                <Letter html={html} text={text} />;\n+\n             </div>\n             <div className=\"attachments\">\n               {emailData.attachment &&\n                 (emailData.attachment[0] || []).map((item, index) => (\n"
                },
                {
                    "date": 1699002578438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+import { Letter } from 'react-letter';\n+import {extract} from\"react-letter\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  const { html, text } = extract(emailData.body_data);\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {/* {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : ( */}\n+                  {/* <p>{emailData.body_data}</p> */}\n+                {/* ))} */}\n+                <Letter html={html} text={text} />;\n+\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699002584200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,300 +1,145 @@\n // src/PreviewEmail.js\n-import React, { useState, useEffect } from \"react\";\n-import { GetPreviewEmail } from \"../../api/api\";\n+import React, {useState, useEffect} from \"react\";\n+import {GetPreviewEmail} from \"../../api/api\";\n import Loader from \"../common/loader\";\n-import { Letter } from 'react-letter';\n-import {extract} from\"react-letter\";\n+import {Letter} from 'react-letter';\n+import {extract} from \"react-letter\";\n // import { FileViewer } from \"react-file-viewer\";\n // import { ToastContainer } from \"react-toastify\";\n // import AdminSidebar from \"../admin/sidebar\";\n // import AdminHeader from \"../admin/header\";\n-import { /*useNavigate,*/ Link } from \"react-router-dom\";\n-const PreviewEmail = ({ id }) => {\n-  /* states */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [isLoading, setIsLoading] = useState(true);\n-  const [emailData, setemailData] = useState([]);\n-  /* Function to get Employee visa data*/\n-  const EmailData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const Res = await GetPreviewEmail(id);\n-      // console.log(Res.data);\n-      if (\n-        Res.messsage === \"No data found\" ||\n-        Res.status === \"0\" ||\n-        Res.status === 0 ||\n-        Res.data === undefined ||\n-        Res.data.length === 0\n-      ) {\n-        setemailData({});\n-        setIsLoading(false);\n-      } else {\n-        setemailData(Res.data);\n-        // setTotalData(Res.data.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-      setemailData({});\n-    }\n-  };\n+import { /*useNavigate,*/\n+    Link\n+} from \"react-router-dom\";\n+const PreviewEmail = ({id}) => { /* states */\n+    let [apiCall, setApiCall] = useState(false);\n+    let [isLoading, setIsLoading] = useState(true);\n+    const [emailData, setemailData] = useState([]);\n+    /* Function to get Employee visa data*/\n+    const EmailData = async () => {\n+        setIsLoading(true);\n+        try {\n+            const Res = await GetPreviewEmail(id);\n+            // console.log(Res.data);\n+            if (Res.messsage === \"No data found\" || Res.status === \"0\" || Res.status === 0 || Res.data === undefined || Res.data.length === 0) {\n+                setemailData({});\n+                setIsLoading(false);\n+            } else {\n+                setemailData(Res.data);\n+                // setTotalData(Res.data.total_rows);\n+                setIsLoading(false);\n+            }\n+        } catch (err) {\n+            console.log(err);\n+            setIsLoading(false);\n+            setemailData({});\n+        }\n+    };\n \n-  /*Render function to get the employee data*/\n-  useEffect(() => {\n-    EmailData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [apiCall, id]);\n+    /*Render function to get the employee data*/\n+    useEffect(() => {\n+        EmailData();\n+        if (apiCall === true) {\n+            setApiCall(false);\n+        }\n+    }, [apiCall, id]);\n \n-  /*Function to decode the email subject */\n-  function decodeEmailSubject(encodedSubject) {\n-    if (!encodedSubject) {\n-      return \"\";\n-    } else {\n-      return decodeURIComponent(\n-        encodedSubject\n-          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n-          .replace(/\\?=/g, \"\")\n-          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n-            String.fromCharCode(parseInt(p1, 16))\n-          )\n-      );\n+    /*Function to decode the email subject */\n+    function decodeEmailSubject(encodedSubject) {\n+        if (! encodedSubject) {\n+            return \"\";\n+        } else {\n+            return decodeURIComponent(encodedSubject.replace(/=\\?UTF-8\\?Q\\?/g, \"\").replace(/\\?=/g, \"\").replace(/=([0-9A-F]{2})/g, (_, p1) => String.fromCharCode(parseInt(p1, 16))));\n+        }\n     }\n-  }\n-  /*Funcion to open pdf n new window */\n-  const openPDFInNewTab = (base64PDFData) => {\n-    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n-    const newWindow = window.open();\n-    newWindow.document.write(\n-      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n-    );\n-  };\n+    /*Funcion to open pdf n new window */\n+    const openPDFInNewTab = (base64PDFData) => {\n+        const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+        const newWindow = window.open();\n+        newWindow.document.write(`<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`);\n+    };\n \n-  const { html, text } = extract(emailData.body_data);\n-  return (\n-    /*---- Email preview Page ----*/\n-    <div>\n-      {isLoading ? (\n-        <Loader />\n-      ) : emailData === \"\" ? (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">No Email found</div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">\n-              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n-              <p>From: {emailData.from}</p>\n-              <p>To: {emailData.to}</p>\n-            </div>\n-            <div className=\"email-body\">\n-              {/* {emailData.body_data &&\n+    const {html, text} = extract(emailData.body_data);\n+    return(\n+        /*---- Email preview Page ----*/ <div> {\n+            isLoading ? (\n+                <Loader/>) : emailData === \"\" ? (\n+                <div className=\"gmail-preview-container \">\n+                    <div className=\"email-content\">\n+                        <div className=\"email-header\">No Email found</div>\n+                    </div>\n+                </div>\n+            ) : (\n+                <div className=\"gmail-preview-container \">\n+                    <div className=\"email-content\">\n+                        <div className=\"email-header\">\n+                            <h2>{\n+                                decodeEmailSubject(emailData.subject)\n+                            }</h2>\n+                            <p>From: {\n+                                emailData.from\n+                            }</p>\n+                            <p>To: {\n+                                emailData.to\n+                            }</p>\n+                        </div>\n+                        <div className=\"email-body\">\n+                            {/* {emailData.body_data &&\n                 (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n                 true ? (\n                   <div\n                     dangerouslySetInnerHTML={{\n                       __html: atob(emailData.body_data),\n                     }}\n                   />\n                 ) : ( */}\n-                  {/* <p>{emailData.body_data}</p> */}\n-                {/* ))} */}\n-                <Letter html={html} text={text} />;\n+                            {/* <p>{emailData.body_data}</p> */}\n+                            {/* ))} */}\n+                            <Letter html={html}\n+                                text={text}/>;\n \n-            </div>\n-            <div className=\"attachments\">\n-              {emailData.attachment &&\n-                (emailData.attachment[0] || []).map((item, index) => (\n-                  <>\n-                    {item.ext_type === \"pdf\" ? (\n-                      <Link\n-                        onClick={() => {\n-                          openPDFInNewTab(item.file_data);\n-                        }}\n-                      >\n-                        <img\n-                          key={index}\n-                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n-                          alt=\"pdf\"\n-                        />\n-                      </Link>\n-                    ) : item.ext_type === \"html\" ? (\n-                      <div\n-                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n-                      />\n-                    ) : (\n-                      <img\n-                        key={index}\n-                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n-                        alt={`attachment-${index}`}\n-                        width={500}\n-                        height={500}\n-                      />\n-                    )}\n-                  </>\n-                ))}\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  );\n-};\n-\n-export default PreviewEmail;\n-// src/PreviewEmail.js\n-import React, { useState, useEffect } from \"react\";\n-import { GetPreviewEmail } from \"../../api/api\";\n-import Loader from \"../common/loader\";\n-import { Letter } from 'react-letter';\n-import { extract } from 'letterparser';\n-// import { FileViewer } from \"react-file-viewer\";\n-// import { ToastContainer } from \"react-toastify\";\n-// import AdminSidebar from \"../admin/sidebar\";\n-// import AdminHeader from \"../admin/header\";\n-import { /*useNavigate,*/ Link } from \"react-router-dom\";\n-const PreviewEmail = ({ id }) => {\n-  /* states */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [isLoading, setIsLoading] = useState(true);\n-  const [emailData, setemailData] = useState([]);\n-  /* Function to get Employee visa data*/\n-  const EmailData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const Res = await GetPreviewEmail(id);\n-      // console.log(Res.data);\n-      if (\n-        Res.messsage === \"No data found\" ||\n-        Res.status === \"0\" ||\n-        Res.status === 0 ||\n-        Res.data === undefined ||\n-        Res.data.length === 0\n-      ) {\n-        setemailData({});\n-        setIsLoading(false);\n-      } else {\n-        setemailData(Res.data);\n-        // setTotalData(Res.data.total_rows);\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-      setemailData({});\n-    }\n-  };\n-\n-  /*Render function to get the employee data*/\n-  useEffect(() => {\n-    EmailData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-  }, [apiCall, id]);\n-\n-  /*Function to decode the email subject */\n-  function decodeEmailSubject(encodedSubject) {\n-    if (!encodedSubject) {\n-      return \"\";\n-    } else {\n-      return decodeURIComponent(\n-        encodedSubject\n-          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n-          .replace(/\\?=/g, \"\")\n-          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n-            String.fromCharCode(parseInt(p1, 16))\n-          )\n-      );\n-    }\n-  }\n-  /*Funcion to open pdf n new window */\n-  const openPDFInNewTab = (base64PDFData) => {\n-    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n-    const newWindow = window.open();\n-    newWindow.document.write(\n-      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+                        </div>\n+                        <div className=\"attachments\">\n+                            {\n+                            emailData.attachment && (emailData.attachment[0] || []).map((item, index) => (\n+                                <> {\n+                                    item.ext_type === \"pdf\" ? (\n+                                        <Link onClick={\n+                                            () => {\n+                                                openPDFInNewTab(item.file_data);\n+                                            }\n+                                        }>\n+                                            <img key={index}\n+                                                src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                                                alt=\"pdf\"/>\n+                                        </Link>\n+                                    ) : item.ext_type === \"html\" ? (\n+                                        <div dangerouslySetInnerHTML={\n+                                            {__html: item.file_data}\n+                                        }/>\n+                                    ) : (\n+                                        <img key={index}\n+                                            src={\n+                                                `data:image/${\n+                                                    item.ext_type\n+                                                };base64,${\n+                                                    item.file_data\n+                                                }`\n+                                            }\n+                                            alt={\n+                                                `attachment-${index}`\n+                                            }\n+                                            width={500}\n+                                            height={500}/>\n+                                    )\n+                                } </>\n+                            ))\n+                        } </div>\n+                    </div>\n+                </div>\n+            )\n+        } </div>\n     );\n-  };\n-\n-  const { html, text } = extract(emailData.body_data);\n-  return (\n-    /*---- Email preview Page ----*/\n-    <div>\n-      {isLoading ? (\n-        <Loader />\n-      ) : emailData === \"\" ? (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">No Email found</div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"gmail-preview-container \">\n-          <div className=\"email-content\">\n-            <div className=\"email-header\">\n-              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n-              <p>From: {emailData.from}</p>\n-              <p>To: {emailData.to}</p>\n-            </div>\n-            <div className=\"email-body\">\n-              {/* {emailData.body_data &&\n-                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n-                true ? (\n-                  <div\n-                    dangerouslySetInnerHTML={{\n-                      __html: atob(emailData.body_data),\n-                    }}\n-                  />\n-                ) : ( */}\n-                  {/* <p>{emailData.body_data}</p> */}\n-                {/* ))} */}\n-                <Letter html={html} text={text} />;\n-\n-            </div>\n-            <div className=\"attachments\">\n-              {emailData.attachment &&\n-                (emailData.attachment[0] || []).map((item, index) => (\n-                  <>\n-                    {item.ext_type === \"pdf\" ? (\n-                      <Link\n-                        onClick={() => {\n-                          openPDFInNewTab(item.file_data);\n-                        }}\n-                      >\n-                        <img\n-                          key={index}\n-                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n-                          alt=\"pdf\"\n-                        />\n-                      </Link>\n-                    ) : item.ext_type === \"html\" ? (\n-                      <div\n-                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n-                      />\n-                    ) : (\n-                      <img\n-                        key={index}\n-                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n-                        alt={`attachment-${index}`}\n-                        width={500}\n-                        height={500}\n-                      />\n-                    )}\n-                  </>\n-                ))}\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  );\n };\n \n export default PreviewEmail;\n"
                },
                {
                    "date": 1699003927330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {/* {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : ( */}\n+                  <div>{emailData.body_data}</div>\n+                {/* ))} */}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699009337791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : (\n+                  <di>{emailData.body_data}</di>\n+                ))}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699009379534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : (\n+                  <div>{emailData.body_data}</div>\n+                ))}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699010212109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {/* {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : ( */}\n+                  <div>{emailData.body_data}</div>\n+                {/* ))} */}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699010319014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : (\n+                  <p>{emailData.body_data}</p>\n+                ))}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                },
                {
                    "date": 1699010754105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+// src/PreviewEmail.js\n+import React, { useState, useEffect } from \"react\";\n+import { GetPreviewEmail } from \"../../api/api\";\n+import Loader from \"../common/loader\";\n+// import { FileViewer } from \"react-file-viewer\";\n+// import { ToastContainer } from \"react-toastify\";\n+// import AdminSidebar from \"../admin/sidebar\";\n+// import AdminHeader from \"../admin/header\";\n+import { /*useNavigate,*/ Link } from \"react-router-dom\";\n+const PreviewEmail = ({ id }) => {\n+  /* states */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [isLoading, setIsLoading] = useState(true);\n+  const [emailData, setemailData] = useState([]);\n+  /* Function to get Employee visa data*/\n+  const EmailData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const Res = await GetPreviewEmail(id);\n+      // console.log(Res.data);\n+      if (\n+        Res.messsage === \"No data found\" ||\n+        Res.status === \"0\" ||\n+        Res.status === 0 ||\n+        Res.data === undefined ||\n+        Res.data.length === 0\n+      ) {\n+        setemailData({});\n+        setIsLoading(false);\n+      } else {\n+        setemailData(Res.data);\n+        // setTotalData(Res.data.total_rows);\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+      setemailData({});\n+    }\n+  };\n+\n+  /*Render function to get the employee data*/\n+  useEffect(() => {\n+    EmailData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+  }, [apiCall, id]);\n+\n+  /*Function to decode the email subject */\n+  function decodeEmailSubject(encodedSubject) {\n+    if (!encodedSubject) {\n+      return \"\";\n+    } else {\n+      return decodeURIComponent(\n+        encodedSubject\n+          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n+          .replace(/\\?=/g, \"\")\n+          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n+            String.fromCharCode(parseInt(p1, 16))\n+          )\n+      );\n+    }\n+  }\n+  /*Funcion to open pdf n new window */\n+  const openPDFInNewTab = (base64PDFData) => {\n+    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n+    const newWindow = window.open();\n+    newWindow.document.write(\n+      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n+    );\n+  };\n+\n+  return (\n+    /*---- Email preview Page ----*/\n+    <div>\n+      {isLoading ? (\n+        <Loader />\n+      ) : emailData === \"\" ? (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">No Email found</div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"gmail-preview-container \">\n+          <div className=\"email-content\">\n+            <div className=\"email-header\">\n+              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n+              <p>From: {emailData.from}</p>\n+              <p>To: {emailData.to}</p>\n+            </div>\n+            <div className=\"email-body\">\n+              {emailData.body_data &&\n+                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n+                true ? (\n+                  <div\n+                    dangerouslySetInnerHTML={{\n+                      __html: atob(emailData.body_data),\n+                    }}\n+                  />\n+                ) : (\n+                  <p>{emailData.body_data}</p>\n+                ))}\n+            </div>\n+            <div className=\"attachments\">\n+              {emailData.attachment &&\n+                (emailData.attachment[0] || []).map((item, index) => (\n+                  <>\n+                    {item.ext_type === \"pdf\" ? (\n+                      <Link\n+                        onClick={() => {\n+                          openPDFInNewTab(item.file_data);\n+                        }}\n+                      >\n+                        <img\n+                          key={index}\n+                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n+                          alt=\"pdf\"\n+                        />\n+                      </Link>\n+                    ) : item.ext_type === \"html\" ? (\n+                      <div\n+                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n+                      />\n+                    ) : (\n+                      <img\n+                        key={index}\n+                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n+                        alt={`attachment-${index}`}\n+                        width={500}\n+                        height={500}\n+                      />\n+                    )}\n+                  </>\n+                ))}\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default PreviewEmail;\n"
                }
            ],
            "date": 1699001857292,
            "name": "Commit-0",
            "content": "// src/PreviewEmail.js\nimport React, { useState, useEffect } from \"react\";\nimport { GetPreviewEmail } from \"../../api/api\";\nimport Loader from \"../common/loader\";\n// import { FileViewer } from \"react-file-viewer\";\n// import { ToastContainer } from \"react-toastify\";\n// import AdminSidebar from \"../admin/sidebar\";\n// import AdminHeader from \"../admin/header\";\nimport { /*useNavigate,*/ Link } from \"react-router-dom\";\nconst PreviewEmail = ({ id }) => {\n  /* states */\n  let [apiCall, setApiCall] = useState(false);\n  let [isLoading, setIsLoading] = useState(true);\n  const [emailData, setemailData] = useState([]);\n  /* Function to get Employee visa data*/\n  const EmailData = async () => {\n    setIsLoading(true);\n    try {\n      const Res = await GetPreviewEmail(id);\n      // console.log(Res.data);\n      if (\n        Res.messsage === \"No data found\" ||\n        Res.status === \"0\" ||\n        Res.status === 0 ||\n        Res.data === undefined ||\n        Res.data.length === 0\n      ) {\n        setemailData({});\n        setIsLoading(false);\n      } else {\n        setemailData(Res.data);\n        // setTotalData(Res.data.total_rows);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n      setemailData({});\n    }\n  };\n\n  /*Render function to get the employee data*/\n  useEffect(() => {\n    EmailData();\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n  }, [apiCall, id]);\n\n  /*Function to decode the email subject */\n  function decodeEmailSubject(encodedSubject) {\n    if (!encodedSubject) {\n      return \"\";\n    } else {\n      return decodeURIComponent(\n        encodedSubject\n          .replace(/=\\?UTF-8\\?Q\\?/g, \"\")\n          .replace(/\\?=/g, \"\")\n          .replace(/=([0-9A-F]{2})/g, (_, p1) =>\n            String.fromCharCode(parseInt(p1, 16))\n          )\n      );\n    }\n  }\n  /*Funcion to open pdf n new window */\n  const openPDFInNewTab = (base64PDFData) => {\n    const dataUri = `data:application/pdf;base64,${base64PDFData}`;\n    const newWindow = window.open();\n    newWindow.document.write(\n      `<iframe src=\"${dataUri}\" style=\"width:100%;height:100%;\" frameborder=\"0\"></iframe>`\n    );\n  };\n\n  return (\n    /*---- Email preview Page ----*/\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : emailData === \"\" ? (\n        <div className=\"gmail-preview-container \">\n          <div className=\"email-content\">\n            <div className=\"email-header\">No Email found</div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"gmail-preview-container \">\n          <div className=\"email-content\">\n            <div className=\"email-header\">\n              <h2>{decodeEmailSubject(emailData.subject)}</h2>\n              <p>From: {emailData.from}</p>\n              <p>To: {emailData.to}</p>\n            </div>\n            <div className=\"email-body\">\n              {emailData.body_data &&\n                (emailData.body_data.includes(\"W2ltYWdlOiBHb29nbGVd\") ===\n                true ? (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: atob(emailData.body_data),\n                    }}\n                  />\n                ) : (\n                  <div>{emailData.body_data}</div>\n                ))}\n            </div>\n            <div className=\"attachments\">\n              {emailData.attachment &&\n                (emailData.attachment[0] || []).map((item, index) => (\n                  <>\n                    {item.ext_type === \"pdf\" ? (\n                      <Link\n                        onClick={() => {\n                          openPDFInNewTab(item.file_data);\n                        }}\n                      >\n                        <img\n                          key={index}\n                          src={`https://s.yimg.com/fz/api/res/1.2/O0oW0TRMJLWcDOyAgUZScg--~C/YXBwaWQ9c3JjaGRkO2ZpPWZpdDtoPTEzMDtxPTgwO3c9MTA1/https://s.yimg.com/zb/imgv1/9a8b4cb8-aba2-3b23-b911-7b50ca0139d2/t_500x300`}\n                          alt=\"pdf\"\n                        />\n                      </Link>\n                    ) : item.ext_type === \"html\" ? (\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.file_data }}\n                      />\n                    ) : (\n                      <img\n                        key={index}\n                        src={`data:image/${item.ext_type};base64,${item.file_data}`}\n                        alt={`attachment-${index}`}\n                        width={500}\n                        height={500}\n                      />\n                    )}\n                  </>\n                ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PreviewEmail;\n"
        }
    ]
}