{
    "sourceFile": "src/components/email/mainemailPage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876142851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876142851,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport EmailList from \"./emailList\";\nimport { ToastContainer } from \"react-toastify\";\n// import AdminHeader from \"../admin/header\";\n// import AdminSidebar from \"../admin/sidebar\";\nimport {\n  ReadEmail,ReadAllEmail,\n  ReadSentEmail /*, GetAllEmailPagination*/,\n} from \"../../api/api\";\nconst MainEmailPage = ({ email }) => {\n  let [apiCall, setApiCall] = useState(false);\n  let [isLoading, setIsLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  const [emailType, setEmailType] = useState(\"SENT\");\n  /* data and id states */\n  const [emailData, setemailData] = useState([]);\n  //  let [employeeId, setemployeeId] = useState();\n  // let [lmiaStatus, setLmiaStatus] = useState();\n  /* Pagination states */\n  // const [totalData, setTotalData] = useState(0);\n  const [currentPage, setCurrentPage] = useState(\"\");\n  // const [pageToken, setPageToken] = useState([]);\n  const [recordsPerPage, setRecordsPerPage] = useState(10);\n  /* Shorting states */\n  //   const [columnName, setcolumnName] = useState(\"msgno\");\n  //   const [sortOrder, setSortOrder] = useState(\"DESC\");\n\n  /* Function to get Email data*/\n  const EmailData = async () => {\n    setIsLoading(true);\n    try {\n      let userData;\n     if(emailType === \"ALL\"){\n      userData = await ReadAllEmail(\n        currentPage,\n        recordsPerPage,\n        search,\n        email\n      );\n     }else if (emailType === \"SENT\") {\n        userData = await ReadSentEmail(\n          currentPage,\n          recordsPerPage,\n          search,\n          email\n        );\n      } else\n        userData = await ReadEmail(currentPage, recordsPerPage, search, email);\n      if (\n        // userData.messsage === \"No data found\" ||\n        userData.status === \"0\" ||\n        userData.status === 0 ||\n        userData.data.value === undefined ||\n        userData.data.value.length === 0 ||\n        userData.data.message === \"No Mail Data Found\"\n      ) {\n        setemailData([]);\n        setIsLoading(false);\n        // setTotalData(0);\n        // setPageToken([]);\n      } else {\n        let reversedData = userData.data.value.slice(); // Create a copy of the array\n        setemailData(reversedData);\n        setIsLoading(false);\n        // if (emailType === \"SENT\") {\n        //   reversedData.reverse(); // Reverse the array if emailType is \"SENT\"\n        // }\n        // setPageToken([]);\n        // setTotalData(0);\n        // try {\n        //   let PageRes = await GetAllEmailPagination(email);\n        //   setPageToken(\n        //     PageRes.data.paginationData.map((item) => item.split(\"=\")[4])\n        //   );\n        //   setTotalData(PageRes.data.paginationDataCount || 0);\n        // } catch (err) {\n        //   console.log(err);\n        // }\n        // setPageToken(\n        //   userData.data.paginationData &&\n        //     userData.data.paginationData.map((item) => item.split(\"=\")[4])\n        // );\n        // setTotalData(userData.data.paginationDataCount || 0);\n      }\n    } catch (err) {\n      console.log(err);\n      setemailData([]);\n      // setTotalData(0);\n      // setPageToken([]);\n      setIsLoading(false);\n    }\n  };\n  /*Function to load more data while scrolling */\n  let handelScroll = (e) => {\n    if ((recordsPerPage === 10 || recordsPerPage + 10) <= emailData.length) {\n      setRecordsPerPage(recordsPerPage + 10);\n    } else {\n      // setRecordsPerPage(emailData.length);\n    }\n  };\n  /*Render function to get the email data*/\n  useEffect(() => {\n    EmailData();\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n    // eslint-disable-next-line\n  }, [\n    currentPage,\n    recordsPerPage,\n    search /*, columnName, sortOrder*/,\n    apiCall,\n    emailType,\n  ]);\n\n  /*Pagination Calculation */\n  // const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Function to search the employee */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    setCurrentPage(1);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Client's Name cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  return (\n    <>\n      <div className={\"email_container overflow-hidden bg-default-2\"}>\n        {/* <!-- Header Area --> */}\n        {/* <AdminHeader heading={\"Email\"} /> */}\n        {/* <!-- navbar- --> */}\n        {/* <AdminSidebar heading={\"Email\"} /> */}\n\n        <ToastContainer />\n        <div\n          className={\"container-fluid document_container bg-white px-0\"}\n          id=\"dashboard-body\"\n          onScroll={(e) => handelScroll(e)}\n        >\n          <div className=\"mb-4 align-items-center\">\n            <div className={\"page___heading\"}>\n              <h3 className=\"font-size-6 mb-0\">Emails</h3>\n            </div>\n            {/* <!-- Email Search and Filter- --> */}\n            {/* <div\n                className={\n                  userType === \"company\"\n                    ? \"d-none\"\n                    : \"row m-0 align-items-center\"\n                }\n              >\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Search Employee:</p>\n                  <input\n                    required\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={\"Search Employee\"}\n                    value={search}\n                    name={\"Employee_name\"}\n                    onChange={(e) => onSearch(e)}\n                  />\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Email Country:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"experience\"\n                      value={EmailCountryFilter}\n                      id=\"experience\"\n                      onChange={(e) => {\n                        setEmailCountryFilter(e.target.value);\n                        setEmpId(\"\");\n                        setpageNo(1)\n                      }}\n                      className=\"text-capitalize form-control\"\n                    >\n                      <option value={\"\"}>Select Country</option>\n                      {(FilterJson.location || []).map((item, i) => (\n                        <option value={item} key={i}>\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Email Status:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"status\"\n                      value={VisStatusFilterValue}\n                      id=\"status\"\n                      onChange={(e) => {\n                        setVisStatusFilterValue(e.target.value);\n                        setEmpId(\"\");\n                        setpageNo(1)\n                      }}\n                      className=\"text-capitalize form-control\"\n                    >\n                      <option value={\"\"}>Select Email status </option>\n                      <option value={\"pending\"}>Pending</option>\n                      <option value={\"approved\"}>Approved</option>\n                      <option value={\"reject\"}>Rejected</option>\n                      <option value={\"experied\"}>experied</option>\n                      <option value={\"cancel\"}>Cancel</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Interested In:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"intrested_in\"\n                      value={IntrestedFilterValue}\n                      id=\"intrested_in\"\n                      onChange={(e) => {\n                        setIntrestedFilterValue(e.target.value);\n                        setEmpId(\"\");\n                        setpageNo(1)\n                      }}\n                      className=\"text-capitalize form-control\"\n                    >\n                      <option value=\"\" data-display=\"Product Designer\">\n                        Select Application type\n                      </option>\n                      {(FilterJson.interested || []).map((data, i) => {\n                        return (\n                          <option value={data} key={i}>\n                            {data}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n              </div> */}\n            {/*<-- Email Search  -->*/}\n            {/* <div className={\"row m-0 align-items-center\"}>\n                  \n                  <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Company Name:</p>\n                  <input\n                    required\n                    type=\"text\"\n                    className=\"form-control w-100\"\n                    placeholder={\"Company name\"}\n                    value={company}\n                    name={\"compnay_name\"}\n                    onChange={(e) => setCompany(e.target.value)}\n                  />\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Job Category:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"country\"\n                      id=\"country\"\n                      value={categoryFilterValue}\n                      onChange={(e) => setCategoryFilterValue(e.target.value)}\n                      className=\" form-control\"\n                    >\n                      <option value=\"\">Job Category</option>\n                      {(Json.Category || []).map((data) => {\n                        return (\n                          <option value={data.id} key={data.id}>\n                            {data.value}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Job Type:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"country\"\n                      id=\"country\"\n                      value={jobSwapFilterValue}\n                      onChange={(e) => {\n                        setJobSwapFilterValue(e.target.value);\n                      }}\n                      className=\" form-control\"\n                    >\n                      <option value=\"\">Job Type</option>\n                      {(FilterJson.job_type || []).map((job, i) => (\n                        <option key={i} value={job}>\n                          {job}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Job Skill:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"country\"\n                      id=\"country\"\n                      value={skillFilterValue}\n                      onChange={(e) => setSkillFilterValue(e.target.value)}\n                      className=\" form-control\"\n                    >\n                      <option value=\"\">Job Skill</option>\n                      {(json.skill || []).map((data) => {\n                        return (\n                          <option value={data.value} key={data.id}>\n                            {data.value}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Filter by Job Location:</p>\n                  <div className=\"select_div\">\n                    <select\n                      name=\"country\"\n                      id=\"country\"\n                      value={locationFilterValue}\n                      onChange={(e) => setLocationFilterValue(e.target.value)}\n                      className=\" form-control\"\n                    >\n                      <option value=\"\">Job Location</option>\n                      {(FilterJson.location || []).map((data) => {\n                        return (\n                          <option value={data} key={data}>\n                            {data}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </div>\n                </div>\n                </div> */}\n            {/* <small className=\"text-danger\">{searcherror}</small> */}\n          </div>\n          <div>\n            <EmailList\n              apiCall={apiCall}\n              setApiCall={setApiCall}\n              isLoading={isLoading}\n              data={emailData}\n              // totalData={totalData}\n              // nPages={nPages}\n              currentPage={currentPage}\n              // pageToken={pageToken}\n              setCurrentPage={setCurrentPage}\n              setEmailType={setEmailType}\n              emailType={emailType}\n              onSearch={onSearch}\n              searcherror={searcherror}\n              search={search}\n              email={email}\n              handelScroll={handelScroll}\n              // setPageToken={setPageToken}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MainEmailPage;\n"
        }
    ]
}