{
    "sourceFile": "src/components/extra/followupTable.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1693820063258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1693820063258,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GetAllJobs, getAllJobsCategory } from \"../../api/api\";\nimport JobResponse from \"./response\";\nimport Loader from '../common/loader';\n\nfunction FollowupTable() {\n  /*show Modal and props state */\n  const [jobData, setjobData] = useState([]);\n  const [JobId, setJobId] = useState([]);\n  let [isLoading, setIsLoading] = useState(true);\n  /*Filter and search state */\n  const [Categorylist, setCategoryList] = useState([]);\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"job_id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  const [responseId, setresponseId] = useState();\n\n  /* Function to get Job data*/\n  const JobData = async () => {\n    setIsLoading(true)\n    try {\n      const userData = await GetAllJobs(\n        props.search,\n        props.locationFilterValue,\n        props.categoryFilterValue,\n        props.SkillFilterValue,\n        props.jobSwapFilterValue,\n        currentPage,\n        recordsPerPage,\n        columnName,\n        sortOrder\n      );\n      if (userData.data.length === 0) {\n        setjobData([]);\n        setresponseId();\n        setIsLoading(false)\n      } else {\n        setjobData(userData.data.data);\n        setTotalData(userData.data.total_rows);\n        setresponseId(userData.data.data[0].job_id);\n        setIsLoading(false)\n      }\n    } catch (err) {\n      console.log(err)\n      setIsLoading(false)\n    }\n  };\n\n  /*Render function to get the job */\n  useEffect(() => {\n    JobData();\n    CategoryData();\n  }, [\n    props.categoryFilterValue,\n    props.SkillFilterValue,\n    props.locationFilterValue,\n    props.jobSwapFilterValue,\n    props.search,\n    props.categoryFilterValue || props.SkillFilterValue || props.locationFilterValue || props.jobSwapFilterValue || props.search ? 1 : currentPage,\n    columnName,\n    sortOrder,\n  ]);\n\n  /* Function to show the Job detail data */\n  const JobDetail = (e) => {\n    setJobId(e);\n  };\n\n  /* Function to get the job category data*/\n  const CategoryData = async () => {\n    try {\n      const userData = await getAllJobsCategory();\n      if (userData.data.length === 0) {\n        setCategoryList([]);\n      } else {\n        setCategoryList(userData.data);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n\n  return (\n    <>\n      <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n        <div className=\"table-responsive main_table_div\">\n          tyhrtyutfhxt\n          {isLoading ?\n            <Loader /> : <table className=\"table table-striped main_data_table\">\n              <thead>\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      onClick={() => { handleSort(\"job_title\"); setCurrentPage(1) }}\n                      title=\"Sort by Industry\"\n                      className=\"text-gray\"\n                    >\n                      Job title / Industry\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      title=\"Sort by Job\"\n                      onClick={() => { handleSort(\"job_type\"); setCurrentPage(1) }}\n                      className=\"text-gray\"\n                    >\n                      Job Type\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"location\"); setCurrentPage(1) }}\n                      className=\"text-gray\"\n                      title=\"Sort by Address\"\n                    >\n                      Address\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"education\"); setCurrentPage(1) }}\n                      className=\"text-gray\"\n                      title=\"Sort by Education\"\n                    >\n                      Education\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"keyskill\"); setCurrentPage(1) }}\n                      title=\"Sort by Skills\"\n                      className=\"text-gray\"\n                    >\n                      Skills\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"language\"); setCurrentPage(1) }}\n                      className=\"text-gray\"\n                      title=\"Sort by Language\"\n                    >\n                      Language\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"salary\"); setCurrentPage(1) }}\n                      title=\"Sort by Salary\"\n                      className=\"text-gray\"\n                    >\n                      Salary\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link\n                      to=\"\"\n                      onClick={() => { handleSort(\"experience_required\"); setCurrentPage(1) }}\n                      className=\"text-gray\"\n                      title=\"Sort by Experience\"\n                    >\n                      Experience\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    <Link to=\"\" className=\"text-gray\" title=\"Sort by Experience\">\n                      Total Applicants\n                    </Link>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\" border-0 font-size-4 font-weight-normal\"\n                  >\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* Map function to show the data in the list*/}\n                {totalData === 0 || jobData.length === 0 ? (\n                  <tr>\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                    {props.heading === \"Dashboard\" ? (\n                      <th className=\"bg-white\">No Data Found</th>\n                    ) : (\n                      <th className=\"bg-white\"></th>\n                    )}\n                    <th className=\"bg-white\"></th>\n                    {props.heading !== \"Dashboard\" ? (\n                      <th className=\"bg-white\">No Data Found</th>\n                    ) : (\n                      <th className=\"bg-white\"></th>\n                    )}\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                    <th className=\"bg-white\"></th>\n                  </tr>\n                ) : (\n                  (jobData || []).map((job) => (\n                    <>\n                      <tr\n                        className=\"aos-init aos-animate\"\n                        data-aos=\"fade-right\"\n                        data-aos-duration=\"800\"\n                        data-aos-once=\"true\"\n                        key={job.job_id}\n                      >\n                        <td scope=\"row\" className=\"py-5 \">\n                          <div className=\"\">\n                            <Link\n                              to={\"\"}\n                              title=\"Job Detail\"\n                              onClick={() => JobDetail(job.job_id)}\n                              className=\"font-size-3 mb-0 font-weight-semibold text-black-2\"\n                            >\n                              <Link to={`/jobdetailpage`}\n                                onClick={() => localStorage.setItem(\"job_id\",job.job_id)}>\n                              <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n                                {job.job_title}\n                              </p>\n                              </Link>\n                              <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                {job.company_name} - {job.industry_type}\n                              </p>\n                            </Link>\n                          </div>\n                        </td>\n                        <td className=\" py-5\">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.employement} - {job.job_type}\n                          </h3>\n                        </td>\n                        <td className=\" py-5\">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.location}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.education}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.keyskill}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.language}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.salary}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                            {job.experience_required}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 \">\n                          <h3 className=\"font-size-3 font-weight-bold text-black-2 mb-0\">\n                            {job.total_applicants}\n                          </h3>\n                        </td>\n                        <td className=\"py-5 min-width-px-100\">\n                          {job.total_applicants > 0 ? (\n                            <div className=\"btn-group button_group\" role=\"group\">\n                              <button\n                                className=\"btn btn-outline-info action_btn\"\n                                onClick={() => setresponseId(job.job_id)}\n                                title=\"Job Responses\"\n                              >\n                                Responses\n                              </button>\n                            </div>\n                          ) : null}\n                        </td>\n                      </tr>\n                      {JobId ||\n                        (job.job_id === responseId && job.total_applicants > 0) ? (\n                        <tr>\n                          <td colSpan={10}>\n                            <JobResponse responseId={responseId} />\n                          </td>\n                        </tr>\n                      ) : null}\n                    </>\n                  ))\n                )}\n              </tbody>\n            </table>}\n        </div>\n        <div className=\"pt-2\">\n          <Pagination\n            nPages={nPages}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage} total={totalData} count={jobData.length}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default FollowupTable;\n"
        }
    ]
}