{
    "sourceFile": "src/components/forms/employer/companyDetail.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713875976707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713875976707,
            "name": "Commit-0",
            "content": "import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\n// import { CKEditor } from \"ckeditor4-react\";\n// import FroalaEditor from \"react-froala-wysiwyg\";\n// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n// import \"froala-editor/css/froala_style.min.css\";\n// import \"froala-editor/js/plugins.pkgd.min.js\";\nimport {\n  AddCompany,\n  EmployerDetails,\n  GetFilter,\n  // AddEmployerPermission,\n} from \"../../../api/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Permissions from \"../../json/emailPermisionJson\";\nimport TextEditor from \"../../common/TextEditor\";\nfunction CompanyDetails(props) {\n  const [loading, setLoading] = useState(false);\n  const [imgError, setImgError] = useState(\"\");\n  let [Json, setJson] = useState([]);\n  let encoded;\n  // const user_type = localStorage.getItem(\"userType\");\n\n  /*Function to get thejSon */\n  const JsonData = async () => {\n    try {\n      let Json = await GetFilter();\n      if (Json.data.message === \"No data found\") {\n        setJson([]);\n      } else {\n        setJson(Json.data.data);\n      }\n      setJson(Json.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setImgError(\"\");\n    setLoading(false);\n    props.close();\n  };\n  // COMPANY DETAIL VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    company_name: \"\",\n    industry: \"\",\n    corporation: \"\",\n    alias: \"\",\n    website_url: \"\",\n    company_start_date: \"\",\n    company_size: \"\",\n    about: \"\",\n    vacancy_for_post: \"\",\n    franchise: \"\",\n    logo: \"\",\n    permission: props.employerId === \"0\" ? JSON.stringify(Permissions) : null,\n    company_size_partTime:\"\"\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    company_name: [\n      (value) =>\n        value === \"\" ||\n          value === null ||\n          value === undefined ||\n          value.trim() === \"\"\n          ? \"Client's name is required\"\n          : value.length < 2\n            ? \"Client's Name should have 2 or more letters\"\n            : // : /[^A-Za-z 0-9]/g.test(value)\n            // ? \"Cannot use special character \"\n            \"\",\n    ],\n    industry: [\n      (value) =>\n        value === \"\" || value === null || value === undefined\n          ? \"Industry is required\"\n          : \"\",\n    ],\n    company_size: [\n      (value) =>\n        value === \"\" ||\n          value === null ||\n          value === undefined ||\n          value.trim() === \"\"\n          ? \"Client's team Size is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n            ? \"Cannot use special character \"\n            : value === \"0\" || value === 0\n              ? \"Client's team Size can not be zero\"\n              : \"\",\n    ],\n    vacancy_for_post: [\n      (value) =>\n        value === \"\" ||\n          value === null ||\n          value === undefined ||\n          value.trim() === \"\"\n          ? \"Vacancy is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n            ? \"Cannot use special character \"\n            : \"\",\n    ],\n\n    // franchise: [\n    //   (value) =>\n    //     value === \"\" || value === null || value === undefined\n    //       ? \"\"\n    //       : /[^A-Za-z 0-9]/g.test(value)\n    //       ? \"Cannot use special character \"\n    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n    //       ? \"franchise can not have a number.\"\n    //       : \"\",\n    // ],\n  };\n  // API CALL\n  const EmployerData = async () => {\n    try {\n      let userData = await EmployerDetails(props.employerId);\n      if (\n        userData === undefined ||\n        props.employerId === \"0\" ||\n        props.employerId === undefined ||\n        props.employerId.length === 0 ||\n        userData.data.company_detail.length === 0\n      ) {\n        setState(initialFormState);\n      } else {\n        setState(userData.data.company_detail[0]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    JsonData();\n    if (props.employerId !== \"0\") {\n      EmployerData();\n    }\n    // eslint-disable-next-line\n  }, [props]);\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setErrors, setState, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  /*Function to convert file to base64 */\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", () => {\n        resolve({ base64: fileReader.result });\n      });\n      fileReader.readAsDataURL(file);\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n  /*Onchange function of Logo */\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        // eslint-disable-next-line\n        if (file.size > 1024 * 1024 * 5 === true) {\n          setImgError(\"Image size can't be more then 5 mb\");\n        } else {\n          setImgError(\"\");\n          setState({ ...state, logo: event.target.result });\n        }\n      };\n      img.src = event.target.result;\n    };\n\n    // Read the file as a data URL\n    reader.readAsDataURL(file);\n    encoded = await convertToBase64(file);\n    let base64Name = encoded.base64;\n    setState({ ...state, logo: base64Name });\n  };\n  // COMPANY DETAIL SUBMIT BUTTON\n  const onCompanyDetailClick = async (event) => {\n    event.preventDefault();\n    if (validate() && imgError === \"\") {\n      setLoading(true);\n      try {\n        let responseData = await AddCompany(state);\n        if (responseData.message === \"Employer data inserted successfully\") {\n          try {\n            // await AddEmployerPermission(Permissions);\n            toast.success(\"Client Added successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.setApiCall(true);\n            return close();\n          } catch (err) {\n            console.log(err);\n          }\n        }\n        if (responseData.message === \"Employer data updated successfully\") {\n          toast.success(\"Client Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END COMPANY DETAIL VALIDATION\n  /*Industry Json for not having same data */\n  const Industry = Json.Industry\n    ? Json.Industry.filter(\n      (thing, index, self) =>\n        index === self.findIndex((t) => t.value === thing.value)\n    )\n    : [];\n  /*Corporation Json for not having same data */\n  // const Corporation = Json.Corporation\n  //   ? Json.Corporation.filter(\n  //       (thing, index, self) =>\n  //         index === self.findIndex((t) => t.value === thing.value)\n  //     )\n  //   : [];\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <div className=\"bg-white rounded h-100 px-11 pt-7\">\n          <form onSubmit={onCompanyDetailClick}>\n            <h5 className=\"text-center pt-2 mb-7\">\n              {/* {user_type === \"company\" ? \"Company Details\" : \"Employer Details\"} */}\n              Client's Details\n            </h5>\n            <input type=\"hidden\" value={state.company_id || \"\"} />\n            <div className=\"row\">\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"company_name\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Clientâ€™s Legal Name\n                  <span className=\"text-danger\">*</span>:\n                </label>\n                <input\n                  type=\"text\"\n                  maxLength={60}\n                  name=\"company_name\"\n                  value={state.company_name || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.company_name\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Client Legal Name\"\n                  id=\"company_name\"\n                />\n                {/*----ERROR MESSAGE FOR COMPANY NAME----*/}\n                {errors.company_name && (\n                  <span\n                    key={errors.company_name}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.company_name}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"franchise\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Operating Name:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    maxLength={60}\n                    name=\"franchise\"\n                    value={state.franchise || \"\"}\n                    onChange={onInputChange}\n                    type=\"text\"\n                    className={\n                      errors.franchise\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"Operating Name\"\n                    id=\"franchise\"\n                  />\n                  {/*----ERROR MESSAGE FOR FRANCHISE----*/}\n                  {errors.franchise && (\n                    <span\n                      key={errors.franchise}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.franchise}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"industry\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Industry<span className=\"text-danger\">*</span>:\n                </label>\n                <select\n                  name=\"industry\"\n                  value={state.industry || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.industry\n                      ? \"text-capitalize form-control px-5 border border-danger\"\n                      : \"text-capitalize form-control px-5\"\n                  }\n                  id=\"industry\"\n                >\n                  <option value={\"\"}>Industry Client belongs to</option>\n                  {(Industry || []).map((industry) => (\n                    <option key={industry.id} value={industry.value}>\n                      {industry.value}\n                    </option>\n                  ))}\n                </select>\n                {/*----ERROR MESSAGE FOR INDUSTRY ----*/}\n                {errors.industry && (\n                  <span\n                    key={errors.industry}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.industry}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"contactperson\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Type of bussiness:\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Type of bussiness\"\n                  maxLength={60}\n                  name=\"corporation\"\n                  value={state.corporation || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.corporation\n                      ? \"text-capitalize form-control border border-danger\"\n                      : \"text-capitalize form-control\"\n                  }\n                  id=\"corporation\"\n                />\n                {/* <select\n                  type=\"text\"\n                  placeholder=\"Contact Person \"\n                  maxLength={60}\n                  name=\"corporation\"\n                  value={state.corporation || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.corporation\n                      ? \"text-capitalize form-control border border-danger\"\n                      : \"text-capitalize form-control\"\n                  }\n                  id=\"corporation\"\n                >\n                  <option value={\"\"}>Company corporation</option>\n                  {(Corporation || []).map((data) => (\n                    <option key={data.id} value={data.value}>\n                      {data.value}\n                    </option>\n                  ))}\n                </select> */}\n                {/*----ERROR MESSAGE FOR CORPORATION----*/}\n                {errors.corporation && (\n                  <span\n                    key={errors.corporation}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.corporation}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"alias\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Referral Partner:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Referral Partner\"\n                    maxLength={60}\n                    name=\"alias\"\n                    value={state.alias || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.alias\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    id=\"alias\"\n                  />\n                  {/*----ERROR MESSAGE FOR ALIAS----*/}\n                  {errors.alias && (\n                    <span\n                      key={errors.alias}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.alias}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"company_start_date\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Client's company Start Date:\n                </label>\n\n                <input\n                  max={moment().format(\"DD-MM-YYYY\")}\n                  type=\"date\"\n                  name=\"company_start_date\"\n                  onKeyDownCapture={(e) => e.preventDefault()}\n                  value={state.company_start_date || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.company_start_date\n                      ? \"form-control  border border-danger coustam_datepicker\"\n                      : \"form-control coustam_datepicker\"\n                  }\n                  placeholder=\"company_start_date\"\n                  id=\"company_start_date\"\n                />\n                {/*----ERROR MESSAGE FOR COMPANY SART DATE----*/}\n                {errors.company_start_date && (\n                  <span\n                    key={errors.company_start_date}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.company_start_date}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"company_size\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  No. of working official's(Full time)\n                  <span className=\"text-danger\">*</span>:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    maxLength={60}\n                    name=\"company_size\"\n                    value={state.company_size || \"\"}\n                    onChange={onInputChange}\n                    type=\"number\"\n                    className={\n                      errors.company_size\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"No. of working official's(full time)\"\n                    id=\"company_size\"\n                    min={0}\n                  />\n                  {/*----ERROR MESSAGE FOR COMPANY SIZE----*/}\n                  {errors.company_size && (\n                    <span\n                      key={errors.company_size}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.company_size}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"company_size_partTime\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  No. of working official's(Part time):\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    maxLength={60}\n                    name=\"company_size_partTime\"\n                    value={state.company_size_partTime || \"\"}\n                    onChange={onInputChange}\n                    type=\"number\"\n                    className={\n                      errors.company_size_partTime\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"No. of working official's(Part time)\"\n                    id=\"company_size_partTime\"\n                    min={0}\n                  />\n                  {/*----ERROR MESSAGE FOR COMPANY SIZE----*/}\n                  {errors.company_size && (\n                    <span\n                      key={errors.company_size}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.company_size}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"website_url\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Website URL (https://www.domain.com/):\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Website Url\"\n                  maxLength={60}\n                  name=\"website_url\"\n                  value={state.website_url || \"\"}\n                  onChange={onInputChange}\n                  className={\n                    errors.website_url\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  id=\"website_url\"\n                />\n                {/*----ERROR MESSAGE FOR WEBSITE URL----*/}\n                {errors.website_url && (\n                  <span\n                    key={errors.website_url}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.website_url}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"vacancy_for_post\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Number of Advertisements Posted\n                  <span className=\"text-danger\">*</span>:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    maxLength={60}\n                    name=\"vacancy_for_post\"\n                    value={state.vacancy_for_post || \"\"}\n                    onChange={onInputChange}\n                    type=\"text\"\n                    className={\n                      errors.vacancy_for_post\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"Number of Advertisements Posted\"\n                    id=\"vacancy_for_post\"\n                  />\n                  {/*----ERROR MESSAGE FOR VACANCY FOR POST----*/}\n                  {errors.vacancy_for_post && (\n                    <span\n                      key={errors.vacancy_for_post}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.vacancy_for_post}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"about\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                >\n                  Client's company Logo:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type=\"file\"\n                    className=\"form-control\"\n                    accept=\" image/png,image/jpeg,image/jpg,image/gif\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n                <small className=\"text-danger\">{imgError}</small>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"form-group col-md-12\">\n                <label\n                  htmlFor=\"about\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  style={{ top: \"-12px\" }}\n                >\n                  About:\n                </label>\n                <div>\n                  <div\n                    sm=\"12\"\n                  // className={\n                  //   errors.about\n                  //     ? \"border border-danger rounded overflow-hidden\"\n                  //     : \"border rounded overflow-hidden\"\n                  // }\n                  >\n                    {/* <CKEditor\n                      type={\"classic\"}\n                      name={\"about\"}\n                      id={\"about\"}\n                      data={state.about}\n                      value={state.about}\n                      onChange={onInputChange}\n                      initData=\"About Company\"\n                    /> */}\n                    {/* <textarea\n                      name=\"about\"\n                      value={state.about || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.about\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"about\"\n                      placeholder=\"Client's Description\"\n                    ></textarea> */}\n                    <TextEditor\n                      setState={setState}\n                      state={state}\n                      page={\"companyDetails\"}\n                    />\n                    {/* <FroalaEditor\n                      model={state.about}\n                      onModelChange={(newContent) =>\n                        setState({ ...state, about: newContent })\n                      }\n                      className={\n                        errors.about\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    /> */}\n                  </div>\n                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                  {errors.about && (\n                    <span\n                      key={errors.about}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.about}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group mb-8 text-center\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary btn-medium w-25 rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default CompanyDetails;\n"
        }
    ]
}