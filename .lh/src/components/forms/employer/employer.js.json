{
    "sourceFile": "src/components/forms/employer/employer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1694064751484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1694064751484,
            "name": "Commit-0",
            "content": "import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\n\nfunction AddEmployer(props) {\n  // USER EMPLOYER VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    companyname: \"\",\n    vacancies: \"\",\n    location: \"\",\n    infostatus: \"\",\n    contactpersonname: \"\",\n    contactpersonnumber: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    companyname: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Company name is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n          ? \"Cannot use special character \"\n          : null,\n    ],\n    vacancies: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"No of vacancies is required\"\n          : null,\n    ],\n    location: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"location is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n          ? \"Cannot use special character \"\n          : null,\n    ],\n    infostatus: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Information status Type is required\"\n          : null,\n    ],\n    contactpersonname: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Contact person's name is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n          ? \"Cannot use special character \"\n          : null,\n    ],\n    contactpersonnumber: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"MobileNo. is required\"\n          : value.length !== 10\n          ? \"Mobile no should be of 10 digits\"\n          : null,\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, onInputChange, errors, validate } = useValidation(\n    initialFormState,\n    validators\n  );\n  // USER EMPLOYER SUBMIT BUTTON\n  const onUserEmployerClick = (event) => {\n    event.preventDefault();\n    if (validate()) {\n    } else {\n    }\n  };\n  // END USER PERSONAL DETAIL VALIDATION\n\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n          data-dismiss=\"modal\"\n          onClick={props.close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <div className=\"bg-white rounded h-100 px-11 pt-7\">\n          <form onSubmit={onUserEmployerClick}>\n            <h5 className=\"text-center pt-2 mb-7\">Add Employer</h5>\n            <div className=\"row \">\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"companyname\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Company Name <span className=\"text-danger\">*</span>:\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    errors.companyname\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  value={state.companyname}\n                  onChange={onInputChange}\n                  name=\"companyname\"\n                  id=\"companyname\"\n                  placeholder=\"Company Name\"\n                />\n                {/*----ERROR MESSAGE FOR COMPANY NAME----*/}\n                {errors.companyname && (\n                  <span\n                    key={errors.companyname}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.companyname}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"vacancies\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  No. of vacancies <span className=\"text-danger\">*</span> :\n                </label>\n                <input\n                  type=\"number\"\nmin={0}\n                  className={\n                    errors.vacancies\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"vacancy\"\n                  id=\"vacancies\"\n                  name=\"vacancies\"\n                  value={state.vacancies}\n                  onChange={onInputChange}\n                />\n                {/*----ERROR MESSAGE FOR VACANCIES----*/}\n                {errors.vacancies && (\n                  <span\n                    key={errors.vacancies}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.vacancies}\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"location\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Location <span className=\"text-danger\">*</span>:\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    errors.location\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  value={state.location}\n                  onChange={onInputChange}\n                  placeholder=\"Location\"\n                  id=\"location\"\n                  name=\"location\"\n                />\n                {errors.location && (\n                  <span\n                    key={errors.location}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.location}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"infostatus\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Information status <span className=\"text-danger\">*</span>:\n                </label>\n                <select\n                  className={\n                    errors.infostatus\n                      ? \"text-capitalize form-control border border-danger\"\n                      : \"text-capitalize form-control\"\n                  }\n                  value={state.infostatus}\n                  onChange={onInputChange}\n                  id=\"infostatus\"\n                  name=\"infostatus\"\n                >\n                  <option value={\"\"}>Select status</option>\n                  <option value={\"complete\"}>Complete</option>\n                  <option value={\"incomplete\"}>Incomplete</option>\n                </select>\n                {errors.infostatus && (\n                  <span\n                    key={errors.infostatus}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.infostatus}\n                  </span>\n                )}\n              </div>\n            </div>\n            <h5> Contact Person</h5>\n            <div className=\"row pt-5\">\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"contactpersonname\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Name<span className=\"text-danger\">*</span> :\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    errors.contactpersonname\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  value={state.contactpersonname}\n                  onChange={onInputChange}\n                  placeholder=\"Name\"\n                  id=\"contactpersonname\"\n                  name=\"contactpersonname\"\n                />\n                {errors.contactpersonname && (\n                  <span\n                    key={errors.contactpersonname}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.contactpersonname}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"contactpersonnumber\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Number<span className=\"text-danger\">*</span> :\n                </label>\n                <input\n                  type=\"number\"\nmin={0}\n                  className={\n                    errors.contactpersonnumber\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  value={state.contactpersonnumber}\n                  onChange={onInputChange}\n                  placeholder=\"Contact number\"\n                  id=\"contactpersonnumber\"\n                  name=\"contactpersonnumber\"\n                  maxLength={10}\n                />\n                {errors.contactpersonnumber && (\n                  <span\n                    key={errors.contactpersonnumber}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.contactpersonnumber}\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"form-group text-center\">\n              <button\n                className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddEmployer;\n"
        }
    ]
}