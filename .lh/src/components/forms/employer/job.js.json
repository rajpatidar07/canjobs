{
    "sourceFile": "src/components/forms/employer/job.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1709537126206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709619873975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -707,8 +707,9 @@\n                     <TextEditor\n                       setState={setState}\n                       state={state}\n                       page={\"jobDescription\"}\n+                      identifier={\"unique_identifier_1\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n                     />\n                     {/* <FroalaEditor\n                       model={state.job_description}\n@@ -774,8 +775,9 @@\n                     ></textarea> */}\n                     <TextEditor\n                       setState={setState}\n                       state={state}\n+                      identifier={\"unique_identifier_2\"}\n                       page={\"yourDuties\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n                     />\n                     {/* <FroalaEditor\n@@ -853,8 +855,9 @@\n                     ></textarea> */}\n                     <TextEditor\n                       setState={setState}\n                       state={state}\n+                      identifier={\"unique_identifier_3\"}\n                       page={\"requirement\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n                     />\n                   </div>\n"
                },
                {
                    "date": 1709636821403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1151 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+// import { CKEditor } from \"ckeditor4-react\";\n+import useValidation from \"../../common/useValidation\";\n+import FilterJson from \"./../../json/filterjson\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { GetJob, AddJob, getAllEmployer, GetFilter } from \"../../../api/api\";\n+import { useLocation } from \"react-router-dom\";\n+import states from \"../../json/states\";\n+import TextEditor from \"../../common/TextEditor\";\n+// import FroalaEditor from \"react-froala-wysiwyg\";\n+// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n+// import \"froala-editor/css/froala_style.min.css\";\n+// import \"froala-editor/js/plugins.pkgd.min.js\";\n+// import Select from \"react-select\";\n+function AddJobModal(props) {\n+  const [company, setCompany] = useState([]);\n+  const [loading, setLoading] = useState(false);\n+  let token = localStorage.getItem(\"token\");\n+  const company_id =\n+    props.jobdata === \"0\"\n+      ? \"\"\n+      : props.company_id\n+        ? props.company_id\n+        : localStorage.getItem(\"company_id\");\n+  let location = useLocation();\n+  const user_type = localStorage.getItem(\"userType\");\n+  let [Json, setJson] = useState([]);\n+  /*Function to get the jSon */\n+  const JsonData = async () => {\n+    try {\n+      let Json = await GetFilter();\n+      if (Json.data.message === \"No data found\") {\n+        setJson([]);\n+      } else {\n+        setJson(Json.data.data);\n+      }\n+      setJson(Json.data.data);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    props.close();\n+  };\n+  // CKEDITOR\n+  // ClassicEditor.defaultConfig = {\n+  //   toolbar: {\n+  //     items: [\n+  //       \"heading\",\n+  //       \"|\",\n+  //       \"bold\",\n+  //       \"italic\",\n+  //       \"|\",\n+  //       \"bulletedList\",\n+  //       \"numberedList\",\n+  //       \"|\",\n+  //       \"insertTable\",\n+  //       \"|\",\n+  //       \"undo\",\n+  //       \"redo\",\n+  //     ],\n+  //   },\n+  //   table: {\n+  //     contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n+  //   },\n+  //   language: \"en\",\n+  // };\n+  // ADD JOBS VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    job_title: \"\",\n+    experience_required: \"\",\n+    salary: \"\",\n+    location: \"\",\n+    industry_type: \"\",\n+    apply_link: \"\",\n+    job_description: \"\",\n+    your_duties: \"\",\n+    requirement: \"\",\n+    department: \"\",\n+    job_type: \"\",\n+    role_category: \"\",\n+    education: \"\",\n+    language: \"\",\n+    keyskill: \"\",\n+    employement: \"\",\n+    job_category_id: \"\",\n+    is_featured: \"\",\n+    company_id: company_id ? company_id : \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    job_title: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Job Title is required\"\n+          : value.length < 2\n+            ? \"Job Title should have 2 or more letters\"\n+            : /[-]?\\d+(\\.\\d+)?/.test(value)\n+              ? \"Job Title can not have a number.\"\n+              : \"\",\n+    ],\n+    experience_required: [\n+      (value) => (value === \"\" ? \"Experienceis required\" : null),\n+    ],\n+    location: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Location is required\" : null,\n+    ],\n+    apply_link: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Apply link is required\"\n+          : !/(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)|([^\\s@]+@[^\\s@]+\\.[^\\s@]+)/gi.test(\n+            value\n+          )\n+            ? \"Write the correct link or email\"\n+            : value.length < 3\n+              ? \"Apply link should have 3 or more letters\"\n+              : null,\n+    ],\n+    job_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Job Type is required\" : null,\n+    ],\n+    role_category: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"No of vacancies is required\"\n+          : null,\n+    ],\n+    job_category_id: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Job category is required\" : null,\n+    ],\n+    company_id: [(value) => (value === \"\" ? \"Client is required\" : null)],\n+    salary: [\n+      (value) =>\n+        /^\\d*\\.?\\d*$/.test(value) ? \"\" : \"Salary can not have a characters\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setErrors, setState, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+  // API CALL\n+  const JobData = async () => {\n+    try {\n+      let userData = await GetJob(props.jobdata);\n+      if (\n+        props.jobdata === undefined ||\n+        props.jobdata === \"0\" ||\n+        props.jobdata.length === 0 ||\n+        state === undefined ||\n+        userData.data.data.length === 0\n+      ) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /* Function to get Employer data*/\n+  const CompnayData = async () => {\n+    try {\n+      const userData = await getAllEmployer();\n+      if (userData.data.length === 0) {\n+        setCompany([]);\n+      } else {\n+        setCompany(userData.data);\n+        // if (Array.isArray(userData.data)) {\n+        //   const options = userData.data.map((option) => ({\n+        //     value: option.company_id,\n+        //     label: option.company_name,\n+        //   }));\n+        //   setCompany(options);\n+        // }\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (user_type === \"admin\" && props.admin === \"admin\") {\n+      CompnayData();\n+    }\n+    if (token) {\n+      JsonData();\n+    }\n+    if (\n+      props.jobdata === \"0\" ||\n+      props.jobdata === undefined ||\n+      props.jobdata.length === 0 ||\n+      state === undefined\n+    ) {\n+      setState(initialFormState);\n+    } else {\n+      JobData();\n+    }\n+  }, [props]);\n+  // ADD JOBS SUBMIT BUTTON\n+  const onAddJobsClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        let responseData = await AddJob(state);\n+        if (responseData.message === \"job data inserted successfully\") {\n+          toast.success(\"Job Added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+        if (responseData.message === \"Failed to insert job data\") {\n+          toast.error(\"No Mangr found\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+\n+        if (responseData.message === \"job data updated successfully\") {\n+          toast.success(\"Job Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+\n+  // END ADD JOBS VALIDATION\n+  /*Company type array to filter*/\n+  const Company = company.filter(\n+    (thing, index, self) =>\n+      index === self.findIndex((t) => t.company_name === thing.company_name)\n+  );\n+  /*Function to set data to the search job by country */\n+  // const onSelectChange = (option) => {\n+  //   setState({ ...state, company_id: option.value });\n+  // };\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"xl\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-md-11 px-6 pt-7 overflow-y-hidden\">\n+          <form onSubmit={onAddJobsClick}>\n+            {props.jobdata === \"0\" || location.pathname === \"/adminclient\" ? (\n+              <h5 className=\"text-center pt-2 mb-7\">Add Jobs</h5>\n+            ) : (\n+              <h5 className=\"text-center pt-2 mb-7\">Update Jobs</h5>\n+            )}\n+\n+            <div className=\"row \">\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_title\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Title:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <input\n+                  maxLength={300}\n+                  name=\"job_title\"\n+                  value={state.job_title || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  className={\n+                    errors.job_title\n+                      ? \"form-control border border-danger\"\n+                      : \"form-control\"\n+                  }\n+                  placeholder=\"Job Title\"\n+                  id=\"job_title\"\n+                />\n+                {/*----ERROR MESSAGE FOR job_title----*/}\n+                {errors.job_title && (\n+                  <span className=\"text-danger font-size-3\">\n+                    {errors.job_title}\n+                  </span>\n+                )}\n+              </div>\n+              {user_type !== \"admin\" ||\n+                location.pathname === \"/adminclient\" ||\n+                location.pathname === \"/dashboard\" ? null : (\n+                <div className=\"form-group col-md-4 px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"job_category_id\"\n+                    className=\"font-size-4 text-black-2  line-height-reset\"\n+                  >\n+                    Client:<span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"company_id\"\n+                      value={state.company_id || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.company_id\n+                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                          : \"text-capitalize form-control position-relative overflow-hidden\"\n+                      }\n+                      placeholder=\"Client's name\"\n+                      id=\"company_id\"\n+                    >\n+                      <option value={\"\"}>Select Client</option>\n+                      {(Company || []).map((com) =>\n+                        com.company_name === null ? null : (\n+                          <option key={com.company_id} value={com.company_id}>\n+                            {com.company_name}\n+                          </option>\n+                        )\n+                      )}\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR COMPANY----*/}\n+                  {errors.company_id && (\n+                    <span\n+                      key={errors.company_id}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.company_id}\n+                    </span>\n+                  )}\n+\n+                  {/* <div\n+                   className={\"form-group col-md-4 d-flex\"}\n+                   style={{ position: \"relative\" }}\n+                 >\n+                   <label\n+                     htmlFor=\"reffer_by\"\n+                     className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                   >\n+                     Company:<span className=\"text-danger\"> *</span>\n+                   </label>\n+                   <Select\n+                     options={\"\" || company}\n+                     name=\"company_id\"\n+                     id=\"company_id\"\n+                     onChange={onSelectChange}\n+                     className={\n+                       errors.company_id\n+                         ? \"form-control border border-danger px-0 pt-4 \"\n+                         : \"form-control px-0 pt-4 border-0\"\n+                     }\n+                   /> */}\n+                </div>\n+              )}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"employement\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Operating Name:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    name=\"employement\"\n+                    value={state.employement || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.employement\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Operating Name\"\n+                    id=\"employement\"\n+                  />\n+                  {/* <option value={\"\"}>Select Employment</option>\n+                    {(FilterJson.employement || []).map((employement, i) => (\n+                      <option key={i} value={employement}>\n+                        {employement}\n+                      </option>\n+                    ))}\n+                  </select> */}\n+                </div>\n+                {/*----ERROR MESSAGE FOR employement----*/}\n+                {errors.employement && (\n+                  <span\n+                    key={errors.employement}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.employement}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_category_id\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Category:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"job_category_id\"\n+                    value={state.job_category_id || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.job_category_id\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Job category\"\n+                    id=\"job_category_id\"\n+                  >\n+                    <option value={\"\"}>Select Category</option>\n+                    {(Json.Category || []).map((cat) =>\n+                      cat.value === null ? null : (\n+                        <option key={cat.id} value={cat.id}>\n+                          {cat.value}\n+                        </option>\n+                      )\n+                    )}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_category_id----*/}\n+                {errors.job_category_id && (\n+                  <span className=\"text-danger font-size-3\">\n+                    {errors.job_category_id}\n+                  </span>\n+                )}\n+              </div>\n+              {/* <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"industry_type\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Industry Type:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"industry_type\"\n+                    value={state.industry_type || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.industry_type\n+                        ? \"text-capitalize form-control border border-danger\"\n+                        : \"text-capitalize form-control\"\n+                    }\n+                    id=\"industry_type\"\n+                  >\n+                    <option value={\"\"}>Select industry</option>\n+                    {(Json.Industry || []).map((industry) => (\n+                      <option key={industry.id} value={industry.value}>\n+                        {industry.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  ----ERROR MESSAGE FOR industry_type----\n+                  {errors.industry_type && (\n+                    <span\n+                      key={errors.industry_type}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.industry_type}\n+                    </span>\n+                  )}\n+                </div>\n+              </div> */}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"experience_required\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Experience Required:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"experience_required\"\n+                    value={state.experience_required || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.experience_required\n+                        ? \"form-control text-capitalize border border-danger\"\n+                        : \"form-control text-capitalize\"\n+                    }\n+                    placeholder=\"Experience\"\n+                    id=\"experience_required\"\n+                  >\n+                    <option value={\"\"}>Select Experience</option>\n+                    {(FilterJson.experience || []).map((exp, i) => (\n+                      <option key={i} value={exp}>\n+                        {exp}\n+                        {exp === \"fresher\" || exp === \"Other\" ? \"\" : \"Years\"}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR experience_required----*/}\n+                  {errors.experience_required && (\n+                    <span\n+                      key={errors.experience_required}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.experience_required}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"salary\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Per hour wage ($CAD):\n+                </label>\n+                <input\n+                  maxLength={10}\n+                  name=\"salary\"\n+                  value={state.salary || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  min={0}\n+                  className={\n+                    errors.salary\n+                      ? \"form-control text-capitalize border border-danger\"\n+                      : \"form-control text-capitalize\"\n+                  }\n+                  placeholder=\"$\"\n+                  id=\"salary\"\n+                />\n+                {/*----ERROR MESSAGE FOR salary----*/}\n+                {errors.salary && (\n+                  <span key={errors.salary} className=\"text-danger font-size-3\">\n+                    {errors.salary}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"location\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  State:<span className=\"text-danger\">*</span>\n+                </label>\n+                <select\n+                  name=\"location\"\n+                  value={state.location || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  className={\n+                    errors.location\n+                      ? \"form-control text-capitalize border border-danger\"\n+                      : \"form-control text-capitalize\"\n+                  }\n+                  placeholder=\"Location\"\n+                  id=\"location\"\n+                >\n+                  <option value={\"\"}>Select State</option>\n+                  {(Object.keys(states) || []).map((state, i) => (\n+                    <option key={i} value={state}>\n+                      {state}\n+                    </option>\n+                  ))}\n+                </select>\n+                {/* // *----ERROR MESSAGE FOR location---- */}\n+                {errors.location && (\n+                  <span\n+                    key={errors.location}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.location}\n+                  </span>\n+                )}\n+              </div>\n+\n+              {state.location && (\n+                <div className=\"form-group col-md-4 px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"industry_type\"\n+                    className=\"font-size-4 text-black-2  line-height-reset \"\n+                  >\n+                    City:\n+                  </label>\n+                  <select\n+                    name=\"industry_type\"\n+                    value={state.industry_type}\n+                    onChange={onInputChange}\n+                    type=\"text\"\n+                    className=\"form-control text-capitalize\"\n+                    placeholder=\"City\"\n+                    id=\"industry_type\"\n+                  >\n+                    <option value={\"\"}>Select City</option>\n+                    {(states[state.location] || []).map((city, i) => (\n+                      <option key={i} value={city}>\n+                        {city}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+              )}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"apply_link\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Apply Link / Email:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"text\"\n+                    maxLength={60}\n+                    name=\"apply_link\"\n+                    value={state.apply_link || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.apply_link\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"Apply link\"\n+                    id=\"apply_link\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR apply_link----*/}\n+                  {errors.apply_link && (\n+                    <span\n+                      key={errors.apply_link}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.apply_link}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_description\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Job Description:\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"12\"\n+                  // className={\n+                  //   errors.job_description\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* <CKEditor\n+                      type={\"classic\"}\n+                      name=\"job_description\"\n+                      row={6}\n+                      id={\"job_description\"}\n+                      data={state.job_description}\n+                      value={state.job_description}\n+                   onChange={onInputChange}\n+                      initData=\"Job Description\"\n+                    /> */}\n+                    {/* <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Job Description\"\n+                      name=\"job_description\"\n+                      value={state.job_description || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.job_description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"job_description\"\n+                    ></textarea> */}\n+                    <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      page={\"jobDescription\"}\n+                      identifier={\"unique_identifier_1\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    />\n+                    {/* <FroalaEditor\n+                      model={state.job_description}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, job_description: newContent })\n+                      }\n+                      className={\n+                        errors.job_description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                  {errors.job_description && (\n+                    <span\n+                      key={errors.job_description}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.job_description}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"your_duties\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Full Address :\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"6\"\n+                  // className={\n+                  //   errors.your_duties\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* //    <CKEditor\n+                  //     type={\"classic\"}\n+                  //     name=\"your_duties\"\n+                  //     id={\"your_duties\"}\n+                  //     data={state.your_duties}\n+                  //     value={state.your_duties}\n+                  //  onChange={onInputChange}\n+                  //     initData=\"your duties\"\n+                  //   />  */}\n+                    <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Full Address\"\n+                      name=\"your_duties\"\n+                      value={state.your_duties || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.your_duties\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"your_duties\"\n+                    ></textarea>\n+                    {/* <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      identifier={\"unique_identifier_2\"}\n+                      page={\"yourDuties\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    /> */}\n+                    {/* <FroalaEditor\n+                      model={state.your_duties}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, your_duties: newContent })\n+                      }\n+                      className={\n+                        errors.your_duties\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                  </div>\n+                  {/* //----ERROR MESSAGE FOR DESRIPTION----* */}\n+                  {errors.your_duties && (\n+                    <span\n+                      key={errors.your_duties}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.your_duties}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"requirement\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Requirement:\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"6\"\n+                  // className={\n+                  //   errors.requirement\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* <CKEditor\n+                      type={\"classic\"}\n+                      name=\"requirement\"\n+                      id={\"requirement\"}\n+                      data={state.requirement}\n+                      value={state.requirement}\n+                      onChange={onInputChange}\n+                      initData=\"Add Requirement\"\n+                    /> */}\n+                    {/* <FroalaEditor\n+                      model={state.requirement}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, requirement: newContent })\n+                      }\n+                      className={\n+                        errors.requirement\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                    <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Requirements\"\n+                      name=\"requirement\"\n+                      value={state.requirement || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.requirement\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"requirement\"\n+                    ></textarea>\n+                    {/* <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      identifier={\"unique_identifier_3\"}\n+                      page={\"requirement\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    /> */}\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                  {errors.requirement && (\n+                    <span\n+                      key={errors.requirement}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.requirement}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"role_category\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  No. Of Vacancies:<span className=\"text-danger\">*</span>\n+                </label>\n+\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"number\"\n+                    min={0}\n+                    name=\"role_category\"\n+                    value={state.role_category || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.role_category\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"Vacancies\"\n+                    id=\"role_category\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR role_category----*/}\n+                  {errors.role_category && (\n+                    <span\n+                      key={errors.role_category}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.role_category}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"department\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  NOC Code:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"number\"\n+                    maxLength={20}\n+                    name=\"department\"\n+                    value={state.department || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.department\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"NOC Code\"\n+                    id=\"department\"\n+                    min={0}\n+                  />\n+                  {/*----ERROR MESSAGE FOR department----*/}\n+                  {errors.department && (\n+                    <span\n+                      key={errors.department}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.department}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_type\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Type:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className={\" position-relative\"}>\n+                  <select\n+                    placeholder=\"Apply job_type\"\n+                    id=\"job_type\"\n+                    name=\"job_type\"\n+                    value={state.job_type || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.job_type\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                  >\n+                    <option value={\"\"}>Select Job Type</option>\n+                    {(FilterJson.job_type || []).map((job_type) => (\n+                      <option key={job_type} value={job_type}>\n+                        {job_type}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_type----*/}\n+                {errors.job_type && (\n+                  <span\n+                    key={errors.job_type}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.job_type}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"education\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Education:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"education\"\n+                    value={state.education || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.education\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Apply education\"\n+                    id=\"education\"\n+                  >\n+                    <option value={\"\"}>Select Education</option>\n+                    {(Json.Education || []).map((education) => (\n+                      <option key={education.id} value={education.value}>\n+                        {education.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_type----*/}\n+                {errors.Education && (\n+                  <span\n+                    key={errors.Education}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.Education}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"language\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Language:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"language\"\n+                    value={state.language || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.language\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Language\"\n+                    id=\"language\"\n+                  >\n+                    <option value={\"\"}>Select Language</option>\n+                    {(Json.Language || []).map((Language) => (\n+                      <option key={Language.id} value={Language.value}>\n+                        {Language.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR language----*/}\n+                  {errors.language && (\n+                    <span\n+                      key={errors.language}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.language}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"keyskill\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Key Skill:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"keyskill\"\n+                    value={state.keyskill || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.keyskill\n+                        ? \"text-capitalize form-control border border-danger\"\n+                        : \"text-capitalize form-control\"\n+                    }\n+                    id=\"keyskill\"\n+                  >\n+                    <option value={\"\"}>Select Skill</option>\n+                    {(Json.Skill || []).map((data) => (\n+                      <option key={data.id} value={data.value}>\n+                        {data.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR keyskill----*/}\n+                  {errors.keyskill && (\n+                    <span\n+                      key={errors.keyskill}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.keyskill}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+\n+              {user_type === \"admin\" ? (\n+                <div className=\"form-group col-md-4\">\n+                  <label\n+                    htmlFor=\"fetured\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Featured:{\" \"}\n+                    <input\n+                      type=\"checkbox\"\n+                      id=\"fetured\"\n+                      name=\"fetured\"\n+                      checked={state.is_featured === \"1\"}\n+                      value={state.is_featured}\n+                      onChange={(e) =>\n+                        setState({\n+                          ...state,\n+                          is_featured:\n+                            state.is_featured === \"\" ||\n+                              state.is_featured === \"0\"\n+                              ? \"1\"\n+                              : \"0\",\n+                        })\n+                      }\n+                    />\n+                  </label>\n+                </div>\n+              ) : null}\n+            </div>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\">\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default AddJobModal;\n"
                },
                {
                    "date": 1709637724926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -759,9 +759,9 @@\n                   //     value={state.your_duties}\n                   //  onChange={onInputChange}\n                   //     initData=\"your duties\"\n                   //   />  */}\n-                    <textarea\n+                    {/* <textarea\n                       maxLength={5000}\n                       placeholder=\"Full Address\"\n                       name=\"your_duties\"\n                       value={state.your_duties || \"\"}\n@@ -771,16 +771,16 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                       id=\"your_duties\"\n-                    ></textarea>\n-                    {/* <TextEditor\n+                    ></textarea> */}\n+                    <TextEditor\n                       setState={setState}\n                       state={state}\n                       identifier={\"unique_identifier_2\"}\n                       page={\"yourDuties\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n-                    /> */}\n+                    />\n                     {/* <FroalaEditor\n                       model={state.your_duties}\n                       onModelChange={(newContent) =>\n                         setState({ ...state, your_duties: newContent })\n@@ -839,9 +839,9 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                     /> */}\n-                    <textarea\n+                    {/* <textarea\n                       maxLength={5000}\n                       placeholder=\"Requirements\"\n                       name=\"requirement\"\n                       value={state.requirement || \"\"}\n@@ -851,16 +851,16 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                       id=\"requirement\"\n-                    ></textarea>\n-                    {/* <TextEditor\n+                    ></textarea> */}\n+                    <TextEditor\n                       setState={setState}\n                       state={state}\n                       identifier={\"unique_identifier_3\"}\n                       page={\"requirement\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n-                    /> */}\n+                    />\n                   </div>\n                   {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                   {errors.requirement && (\n                     <span\n"
                },
                {
                    "date": 1709640064920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1151 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+// import { CKEditor } from \"ckeditor4-react\";\n+import useValidation from \"../../common/useValidation\";\n+import FilterJson from \"./../../json/filterjson\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { GetJob, AddJob, getAllEmployer, GetFilter } from \"../../../api/api\";\n+import { useLocation } from \"react-router-dom\";\n+import states from \"../../json/states\";\n+import TextEditor from \"../../common/TextEditor\";\n+// import FroalaEditor from \"react-froala-wysiwyg\";\n+// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n+// import \"froala-editor/css/froala_style.min.css\";\n+// import \"froala-editor/js/plugins.pkgd.min.js\";\n+// import Select from \"react-select\";\n+function AddJobModal(props) {\n+  const [company, setCompany] = useState([]);\n+  const [loading, setLoading] = useState(false);\n+  let token = localStorage.getItem(\"token\");\n+  const company_id =\n+    props.jobdata === \"0\"\n+      ? \"\"\n+      : props.company_id\n+        ? props.company_id\n+        : localStorage.getItem(\"company_id\");\n+  let location = useLocation();\n+  const user_type = localStorage.getItem(\"userType\");\n+  let [Json, setJson] = useState([]);\n+  /*Function to get the jSon */\n+  const JsonData = async () => {\n+    try {\n+      let Json = await GetFilter();\n+      if (Json.data.message === \"No data found\") {\n+        setJson([]);\n+      } else {\n+        setJson(Json.data.data);\n+      }\n+      setJson(Json.data.data);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    props.close();\n+  };\n+  // CKEDITOR\n+  // ClassicEditor.defaultConfig = {\n+  //   toolbar: {\n+  //     items: [\n+  //       \"heading\",\n+  //       \"|\",\n+  //       \"bold\",\n+  //       \"italic\",\n+  //       \"|\",\n+  //       \"bulletedList\",\n+  //       \"numberedList\",\n+  //       \"|\",\n+  //       \"insertTable\",\n+  //       \"|\",\n+  //       \"undo\",\n+  //       \"redo\",\n+  //     ],\n+  //   },\n+  //   table: {\n+  //     contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n+  //   },\n+  //   language: \"en\",\n+  // };\n+  // ADD JOBS VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    job_title: \"\",\n+    experience_required: \"\",\n+    salary: \"\",\n+    location: \"\",\n+    industry_type: \"\",\n+    apply_link: \"\",\n+    job_description: \"\",\n+    your_duties: \"\",\n+    requirement: \"\",\n+    department: \"\",\n+    job_type: \"\",\n+    role_category: \"\",\n+    education: \"\",\n+    language: \"\",\n+    keyskill: \"\",\n+    employement: \"\",\n+    job_category_id: \"\",\n+    is_featured: \"\",\n+    company_id: company_id ? company_id : \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    job_title: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Job Title is required\"\n+          : value.length < 2\n+            ? \"Job Title should have 2 or more letters\"\n+            : /[-]?\\d+(\\.\\d+)?/.test(value)\n+              ? \"Job Title can not have a number.\"\n+              : \"\",\n+    ],\n+    experience_required: [\n+      (value) => (value === \"\" ? \"Experienceis required\" : null),\n+    ],\n+    location: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Location is required\" : null,\n+    ],\n+    apply_link: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Apply link is required\"\n+          : !/(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)|([^\\s@]+@[^\\s@]+\\.[^\\s@]+)/gi.test(\n+            value\n+          )\n+            ? \"Write the correct link or email\"\n+            : value.length < 3\n+              ? \"Apply link should have 3 or more letters\"\n+              : null,\n+    ],\n+    job_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Job Type is required\" : null,\n+    ],\n+    role_category: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"No of vacancies is required\"\n+          : null,\n+    ],\n+    job_category_id: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Job category is required\" : null,\n+    ],\n+    company_id: [(value) => (value === \"\" ? \"Client is required\" : null)],\n+    salary: [\n+      (value) =>\n+        /^\\d*\\.?\\d*$/.test(value) ? \"\" : \"Salary can not have a characters\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setErrors, setState, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+  // API CALL\n+  const JobData = async () => {\n+    try {\n+      let userData = await GetJob(props.jobdata);\n+      if (\n+        props.jobdata === undefined ||\n+        props.jobdata === \"0\" ||\n+        props.jobdata.length === 0 ||\n+        state === undefined ||\n+        userData.data.data.length === 0\n+      ) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /* Function to get Employer data*/\n+  const CompnayData = async () => {\n+    try {\n+      const userData = await getAllEmployer();\n+      if (userData.data.length === 0) {\n+        setCompany([]);\n+      } else {\n+        setCompany(userData.data);\n+        // if (Array.isArray(userData.data)) {\n+        //   const options = userData.data.map((option) => ({\n+        //     value: option.company_id,\n+        //     label: option.company_name,\n+        //   }));\n+        //   setCompany(options);\n+        // }\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (user_type === \"admin\" && props.admin === \"admin\") {\n+      CompnayData();\n+    }\n+    if (token) {\n+      JsonData();\n+    }\n+    if (\n+      props.jobdata === \"0\" ||\n+      props.jobdata === undefined ||\n+      props.jobdata.length === 0 ||\n+      state === undefined\n+    ) {\n+      setState(initialFormState);\n+    } else {\n+      JobData();\n+    }\n+  }, [props]);\n+  // ADD JOBS SUBMIT BUTTON\n+  const onAddJobsClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        let responseData = await AddJob(state);\n+        if (responseData.message === \"job data inserted successfully\") {\n+          toast.success(\"Job Added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+        if (responseData.message === \"Failed to insert job data\") {\n+          toast.error(\"No Mangr found\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+\n+        if (responseData.message === \"job data updated successfully\") {\n+          toast.success(\"Job Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          if (props.job_page) {\n+            props.setDetailApiCall(true);\n+          }\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+\n+  // END ADD JOBS VALIDATION\n+  /*Company type array to filter*/\n+  const Company = company.filter(\n+    (thing, index, self) =>\n+      index === self.findIndex((t) => t.company_name === thing.company_name)\n+  );\n+  /*Function to set data to the search job by country */\n+  // const onSelectChange = (option) => {\n+  //   setState({ ...state, company_id: option.value });\n+  // };\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"xl\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-md-11 px-6 pt-7 overflow-y-hidden\">\n+          <form onSubmit={onAddJobsClick}>\n+            {props.jobdata === \"0\" || location.pathname === \"/adminclient\" ? (\n+              <h5 className=\"text-center pt-2 mb-7\">Add Jobs</h5>\n+            ) : (\n+              <h5 className=\"text-center pt-2 mb-7\">Update Jobs</h5>\n+            )}\n+\n+            <div className=\"row \">\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_title\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Title:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <input\n+                  maxLength={300}\n+                  name=\"job_title\"\n+                  value={state.job_title || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  className={\n+                    errors.job_title\n+                      ? \"form-control border border-danger\"\n+                      : \"form-control\"\n+                  }\n+                  placeholder=\"Job Title\"\n+                  id=\"job_title\"\n+                />\n+                {/*----ERROR MESSAGE FOR job_title----*/}\n+                {errors.job_title && (\n+                  <span className=\"text-danger font-size-3\">\n+                    {errors.job_title}\n+                  </span>\n+                )}\n+              </div>\n+              {user_type !== \"admin\" ||\n+                location.pathname === \"/adminclient\" ||\n+                location.pathname === \"/dashboard\" ? null : (\n+                <div className=\"form-group col-md-4 px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"job_category_id\"\n+                    className=\"font-size-4 text-black-2  line-height-reset\"\n+                  >\n+                    Client:<span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"company_id\"\n+                      value={state.company_id || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.company_id\n+                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                          : \"text-capitalize form-control position-relative overflow-hidden\"\n+                      }\n+                      placeholder=\"Client's name\"\n+                      id=\"company_id\"\n+                    >\n+                      <option value={\"\"}>Select Client</option>\n+                      {(Company || []).map((com) =>\n+                        com.company_name === null ? null : (\n+                          <option key={com.company_id} value={com.company_id}>\n+                            {com.company_name}\n+                          </option>\n+                        )\n+                      )}\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR COMPANY----*/}\n+                  {errors.company_id && (\n+                    <span\n+                      key={errors.company_id}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.company_id}\n+                    </span>\n+                  )}\n+\n+                  {/* <div\n+                   className={\"form-group col-md-4 d-flex\"}\n+                   style={{ position: \"relative\" }}\n+                 >\n+                   <label\n+                     htmlFor=\"reffer_by\"\n+                     className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                   >\n+                     Company:<span className=\"text-danger\"> *</span>\n+                   </label>\n+                   <Select\n+                     options={\"\" || company}\n+                     name=\"company_id\"\n+                     id=\"company_id\"\n+                     onChange={onSelectChange}\n+                     className={\n+                       errors.company_id\n+                         ? \"form-control border border-danger px-0 pt-4 \"\n+                         : \"form-control px-0 pt-4 border-0\"\n+                     }\n+                   /> */}\n+                </div>\n+              )}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"employement\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Operating Name:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    name=\"employement\"\n+                    value={state.employement || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.employement\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Operating Name\"\n+                    id=\"employement\"\n+                  />\n+                  {/* <option value={\"\"}>Select Employment</option>\n+                    {(FilterJson.employement || []).map((employement, i) => (\n+                      <option key={i} value={employement}>\n+                        {employement}\n+                      </option>\n+                    ))}\n+                  </select> */}\n+                </div>\n+                {/*----ERROR MESSAGE FOR employement----*/}\n+                {errors.employement && (\n+                  <span\n+                    key={errors.employement}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.employement}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_category_id\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Category:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"job_category_id\"\n+                    value={state.job_category_id || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.job_category_id\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Job category\"\n+                    id=\"job_category_id\"\n+                  >\n+                    <option value={\"\"}>Select Category</option>\n+                    {(Json.Category || []).map((cat) =>\n+                      cat.value === null ? null : (\n+                        <option key={cat.id} value={cat.id}>\n+                          {cat.value}\n+                        </option>\n+                      )\n+                    )}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_category_id----*/}\n+                {errors.job_category_id && (\n+                  <span className=\"text-danger font-size-3\">\n+                    {errors.job_category_id}\n+                  </span>\n+                )}\n+              </div>\n+              {/* <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"industry_type\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Industry Type:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"industry_type\"\n+                    value={state.industry_type || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.industry_type\n+                        ? \"text-capitalize form-control border border-danger\"\n+                        : \"text-capitalize form-control\"\n+                    }\n+                    id=\"industry_type\"\n+                  >\n+                    <option value={\"\"}>Select industry</option>\n+                    {(Json.Industry || []).map((industry) => (\n+                      <option key={industry.id} value={industry.value}>\n+                        {industry.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  ----ERROR MESSAGE FOR industry_type----\n+                  {errors.industry_type && (\n+                    <span\n+                      key={errors.industry_type}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.industry_type}\n+                    </span>\n+                  )}\n+                </div>\n+              </div> */}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"experience_required\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Experience Required:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"experience_required\"\n+                    value={state.experience_required || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.experience_required\n+                        ? \"form-control text-capitalize border border-danger\"\n+                        : \"form-control text-capitalize\"\n+                    }\n+                    placeholder=\"Experience\"\n+                    id=\"experience_required\"\n+                  >\n+                    <option value={\"\"}>Select Experience</option>\n+                    {(FilterJson.experience || []).map((exp, i) => (\n+                      <option key={i} value={exp}>\n+                        {exp}\n+                        {exp === \"fresher\" || exp === \"Other\" ? \"\" : \"Years\"}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR experience_required----*/}\n+                  {errors.experience_required && (\n+                    <span\n+                      key={errors.experience_required}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.experience_required}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"salary\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Per hour wage ($CAD):\n+                </label>\n+                <input\n+                  maxLength={10}\n+                  name=\"salary\"\n+                  value={state.salary || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  min={0}\n+                  className={\n+                    errors.salary\n+                      ? \"form-control text-capitalize border border-danger\"\n+                      : \"form-control text-capitalize\"\n+                  }\n+                  placeholder=\"$\"\n+                  id=\"salary\"\n+                />\n+                {/*----ERROR MESSAGE FOR salary----*/}\n+                {errors.salary && (\n+                  <span key={errors.salary} className=\"text-danger font-size-3\">\n+                    {errors.salary}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"location\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  State:<span className=\"text-danger\">*</span>\n+                </label>\n+                <select\n+                  name=\"location\"\n+                  value={state.location || \"\"}\n+                  onChange={onInputChange}\n+                  type=\"text\"\n+                  className={\n+                    errors.location\n+                      ? \"form-control text-capitalize border border-danger\"\n+                      : \"form-control text-capitalize\"\n+                  }\n+                  placeholder=\"Location\"\n+                  id=\"location\"\n+                >\n+                  <option value={\"\"}>Select State</option>\n+                  {(Object.keys(states) || []).map((state, i) => (\n+                    <option key={i} value={state}>\n+                      {state}\n+                    </option>\n+                  ))}\n+                </select>\n+                {/* // *----ERROR MESSAGE FOR location---- */}\n+                {errors.location && (\n+                  <span\n+                    key={errors.location}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.location}\n+                  </span>\n+                )}\n+              </div>\n+\n+              {state.location && (\n+                <div className=\"form-group col-md-4 px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"industry_type\"\n+                    className=\"font-size-4 text-black-2  line-height-reset \"\n+                  >\n+                    City:\n+                  </label>\n+                  <select\n+                    name=\"industry_type\"\n+                    value={state.industry_type}\n+                    onChange={onInputChange}\n+                    type=\"text\"\n+                    className=\"form-control text-capitalize\"\n+                    placeholder=\"City\"\n+                    id=\"industry_type\"\n+                  >\n+                    <option value={\"\"}>Select City</option>\n+                    {(states[state.location] || []).map((city, i) => (\n+                      <option key={i} value={city}>\n+                        {city}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+              )}\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"apply_link\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Apply Link / Email:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"text\"\n+                    maxLength={60}\n+                    name=\"apply_link\"\n+                    value={state.apply_link || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.apply_link\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"Apply link\"\n+                    id=\"apply_link\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR apply_link----*/}\n+                  {errors.apply_link && (\n+                    <span\n+                      key={errors.apply_link}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.apply_link}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_description\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Job Description:\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"12\"\n+                  // className={\n+                  //   errors.job_description\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* <CKEditor\n+                      type={\"classic\"}\n+                      name=\"job_description\"\n+                      row={6}\n+                      id={\"job_description\"}\n+                      data={state.job_description}\n+                      value={state.job_description}\n+                   onChange={onInputChange}\n+                      initData=\"Job Description\"\n+                    /> */}\n+                    {/* <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Job Description\"\n+                      name=\"job_description\"\n+                      value={state.job_description || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.job_description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"job_description\"\n+                    ></textarea> */}\n+                    {/* <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      page={\"jobDescription\"}\n+                      identifier={\"unique_identifier_1\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    /> */}\n+                    {/* <FroalaEditor\n+                      model={state.job_description}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, job_description: newContent })\n+                      }\n+                      className={\n+                        errors.job_description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                  {errors.job_description && (\n+                    <span\n+                      key={errors.job_description}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.job_description}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"your_duties\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Full Address :\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"6\"\n+                  // className={\n+                  //   errors.your_duties\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* //    <CKEditor\n+                  //     type={\"classic\"}\n+                  //     name=\"your_duties\"\n+                  //     id={\"your_duties\"}\n+                  //     data={state.your_duties}\n+                  //     value={state.your_duties}\n+                  //  onChange={onInputChange}\n+                  //     initData=\"your duties\"\n+                  //   />  */}\n+                    <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Full Address\"\n+                      name=\"your_duties\"\n+                      value={state.your_duties || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.your_duties\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"your_duties\"\n+                    ></textarea>\n+                    {/* <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      identifier={\"unique_identifier_2\"}\n+                      page={\"yourDuties\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    /> */}\n+                    {/* <FroalaEditor\n+                      model={state.your_duties}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, your_duties: newContent })\n+                      }\n+                      className={\n+                        errors.your_duties\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                  </div>\n+                  {/* //----ERROR MESSAGE FOR DESRIPTION----* */}\n+                  {errors.your_duties && (\n+                    <span\n+                      key={errors.your_duties}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.your_duties}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"requirement\"\n+                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  style={{ top: \"-12px\" }}\n+                >\n+                  Requirement:\n+                </label>\n+                <div>\n+                  <div\n+                    sm=\"6\"\n+                  // className={\n+                  //   errors.requirement\n+                  //     ? \"border border-danger rounded overflow-hidden\"\n+                  //     : \"border rounded overflow-hidden\"\n+                  // }\n+                  >\n+                    {/* <CKEditor\n+                      type={\"classic\"}\n+                      name=\"requirement\"\n+                      id={\"requirement\"}\n+                      data={state.requirement}\n+                      value={state.requirement}\n+                      onChange={onInputChange}\n+                      initData=\"Add Requirement\"\n+                    /> */}\n+                    {/* <FroalaEditor\n+                      model={state.requirement}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, requirement: newContent })\n+                      }\n+                      className={\n+                        errors.requirement\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                    {/* <textarea\n+                      maxLength={5000}\n+                      placeholder=\"Requirements\"\n+                      name=\"requirement\"\n+                      value={state.requirement || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.requirement\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"requirement\"\n+                    ></textarea> */}\n+                    <TextEditor\n+                      setState={setState}\n+                      state={state}\n+                      identifier={\"unique_identifier_3\"}\n+                      page={\"requirement\"}\n+                    //variable name at the place of page becoz it has 2 text area feilds\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                  {errors.requirement && (\n+                    <span\n+                      key={errors.requirement}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.requirement}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"role_category\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  No. Of Vacancies:<span className=\"text-danger\">*</span>\n+                </label>\n+\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"number\"\n+                    min={0}\n+                    name=\"role_category\"\n+                    value={state.role_category || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.role_category\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"Vacancies\"\n+                    id=\"role_category\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR role_category----*/}\n+                  {errors.role_category && (\n+                    <span\n+                      key={errors.role_category}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.role_category}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"department\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  NOC Code:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type=\"number\"\n+                    maxLength={20}\n+                    name=\"department\"\n+                    value={state.department || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.department\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"NOC Code\"\n+                    id=\"department\"\n+                    min={0}\n+                  />\n+                  {/*----ERROR MESSAGE FOR department----*/}\n+                  {errors.department && (\n+                    <span\n+                      key={errors.department}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.department}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"job_type\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Job Type:<span className=\"text-danger\"> *</span>\n+                </label>\n+                <div className={\" position-relative\"}>\n+                  <select\n+                    placeholder=\"Apply job_type\"\n+                    id=\"job_type\"\n+                    name=\"job_type\"\n+                    value={state.job_type || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.job_type\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                  >\n+                    <option value={\"\"}>Select Job Type</option>\n+                    {(FilterJson.job_type || []).map((job_type) => (\n+                      <option key={job_type} value={job_type}>\n+                        {job_type}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_type----*/}\n+                {errors.job_type && (\n+                  <span\n+                    key={errors.job_type}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.job_type}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"education\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Education:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"education\"\n+                    value={state.education || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.education\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Apply education\"\n+                    id=\"education\"\n+                  >\n+                    <option value={\"\"}>Select Education</option>\n+                    {(Json.Education || []).map((education) => (\n+                      <option key={education.id} value={education.value}>\n+                        {education.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                </div>\n+                {/*----ERROR MESSAGE FOR job_type----*/}\n+                {errors.Education && (\n+                  <span\n+                    key={errors.Education}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.Education}\n+                  </span>\n+                )}\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"language\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Language:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"language\"\n+                    value={state.language || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.language\n+                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                        : \"text-capitalize form-control position-relative overflow-hidden\"\n+                    }\n+                    placeholder=\"Language\"\n+                    id=\"language\"\n+                  >\n+                    <option value={\"\"}>Select Language</option>\n+                    {(Json.Language || []).map((Language) => (\n+                      <option key={Language.id} value={Language.value}>\n+                        {Language.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR language----*/}\n+                  {errors.language && (\n+                    <span\n+                      key={errors.language}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.language}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+              <div className=\"form-group col-md-4 px-0 pr-3\">\n+                <label\n+                  htmlFor=\"keyskill\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Key Skill:\n+                </label>\n+                <div className=\"position-relative\">\n+                  <select\n+                    name=\"keyskill\"\n+                    value={state.keyskill || \"\"}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.keyskill\n+                        ? \"text-capitalize form-control border border-danger\"\n+                        : \"text-capitalize form-control\"\n+                    }\n+                    id=\"keyskill\"\n+                  >\n+                    <option value={\"\"}>Select Skill</option>\n+                    {(Json.Skill || []).map((data) => (\n+                      <option key={data.id} value={data.value}>\n+                        {data.value}\n+                      </option>\n+                    ))}\n+                  </select>\n+                  {/*----ERROR MESSAGE FOR keyskill----*/}\n+                  {errors.keyskill && (\n+                    <span\n+                      key={errors.keyskill}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.keyskill}\n+                    </span>\n+                  )}\n+                </div>\n+              </div>\n+\n+              {user_type === \"admin\" ? (\n+                <div className=\"form-group col-md-4\">\n+                  <label\n+                    htmlFor=\"fetured\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Featured:{\" \"}\n+                    <input\n+                      type=\"checkbox\"\n+                      id=\"fetured\"\n+                      name=\"fetured\"\n+                      checked={state.is_featured === \"1\"}\n+                      value={state.is_featured}\n+                      onChange={(e) =>\n+                        setState({\n+                          ...state,\n+                          is_featured:\n+                            state.is_featured === \"\" ||\n+                              state.is_featured === \"0\"\n+                              ? \"1\"\n+                              : \"0\",\n+                        })\n+                      }\n+                    />\n+                  </label>\n+                </div>\n+              ) : null}\n+            </div>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\">\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default AddJobModal;\n"
                },
                {
                    "date": 1709640095361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -690,9 +690,9 @@\n                       value={state.job_description}\n                    onChange={onInputChange}\n                       initData=\"Job Description\"\n                     /> */}\n-                    {/* <textarea\n+                    <textarea\n                       maxLength={5000}\n                       placeholder=\"Job Description\"\n                       name=\"job_description\"\n                       value={state.job_description || \"\"}\n@@ -702,9 +702,9 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                       id=\"job_description\"\n-                    ></textarea> */}\n+                    ></textarea>\n                     {/* <TextEditor\n                       setState={setState}\n                       state={state}\n                       page={\"jobDescription\"}\n"
                },
                {
                    "date": 1709640635541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -690,9 +690,9 @@\n                       value={state.job_description}\n                    onChange={onInputChange}\n                       initData=\"Job Description\"\n                     /> */}\n-                    <textarea\n+                    {/* <textarea\n                       maxLength={5000}\n                       placeholder=\"Job Description\"\n                       name=\"job_description\"\n                       value={state.job_description || \"\"}\n@@ -702,16 +702,16 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                       id=\"job_description\"\n-                    ></textarea>\n-                    {/* <TextEditor\n+                    ></textarea> */}\n+                    <TextEditor\n                       setState={setState}\n                       state={state}\n                       page={\"jobDescription\"}\n                       identifier={\"unique_identifier_1\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n-                    /> */}\n+                    />\n                     {/* <FroalaEditor\n                       model={state.job_description}\n                       onModelChange={(newContent) =>\n                         setState({ ...state, job_description: newContent })\n@@ -759,9 +759,9 @@\n                   //     value={state.your_duties}\n                   //  onChange={onInputChange}\n                   //     initData=\"your duties\"\n                   //   />  */}\n-                    <textarea\n+                    {/* <textarea\n                       maxLength={5000}\n                       placeholder=\"Full Address\"\n                       name=\"your_duties\"\n                       value={state.your_duties || \"\"}\n@@ -771,16 +771,16 @@\n                           ? \"form-control border border-danger\"\n                           : \"form-control\"\n                       }\n                       id=\"your_duties\"\n-                    ></textarea>\n-                    {/* <TextEditor\n+                    ></textarea> */}\n+                    <TextEditor\n                       setState={setState}\n                       state={state}\n                       identifier={\"unique_identifier_2\"}\n                       page={\"yourDuties\"}\n                     //variable name at the place of page becoz it has 2 text area feilds\n-                    /> */}\n+                    />\n                     {/* <FroalaEditor\n                       model={state.your_duties}\n                       onModelChange={(newContent) =>\n                         setState({ ...state, your_duties: newContent })\n"
                }
            ],
            "date": 1709537126206,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n// import { CKEditor } from \"ckeditor4-react\";\nimport useValidation from \"../../common/useValidation\";\nimport FilterJson from \"./../../json/filterjson\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { GetJob, AddJob, getAllEmployer, GetFilter } from \"../../../api/api\";\nimport { useLocation } from \"react-router-dom\";\nimport states from \"../../json/states\";\nimport TextEditor from \"../../common/TextEditor\";\n// import FroalaEditor from \"react-froala-wysiwyg\";\n// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n// import \"froala-editor/css/froala_style.min.css\";\n// import \"froala-editor/js/plugins.pkgd.min.js\";\n// import Select from \"react-select\";\nfunction AddJobModal(props) {\n  const [company, setCompany] = useState([]);\n  const [loading, setLoading] = useState(false);\n  let token = localStorage.getItem(\"token\");\n  const company_id =\n    props.jobdata === \"0\"\n      ? \"\"\n      : props.company_id\n        ? props.company_id\n        : localStorage.getItem(\"company_id\");\n  let location = useLocation();\n  const user_type = localStorage.getItem(\"userType\");\n  let [Json, setJson] = useState([]);\n  /*Function to get the jSon */\n  const JsonData = async () => {\n    try {\n      let Json = await GetFilter();\n      if (Json.data.message === \"No data found\") {\n        setJson([]);\n      } else {\n        setJson(Json.data.data);\n      }\n      setJson(Json.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setLoading(false);\n    props.close();\n  };\n  // CKEDITOR\n  // ClassicEditor.defaultConfig = {\n  //   toolbar: {\n  //     items: [\n  //       \"heading\",\n  //       \"|\",\n  //       \"bold\",\n  //       \"italic\",\n  //       \"|\",\n  //       \"bulletedList\",\n  //       \"numberedList\",\n  //       \"|\",\n  //       \"insertTable\",\n  //       \"|\",\n  //       \"undo\",\n  //       \"redo\",\n  //     ],\n  //   },\n  //   table: {\n  //     contentToolbar: [\"tableColumn\", \"tableRow\", \"mergeTableCells\"],\n  //   },\n  //   language: \"en\",\n  // };\n  // ADD JOBS VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    job_title: \"\",\n    experience_required: \"\",\n    salary: \"\",\n    location: \"\",\n    industry_type: \"\",\n    apply_link: \"\",\n    job_description: \"\",\n    your_duties: \"\",\n    requirement: \"\",\n    department: \"\",\n    job_type: \"\",\n    role_category: \"\",\n    education: \"\",\n    language: \"\",\n    keyskill: \"\",\n    employement: \"\",\n    job_category_id: \"\",\n    is_featured: \"\",\n    company_id: company_id ? company_id : \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    job_title: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Job Title is required\"\n          : value.length < 2\n            ? \"Job Title should have 2 or more letters\"\n            : /[-]?\\d+(\\.\\d+)?/.test(value)\n              ? \"Job Title can not have a number.\"\n              : \"\",\n    ],\n    experience_required: [\n      (value) => (value === \"\" ? \"Experienceis required\" : null),\n    ],\n    location: [\n      (value) =>\n        value === \"\" || value.trim() === \"\" ? \"Location is required\" : null,\n    ],\n    apply_link: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Apply link is required\"\n          : !/(^|\\s)((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)|([^\\s@]+@[^\\s@]+\\.[^\\s@]+)/gi.test(\n            value\n          )\n            ? \"Write the correct link or email\"\n            : value.length < 3\n              ? \"Apply link should have 3 or more letters\"\n              : null,\n    ],\n    job_type: [\n      (value) =>\n        value === \"\" || value.trim() === \"\" ? \"Job Type is required\" : null,\n    ],\n    role_category: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"No of vacancies is required\"\n          : null,\n    ],\n    job_category_id: [\n      (value) =>\n        value === \"\" || value.trim() === \"\" ? \"Job category is required\" : null,\n    ],\n    company_id: [(value) => (value === \"\" ? \"Client is required\" : null)],\n    salary: [\n      (value) =>\n        /^\\d*\\.?\\d*$/.test(value) ? \"\" : \"Salary can not have a characters\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setErrors, setState, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n  // API CALL\n  const JobData = async () => {\n    try {\n      let userData = await GetJob(props.jobdata);\n      if (\n        props.jobdata === undefined ||\n        props.jobdata === \"0\" ||\n        props.jobdata.length === 0 ||\n        state === undefined ||\n        userData.data.data.length === 0\n      ) {\n        setState(initialFormState);\n      } else {\n        setState(userData.data.data[0]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /* Function to get Employer data*/\n  const CompnayData = async () => {\n    try {\n      const userData = await getAllEmployer();\n      if (userData.data.length === 0) {\n        setCompany([]);\n      } else {\n        setCompany(userData.data);\n        // if (Array.isArray(userData.data)) {\n        //   const options = userData.data.map((option) => ({\n        //     value: option.company_id,\n        //     label: option.company_name,\n        //   }));\n        //   setCompany(options);\n        // }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    if (user_type === \"admin\" && props.admin === \"admin\") {\n      CompnayData();\n    }\n    if (token) {\n      JsonData();\n    }\n    if (\n      props.jobdata === \"0\" ||\n      props.jobdata === undefined ||\n      props.jobdata.length === 0 ||\n      state === undefined\n    ) {\n      setState(initialFormState);\n    } else {\n      JobData();\n    }\n  }, [props]);\n  // ADD JOBS SUBMIT BUTTON\n  const onAddJobsClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        let responseData = await AddJob(state);\n        if (responseData.message === \"job data inserted successfully\") {\n          toast.success(\"Job Added successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          if (props.job_page) {\n            props.setDetailApiCall(true);\n          }\n          return close();\n        }\n        if (responseData.message === \"Failed to insert job data\") {\n          toast.error(\"No Mangr found\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          if (props.job_page) {\n            props.setDetailApiCall(true);\n          }\n          return close();\n        }\n\n        if (responseData.message === \"job data updated successfully\") {\n          toast.success(\"Job Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          if (props.job_page) {\n            props.setDetailApiCall(true);\n          }\n          return close();\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n\n  // END ADD JOBS VALIDATION\n  /*Company type array to filter*/\n  const Company = company.filter(\n    (thing, index, self) =>\n      index === self.findIndex((t) => t.company_name === thing.company_name)\n  );\n  /*Function to set data to the search job by country */\n  // const onSelectChange = (option) => {\n  //   setState({ ...state, company_id: option.value });\n  // };\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <div className=\"bg-white rounded h-100 px-md-11 px-6 pt-7 overflow-y-hidden\">\n          <form onSubmit={onAddJobsClick}>\n            {props.jobdata === \"0\" || location.pathname === \"/adminclient\" ? (\n              <h5 className=\"text-center pt-2 mb-7\">Add Jobs</h5>\n            ) : (\n              <h5 className=\"text-center pt-2 mb-7\">Update Jobs</h5>\n            )}\n\n            <div className=\"row \">\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"job_title\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Job Title:<span className=\"text-danger\"> *</span>\n                </label>\n                <input\n                  maxLength={300}\n                  name=\"job_title\"\n                  value={state.job_title || \"\"}\n                  onChange={onInputChange}\n                  type=\"text\"\n                  className={\n                    errors.job_title\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Job Title\"\n                  id=\"job_title\"\n                />\n                {/*----ERROR MESSAGE FOR job_title----*/}\n                {errors.job_title && (\n                  <span className=\"text-danger font-size-3\">\n                    {errors.job_title}\n                  </span>\n                )}\n              </div>\n              {user_type !== \"admin\" ||\n                location.pathname === \"/adminclient\" ||\n                location.pathname === \"/dashboard\" ? null : (\n                <div className=\"form-group col-md-4 px-0 pr-3\">\n                  <label\n                    htmlFor=\"job_category_id\"\n                    className=\"font-size-4 text-black-2  line-height-reset\"\n                  >\n                    Client:<span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"position-relative\">\n                    <select\n                      name=\"company_id\"\n                      value={state.company_id || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.company_id\n                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                          : \"text-capitalize form-control position-relative overflow-hidden\"\n                      }\n                      placeholder=\"Client's name\"\n                      id=\"company_id\"\n                    >\n                      <option value={\"\"}>Select Client</option>\n                      {(Company || []).map((com) =>\n                        com.company_name === null ? null : (\n                          <option key={com.company_id} value={com.company_id}>\n                            {com.company_name}\n                          </option>\n                        )\n                      )}\n                    </select>\n                  </div>\n                  {/*----ERROR MESSAGE FOR COMPANY----*/}\n                  {errors.company_id && (\n                    <span\n                      key={errors.company_id}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.company_id}\n                    </span>\n                  )}\n\n                  {/* <div\n                   className={\"form-group col-md-4 d-flex\"}\n                   style={{ position: \"relative\" }}\n                 >\n                   <label\n                     htmlFor=\"reffer_by\"\n                     className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                   >\n                     Company:<span className=\"text-danger\"> *</span>\n                   </label>\n                   <Select\n                     options={\"\" || company}\n                     name=\"company_id\"\n                     id=\"company_id\"\n                     onChange={onSelectChange}\n                     className={\n                       errors.company_id\n                         ? \"form-control border border-danger px-0 pt-4 \"\n                         : \"form-control px-0 pt-4 border-0\"\n                     }\n                   /> */}\n                </div>\n              )}\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"employement\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Operating Name:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    name=\"employement\"\n                    value={state.employement || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.employement\n                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                        : \"text-capitalize form-control position-relative overflow-hidden\"\n                    }\n                    placeholder=\"Operating Name\"\n                    id=\"employement\"\n                  />\n                  {/* <option value={\"\"}>Select Employment</option>\n                    {(FilterJson.employement || []).map((employement, i) => (\n                      <option key={i} value={employement}>\n                        {employement}\n                      </option>\n                    ))}\n                  </select> */}\n                </div>\n                {/*----ERROR MESSAGE FOR employement----*/}\n                {errors.employement && (\n                  <span\n                    key={errors.employement}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.employement}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"job_category_id\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Job Category:<span className=\"text-danger\"> *</span>\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"job_category_id\"\n                    value={state.job_category_id || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.job_category_id\n                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                        : \"text-capitalize form-control position-relative overflow-hidden\"\n                    }\n                    placeholder=\"Job category\"\n                    id=\"job_category_id\"\n                  >\n                    <option value={\"\"}>Select Category</option>\n                    {(Json.Category || []).map((cat) =>\n                      cat.value === null ? null : (\n                        <option key={cat.id} value={cat.id}>\n                          {cat.value}\n                        </option>\n                      )\n                    )}\n                  </select>\n                </div>\n                {/*----ERROR MESSAGE FOR job_category_id----*/}\n                {errors.job_category_id && (\n                  <span className=\"text-danger font-size-3\">\n                    {errors.job_category_id}\n                  </span>\n                )}\n              </div>\n              {/* <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"industry_type\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Industry Type:\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"industry_type\"\n                    value={state.industry_type || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.industry_type\n                        ? \"text-capitalize form-control border border-danger\"\n                        : \"text-capitalize form-control\"\n                    }\n                    id=\"industry_type\"\n                  >\n                    <option value={\"\"}>Select industry</option>\n                    {(Json.Industry || []).map((industry) => (\n                      <option key={industry.id} value={industry.value}>\n                        {industry.value}\n                      </option>\n                    ))}\n                  </select>\n                  ----ERROR MESSAGE FOR industry_type----\n                  {errors.industry_type && (\n                    <span\n                      key={errors.industry_type}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.industry_type}\n                    </span>\n                  )}\n                </div>\n              </div> */}\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"experience_required\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Experience Required:<span className=\"text-danger\"> *</span>\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"experience_required\"\n                    value={state.experience_required || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.experience_required\n                        ? \"form-control text-capitalize border border-danger\"\n                        : \"form-control text-capitalize\"\n                    }\n                    placeholder=\"Experience\"\n                    id=\"experience_required\"\n                  >\n                    <option value={\"\"}>Select Experience</option>\n                    {(FilterJson.experience || []).map((exp, i) => (\n                      <option key={i} value={exp}>\n                        {exp}\n                        {exp === \"fresher\" || exp === \"Other\" ? \"\" : \"Years\"}\n                      </option>\n                    ))}\n                  </select>\n                  {/*----ERROR MESSAGE FOR experience_required----*/}\n                  {errors.experience_required && (\n                    <span\n                      key={errors.experience_required}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.experience_required}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"salary\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Per hour wage ($CAD):\n                </label>\n                <input\n                  maxLength={10}\n                  name=\"salary\"\n                  value={state.salary || \"\"}\n                  onChange={onInputChange}\n                  type=\"text\"\n                  min={0}\n                  className={\n                    errors.salary\n                      ? \"form-control text-capitalize border border-danger\"\n                      : \"form-control text-capitalize\"\n                  }\n                  placeholder=\"$\"\n                  id=\"salary\"\n                />\n                {/*----ERROR MESSAGE FOR salary----*/}\n                {errors.salary && (\n                  <span key={errors.salary} className=\"text-danger font-size-3\">\n                    {errors.salary}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"location\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  State:<span className=\"text-danger\">*</span>\n                </label>\n                <select\n                  name=\"location\"\n                  value={state.location || \"\"}\n                  onChange={onInputChange}\n                  type=\"text\"\n                  className={\n                    errors.location\n                      ? \"form-control text-capitalize border border-danger\"\n                      : \"form-control text-capitalize\"\n                  }\n                  placeholder=\"Location\"\n                  id=\"location\"\n                >\n                  <option value={\"\"}>Select State</option>\n                  {(Object.keys(states) || []).map((state, i) => (\n                    <option key={i} value={state}>\n                      {state}\n                    </option>\n                  ))}\n                </select>\n                {/* // *----ERROR MESSAGE FOR location---- */}\n                {errors.location && (\n                  <span\n                    key={errors.location}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.location}\n                  </span>\n                )}\n              </div>\n\n              {state.location && (\n                <div className=\"form-group col-md-4 px-0 pr-3\">\n                  <label\n                    htmlFor=\"industry_type\"\n                    className=\"font-size-4 text-black-2  line-height-reset \"\n                  >\n                    City:\n                  </label>\n                  <select\n                    name=\"industry_type\"\n                    value={state.industry_type}\n                    onChange={onInputChange}\n                    type=\"text\"\n                    className=\"form-control text-capitalize\"\n                    placeholder=\"City\"\n                    id=\"industry_type\"\n                  >\n                    <option value={\"\"}>Select City</option>\n                    {(states[state.location] || []).map((city, i) => (\n                      <option key={i} value={city}>\n                        {city}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"apply_link\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Apply Link / Email:<span className=\"text-danger\"> *</span>\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type=\"text\"\n                    maxLength={60}\n                    name=\"apply_link\"\n                    value={state.apply_link || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.apply_link\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"Apply link\"\n                    id=\"apply_link\"\n                  />\n                  {/*----ERROR MESSAGE FOR apply_link----*/}\n                  {errors.apply_link && (\n                    <span\n                      key={errors.apply_link}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.apply_link}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"job_description\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  style={{ top: \"-12px\" }}\n                >\n                  Job Description:\n                </label>\n                <div>\n                  <div\n                    sm=\"12\"\n                  // className={\n                  //   errors.job_description\n                  //     ? \"border border-danger rounded overflow-hidden\"\n                  //     : \"border rounded overflow-hidden\"\n                  // }\n                  >\n                    {/* <CKEditor\n                      type={\"classic\"}\n                      name=\"job_description\"\n                      row={6}\n                      id={\"job_description\"}\n                      data={state.job_description}\n                      value={state.job_description}\n                   onChange={onInputChange}\n                      initData=\"Job Description\"\n                    /> */}\n                    {/* <textarea\n                      maxLength={5000}\n                      placeholder=\"Job Description\"\n                      name=\"job_description\"\n                      value={state.job_description || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.job_description\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"job_description\"\n                    ></textarea> */}\n                    <TextEditor\n                      setState={setState}\n                      state={state}\n                      page={\"jobDescription\"}\n                    //variable name at the place of page becoz it has 2 text area feilds\n                    />\n                    {/* <FroalaEditor\n                      model={state.job_description}\n                      onModelChange={(newContent) =>\n                        setState({ ...state, job_description: newContent })\n                      }\n                      className={\n                        errors.job_description\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    /> */}\n                  </div>\n                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                  {errors.job_description && (\n                    <span\n                      key={errors.job_description}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.job_description}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"your_duties\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  style={{ top: \"-12px\" }}\n                >\n                  Full Address :\n                </label>\n                <div>\n                  <div\n                    sm=\"6\"\n                  // className={\n                  //   errors.your_duties\n                  //     ? \"border border-danger rounded overflow-hidden\"\n                  //     : \"border rounded overflow-hidden\"\n                  // }\n                  >\n                    {/* //    <CKEditor\n                  //     type={\"classic\"}\n                  //     name=\"your_duties\"\n                  //     id={\"your_duties\"}\n                  //     data={state.your_duties}\n                  //     value={state.your_duties}\n                  //  onChange={onInputChange}\n                  //     initData=\"your duties\"\n                  //   />  */}\n                    {/* <textarea\n                      maxLength={5000}\n                      placeholder=\"Full Address\"\n                      name=\"your_duties\"\n                      value={state.your_duties || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.your_duties\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"your_duties\"\n                    ></textarea> */}\n                    <TextEditor\n                      setState={setState}\n                      state={state}\n                      page={\"yourDuties\"}\n                    //variable name at the place of page becoz it has 2 text area feilds\n                    />\n                    {/* <FroalaEditor\n                      model={state.your_duties}\n                      onModelChange={(newContent) =>\n                        setState({ ...state, your_duties: newContent })\n                      }\n                      className={\n                        errors.your_duties\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    /> */}\n                  </div>\n                  {/* //----ERROR MESSAGE FOR DESRIPTION----* */}\n                  {errors.your_duties && (\n                    <span\n                      key={errors.your_duties}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.your_duties}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"requirement\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  style={{ top: \"-12px\" }}\n                >\n                  Requirement:\n                </label>\n                <div>\n                  <div\n                    sm=\"6\"\n                  // className={\n                  //   errors.requirement\n                  //     ? \"border border-danger rounded overflow-hidden\"\n                  //     : \"border rounded overflow-hidden\"\n                  // }\n                  >\n                    {/* <CKEditor\n                      type={\"classic\"}\n                      name=\"requirement\"\n                      id={\"requirement\"}\n                      data={state.requirement}\n                      value={state.requirement}\n                      onChange={onInputChange}\n                      initData=\"Add Requirement\"\n                    /> */}\n                    {/* <FroalaEditor\n                      model={state.requirement}\n                      onModelChange={(newContent) =>\n                        setState({ ...state, requirement: newContent })\n                      }\n                      className={\n                        errors.requirement\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    /> */}\n                    {/* <textarea\n                      maxLength={5000}\n                      placeholder=\"Requirements\"\n                      name=\"requirement\"\n                      value={state.requirement || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.requirement\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"requirement\"\n                    ></textarea> */}\n                    <TextEditor\n                      setState={setState}\n                      state={state}\n                      page={\"requirement\"}\n                    //variable name at the place of page becoz it has 2 text area feilds\n                    />\n                  </div>\n                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                  {errors.requirement && (\n                    <span\n                      key={errors.requirement}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.requirement}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"role_category\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  No. Of Vacancies:<span className=\"text-danger\">*</span>\n                </label>\n\n                <div className=\"position-relative\">\n                  <input\n                    type=\"number\"\n                    min={0}\n                    name=\"role_category\"\n                    value={state.role_category || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.role_category\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"Vacancies\"\n                    id=\"role_category\"\n                  />\n                  {/*----ERROR MESSAGE FOR role_category----*/}\n                  {errors.role_category && (\n                    <span\n                      key={errors.role_category}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.role_category}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"department\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  NOC Code:\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type=\"number\"\n                    maxLength={20}\n                    name=\"department\"\n                    value={state.department || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.department\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"NOC Code\"\n                    id=\"department\"\n                    min={0}\n                  />\n                  {/*----ERROR MESSAGE FOR department----*/}\n                  {errors.department && (\n                    <span\n                      key={errors.department}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.department}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"job_type\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Job Type:<span className=\"text-danger\"> *</span>\n                </label>\n                <div className={\" position-relative\"}>\n                  <select\n                    placeholder=\"Apply job_type\"\n                    id=\"job_type\"\n                    name=\"job_type\"\n                    value={state.job_type || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.job_type\n                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                        : \"text-capitalize form-control position-relative overflow-hidden\"\n                    }\n                  >\n                    <option value={\"\"}>Select Job Type</option>\n                    {(FilterJson.job_type || []).map((job_type) => (\n                      <option key={job_type} value={job_type}>\n                        {job_type}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {/*----ERROR MESSAGE FOR job_type----*/}\n                {errors.job_type && (\n                  <span\n                    key={errors.job_type}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.job_type}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"education\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Education:\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"education\"\n                    value={state.education || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.education\n                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                        : \"text-capitalize form-control position-relative overflow-hidden\"\n                    }\n                    placeholder=\"Apply education\"\n                    id=\"education\"\n                  >\n                    <option value={\"\"}>Select Education</option>\n                    {(Json.Education || []).map((education) => (\n                      <option key={education.id} value={education.value}>\n                        {education.value}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {/*----ERROR MESSAGE FOR job_type----*/}\n                {errors.Education && (\n                  <span\n                    key={errors.Education}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.Education}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"language\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Language:\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"language\"\n                    value={state.language || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.language\n                        ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                        : \"text-capitalize form-control position-relative overflow-hidden\"\n                    }\n                    placeholder=\"Language\"\n                    id=\"language\"\n                  >\n                    <option value={\"\"}>Select Language</option>\n                    {(Json.Language || []).map((Language) => (\n                      <option key={Language.id} value={Language.value}>\n                        {Language.value}\n                      </option>\n                    ))}\n                  </select>\n                  {/*----ERROR MESSAGE FOR language----*/}\n                  {errors.language && (\n                    <span\n                      key={errors.language}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.language}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-4 px-0 pr-3\">\n                <label\n                  htmlFor=\"keyskill\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Key Skill:\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    name=\"keyskill\"\n                    value={state.keyskill || \"\"}\n                    onChange={onInputChange}\n                    className={\n                      errors.keyskill\n                        ? \"text-capitalize form-control border border-danger\"\n                        : \"text-capitalize form-control\"\n                    }\n                    id=\"keyskill\"\n                  >\n                    <option value={\"\"}>Select Skill</option>\n                    {(Json.Skill || []).map((data) => (\n                      <option key={data.id} value={data.value}>\n                        {data.value}\n                      </option>\n                    ))}\n                  </select>\n                  {/*----ERROR MESSAGE FOR keyskill----*/}\n                  {errors.keyskill && (\n                    <span\n                      key={errors.keyskill}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.keyskill}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              {user_type === \"admin\" ? (\n                <div className=\"form-group col-md-4\">\n                  <label\n                    htmlFor=\"fetured\"\n                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                  >\n                    Featured:{\" \"}\n                    <input\n                      type=\"checkbox\"\n                      id=\"fetured\"\n                      name=\"fetured\"\n                      checked={state.is_featured === \"1\"}\n                      value={state.is_featured}\n                      onChange={(e) =>\n                        setState({\n                          ...state,\n                          is_featured:\n                            state.is_featured === \"\" ||\n                              state.is_featured === \"0\"\n                              ? \"1\"\n                              : \"0\",\n                        })\n                      }\n                    />\n                  </label>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"form-group text-center\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\">\n                  Submit\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddJobModal;\n"
        }
    ]
}