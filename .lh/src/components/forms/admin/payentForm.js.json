{
    "sourceFile": "src/components/forms/admin/payentForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1710503309379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710504371982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                 (paymentList || []).map((res, index) => (\r\n                   <div className=\"single_note mb-5\" key={index}>\r\n                     <div className=\"d-flex justify-content-between\">\r\n                       <p className=\"text-italic font-size-3 m-0\">\r\n-                        Payment on:\r\n+                        Payment on:{\" \"}\r\n                         {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n                       </p>\r\n                     </div>\r\n                     <div className=\"card rounded-3 py-2 px-5\">\r\n"
                },
                {
                    "date": 1710926976526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                       <p className=\"fw-bold m-0 row\">\r\n                         <span className=\"col-md-10 col-sm-12 \">\r\n                           {res.payment_mode ? (\r\n                             <>\r\n-                              <span className=\"text-break\">\r\n+                              <span className=\"text-break text-capitalize\">\r\n                                 <b>Payment mode</b>: {res.payment_mode}\r\n                               </span>\r\n                               <br />\r\n                             </>\r\n"
                },
                {
                    "date": 1712052078184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n               setApicall={setApicall}\r\n               user_id={user_id}\r\n               user={user_type}\r\n             />\r\n-          ) : user === \"agent\" ? null : (\r\n+          ) : (\r\n             <AddTransactionForm\r\n               data={data}\r\n               setApicall={setApicall}\r\n               user_id={user_id}\r\n"
                },
                {
                    "date": 1712053225949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import moment from \"moment\";\r\n+import { ToastContainer } from \"react-toastify\";\r\n+// import { useParams } from \"react-router-dom\";\r\n+import { GetPaymentList } from \"../../../api/api\";\r\n+import PayForm from \"./PayForm\";\r\n+// import Loader from \"../../common/loader\";\r\n+import AddTransactionForm from \"./addTransactionForm\";\r\n+export default function PayentForm({ data, user_id, user_type }) {\r\n+  const [apiCall, setApicall] = useState(true);\r\n+  // const [loading, setLoading] = useState(true);\r\n+  const [paymentList, setPaytemList] = useState([]);\r\n+\r\n+  let user = localStorage.getItem(\"userType\");\r\n+\r\n+  /*Function to get Payment list data */\r\n+  const PaymentData = async () => {\r\n+    try {\r\n+      let Response = await GetPaymentList(\r\n+        user_id,\r\n+        user_type,\r\n+        user === \"admin\" ? 1 : 0\r\n+      );\r\n+\r\n+      if (Response.data.data.length === 0) {\r\n+        setPaytemList([]);\r\n+        // setLoading(false);\r\n+      } else {\r\n+        // setLoading(false);\r\n+        setPaytemList(Response.data.data);\r\n+      }\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+      setPaytemList([]);\r\n+      // setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  /*Render method */\r\n+  useEffect(() => {\r\n+    PaymentData();\r\n+    if (apiCall === true) {\r\n+      setApicall(false);\r\n+    }\r\n+  }, [apiCall]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <ToastContainer />\r\n+      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n+        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n+        <div className=\"row\">\r\n+          {\r\n+            // loading ? (\r\n+            //   <Loader load={\"yes\"} />\r\n+            // ) :\r\n+            <div className=\"activity_container col-md-8 border-right\">\r\n+              {paymentList.length === 0 ? (\r\n+                <div className=\"single_note mb-5\">\r\n+                  <div className=\"d-flex justify-content-center\">\r\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n+                  </div>\r\n+                </div>\r\n+              ) : (\r\n+                (paymentList || []).map((res, index) => (\r\n+                  <div className=\"single_note mb-5\" key={index}>\r\n+                    <div className=\"d-flex justify-content-between\">\r\n+                      <p className=\"text-italic font-size-3 m-0\">\r\n+                        Payment on:{\" \"}\r\n+                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n+                      </p>\r\n+                    </div>\r\n+                    <div className=\"card rounded-3 py-2 px-5\">\r\n+                      <p className=\"fw-bold m-0 row\">\r\n+                        <span className=\"col-md-10 col-sm-12 \">\r\n+                          {res.payment_mode ? (\r\n+                            <>\r\n+                              <span className=\"text-break text-capitalize\">\r\n+                                <b>Payment mode</b>: {res.payment_mode}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.payment_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>Payment Id</b>: {res.payment_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.order_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>order Id</b>: {res.order_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.amount ? (\r\n+                            <span>\r\n+                              <b>Total Amount</b>: {res.amount}/-\r\n+                            </span>\r\n+                          ) : null}\r\n+                        </span>\r\n+                        <span className=\"col-md-2 col-sm-12\">\r\n+                          <span\r\n+                            className={`${\r\n+                              res.status === \"success\"\r\n+                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n+                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n+                            }`}\r\n+                          >\r\n+                            {res.status}\r\n+                          </span>\r\n+                        </span>\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              )}\r\n+            </div>\r\n+          }\r\n+          {user === \"user\" || user === \"company\" ? (\r\n+            <PayForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user_type}\r\n+            />\r\n+          ) : user === \"agent\" ? null : (\r\n+            <AddTransactionForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user}\r\n+              user_type={user_type}\r\n+            />\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      {/* </Modal> */}\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712053684441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import PayForm from \"./PayForm\";\r\n // import Loader from \"../../common/loader\";\r\n import AddTransactionForm from \"./addTransactionForm\";\r\n export default function PayentForm({ data, user_id, user_type }) {\r\n+  console.log(user_type)\r\n   const [apiCall, setApicall] = useState(true);\r\n   // const [loading, setLoading] = useState(true);\r\n   const [paymentList, setPaytemList] = useState([]);\r\n \r\n@@ -142,149 +143,4 @@\n       {/* </Modal> */}\r\n     </>\r\n   );\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import moment from \"moment\";\r\n-import { ToastContainer } from \"react-toastify\";\r\n-// import { useParams } from \"react-router-dom\";\r\n-import { GetPaymentList } from \"../../../api/api\";\r\n-import PayForm from \"./PayForm\";\r\n-// import Loader from \"../../common/loader\";\r\n-import AddTransactionForm from \"./addTransactionForm\";\r\n-export default function PayentForm({ data, user_id, user_type }) {\r\n-  const [apiCall, setApicall] = useState(true);\r\n-  // const [loading, setLoading] = useState(true);\r\n-  const [paymentList, setPaytemList] = useState([]);\r\n-\r\n-  let user = localStorage.getItem(\"userType\");\r\n-\r\n-  /*Function to get Payment list data */\r\n-  const PaymentData = async () => {\r\n-    try {\r\n-      let Response = await GetPaymentList(\r\n-        user_id,\r\n-        user_type,\r\n-        user === \"admin\" ? 1 : 0\r\n-      );\r\n-\r\n-      if (Response.data.data.length === 0) {\r\n-        setPaytemList([]);\r\n-        // setLoading(false);\r\n-      } else {\r\n-        // setLoading(false);\r\n-        setPaytemList(Response.data.data);\r\n-      }\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-      setPaytemList([]);\r\n-      // setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  /*Render method */\r\n-  useEffect(() => {\r\n-    PaymentData();\r\n-    if (apiCall === true) {\r\n-      setApicall(false);\r\n-    }\r\n-  }, [apiCall]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <ToastContainer />\r\n-      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n-        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n-        <div className=\"row\">\r\n-          {\r\n-            // loading ? (\r\n-            //   <Loader load={\"yes\"} />\r\n-            // ) :\r\n-            <div className=\"activity_container col-md-8 border-right\">\r\n-              {paymentList.length === 0 ? (\r\n-                <div className=\"single_note mb-5\">\r\n-                  <div className=\"d-flex justify-content-center\">\r\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n-                  </div>\r\n-                </div>\r\n-              ) : (\r\n-                (paymentList || []).map((res, index) => (\r\n-                  <div className=\"single_note mb-5\" key={index}>\r\n-                    <div className=\"d-flex justify-content-between\">\r\n-                      <p className=\"text-italic font-size-3 m-0\">\r\n-                        Payment on:{\" \"}\r\n-                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n-                      </p>\r\n-                    </div>\r\n-                    <div className=\"card rounded-3 py-2 px-5\">\r\n-                      <p className=\"fw-bold m-0 row\">\r\n-                        <span className=\"col-md-10 col-sm-12 \">\r\n-                          {res.payment_mode ? (\r\n-                            <>\r\n-                              <span className=\"text-break text-capitalize\">\r\n-                                <b>Payment mode</b>: {res.payment_mode}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.payment_id ? (\r\n-                            <>\r\n-                              <span className=\"text-break\">\r\n-                                <b>Payment Id</b>: {res.payment_id}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.order_id ? (\r\n-                            <>\r\n-                              <span className=\"text-break\">\r\n-                                <b>order Id</b>: {res.order_id}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.amount ? (\r\n-                            <span>\r\n-                              <b>Total Amount</b>: {res.amount}/-\r\n-                            </span>\r\n-                          ) : null}\r\n-                        </span>\r\n-                        <span className=\"col-md-2 col-sm-12\">\r\n-                          <span\r\n-                            className={`${\r\n-                              res.status === \"success\"\r\n-                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n-                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n-                            }`}\r\n-                          >\r\n-                            {res.status}\r\n-                          </span>\r\n-                        </span>\r\n-                      </p>\r\n-                    </div>\r\n-                  </div>\r\n-                ))\r\n-              )}\r\n-            </div>\r\n-          }\r\n-          {user === \"user\" || user === \"company\" ? (\r\n-            <PayForm\r\n-              data={data}\r\n-              setApicall={setApicall}\r\n-              user_id={user_id}\r\n-              user={user_type}\r\n-            />\r\n-          ) : (\r\n-            <AddTransactionForm\r\n-              data={data}\r\n-              setApicall={setApicall}\r\n-              user_id={user_id}\r\n-              user={user}\r\n-              user_type={user_type}\r\n-            />\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-      {/* </Modal> */}\r\n-    </>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712053872782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import moment from \"moment\";\r\n+import { ToastContainer } from \"react-toastify\";\r\n+// import { useParams } from \"react-router-dom\";\r\n+import { GetPaymentList } from \"../../../api/api\";\r\n+import PayForm from \"./PayForm\";\r\n+// import Loader from \"../../common/loader\";\r\n+import AddTransactionForm from \"./addTransactionForm\";\r\n+export default function PayentForm({ data, user_id, user_type }) {\r\n+  console.log(user_type,user)\r\n+  const [apiCall, setApicall] = useState(true);\r\n+  // const [loading, setLoading] = useState(true);\r\n+  const [paymentList, setPaytemList] = useState([]);\r\n+\r\n+  let user = localStorage.getItem(\"userType\");\r\n+\r\n+  /*Function to get Payment list data */\r\n+  const PaymentData = async () => {\r\n+    try {\r\n+      let Response = await GetPaymentList(\r\n+        user_id,\r\n+        user_type,\r\n+        user === \"admin\" ? 1 : 0\r\n+      );\r\n+\r\n+      if (Response.data.data.length === 0) {\r\n+        setPaytemList([]);\r\n+        // setLoading(false);\r\n+      } else {\r\n+        // setLoading(false);\r\n+        setPaytemList(Response.data.data);\r\n+      }\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+      setPaytemList([]);\r\n+      // setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  /*Render method */\r\n+  useEffect(() => {\r\n+    PaymentData();\r\n+    if (apiCall === true) {\r\n+      setApicall(false);\r\n+    }\r\n+  }, [apiCall]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <ToastContainer />\r\n+      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n+        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n+        <div className=\"row\">\r\n+          {\r\n+            // loading ? (\r\n+            //   <Loader load={\"yes\"} />\r\n+            // ) :\r\n+            <div className=\"activity_container col-md-8 border-right\">\r\n+              {paymentList.length === 0 ? (\r\n+                <div className=\"single_note mb-5\">\r\n+                  <div className=\"d-flex justify-content-center\">\r\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n+                  </div>\r\n+                </div>\r\n+              ) : (\r\n+                (paymentList || []).map((res, index) => (\r\n+                  <div className=\"single_note mb-5\" key={index}>\r\n+                    <div className=\"d-flex justify-content-between\">\r\n+                      <p className=\"text-italic font-size-3 m-0\">\r\n+                        Payment on:{\" \"}\r\n+                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n+                      </p>\r\n+                    </div>\r\n+                    <div className=\"card rounded-3 py-2 px-5\">\r\n+                      <p className=\"fw-bold m-0 row\">\r\n+                        <span className=\"col-md-10 col-sm-12 \">\r\n+                          {res.payment_mode ? (\r\n+                            <>\r\n+                              <span className=\"text-break text-capitalize\">\r\n+                                <b>Payment mode</b>: {res.payment_mode}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.payment_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>Payment Id</b>: {res.payment_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.order_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>order Id</b>: {res.order_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.amount ? (\r\n+                            <span>\r\n+                              <b>Total Amount</b>: {res.amount}/-\r\n+                            </span>\r\n+                          ) : null}\r\n+                        </span>\r\n+                        <span className=\"col-md-2 col-sm-12\">\r\n+                          <span\r\n+                            className={`${res.status === \"success\"\r\n+                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n+                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n+                              }`}\r\n+                          >\r\n+                            {res.status}\r\n+                          </span>\r\n+                        </span>\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              )}\r\n+            </div>\r\n+          }\r\n+          {user === \"user\" || user === \"company\" || user === \"agent\" ? (\r\n+            <PayForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user_type}\r\n+            />\r\n+          ) : user === \"agent\" ? null : (\r\n+            <AddTransactionForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user}\r\n+              user_type={user_type}\r\n+            />\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      {/* </Modal> */}\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712053904847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,14 @@\n import PayForm from \"./PayForm\";\r\n // import Loader from \"../../common/loader\";\r\n import AddTransactionForm from \"./addTransactionForm\";\r\n export default function PayentForm({ data, user_id, user_type }) {\r\n-  console.log(user_type,user)\r\n   const [apiCall, setApicall] = useState(true);\r\n   // const [loading, setLoading] = useState(true);\r\n   const [paymentList, setPaytemList] = useState([]);\r\n-\r\n+  \r\n   let user = localStorage.getItem(\"userType\");\r\n+  console.log(user_type,user)\r\n \r\n   /*Function to get Payment list data */\r\n   const PaymentData = async () => {\r\n     try {\r\n@@ -142,150 +142,4 @@\n       {/* </Modal> */}\r\n     </>\r\n   );\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import moment from \"moment\";\r\n-import { ToastContainer } from \"react-toastify\";\r\n-// import { useParams } from \"react-router-dom\";\r\n-import { GetPaymentList } from \"../../../api/api\";\r\n-import PayForm from \"./PayForm\";\r\n-// import Loader from \"../../common/loader\";\r\n-import AddTransactionForm from \"./addTransactionForm\";\r\n-export default function PayentForm({ data, user_id, user_type }) {\r\n-  console.log(user_type)\r\n-  const [apiCall, setApicall] = useState(true);\r\n-  // const [loading, setLoading] = useState(true);\r\n-  const [paymentList, setPaytemList] = useState([]);\r\n-\r\n-  let user = localStorage.getItem(\"userType\");\r\n-\r\n-  /*Function to get Payment list data */\r\n-  const PaymentData = async () => {\r\n-    try {\r\n-      let Response = await GetPaymentList(\r\n-        user_id,\r\n-        user_type,\r\n-        user === \"admin\" ? 1 : 0\r\n-      );\r\n-\r\n-      if (Response.data.data.length === 0) {\r\n-        setPaytemList([]);\r\n-        // setLoading(false);\r\n-      } else {\r\n-        // setLoading(false);\r\n-        setPaytemList(Response.data.data);\r\n-      }\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-      setPaytemList([]);\r\n-      // setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  /*Render method */\r\n-  useEffect(() => {\r\n-    PaymentData();\r\n-    if (apiCall === true) {\r\n-      setApicall(false);\r\n-    }\r\n-  }, [apiCall]);\r\n-\r\n-  return (\r\n-    <>\r\n-      <ToastContainer />\r\n-      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n-        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n-        <div className=\"row\">\r\n-          {\r\n-            // loading ? (\r\n-            //   <Loader load={\"yes\"} />\r\n-            // ) :\r\n-            <div className=\"activity_container col-md-8 border-right\">\r\n-              {paymentList.length === 0 ? (\r\n-                <div className=\"single_note mb-5\">\r\n-                  <div className=\"d-flex justify-content-center\">\r\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n-                  </div>\r\n-                </div>\r\n-              ) : (\r\n-                (paymentList || []).map((res, index) => (\r\n-                  <div className=\"single_note mb-5\" key={index}>\r\n-                    <div className=\"d-flex justify-content-between\">\r\n-                      <p className=\"text-italic font-size-3 m-0\">\r\n-                        Payment on:{\" \"}\r\n-                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n-                      </p>\r\n-                    </div>\r\n-                    <div className=\"card rounded-3 py-2 px-5\">\r\n-                      <p className=\"fw-bold m-0 row\">\r\n-                        <span className=\"col-md-10 col-sm-12 \">\r\n-                          {res.payment_mode ? (\r\n-                            <>\r\n-                              <span className=\"text-break text-capitalize\">\r\n-                                <b>Payment mode</b>: {res.payment_mode}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.payment_id ? (\r\n-                            <>\r\n-                              <span className=\"text-break\">\r\n-                                <b>Payment Id</b>: {res.payment_id}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.order_id ? (\r\n-                            <>\r\n-                              <span className=\"text-break\">\r\n-                                <b>order Id</b>: {res.order_id}\r\n-                              </span>\r\n-                              <br />\r\n-                            </>\r\n-                          ) : null}\r\n-                          {res.amount ? (\r\n-                            <span>\r\n-                              <b>Total Amount</b>: {res.amount}/-\r\n-                            </span>\r\n-                          ) : null}\r\n-                        </span>\r\n-                        <span className=\"col-md-2 col-sm-12\">\r\n-                          <span\r\n-                            className={`${\r\n-                              res.status === \"success\"\r\n-                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n-                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n-                            }`}\r\n-                          >\r\n-                            {res.status}\r\n-                          </span>\r\n-                        </span>\r\n-                      </p>\r\n-                    </div>\r\n-                  </div>\r\n-                ))\r\n-              )}\r\n-            </div>\r\n-          }\r\n-          {user === \"user\" || user === \"company\" ? (\r\n-            <PayForm\r\n-              data={data}\r\n-              setApicall={setApicall}\r\n-              user_id={user_id}\r\n-              user={user_type}\r\n-            />\r\n-          ) : user === \"agent\" ? null : (\r\n-            <AddTransactionForm\r\n-              data={data}\r\n-              setApicall={setApicall}\r\n-              user_id={user_id}\r\n-              user={user}\r\n-              user_type={user_type}\r\n-            />\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-      {/* </Modal> */}\r\n-    </>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712056059168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import moment from \"moment\";\r\n+import { ToastContainer } from \"react-toastify\";\r\n+// import { useParams } from \"react-router-dom\";\r\n+import { GetPaymentList } from \"../../../api/api\";\r\n+import PayForm from \"./PayForm\";\r\n+// import Loader from \"../../common/loader\";\r\n+import AddTransactionForm from \"./addTransactionForm\";\r\n+export default function PayentForm({ data, user_id, user_type }) {\r\n+  const [apiCall, setApicall] = useState(true);\r\n+  // const [loading, setLoading] = useState(true);\r\n+  const [paymentList, setPaytemList] = useState([]);\r\n+  \r\n+  let user = localStorage.getItem(\"userType\");\r\n+\r\n+  /*Function to get Payment list data */\r\n+  const PaymentData = async () => {\r\n+    try {\r\n+      let Response = await GetPaymentList(\r\n+        user_id,\r\n+        user_type,\r\n+        user === \"admin\" ? 1 : 0\r\n+      );\r\n+\r\n+      if (Response.data.data.length === 0) {\r\n+        setPaytemList([]);\r\n+        // setLoading(false);\r\n+      } else {\r\n+        // setLoading(false);\r\n+        setPaytemList(Response.data.data);\r\n+      }\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+      setPaytemList([]);\r\n+      // setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  /*Render method */\r\n+  useEffect(() => {\r\n+    PaymentData();\r\n+    if (apiCall === true) {\r\n+      setApicall(false);\r\n+    }\r\n+  }, [apiCall]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <ToastContainer />\r\n+      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n+        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n+        <div className=\"row\">\r\n+          {\r\n+            // loading ? (\r\n+            //   <Loader load={\"yes\"} />\r\n+            // ) :\r\n+            <div className=\"activity_container col-md-8 border-right\">\r\n+              {paymentList.length === 0 ? (\r\n+                <div className=\"single_note mb-5\">\r\n+                  <div className=\"d-flex justify-content-center\">\r\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n+                  </div>\r\n+                </div>\r\n+              ) : (\r\n+                (paymentList || []).map((res, index) => (\r\n+                  <div className=\"single_note mb-5\" key={index}>\r\n+                    <div className=\"d-flex justify-content-between\">\r\n+                      <p className=\"text-italic font-size-3 m-0\">\r\n+                        Payment on:{\" \"}\r\n+                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n+                      </p>\r\n+                    </div>\r\n+                    <div className=\"card rounded-3 py-2 px-5\">\r\n+                      <p className=\"fw-bold m-0 row\">\r\n+                        <span className=\"col-md-10 col-sm-12 \">\r\n+                          {res.payment_mode ? (\r\n+                            <>\r\n+                              <span className=\"text-break text-capitalize\">\r\n+                                <b>Payment mode</b>: {res.payment_mode}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.payment_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>Payment Id</b>: {res.payment_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.order_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>order Id</b>: {res.order_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.amount ? (\r\n+                            <span>\r\n+                              <b>Total Amount</b>: {res.amount}/-\r\n+                            </span>\r\n+                          ) : null}\r\n+                        </span>\r\n+                        <span className=\"col-md-2 col-sm-12\">\r\n+                          <span\r\n+                            className={`${res.status === \"success\"\r\n+                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n+                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n+                              }`}\r\n+                          >\r\n+                            {res.status}\r\n+                          </span>\r\n+                        </span>\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              )}\r\n+            </div>\r\n+          }\r\n+          {user === \"user\" || user === \"company\" || user === \"agent\" ? (\r\n+            <PayForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user_type}\r\n+            />\r\n+          ) : user === \"agent\" ? null : (\r\n+            <AddTransactionForm\r\n+              data={data}\r\n+              setApicall={setApicall}\r\n+              user_id={user_id}\r\n+              user={user}\r\n+              user_type={user_type}\r\n+            />\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      {/* </Modal> */}\r\n+    </>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712148000352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import moment from \"moment\";\r\n+import { ToastContainer } from \"react-toastify\";\r\n+// import { useParams } from \"react-router-dom\";\r\n+import { GetPaymentList } from \"../../../api/api\";\r\n+import PayForm from \"./PayForm\";\r\n+// import Loader from \"../../common/loader\";\r\n+import AddTransactionForm from \"./addTransactionForm\";\r\n+export default function PayentForm({ data, user_id, user_type }) {\r\n+  const [apiCall, setApicall] = useState(true);\r\n+  // const [loading, setLoading] = useState(true);\r\n+  const [paymentList, setPaytemList] = useState([]);\r\n+\r\n+  let user = localStorage.getItem(\"userType\");\r\n+\r\n+  /*Function to get Payment list data */\r\n+  const PaymentData = async () => {\r\n+    try {\r\n+      let Response = await GetPaymentList(\r\n+        user_id,\r\n+        user_type,\r\n+        user === \"admin\" ? 1 : 0\r\n+      );\r\n+\r\n+      if (Response.data.data.length === 0) {\r\n+        setPaytemList([]);\r\n+        // setLoading(false);\r\n+      } else {\r\n+        // setLoading(false);\r\n+        setPaytemList(Response.data.data);\r\n+      }\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+      setPaytemList([]);\r\n+      // setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  /*Render method */\r\n+  useEffect(() => {\r\n+    PaymentData();\r\n+    if (apiCall === true) {\r\n+      setApicall(false);\r\n+    }\r\n+  }, [apiCall]);\r\n+\r\n+  return (\r\n+    <>\r\n+      <ToastContainer />\r\n+      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n+        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n+        <div className=\"row\">\r\n+          {\r\n+            // loading ? (\r\n+            //   <Loader load={\"yes\"} />\r\n+            // ) :\r\n+            <div className=\"activity_container col-md-8 border-right\">\r\n+              {paymentList.length === 0 ? (\r\n+                <div className=\"single_note mb-5\">\r\n+                  <div className=\"d-flex justify-content-center\">\r\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n+                  </div>\r\n+                </div>\r\n+              ) : (\r\n+                (paymentList || []).map((res, index) => (\r\n+                  <div className=\"single_note mb-5\" key={index}>\r\n+                    <div className=\"d-flex justify-content-between\">\r\n+                      <p className=\"text-italic font-size-3 m-0\">\r\n+                        Payment on:{\" \"}\r\n+                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n+                      </p>\r\n+                    </div>\r\n+                    <div className=\"card rounded-3 py-2 px-5\">\r\n+                      <p className=\"fw-bold m-0 row\">\r\n+                        <span className=\"col-md-10 col-sm-12 \">\r\n+                          {res.payment_mode ? (\r\n+                            <>\r\n+                              <span className=\"text-break text-capitalize\">\r\n+                                <b>Payment mode</b>: {res.payment_mode}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.payment_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>Payment Id</b>: {res.payment_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.order_id ? (\r\n+                            <>\r\n+                              <span className=\"text-break\">\r\n+                                <b>order Id</b>: {res.order_id}\r\n+                              </span>\r\n+                              <br />\r\n+                            </>\r\n+                          ) : null}\r\n+                          {res.amount ? (\r\n+                            <span>\r\n+                              <b>Total Amount</b>: {res.amount}/-\r\n+                            </span>\r\n+                          ) : null}\r\n+                        </span>\r\n+                        <span className=\"col-md-2 col-sm-12\">\r\n+                          <span\r\n+                            className={`${res.status === \"success\"\r\n+                              ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n+                              : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n+                              }`}\r\n+                          >\r\n+                            {res.status}\r\n+                          </span>\r\n+                        </span>\r\n+                      </p>\r\n+                    </div>\r\n+                  </div>\r\n+                ))\r\n+              )}\r\n+            </div>\r\n+          }\r\n+          {(user_type === \"employee\" && user === \"agent\") ? null :\r\n+            user === \"user\" || user === \"company\" || user === \"agent\" ? (\r\n+              <PayForm\r\n+                data={data}\r\n+                setApicall={setApicall}\r\n+                user_id={user_id}\r\n+                user={user_type}\r\n+              />\r\n+            ) : user === \"agent\" ? null : (\r\n+              <AddTransactionForm\r\n+                data={data}\r\n+                setApicall={setApicall}\r\n+                user_id={user_id}\r\n+                user={user}\r\n+                user_type={user_type}\r\n+              />\r\n+            )}\r\n+        </div>\r\n+      </div>\r\n+      {/* </Modal> */}\r\n+    </>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1710503309379,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n// import { useParams } from \"react-router-dom\";\r\nimport { GetPaymentList } from \"../../../api/api\";\r\nimport PayForm from \"./PayForm\";\r\n// import Loader from \"../../common/loader\";\r\nimport AddTransactionForm from \"./addTransactionForm\";\r\nexport default function PayentForm({ data, user_id, user_type }) {\r\n  const [apiCall, setApicall] = useState(true);\r\n  // const [loading, setLoading] = useState(true);\r\n  const [paymentList, setPaytemList] = useState([]);\r\n\r\n  let user = localStorage.getItem(\"userType\");\r\n\r\n  /*Function to get Payment list data */\r\n  const PaymentData = async () => {\r\n    try {\r\n      let Response = await GetPaymentList(\r\n        user_id,\r\n        user_type,\r\n        user === \"admin\" ? 1 : 0\r\n      );\r\n\r\n      if (Response.data.data.length === 0) {\r\n        setPaytemList([]);\r\n        // setLoading(false);\r\n      } else {\r\n        // setLoading(false);\r\n        setPaytemList(Response.data.data);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      setPaytemList([]);\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  /*Render method */\r\n  useEffect(() => {\r\n    PaymentData();\r\n    if (apiCall === true) {\r\n      setApicall(false);\r\n    }\r\n  }, [apiCall]);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <div className=\"bg-white rounded h-100 px-10 overflow-y-hidden\">\r\n        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\r\n        <div className=\"row\">\r\n          {\r\n            // loading ? (\r\n            //   <Loader load={\"yes\"} />\r\n            // ) :\r\n            <div className=\"activity_container col-md-8 border-right\">\r\n              {paymentList.length === 0 ? (\r\n                <div className=\"single_note mb-5\">\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                (paymentList || []).map((res, index) => (\r\n                  <div className=\"single_note mb-5\" key={index}>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                      <p className=\"text-italic font-size-3 m-0\">\r\n                        Payment on:\r\n                        {moment(res.created_at).format(\"Do MM YYYY, h:mm:ss a\")}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"card rounded-3 py-2 px-5\">\r\n                      <p className=\"fw-bold m-0 row\">\r\n                        <span className=\"col-md-10 col-sm-12 \">\r\n                          {res.payment_mode ? (\r\n                            <>\r\n                              <span className=\"text-break\">\r\n                                <b>Payment mode</b>: {res.payment_mode}\r\n                              </span>\r\n                              <br />\r\n                            </>\r\n                          ) : null}\r\n                          {res.payment_id ? (\r\n                            <>\r\n                              <span className=\"text-break\">\r\n                                <b>Payment Id</b>: {res.payment_id}\r\n                              </span>\r\n                              <br />\r\n                            </>\r\n                          ) : null}\r\n                          {res.order_id ? (\r\n                            <>\r\n                              <span className=\"text-break\">\r\n                                <b>order Id</b>: {res.order_id}\r\n                              </span>\r\n                              <br />\r\n                            </>\r\n                          ) : null}\r\n                          {res.amount ? (\r\n                            <span>\r\n                              <b>Total Amount</b>: {res.amount}/-\r\n                            </span>\r\n                          ) : null}\r\n                        </span>\r\n                        <span className=\"col-md-2 col-sm-12\">\r\n                          <span\r\n                            className={`${\r\n                              res.status === \"success\"\r\n                                ? \" bg-primary-opacity-8 text-white text-center w-100  rounded-pill\"\r\n                                : \" bg-warning text-white text-center w-100  rounded-pill\"\r\n                            }`}\r\n                          >\r\n                            {res.status}\r\n                          </span>\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          }\r\n          {user === \"user\" || user === \"company\" ? (\r\n            <PayForm\r\n              data={data}\r\n              setApicall={setApicall}\r\n              user_id={user_id}\r\n              user={user_type}\r\n            />\r\n          ) : user === \"agent\" ? null : (\r\n            <AddTransactionForm\r\n              data={data}\r\n              setApicall={setApicall}\r\n              user_id={user_id}\r\n              user={user}\r\n              user_type={user_type}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}