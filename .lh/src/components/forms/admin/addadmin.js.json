{
    "sourceFile": "src/components/forms/admin/addadmin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1693486845044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486958633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,12 +131,9 @@\n           setAlready(\"Admin already exists\");\n           setLoading(false);\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false);\n       }\n     } else {\n       setLoading(false);\n"
                },
                {
                    "date": 1694068619303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+import { AdminDetails, AddAdmin } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import filterjson from \"../../json/filterjson\";\n+\n+function Addadmin(props) {\n+  let [already, setAlready] = useState(\"\");\n+  let [loading, setLoading] = useState(false);\n+  const [showPassword, setShowPassword] = useState(false);\n+\n+  /*Function to show hide password */\n+  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n+\n+  const renderIcon = () => {\n+    if (state.password.length > 0) {\n+      return showPassword ? (\n+        <i className=\"fa fa-eye-slash\"></i>\n+      ) : (\n+        <i className=\"fa fa-eye\"></i>\n+      );\n+    }\n+    return null;\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    props.close();\n+    setLoading(false);\n+    setAlready(\"\");\n+  };\n+  // USER ADMIN PROFILE UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    name: \"\",\n+    email: \"\",\n+    password: \"\",\n+    admin_type: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Admin name is required\"\n+          : /[-]?\\d+(\\.\\d+)?/.test(value)\n+            ? \"Admin name can not have a number.\"\n+            : value.length < 2\n+              ? \"Admin name should have 2 or more letters\"\n+              : /[^A-Za-z 0-9]/g.test(value)\n+                ? \"Cannot use special character \"\n+                : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        state.admin_id\n+          ? value === \"\"\n+          : value === \"\"\n+            ? \"Password is required\"\n+            : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+              value\n+            )\n+              ? null\n+              : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    admin_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+  /*Function to get admin detail */\n+  const AdminData = async () => {\n+    try {\n+      const userData = await AdminDetails(props.adminId);\n+      if (userData === undefined || userData.data.length === 0) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err)\n+    }\n+  };\n+  useEffect(() => {\n+    if (props.adminId === \"0\" || props.adminId === undefined) {\n+      setState(initialFormState);\n+    } else {\n+      AdminData();\n+    }\n+  }, [props]);\n+\n+  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n+  const onAminProfileUpdateClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddAdmin(state);\n+        if (responseData.message === \"admin added successfully\") {\n+          toast.success(\"Admin added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"admin updated successfully\") {\n+          toast.success(\"Admin Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"Admin already exists\") {\n+          setAlready(\"Admin already exists\");\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+       console.log(err) \n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER ADMIN PROFILE UPDATE VALIDATION\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"md\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n+          {props.adminId === \"0\" ? (\n+            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n+          ) : (\n+            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n+          )}\n+          <form onSubmit={onAminProfileUpdateClick}>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"name\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Name <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.name\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.name}\n+                onChange={onInputChange}\n+                id=\"name\"\n+                name=\"name\"\n+                placeholder=\"eg. Apple\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.name && (\n+                <span key={errors.name} className=\"text-danger font-size-3\">\n+                  {errors.name}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"email\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                E-mail <span className=\"text-danger\">*</span> :\n+              </label>\n+              <input\n+                className={\n+                  errors.email\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.email}\n+                onChange={onInputChange}\n+                id=\"email\"\n+                name=\"email\"\n+                type={\"email\"}\n+                disabled={props.adminId === \"0\" ? false : true}\n+              />\n+              {/*----ERROR MESSAGE FOR EMAIL----*/}\n+              {errors.email && (\n+                <span key={errors.email} className=\"text-danger font-size-3\">\n+                  {errors.email}\n+                </span>\n+              )}\n+            </div>\n+            {state.admin_id ? null : (\n+              <div className=\"form-group \">\n+                <label\n+                  htmlFor=\"password\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Password <span className=\"text-danger\">*</span> :\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type={showPassword ? \"text\" : \"password\"}\n+                    className={\n+                      errors.password\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    value={state.password}\n+                    onChange={onInputChange}\n+                    id=\"password\"\n+                    name=\"password\"\n+                  />\n+                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n+                    {renderIcon()}\n+                  </span>\n+                </div>\n+                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n+                {errors.password && (\n+                  <span\n+                    key={errors.password}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.password}\n+                  </span>\n+                )}\n+              </div>\n+            )}\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"admin_type\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Type <span className=\"text-danger\">*</span> :\n+              </label>\n+              <select\n+                type={\"text\"}\n+                className={\n+                  errors.admin_type\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.admin_type}\n+                onChange={onInputChange}\n+                id=\"admin_type\"\n+                name=\"admin_type\"\n+                multiple={false}\n+              >\n+                <option value={\"\"}>Select</option>\n+                {(filterjson.admintype||[]).map((item,index)=>{(\n+                  <option value={item}key={index}>{item}</option>\n+                )})}\n+               \n+              </select>\n+              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n+              {errors.admin_type && (\n+                <span\n+                  key={errors.admin_type}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.admin_type}\n+                </span>\n+              )}\n+            </div>\n+            <span className=\"text-danger font-size-3\">{already}</span>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"submit\"\n+                >\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default Addadmin;\n"
                },
                {
                    "date": 1694068632495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,34 +48,34 @@\n       (value) =>\n         value === \"\" || value.trim() === \"\"\n           ? \"Admin name is required\"\n           : /[-]?\\d+(\\.\\d+)?/.test(value)\n-            ? \"Admin name can not have a number.\"\n-            : value.length < 2\n-              ? \"Admin name should have 2 or more letters\"\n-              : /[^A-Za-z 0-9]/g.test(value)\n-                ? \"Cannot use special character \"\n-                : \"\",\n+          ? \"Admin name can not have a number.\"\n+          : value.length < 2\n+          ? \"Admin name should have 2 or more letters\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+          ? \"Cannot use special character \"\n+          : \"\",\n     ],\n     email: [\n       (value) =>\n         value === \"\" || value.trim() === \"\"\n           ? \"Email is required\"\n           : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n+          ? null\n+          : \"Email is invalid\",\n     ],\n     password: [\n       (value) =>\n         state.admin_id\n           ? value === \"\"\n           : value === \"\"\n-            ? \"Password is required\"\n-            : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n               value\n             )\n-              ? null\n-              : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+          ? null\n+          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n     ],\n     admin_type: [\n       (value) =>\n         value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n@@ -93,9 +93,9 @@\n       } else {\n         setState(userData.data[0]);\n       }\n     } catch (err) {\n-      console.log(err)\n+      console.log(err);\n     }\n   };\n   useEffect(() => {\n     if (props.adminId === \"0\" || props.adminId === undefined) {\n@@ -132,9 +132,9 @@\n           setAlready(\"Admin already exists\");\n           setLoading(false);\n         }\n       } catch (err) {\n-       console.log(err) \n+        console.log(err);\n         setLoading(false);\n       }\n     } else {\n       setLoading(false);\n@@ -274,12 +274,13 @@\n                 name=\"admin_type\"\n                 multiple={false}\n               >\n                 <option value={\"\"}>Select</option>\n-                {(filterjson.admintype||[]).map((item,index)=>{(\n-                  <option value={item}key={index}>{item}</option>\n-                )})}\n-               \n+                {(filterjson.admintype || []).map((item, index) => {\n+                  return(<option value={item} key={index}>\n+                    {item}\n+                  </option>;)\n+                })}\n               </select>\n               {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n               {errors.admin_type && (\n                 <span\n@@ -321,326 +322,4 @@\n   );\n }\n \n export default Addadmin;\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-import { AdminDetails, AddAdmin } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-\n-function Addadmin(props) {\n-  let [already, setAlready] = useState(\"\");\n-  let [loading, setLoading] = useState(false);\n-  const [showPassword, setShowPassword] = useState(false);\n-\n-  /*Function to show hide password */\n-  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n-\n-  const renderIcon = () => {\n-    if (state.password.length > 0) {\n-      return showPassword ? (\n-        <i className=\"fa fa-eye-slash\"></i>\n-      ) : (\n-        <i className=\"fa fa-eye\"></i>\n-      );\n-    }\n-    return null;\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    props.close();\n-    setLoading(false);\n-    setAlready(\"\");\n-  };\n-  // USER ADMIN PROFILE UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    name: \"\",\n-    email: \"\",\n-    password: \"\",\n-    admin_type: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Admin name is required\"\n-          : /[-]?\\d+(\\.\\d+)?/.test(value)\n-            ? \"Admin name can not have a number.\"\n-            : value.length < 2\n-              ? \"Admin name should have 2 or more letters\"\n-              : /[^A-Za-z 0-9]/g.test(value)\n-                ? \"Cannot use special character \"\n-                : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    password: [\n-      (value) =>\n-        state.admin_id\n-          ? value === \"\"\n-          : value === \"\"\n-            ? \"Password is required\"\n-            : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n-              value\n-            )\n-              ? null\n-              : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n-    ],\n-    admin_type: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, setErrors, onInputChange, errors, validate } =\n-    useValidation(initialFormState, validators);\n-  /*Function to get admin detail */\n-  const AdminData = async () => {\n-    try {\n-      const userData = await AdminDetails(props.adminId);\n-      if (userData === undefined || userData.data.length === 0) {\n-        setState(initialFormState);\n-      } else {\n-        setState(userData.data[0]);\n-      }\n-    } catch (err) {\n-      console.log(err)\n-    }\n-  };\n-  useEffect(() => {\n-    if (props.adminId === \"0\" || props.adminId === undefined) {\n-      setState(initialFormState);\n-    } else {\n-      AdminData();\n-    }\n-  }, [props]);\n-\n-  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n-  const onAminProfileUpdateClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddAdmin(state);\n-        if (responseData.message === \"admin added successfully\") {\n-          toast.success(\"Admin added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"admin updated successfully\") {\n-          toast.success(\"Admin Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"Admin already exists\") {\n-          setAlready(\"Admin already exists\");\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-       console.log(err) \n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER ADMIN PROFILE UPDATE VALIDATION\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"md\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>\n-        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n-          {props.adminId === \"0\" ? (\n-            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n-          ) : (\n-            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n-          )}\n-          <form onSubmit={onAminProfileUpdateClick}>\n-            <div className=\"form-group\">\n-              <label\n-                htmlFor=\"name\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Name <span className=\"text-danger\">*</span>\n-              </label>\n-              <input\n-                type=\"text\"\n-                className={\n-                  errors.name\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.name}\n-                onChange={onInputChange}\n-                id=\"name\"\n-                name=\"name\"\n-                placeholder=\"eg. Apple\"\n-              />\n-              {/*----ERROR MESSAGE FOR Admin Name----*/}\n-              {errors.name && (\n-                <span key={errors.name} className=\"text-danger font-size-3\">\n-                  {errors.name}\n-                </span>\n-              )}\n-            </div>\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"email\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                E-mail <span className=\"text-danger\">*</span> :\n-              </label>\n-              <input\n-                className={\n-                  errors.email\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.email}\n-                onChange={onInputChange}\n-                id=\"email\"\n-                name=\"email\"\n-                type={\"email\"}\n-                disabled={props.adminId === \"0\" ? false : true}\n-              />\n-              {/*----ERROR MESSAGE FOR EMAIL----*/}\n-              {errors.email && (\n-                <span key={errors.email} className=\"text-danger font-size-3\">\n-                  {errors.email}\n-                </span>\n-              )}\n-            </div>\n-            {state.admin_id ? null : (\n-              <div className=\"form-group \">\n-                <label\n-                  htmlFor=\"password\"\n-                  className=\"font-size-4 text-black-2  line-height-reset\"\n-                >\n-                  Password <span className=\"text-danger\">*</span> :\n-                </label>\n-                <div className=\"position-relative\">\n-                  <input\n-                    type={showPassword ? \"text\" : \"password\"}\n-                    className={\n-                      errors.password\n-                        ? \"form-control border border-danger\"\n-                        : \"form-control\"\n-                    }\n-                    value={state.password}\n-                    onChange={onInputChange}\n-                    id=\"password\"\n-                    name=\"password\"\n-                  />\n-                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n-                    {renderIcon()}\n-                  </span>\n-                </div>\n-                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n-                {errors.password && (\n-                  <span\n-                    key={errors.password}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.password}\n-                  </span>\n-                )}\n-              </div>\n-            )}\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"admin_type\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Type <span className=\"text-danger\">*</span> :\n-              </label>\n-              <select\n-                type={\"text\"}\n-                className={\n-                  errors.admin_type\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.admin_type}\n-                onChange={onInputChange}\n-                id=\"admin_type\"\n-                name=\"admin_type\"\n-                multiple={false}\n-              >\n-                <option value={\"\"}>Select</option>\n-                <option value={\"super-admin\"}>Superadmin</option>\n-                <option value={\"admin\"}>Admin</option>\n-                <option value={\"manager\"}>Manager</option>\n-              </select>\n-              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n-              {errors.admin_type && (\n-                <span\n-                  key={errors.admin_type}\n-                  className=\"text-danger font-size-3\"\n-                >\n-                  {errors.admin_type}\n-                </span>\n-              )}\n-            </div>\n-            <span className=\"text-danger font-size-3\">{already}</span>\n-            <div className=\"form-group text-center\">\n-              {loading === true ? (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"button\"\n-                  disabled\n-                >\n-                  <span\n-                    className=\"spinner-border spinner-border-sm \"\n-                    role=\"status\"\n-                    aria-hidden=\"true\"\n-                  ></span>\n-                  <span className=\"sr-only\">Loading...</span>\n-                </button>\n-              ) : (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"submit\"\n-                >\n-                  Submit\n-                </button>\n-              )}\n-            </div>\n-          </form>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default Addadmin;\n"
                },
                {
                    "date": 1694068705895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n               <select\n                 type={\"text\"}\n                 className={\n                   errors.admin_type\n-                    ? \"form-control border border-danger\"\n+                    ? \"form-control border border-danger text-capitalzie\"\n                     : \"form-control\"\n                 }\n                 value={state.admin_type}\n                 onChange={onInputChange}\n@@ -277,9 +277,9 @@\n                 <option value={\"\"}>Select</option>\n                 {(filterjson.admintype || []).map((item, index) => {\n                   return(<option value={item} key={index}>\n                     {item}\n-                  </option>;)\n+                  </option>)\n                 })}\n               </select>\n               {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n               {errors.admin_type && (\n"
                },
                {
                    "date": 1694068754979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n               <select\n                 type={\"text\"}\n                 className={\n                   errors.admin_type\n-                    ? \"form-control border border-danger text-capitalzie\"\n+                    ? \"form-control border border-danger text-capitalize\"\n                     : \"form-control\"\n                 }\n                 value={state.admin_type}\n                 onChange={onInputChange}\n"
                },
                {
                    "date": 1694068821768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,9 +275,9 @@\n                 multiple={false}\n               >\n                 <option value={\"\"}>Select</option>\n                 {(filterjson.admintype || []).map((item, index) => {\n-                  return(<option value={item} key={index}>\n+                  return(<option value={item} key={index} className=\" text-capitalize\">\n                     {item}\n                   </option>)\n                 })}\n               </select>\n"
                },
                {
                    "date": 1694070831051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,356 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+import { AdminDetails, AddAdmin } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import filterjson from \"../../json/filterjson\";\n+\n+function Addadmin(props) {\n+  let [already, setAlready] = useState(\"\");\n+  let [loading, setLoading] = useState(false);\n+  const [showPassword, setShowPassword] = useState(false);\n+\n+  /*Function to show hide password */\n+  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n+\n+  const renderIcon = () => {\n+    if (state.password.length > 0) {\n+      return showPassword ? (\n+        <i className=\"fa fa-eye-slash\"></i>\n+      ) : (\n+        <i className=\"fa fa-eye\"></i>\n+      );\n+    }\n+    return null;\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    props.close();\n+    setLoading(false);\n+    setAlready(\"\");\n+  };\n+  // USER ADMIN PROFILE UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    name: \"\",\n+    email: \"\",\n+    password: \"\",\n+    admin_type: \"\",\n+    contact_no:\"\"\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Admin name is required\"\n+          : /[-]?\\d+(\\.\\d+)?/.test(value)\n+          ? \"Admin name can not have a number.\"\n+          : value.length < 2\n+          ? \"Admin name should have 2 or more letters\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+          ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        state.admin_id\n+          ? value === \"\"\n+          : value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+              value\n+            )\n+          ? null\n+          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    admin_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Contact no is required\" :  value.length < 10?\"Contact no can not be more than 10 digit\":\"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+  /*Function to get admin detail */\n+  const AdminData = async () => {\n+    try {\n+      const userData = await AdminDetails(props.adminId);\n+      if (userData === undefined || userData.data.length === 0) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (props.adminId === \"0\" || props.adminId === undefined) {\n+      setState(initialFormState);\n+    } else {\n+      AdminData();\n+    }\n+  }, [props]);\n+\n+  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n+  const onAminProfileUpdateClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddAdmin(state);\n+        if (responseData.message === \"admin added successfully\") {\n+          toast.success(\"Admin added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"admin updated successfully\") {\n+          toast.success(\"Admin Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"Admin already exists\") {\n+          setAlready(\"Admin already exists\");\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER ADMIN PROFILE UPDATE VALIDATION\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"md\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n+          {props.adminId === \"0\" ? (\n+            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n+          ) : (\n+            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n+          )}\n+          <form onSubmit={onAminProfileUpdateClick}>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"name\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Name <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.name\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.name}\n+                onChange={onInputChange}\n+                id=\"name\"\n+                name=\"name\"\n+                placeholder=\"eg. Apple\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.name && (\n+                <span key={errors.name} className=\"text-danger font-size-3\">\n+                  {errors.name}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"contact_no\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Contact no <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.contact_no\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.contact_no}\n+                onChange={onInputChange}\n+                id=\"contact_no\"\n+                name=\"contact_no\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.contact_no && (\n+                <span key={errors.contact_no} className=\"text-danger font-size-3\">\n+                  {errors.contact_no}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"email\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                E-mail <span className=\"text-danger\">*</span> :\n+              </label>\n+              <input\n+                className={\n+                  errors.email\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.email}\n+                onChange={onInputChange}\n+                id=\"email\"\n+                name=\"email\"\n+                type={\"email\"}\n+                disabled={props.adminId === \"0\" ? false : true}\n+              />\n+              {/*----ERROR MESSAGE FOR EMAIL----*/}\n+              {errors.email && (\n+                <span key={errors.email} className=\"text-danger font-size-3\">\n+                  {errors.email}\n+                </span>\n+              )}\n+            </div>\n+            {state.admin_id ? null : (\n+              <div className=\"form-group \">\n+                <label\n+                  htmlFor=\"password\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Password <span className=\"text-danger\">*</span> :\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type={showPassword ? \"text\" : \"password\"}\n+                    className={\n+                      errors.password\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    value={state.password}\n+                    onChange={onInputChange}\n+                    id=\"password\"\n+                    name=\"password\"\n+                  />\n+                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n+                    {renderIcon()}\n+                  </span>\n+                </div>\n+                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n+                {errors.password && (\n+                  <span\n+                    key={errors.password}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.password}\n+                  </span>\n+                )}\n+              </div>\n+            )}\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"admin_type\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Type <span className=\"text-danger\">*</span> :\n+              </label>\n+              <select\n+                type={\"text\"}\n+                className={\n+                  errors.admin_type\n+                    ? \"form-control border border-danger text-capitalize\"\n+                    : \"form-control\"\n+                }\n+                value={state.admin_type}\n+                onChange={onInputChange}\n+                id=\"admin_type\"\n+                name=\"admin_type\"\n+                multiple={false}\n+              >\n+                <option value={\"\"}>Select</option>\n+                {(filterjson.admintype || []).map((item, index) => {\n+                  return(<option value={item} key={index} className=\" text-capitalize\">\n+                    {item}\n+                  </option>)\n+                })}\n+              </select>\n+              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n+              {errors.admin_type && (\n+                <span\n+                  key={errors.admin_type}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.admin_type}\n+                </span>\n+              )}\n+            </div>\n+            <span className=\"text-danger font-size-3\">{already}</span>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"submit\"\n+                >\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default Addadmin;\n"
                },
                {
                    "date": 1694177008321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     name: \"\",\n     email: \"\",\n     password: \"\",\n     admin_type: \"\",\n-    contact_no:\"\"\n+    contact_no: \"\",\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     name: [\n@@ -82,9 +82,13 @@\n         value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n     ],\n     contact_no: [\n       (value) =>\n-        value === \"\" || value.trim() === \"\" ? \"Contact no is required\" :  value.length < 10?\"Contact no can not be more than 10 digit\":\"\",\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Contact no is required\"\n+          : value.length < 10\n+          ? \"Contact no can not be more than 10 digit\"\n+          : \"\",\n     ],\n   };\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, setErrors, onInputChange, errors, validate } =\n@@ -203,9 +207,9 @@\n               >\n                 Contact no <span className=\"text-danger\">*</span>\n               </label>\n               <input\n-                type=\"text\"\n+                type=\"number\"\n                 className={\n                   errors.contact_no\n                     ? \"form-control border border-danger\"\n                     : \"form-control\"\n@@ -213,341 +217,20 @@\n                 value={state.contact_no}\n                 onChange={onInputChange}\n                 id=\"contact_no\"\n                 name=\"contact_no\"\n+                min={0}\n               />\n               {/*----ERROR MESSAGE FOR Admin Name----*/}\n               {errors.contact_no && (\n-                <span key={errors.contact_no} className=\"text-danger font-size-3\">\n-                  {errors.contact_no}\n-                </span>\n-              )}\n-            </div>\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"email\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                E-mail <span className=\"text-danger\">*</span> :\n-              </label>\n-              <input\n-                className={\n-                  errors.email\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.email}\n-                onChange={onInputChange}\n-                id=\"email\"\n-                name=\"email\"\n-                type={\"email\"}\n-                disabled={props.adminId === \"0\" ? false : true}\n-              />\n-              {/*----ERROR MESSAGE FOR EMAIL----*/}\n-              {errors.email && (\n-                <span key={errors.email} className=\"text-danger font-size-3\">\n-                  {errors.email}\n-                </span>\n-              )}\n-            </div>\n-            {state.admin_id ? null : (\n-              <div className=\"form-group \">\n-                <label\n-                  htmlFor=\"password\"\n-                  className=\"font-size-4 text-black-2  line-height-reset\"\n-                >\n-                  Password <span className=\"text-danger\">*</span> :\n-                </label>\n-                <div className=\"position-relative\">\n-                  <input\n-                    type={showPassword ? \"text\" : \"password\"}\n-                    className={\n-                      errors.password\n-                        ? \"form-control border border-danger\"\n-                        : \"form-control\"\n-                    }\n-                    value={state.password}\n-                    onChange={onInputChange}\n-                    id=\"password\"\n-                    name=\"password\"\n-                  />\n-                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n-                    {renderIcon()}\n-                  </span>\n-                </div>\n-                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n-                {errors.password && (\n-                  <span\n-                    key={errors.password}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.password}\n-                  </span>\n-                )}\n-              </div>\n-            )}\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"admin_type\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Type <span className=\"text-danger\">*</span> :\n-              </label>\n-              <select\n-                type={\"text\"}\n-                className={\n-                  errors.admin_type\n-                    ? \"form-control border border-danger text-capitalize\"\n-                    : \"form-control\"\n-                }\n-                value={state.admin_type}\n-                onChange={onInputChange}\n-                id=\"admin_type\"\n-                name=\"admin_type\"\n-                multiple={false}\n-              >\n-                <option value={\"\"}>Select</option>\n-                {(filterjson.admintype || []).map((item, index) => {\n-                  return(<option value={item} key={index} className=\" text-capitalize\">\n-                    {item}\n-                  </option>)\n-                })}\n-              </select>\n-              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n-              {errors.admin_type && (\n                 <span\n-                  key={errors.admin_type}\n+                  key={errors.contact_no}\n                   className=\"text-danger font-size-3\"\n                 >\n-                  {errors.admin_type}\n+                  {errors.contact_no}\n                 </span>\n               )}\n             </div>\n-            <span className=\"text-danger font-size-3\">{already}</span>\n-            <div className=\"form-group text-center\">\n-              {loading === true ? (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"button\"\n-                  disabled\n-                >\n-                  <span\n-                    className=\"spinner-border spinner-border-sm \"\n-                    role=\"status\"\n-                    aria-hidden=\"true\"\n-                  ></span>\n-                  <span className=\"sr-only\">Loading...</span>\n-                </button>\n-              ) : (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"submit\"\n-                >\n-                  Submit\n-                </button>\n-              )}\n-            </div>\n-          </form>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default Addadmin;\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-import { AdminDetails, AddAdmin } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import filterjson from \"../../json/filterjson\";\n-\n-function Addadmin(props) {\n-  let [already, setAlready] = useState(\"\");\n-  let [loading, setLoading] = useState(false);\n-  const [showPassword, setShowPassword] = useState(false);\n-\n-  /*Function to show hide password */\n-  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n-\n-  const renderIcon = () => {\n-    if (state.password.length > 0) {\n-      return showPassword ? (\n-        <i className=\"fa fa-eye-slash\"></i>\n-      ) : (\n-        <i className=\"fa fa-eye\"></i>\n-      );\n-    }\n-    return null;\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    props.close();\n-    setLoading(false);\n-    setAlready(\"\");\n-  };\n-  // USER ADMIN PROFILE UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    name: \"\",\n-    email: \"\",\n-    password: \"\",\n-    admin_type: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Admin name is required\"\n-          : /[-]?\\d+(\\.\\d+)?/.test(value)\n-          ? \"Admin name can not have a number.\"\n-          : value.length < 2\n-          ? \"Admin name should have 2 or more letters\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-          ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [\n-      (value) =>\n-        state.admin_id\n-          ? value === \"\"\n-          : value === \"\"\n-          ? \"Password is required\"\n-          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n-              value\n-            )\n-          ? null\n-          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n-    ],\n-    admin_type: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, setErrors, onInputChange, errors, validate } =\n-    useValidation(initialFormState, validators);\n-  /*Function to get admin detail */\n-  const AdminData = async () => {\n-    try {\n-      const userData = await AdminDetails(props.adminId);\n-      if (userData === undefined || userData.data.length === 0) {\n-        setState(initialFormState);\n-      } else {\n-        setState(userData.data[0]);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  useEffect(() => {\n-    if (props.adminId === \"0\" || props.adminId === undefined) {\n-      setState(initialFormState);\n-    } else {\n-      AdminData();\n-    }\n-  }, [props]);\n-\n-  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n-  const onAminProfileUpdateClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddAdmin(state);\n-        if (responseData.message === \"admin added successfully\") {\n-          toast.success(\"Admin added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"admin updated successfully\") {\n-          toast.success(\"Admin Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"Admin already exists\") {\n-          setAlready(\"Admin already exists\");\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER ADMIN PROFILE UPDATE VALIDATION\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"md\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>\n-        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n-          {props.adminId === \"0\" ? (\n-            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n-          ) : (\n-            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n-          )}\n-          <form onSubmit={onAminProfileUpdateClick}>\n-            <div className=\"form-group\">\n-              <label\n-                htmlFor=\"name\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Name <span className=\"text-danger\">*</span>\n-              </label>\n-              <input\n-                type=\"text\"\n-                className={\n-                  errors.name\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.name}\n-                onChange={onInputChange}\n-                id=\"name\"\n-                name=\"name\"\n-                placeholder=\"eg. Apple\"\n-              />\n-              {/*----ERROR MESSAGE FOR Admin Name----*/}\n-              {errors.name && (\n-                <span key={errors.name} className=\"text-danger font-size-3\">\n-                  {errors.name}\n-                </span>\n-              )}\n-            </div>\n             <div className=\"form-group \">\n               <label\n                 htmlFor=\"email\"\n                 className=\"font-size-4 text-black-2  line-height-reset\"\n@@ -631,11 +314,17 @@\n                 multiple={false}\n               >\n                 <option value={\"\"}>Select</option>\n                 {(filterjson.admintype || []).map((item, index) => {\n-                  return(<option value={item} key={index} className=\" text-capitalize\">\n-                    {item}\n-                  </option>)\n+                  return (\n+                    <option\n+                      value={item}\n+                      key={index}\n+                      className=\" text-capitalize\"\n+                    >\n+                      {item}\n+                    </option>\n+                  );\n                 })}\n               </select>\n               {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n               {errors.admin_type && (\n"
                },
                {
                    "date": 1694177048467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,9 @@\n                 onChange={onInputChange}\n                 id=\"contact_no\"\n                 name=\"contact_no\"\n                 min={0}\n+                placeholder=\"Enter contact no\"\n               />\n               {/*----ERROR MESSAGE FOR Admin Name----*/}\n               {errors.contact_no && (\n                 <span\n"
                },
                {
                    "date": 1694415254526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n import \"react-toastify/dist/ReactToastify.css\";\n import filterjson from \"../../json/filterjson\";\n \n function Addadmin(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n   let [already, setAlready] = useState(\"\");\n   let [loading, setLoading] = useState(false);\n   const [showPassword, setShowPassword] = useState(false);\n \n@@ -41,8 +43,9 @@\n     email: \"\",\n     password: \"\",\n     admin_type: \"\",\n     contact_no: \"\",\n+    profile_photo:\"\"\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     name: [\n@@ -92,8 +95,32 @@\n   };\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, setErrors, onInputChange, errors, validate } =\n     useValidation(initialFormState, validators);\n+    /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n   /*Function to get admin detail */\n   const AdminData = async () => {\n     try {\n       const userData = await AdminDetails(props.adminId);\n@@ -172,8 +199,37 @@\n           ) : (\n             <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n           )}\n           <form onSubmit={onAminProfileUpdateClick}>\n+          <div className=\"form-group mx-auto text-center\">\n+              <div className=\"mb-4 position-relative\">\n+                <input\n+                  type={\"file\"}\n+                  id=\"profile_photo\"\n+                  accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                  onChange={handleFileChange}\n+                  className=\"d-none\"\n+                />\n+                <img\n+                  className=\"rounded-circle\"\n+                  src={\n+                    state.profile_photo\n+                      ? state.profile_photo\n+                      : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                  }\n+                  alt=\"\"\n+                  width={\"100px\"}\n+                  height={\"100px\"}\n+                />\n+                <label\n+                  className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                  htmlFor=\"profile_photo\"\n+                >\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                </label>\n+              </div>\n+              <small className=\"text-danger\">{imgError}</small>\n+            </div>\n             <div className=\"form-group\">\n               <label\n                 htmlFor=\"name\"\n                 className=\"font-size-4 text-black-2  line-height-reset\"\n"
                },
                {
                    "date": 1694415282154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,23 @@\n   };\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, setErrors, onInputChange, errors, validate } =\n     useValidation(initialFormState, validators);\n+\n+     /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+  \n     /*Onchange function of profile */\n   const handleFileChange = async (event) => {\n     const file = event.target.files[0];\n     const reader = new FileReader();\n"
                },
                {
                    "date": 1694415334215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,442 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+import { AdminDetails, AddAdmin } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import filterjson from \"../../json/filterjson\";\n+\n+function Addadmin(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  let [already, setAlready] = useState(\"\");\n+  let [loading, setLoading] = useState(false);\n+  const [showPassword, setShowPassword] = useState(false);\n+\n+  /*Function to show hide password */\n+  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n+\n+  const renderIcon = () => {\n+    if (state.password.length > 0) {\n+      return showPassword ? (\n+        <i className=\"fa fa-eye-slash\"></i>\n+      ) : (\n+        <i className=\"fa fa-eye\"></i>\n+      );\n+    }\n+    return null;\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    props.close();\n+    setLoading(false);\n+    setAlready(\"\");\n+  };\n+  // USER ADMIN PROFILE UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    name: \"\",\n+    email: \"\",\n+    password: \"\",\n+    admin_type: \"\",\n+    contact_no: \"\",\n+    profile_photo: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Admin name is required\"\n+          : /[-]?\\d+(\\.\\d+)?/.test(value)\n+          ? \"Admin name can not have a number.\"\n+          : value.length < 2\n+          ? \"Admin name should have 2 or more letters\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+          ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        state.admin_id\n+          ? value === \"\"\n+          : value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+              value\n+            )\n+          ? null\n+          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    admin_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Contact no is required\"\n+          : value.length < 10\n+          ? \"Contact no can not be more than 10 digit\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ file.size > 100 * 1024 === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n+  /*Function to get admin detail */\n+  const AdminData = async () => {\n+    try {\n+      const userData = await AdminDetails(props.adminId);\n+      if (userData === undefined || userData.data.length === 0) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (props.adminId === \"0\" || props.adminId === undefined) {\n+      setState(initialFormState);\n+    } else {\n+      AdminData();\n+    }\n+  }, [props]);\n+\n+  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n+  const onAminProfileUpdateClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddAdmin(state);\n+        if (responseData.message === \"admin added successfully\") {\n+          toast.success(\"Admin added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"admin updated successfully\") {\n+          toast.success(\"Admin Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"Admin already exists\") {\n+          setAlready(\"Admin already exists\");\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER ADMIN PROFILE UPDATE VALIDATION\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"md\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n+          {props.adminId === \"0\" ? (\n+            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n+          ) : (\n+            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n+          )}\n+          <form onSubmit={onAminProfileUpdateClick}>\n+            <div className=\"form-group mx-auto text-center\">\n+              <div className=\"mb-4 position-relative\">\n+                <input\n+                  type={\"file\"}\n+                  id=\"profile_photo\"\n+                  accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                  onChange={handleFileChange}\n+                  className=\"d-none\"\n+                />\n+                <img\n+                  className=\"rounded-circle\"\n+                  src={\n+                    state.profile_photo\n+                      ? state.profile_photo\n+                      : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                  }\n+                  alt=\"\"\n+                  width={\"100px\"}\n+                  height={\"100px\"}\n+                />\n+                <label\n+                  className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                  htmlFor=\"profile_photo\"\n+                >\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                </label>\n+              </div>\n+              <small className=\"text-danger\">{imgError}</small>\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"name\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Name <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.name\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.name}\n+                onChange={onInputChange}\n+                id=\"name\"\n+                name=\"name\"\n+                placeholder=\"eg. Apple\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.name && (\n+                <span key={errors.name} className=\"text-danger font-size-3\">\n+                  {errors.name}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"contact_no\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Contact no <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"number\"\n+                className={\n+                  errors.contact_no\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.contact_no}\n+                onChange={onInputChange}\n+                id=\"contact_no\"\n+                name=\"contact_no\"\n+                min={0}\n+                placeholder=\"Enter contact no\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.contact_no && (\n+                <span\n+                  key={errors.contact_no}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.contact_no}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"email\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                E-mail <span className=\"text-danger\">*</span> :\n+              </label>\n+              <input\n+                className={\n+                  errors.email\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.email}\n+                onChange={onInputChange}\n+                id=\"email\"\n+                name=\"email\"\n+                type={\"email\"}\n+                disabled={props.adminId === \"0\" ? false : true}\n+              />\n+              {/*----ERROR MESSAGE FOR EMAIL----*/}\n+              {errors.email && (\n+                <span key={errors.email} className=\"text-danger font-size-3\">\n+                  {errors.email}\n+                </span>\n+              )}\n+            </div>\n+            {state.admin_id ? null : (\n+              <div className=\"form-group \">\n+                <label\n+                  htmlFor=\"password\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Password <span className=\"text-danger\">*</span> :\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type={showPassword ? \"text\" : \"password\"}\n+                    className={\n+                      errors.password\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    value={state.password}\n+                    onChange={onInputChange}\n+                    id=\"password\"\n+                    name=\"password\"\n+                  />\n+                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n+                    {renderIcon()}\n+                  </span>\n+                </div>\n+                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n+                {errors.password && (\n+                  <span\n+                    key={errors.password}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.password}\n+                  </span>\n+                )}\n+              </div>\n+            )}\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"admin_type\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Type <span className=\"text-danger\">*</span> :\n+              </label>\n+              <select\n+                type={\"text\"}\n+                className={\n+                  errors.admin_type\n+                    ? \"form-control border border-danger text-capitalize\"\n+                    : \"form-control\"\n+                }\n+                value={state.admin_type}\n+                onChange={onInputChange}\n+                id=\"admin_type\"\n+                name=\"admin_type\"\n+                multiple={false}\n+              >\n+                <option value={\"\"}>Select</option>\n+                {(filterjson.admintype || []).map((item, index) => {\n+                  return (\n+                    <option\n+                      value={item}\n+                      key={index}\n+                      className=\" text-capitalize\"\n+                    >\n+                      {item}\n+                    </option>\n+                  );\n+                })}\n+              </select>\n+              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n+              {errors.admin_type && (\n+                <span\n+                  key={errors.admin_type}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.admin_type}\n+                </span>\n+              )}\n+            </div>\n+            <span className=\"text-danger font-size-3\">{already}</span>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"submit\"\n+                >\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default Addadmin;\n"
                },
                {
                    "date": 1694415408684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n \n     reader.onload = (event) => {\n       const img = new Image();\n       img.onload = () => {\n-        if (/*file.size > 1024 * 100*/ file.size > 100 * 1024 === true) {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n           setImgError(\"Image size can't be more then 100 kb\");\n         } else {\n           setImgError(\"\");\n           setState({ ...state, profile_photo: event.target.result });\n@@ -439,446 +439,4 @@\n   );\n }\n \n export default Addadmin;\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-import { AdminDetails, AddAdmin } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import filterjson from \"../../json/filterjson\";\n-\n-function Addadmin(props) {\n-  let encoded;\n-  const [imgError, setImgError] = useState(\"\");\n-  let [already, setAlready] = useState(\"\");\n-  let [loading, setLoading] = useState(false);\n-  const [showPassword, setShowPassword] = useState(false);\n-\n-  /*Function to show hide password */\n-  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n-\n-  const renderIcon = () => {\n-    if (state.password.length > 0) {\n-      return showPassword ? (\n-        <i className=\"fa fa-eye-slash\"></i>\n-      ) : (\n-        <i className=\"fa fa-eye\"></i>\n-      );\n-    }\n-    return null;\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    props.close();\n-    setLoading(false);\n-    setAlready(\"\");\n-  };\n-  // USER ADMIN PROFILE UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    name: \"\",\n-    email: \"\",\n-    password: \"\",\n-    admin_type: \"\",\n-    contact_no: \"\",\n-    profile_photo:\"\"\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Admin name is required\"\n-          : /[-]?\\d+(\\.\\d+)?/.test(value)\n-          ? \"Admin name can not have a number.\"\n-          : value.length < 2\n-          ? \"Admin name should have 2 or more letters\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-          ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [\n-      (value) =>\n-        state.admin_id\n-          ? value === \"\"\n-          : value === \"\"\n-          ? \"Password is required\"\n-          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n-              value\n-            )\n-          ? null\n-          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n-    ],\n-    admin_type: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n-    ],\n-    contact_no: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Contact no is required\"\n-          : value.length < 10\n-          ? \"Contact no can not be more than 10 digit\"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, setErrors, onInputChange, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-     /*Function to convert file to base64 */\n-  const convertToBase64 = (file) => {\n-    return new Promise((resolve, reject) => {\n-      const fileReader = new FileReader();\n-      fileReader.addEventListener(\"load\", () => {\n-        resolve({ base64: fileReader.result });\n-      });\n-      fileReader.readAsDataURL(file);\n-      fileReader.onerror = (error) => {\n-        reject(error);\n-      };\n-    });\n-  };\n-  \n-    /*Onchange function of profile */\n-  const handleFileChange = async (event) => {\n-    const file = event.target.files[0];\n-    const reader = new FileReader();\n-\n-    reader.onload = (event) => {\n-      const img = new Image();\n-      img.onload = () => {\n-        if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n-          setImgError(\"Image size can't be more then 100 kb\");\n-        } else {\n-          setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n-        }\n-      };\n-      img.src = event.target.result;\n-    };\n-\n-    // Read the file as a data URL\n-    reader.readAsDataURL(file);\n-    encoded = await convertToBase64(file);\n-    let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n-  };\n-  /*Function to get admin detail */\n-  const AdminData = async () => {\n-    try {\n-      const userData = await AdminDetails(props.adminId);\n-      if (userData === undefined || userData.data.length === 0) {\n-        setState(initialFormState);\n-      } else {\n-        setState(userData.data[0]);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  useEffect(() => {\n-    if (props.adminId === \"0\" || props.adminId === undefined) {\n-      setState(initialFormState);\n-    } else {\n-      AdminData();\n-    }\n-  }, [props]);\n-\n-  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n-  const onAminProfileUpdateClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddAdmin(state);\n-        if (responseData.message === \"admin added successfully\") {\n-          toast.success(\"Admin added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"admin updated successfully\") {\n-          toast.success(\"Admin Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-        if (responseData.message === \"Admin already exists\") {\n-          setAlready(\"Admin already exists\");\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER ADMIN PROFILE UPDATE VALIDATION\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"md\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>\n-        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n-          {props.adminId === \"0\" ? (\n-            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n-          ) : (\n-            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n-          )}\n-          <form onSubmit={onAminProfileUpdateClick}>\n-          <div className=\"form-group mx-auto text-center\">\n-              <div className=\"mb-4 position-relative\">\n-                <input\n-                  type={\"file\"}\n-                  id=\"profile_photo\"\n-                  accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n-                  onChange={handleFileChange}\n-                  className=\"d-none\"\n-                />\n-                <img\n-                  className=\"rounded-circle\"\n-                  src={\n-                    state.profile_photo\n-                      ? state.profile_photo\n-                      : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                  }\n-                  alt=\"\"\n-                  width={\"100px\"}\n-                  height={\"100px\"}\n-                />\n-                <label\n-                  className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n-                  htmlFor=\"profile_photo\"\n-                >\n-                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n-                </label>\n-              </div>\n-              <small className=\"text-danger\">{imgError}</small>\n-            </div>\n-            <div className=\"form-group\">\n-              <label\n-                htmlFor=\"name\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Name <span className=\"text-danger\">*</span>\n-              </label>\n-              <input\n-                type=\"text\"\n-                className={\n-                  errors.name\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.name}\n-                onChange={onInputChange}\n-                id=\"name\"\n-                name=\"name\"\n-                placeholder=\"eg. Apple\"\n-              />\n-              {/*----ERROR MESSAGE FOR Admin Name----*/}\n-              {errors.name && (\n-                <span key={errors.name} className=\"text-danger font-size-3\">\n-                  {errors.name}\n-                </span>\n-              )}\n-            </div>\n-            <div className=\"form-group\">\n-              <label\n-                htmlFor=\"contact_no\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Contact no <span className=\"text-danger\">*</span>\n-              </label>\n-              <input\n-                type=\"number\"\n-                className={\n-                  errors.contact_no\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.contact_no}\n-                onChange={onInputChange}\n-                id=\"contact_no\"\n-                name=\"contact_no\"\n-                min={0}\n-                placeholder=\"Enter contact no\"\n-              />\n-              {/*----ERROR MESSAGE FOR Admin Name----*/}\n-              {errors.contact_no && (\n-                <span\n-                  key={errors.contact_no}\n-                  className=\"text-danger font-size-3\"\n-                >\n-                  {errors.contact_no}\n-                </span>\n-              )}\n-            </div>\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"email\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                E-mail <span className=\"text-danger\">*</span> :\n-              </label>\n-              <input\n-                className={\n-                  errors.email\n-                    ? \"form-control border border-danger\"\n-                    : \"form-control\"\n-                }\n-                value={state.email}\n-                onChange={onInputChange}\n-                id=\"email\"\n-                name=\"email\"\n-                type={\"email\"}\n-                disabled={props.adminId === \"0\" ? false : true}\n-              />\n-              {/*----ERROR MESSAGE FOR EMAIL----*/}\n-              {errors.email && (\n-                <span key={errors.email} className=\"text-danger font-size-3\">\n-                  {errors.email}\n-                </span>\n-              )}\n-            </div>\n-            {state.admin_id ? null : (\n-              <div className=\"form-group \">\n-                <label\n-                  htmlFor=\"password\"\n-                  className=\"font-size-4 text-black-2  line-height-reset\"\n-                >\n-                  Password <span className=\"text-danger\">*</span> :\n-                </label>\n-                <div className=\"position-relative\">\n-                  <input\n-                    type={showPassword ? \"text\" : \"password\"}\n-                    className={\n-                      errors.password\n-                        ? \"form-control border border-danger\"\n-                        : \"form-control\"\n-                    }\n-                    value={state.password}\n-                    onChange={onInputChange}\n-                    id=\"password\"\n-                    name=\"password\"\n-                  />\n-                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n-                    {renderIcon()}\n-                  </span>\n-                </div>\n-                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n-                {errors.password && (\n-                  <span\n-                    key={errors.password}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.password}\n-                  </span>\n-                )}\n-              </div>\n-            )}\n-            <div className=\"form-group \">\n-              <label\n-                htmlFor=\"admin_type\"\n-                className=\"font-size-4 text-black-2  line-height-reset\"\n-              >\n-                Admin Type <span className=\"text-danger\">*</span> :\n-              </label>\n-              <select\n-                type={\"text\"}\n-                className={\n-                  errors.admin_type\n-                    ? \"form-control border border-danger text-capitalize\"\n-                    : \"form-control\"\n-                }\n-                value={state.admin_type}\n-                onChange={onInputChange}\n-                id=\"admin_type\"\n-                name=\"admin_type\"\n-                multiple={false}\n-              >\n-                <option value={\"\"}>Select</option>\n-                {(filterjson.admintype || []).map((item, index) => {\n-                  return (\n-                    <option\n-                      value={item}\n-                      key={index}\n-                      className=\" text-capitalize\"\n-                    >\n-                      {item}\n-                    </option>\n-                  );\n-                })}\n-              </select>\n-              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n-              {errors.admin_type && (\n-                <span\n-                  key={errors.admin_type}\n-                  className=\"text-danger font-size-3\"\n-                >\n-                  {errors.admin_type}\n-                </span>\n-              )}\n-            </div>\n-            <span className=\"text-danger font-size-3\">{already}</span>\n-            <div className=\"form-group text-center\">\n-              {loading === true ? (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"button\"\n-                  disabled\n-                >\n-                  <span\n-                    className=\"spinner-border spinner-border-sm \"\n-                    role=\"status\"\n-                    aria-hidden=\"true\"\n-                  ></span>\n-                  <span className=\"sr-only\">Loading...</span>\n-                </button>\n-              ) : (\n-                <button\n-                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                  type=\"submit\"\n-                >\n-                  Submit\n-                </button>\n-              )}\n-            </div>\n-          </form>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default Addadmin;\n"
                },
                {
                    "date": 1694415536231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     email: \"\",\n     password: \"\",\n     admin_type: \"\",\n     contact_no: \"\",\n-    profile_photo: \"\",\n+    profile_image: \"\",\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     name: [\n@@ -122,9 +122,9 @@\n         if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n           setImgError(\"Image size can't be more then 100 kb\");\n         } else {\n           setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n+          setState({ ...state, profile_image: event.target.result });\n         }\n       };\n       img.src = event.target.result;\n     };\n@@ -132,9 +132,9 @@\n     // Read the file as a data URL\n     reader.readAsDataURL(file);\n     encoded = await convertToBase64(file);\n     let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n+    setState({ ...state, profile_image: base64Name });\n   };\n   /*Function to get admin detail */\n   const AdminData = async () => {\n     try {\n@@ -218,27 +218,27 @@\n             <div className=\"form-group mx-auto text-center\">\n               <div className=\"mb-4 position-relative\">\n                 <input\n                   type={\"file\"}\n-                  id=\"profile_photo\"\n+                  id=\"profile_image\"\n                   accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n                   onChange={handleFileChange}\n                   className=\"d-none\"\n                 />\n                 <img\n                   className=\"rounded-circle\"\n                   src={\n-                    state.profile_photo\n-                      ? state.profile_photo\n+                    state.profile_image\n+                      ? state.profile_image\n                       : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                   }\n                   alt=\"\"\n                   width={\"100px\"}\n                   height={\"100px\"}\n                 />\n                 <label\n                   className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n-                  htmlFor=\"profile_photo\"\n+                  htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                 </label>\n               </div>\n"
                },
                {
                    "date": 1694415804872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                   width={\"100px\"}\n                   height={\"100px\"}\n                 />\n                 <label\n-                  className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                  className=\"mt-lg-20 mx-lg-31 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                 </label>\n"
                },
                {
                    "date": 1694415986389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                   width={\"100px\"}\n                   height={\"100px\"}\n                 />\n                 <label\n-                  className=\"mt-lg-20 mx-lg-31 bg-transparent edit_profile_icon\"\n+                  className=\"mt-lg-20 mx-lg-28 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                 </label>\n"
                },
                {
                    "date": 1694416009464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                   width={\"100px\"}\n                   height={\"100px\"}\n                 />\n                 <label\n-                  className=\"mt-lg-20 mx-lg-28 bg-transparent edit_profile_icon\"\n+                  className=\"mt-lg-20 mx-lg-25 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                 </label>\n"
                },
                {
                    "date": 1694416018556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                   width={\"100px\"}\n                   height={\"100px\"}\n                 />\n                 <label\n-                  className=\"mt-lg-20 mx-lg-25 bg-transparent edit_profile_icon\"\n+                  className=\"mt-lg-20 mx-lg-25 mx-xl-31 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                 </label>\n"
                },
                {
                    "date": 1694416138635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                 <label\n                   className=\"mt-lg-20 mx-lg-25 mx-xl-31 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n-                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-10 mt-lg-3 \"></span>\n                 </label>\n               </div>\n               <small className=\"text-danger\">{imgError}</small>\n             </div>\n"
                },
                {
                    "date": 1694416156917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                 <label\n                   className=\"mt-lg-20 mx-lg-25 mx-xl-31 bg-transparent edit_profile_icon\"\n                   htmlFor=\"profile_image\"\n                 >\n-                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-10 mt-lg-3 \"></span>\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-1 mt-lg-3 \"></span>\n                 </label>\n               </div>\n               <small className=\"text-danger\">{imgError}</small>\n             </div>\n"
                },
                {
                    "date": 1694416270111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,443 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+import { AdminDetails, AddAdmin } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import filterjson from \"../../json/filterjson\";\n+\n+function Addadmin(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  let [already, setAlready] = useState(\"\");\n+  let [loading, setLoading] = useState(false);\n+  const [showPassword, setShowPassword] = useState(false);\n+\n+  /*Function to show hide password */\n+  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n+\n+  const renderIcon = () => {\n+    if (state.password.length > 0) {\n+      return showPassword ? (\n+        <i className=\"fa fa-eye-slash\"></i>\n+      ) : (\n+        <i className=\"fa fa-eye\"></i>\n+      );\n+    }\n+    return null;\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    props.close();\n+    setLoading(false);\n+    setAlready(\"\");\n+  };\n+  // USER ADMIN PROFILE UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    name: \"\",\n+    email: \"\",\n+    password: \"\",\n+    admin_type: \"\",\n+    contact_no: \"\",\n+    profile_image: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Admin name is required\"\n+          : /[-]?\\d+(\\.\\d+)?/.test(value)\n+          ? \"Admin name can not have a number.\"\n+          : value.length < 2\n+          ? \"Admin name should have 2 or more letters\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+          ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        state.admin_id\n+          ? value === \"\"\n+          : value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+              value\n+            )\n+          ? null\n+          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    admin_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Contact no is required\"\n+          : value.length < 10\n+          ? \"Contact no can not be more than 10 digit\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_image: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_image: base64Name });\n+  };\n+  /*Function to get admin detail */\n+  const AdminData = async () => {\n+    try {\n+      const userData = await AdminDetails(props.adminId);\n+      if (userData === undefined || userData.data.length === 0) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (props.adminId === \"0\" || props.adminId === undefined) {\n+      setState(initialFormState);\n+    } else {\n+      AdminData();\n+    }\n+  }, [props]);\n+\n+  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n+  const onAminProfileUpdateClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddAdmin(state);\n+        if (responseData.message === \"admin added successfully\") {\n+          toast.success(\"Admin added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"admin updated successfully\") {\n+          toast.success(\"Admin Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"Admin already exists\") {\n+          setAlready(\"Admin already exists\");\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER ADMIN PROFILE UPDATE VALIDATION\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"md\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n+          {props.adminId === \"0\" ? (\n+            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n+          ) : (\n+            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n+          )}\n+          <form onSubmit={onAminProfileUpdateClick}>\n+            <div className=\"form-group mx-auto text-center\">\n+              <div className=\"mb-4 position-relative\">\n+                <input\n+                  type={\"file\"}\n+                  id=\"profile_image\"\n+                  accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                  onChange={handleFileChange}\n+                  className=\"d-none\"\n+                />\n+                <img\n+                  className=\"rounded-circle\"\n+                  src={\n+                    state.profile_image\n+                      ? state.profile_image\n+                      : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                  }\n+                  alt=\"\"\n+                  width={\"100px\"}\n+                  height={\"100px\"}\n+                />\n+                <label\n+                  className=\"mt-lg-20 mx-lg-31\n+                   bg-transparent edit_profile_icon\"\n+                  htmlFor=\"profile_image\"\n+                >\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-1 mt-lg-3 \"></span>\n+                </label>\n+              </div>\n+              <small className=\"text-danger\">{imgError}</small>\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"name\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Name <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.name\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.name}\n+                onChange={onInputChange}\n+                id=\"name\"\n+                name=\"name\"\n+                placeholder=\"eg. Apple\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.name && (\n+                <span key={errors.name} className=\"text-danger font-size-3\">\n+                  {errors.name}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"contact_no\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Contact no <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"number\"\n+                className={\n+                  errors.contact_no\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.contact_no}\n+                onChange={onInputChange}\n+                id=\"contact_no\"\n+                name=\"contact_no\"\n+                min={0}\n+                placeholder=\"Enter contact no\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.contact_no && (\n+                <span\n+                  key={errors.contact_no}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.contact_no}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"email\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                E-mail <span className=\"text-danger\">*</span> :\n+              </label>\n+              <input\n+                className={\n+                  errors.email\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.email}\n+                onChange={onInputChange}\n+                id=\"email\"\n+                name=\"email\"\n+                type={\"email\"}\n+                disabled={props.adminId === \"0\" ? false : true}\n+              />\n+              {/*----ERROR MESSAGE FOR EMAIL----*/}\n+              {errors.email && (\n+                <span key={errors.email} className=\"text-danger font-size-3\">\n+                  {errors.email}\n+                </span>\n+              )}\n+            </div>\n+            {state.admin_id ? null : (\n+              <div className=\"form-group \">\n+                <label\n+                  htmlFor=\"password\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Password <span className=\"text-danger\">*</span> :\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type={showPassword ? \"text\" : \"password\"}\n+                    className={\n+                      errors.password\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    value={state.password}\n+                    onChange={onInputChange}\n+                    id=\"password\"\n+                    name=\"password\"\n+                  />\n+                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n+                    {renderIcon()}\n+                  </span>\n+                </div>\n+                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n+                {errors.password && (\n+                  <span\n+                    key={errors.password}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.password}\n+                  </span>\n+                )}\n+              </div>\n+            )}\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"admin_type\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Type <span className=\"text-danger\">*</span> :\n+              </label>\n+              <select\n+                type={\"text\"}\n+                className={\n+                  errors.admin_type\n+                    ? \"form-control border border-danger text-capitalize\"\n+                    : \"form-control\"\n+                }\n+                value={state.admin_type}\n+                onChange={onInputChange}\n+                id=\"admin_type\"\n+                name=\"admin_type\"\n+                multiple={false}\n+              >\n+                <option value={\"\"}>Select</option>\n+                {(filterjson.admintype || []).map((item, index) => {\n+                  return (\n+                    <option\n+                      value={item}\n+                      key={index}\n+                      className=\" text-capitalize\"\n+                    >\n+                      {item}\n+                    </option>\n+                  );\n+                })}\n+              </select>\n+              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n+              {errors.admin_type && (\n+                <span\n+                  key={errors.admin_type}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.admin_type}\n+                </span>\n+              )}\n+            </div>\n+            <span className=\"text-danger font-size-3\">{already}</span>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"submit\"\n+                >\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default Addadmin;\n"
                },
                {
                    "date": 1694416382342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,443 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+import { AdminDetails, AddAdmin } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import filterjson from \"../../json/filterjson\";\n+\n+function Addadmin(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  let [already, setAlready] = useState(\"\");\n+  let [loading, setLoading] = useState(false);\n+  const [showPassword, setShowPassword] = useState(false);\n+\n+  /*Function to show hide password */\n+  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n+\n+  const renderIcon = () => {\n+    if (state.password.length > 0) {\n+      return showPassword ? (\n+        <i className=\"fa fa-eye-slash\"></i>\n+      ) : (\n+        <i className=\"fa fa-eye\"></i>\n+      );\n+    }\n+    return null;\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    props.close();\n+    setLoading(false);\n+    setAlready(\"\");\n+  };\n+  // USER ADMIN PROFILE UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    name: \"\",\n+    email: \"\",\n+    password: \"\",\n+    admin_type: \"\",\n+    contact_no: \"\",\n+    profile_photo: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Admin name is required\"\n+          : /[-]?\\d+(\\.\\d+)?/.test(value)\n+          ? \"Admin name can not have a number.\"\n+          : value.length < 2\n+          ? \"Admin name should have 2 or more letters\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+          ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [\n+      (value) =>\n+        state.admin_id\n+          ? value === \"\"\n+          : value === \"\"\n+          ? \"Password is required\"\n+          : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n+              value\n+            )\n+          ? null\n+          : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n+    ],\n+    admin_type: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Contact no is required\"\n+          : value.length < 10\n+          ? \"Contact no can not be more than 10 digit\"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, setErrors, onInputChange, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n+  /*Function to get admin detail */\n+  const AdminData = async () => {\n+    try {\n+      const userData = await AdminDetails(props.adminId);\n+      if (userData === undefined || userData.data.length === 0) {\n+        setState(initialFormState);\n+      } else {\n+        setState(userData.data[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  useEffect(() => {\n+    if (props.adminId === \"0\" || props.adminId === undefined) {\n+      setState(initialFormState);\n+    } else {\n+      AdminData();\n+    }\n+  }, [props]);\n+\n+  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n+  const onAminProfileUpdateClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddAdmin(state);\n+        if (responseData.message === \"admin added successfully\") {\n+          toast.success(\"Admin added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"admin updated successfully\") {\n+          toast.success(\"Admin Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message === \"Admin already exists\") {\n+          setAlready(\"Admin already exists\");\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER ADMIN PROFILE UPDATE VALIDATION\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"md\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>\n+        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n+          {props.adminId === \"0\" ? (\n+            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n+          ) : (\n+            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n+          )}\n+          <form onSubmit={onAminProfileUpdateClick}>\n+            <div className=\"form-group mx-auto text-center\">\n+              <div className=\"mb-4 position-relative\">\n+                <input\n+                  type={\"file\"}\n+                  id=\"profile_photo\"\n+                  accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                  onChange={handleFileChange}\n+                  className=\"d-none\"\n+                />\n+                <img\n+                  className=\"rounded-circle\"\n+                  src={\n+                    state.profile_photo\n+                      ? state.profile_photo\n+                      : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                  }\n+                  alt=\"\"\n+                  width={\"100px\"}\n+                  height={\"100px\"}\n+                />\n+                <label\n+                  className=\"mt-lg-20 mx-lg-31\n+                   bg-transparent edit_profile_icon\"\n+                  htmlFor=\"profile_photo\"\n+                >\n+                  <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-1 mt-lg-3 \"></span>\n+                </label>\n+              </div>\n+              <small className=\"text-danger\">{imgError}</small>\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"name\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Name <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"text\"\n+                className={\n+                  errors.name\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.name}\n+                onChange={onInputChange}\n+                id=\"name\"\n+                name=\"name\"\n+                placeholder=\"eg. Apple\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.name && (\n+                <span key={errors.name} className=\"text-danger font-size-3\">\n+                  {errors.name}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group\">\n+              <label\n+                htmlFor=\"contact_no\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Contact no <span className=\"text-danger\">*</span>\n+              </label>\n+              <input\n+                type=\"number\"\n+                className={\n+                  errors.contact_no\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.contact_no}\n+                onChange={onInputChange}\n+                id=\"contact_no\"\n+                name=\"contact_no\"\n+                min={0}\n+                placeholder=\"Enter contact no\"\n+              />\n+              {/*----ERROR MESSAGE FOR Admin Name----*/}\n+              {errors.contact_no && (\n+                <span\n+                  key={errors.contact_no}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.contact_no}\n+                </span>\n+              )}\n+            </div>\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"email\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                E-mail <span className=\"text-danger\">*</span> :\n+              </label>\n+              <input\n+                className={\n+                  errors.email\n+                    ? \"form-control border border-danger\"\n+                    : \"form-control\"\n+                }\n+                value={state.email}\n+                onChange={onInputChange}\n+                id=\"email\"\n+                name=\"email\"\n+                type={\"email\"}\n+                disabled={props.adminId === \"0\" ? false : true}\n+              />\n+              {/*----ERROR MESSAGE FOR EMAIL----*/}\n+              {errors.email && (\n+                <span key={errors.email} className=\"text-danger font-size-3\">\n+                  {errors.email}\n+                </span>\n+              )}\n+            </div>\n+            {state.admin_id ? null : (\n+              <div className=\"form-group \">\n+                <label\n+                  htmlFor=\"password\"\n+                  className=\"font-size-4 text-black-2  line-height-reset\"\n+                >\n+                  Password <span className=\"text-danger\">*</span> :\n+                </label>\n+                <div className=\"position-relative\">\n+                  <input\n+                    type={showPassword ? \"text\" : \"password\"}\n+                    className={\n+                      errors.password\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    value={state.password}\n+                    onChange={onInputChange}\n+                    id=\"password\"\n+                    name=\"password\"\n+                  />\n+                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n+                    {renderIcon()}\n+                  </span>\n+                </div>\n+                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n+                {errors.password && (\n+                  <span\n+                    key={errors.password}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.password}\n+                  </span>\n+                )}\n+              </div>\n+            )}\n+            <div className=\"form-group \">\n+              <label\n+                htmlFor=\"admin_type\"\n+                className=\"font-size-4 text-black-2  line-height-reset\"\n+              >\n+                Admin Type <span className=\"text-danger\">*</span> :\n+              </label>\n+              <select\n+                type={\"text\"}\n+                className={\n+                  errors.admin_type\n+                    ? \"form-control border border-danger text-capitalize\"\n+                    : \"form-control\"\n+                }\n+                value={state.admin_type}\n+                onChange={onInputChange}\n+                id=\"admin_type\"\n+                name=\"admin_type\"\n+                multiple={false}\n+              >\n+                <option value={\"\"}>Select</option>\n+                {(filterjson.admintype || []).map((item, index) => {\n+                  return (\n+                    <option\n+                      value={item}\n+                      key={index}\n+                      className=\" text-capitalize\"\n+                    >\n+                      {item}\n+                    </option>\n+                  );\n+                })}\n+              </select>\n+              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n+              {errors.admin_type && (\n+                <span\n+                  key={errors.admin_type}\n+                  className=\"text-danger font-size-3\"\n+                >\n+                  {errors.admin_type}\n+                </span>\n+              )}\n+            </div>\n+            <span className=\"text-danger font-size-3\">{already}</span>\n+            <div className=\"form-group text-center\">\n+              {loading === true ? (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"button\"\n+                  disabled\n+                >\n+                  <span\n+                    className=\"spinner-border spinner-border-sm \"\n+                    role=\"status\"\n+                    aria-hidden=\"true\"\n+                  ></span>\n+                  <span className=\"sr-only\">Loading...</span>\n+                </button>\n+              ) : (\n+                <button\n+                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                  type=\"submit\"\n+                >\n+                  Submit\n+                </button>\n+              )}\n+            </div>\n+          </form>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default Addadmin;\n"
                },
                {
                    "date": 1694423400379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     email: \"\",\n     password: \"\",\n     admin_type: \"\",\n     contact_no: \"\",\n-    profile_photo: \"\",\n+    profile_image: \"\",\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     name: [\n@@ -122,9 +122,9 @@\n         if (/*file.size > 1024 * 100*/ (file.size > 100 * 1024) === true) {\n           setImgError(\"Image size can't be more then 100 kb\");\n         } else {\n           setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n+          setState({ ...state, profile_image: event.target.result });\n         }\n       };\n       img.src = event.target.result;\n     };\n@@ -132,9 +132,9 @@\n     // Read the file as a data URL\n     reader.readAsDataURL(file);\n     encoded = await convertToBase64(file);\n     let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n+    setState({ ...state, profile_image: base64Name });\n   };\n   /*Function to get admin detail */\n   const AdminData = async () => {\n     try {\n@@ -218,18 +218,18 @@\n             <div className=\"form-group mx-auto text-center\">\n               <div className=\"mb-4 position-relative\">\n                 <input\n                   type={\"file\"}\n-                  id=\"profile_photo\"\n+                  id=\"profile_image\"\n                   accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n                   onChange={handleFileChange}\n                   className=\"d-none\"\n                 />\n                 <img\n                   className=\"rounded-circle\"\n                   src={\n-                    state.profile_photo\n-                      ? state.profile_photo\n+                    state.profile_image\n+                      ? state.profile_image\n                       : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                   }\n                   alt=\"\"\n                   width={\"100px\"}\n@@ -237,9 +237,9 @@\n                 />\n                 <label\n                   className=\"mt-lg-20 mx-lg-31\n                    bg-transparent edit_profile_icon\"\n-                  htmlFor=\"profile_photo\"\n+                  htmlFor=\"profile_image\"\n                 >\n                   <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-1 mt-lg-3 \"></span>\n                 </label>\n               </div>\n"
                },
                {
                    "date": 1694424924632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,10 @@\n         value === \"\" || value.trim() === \"\"\n           ? \"Contact no is required\"\n           : value.length < 10\n           ? \"Contact no can not be more than 10 digit\"\n+          : value.length > 10\n+          ? \"Contact no can not be less than 10 digit\"\n           : \"\",\n     ],\n   };\n   // CUSTOM VALIDATIONS IMPORT\n"
                },
                {
                    "date": 1694424968812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,11 +88,11 @@\n       (value) =>\n         value === \"\" || value.trim() === \"\"\n           ? \"Contact no is required\"\n           : value.length < 10\n+          ? \"Contact no can not be less than 10 digit\"\n+          : value.length > 10\n           ? \"Contact no can not be more than 10 digit\"\n-          : value.length > 10\n-          ? \"Contact no can not be less than 10 digit\"\n           : \"\",\n     ],\n   };\n   // CUSTOM VALIDATIONS IMPORT\n"
                }
            ],
            "date": 1693486845044,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\nimport { AdminDetails, AddAdmin } from \"../../../api//api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Addadmin(props) {\n  let [already, setAlready] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  /*Function to show hide password */\n  const toggleShowPassword = () => setShowPassword((prev) => !prev);\n\n  const renderIcon = () => {\n    if (state.password.length > 0) {\n      return showPassword ? (\n        <i className=\"fa fa-eye-slash\"></i>\n      ) : (\n        <i className=\"fa fa-eye\"></i>\n      );\n    }\n    return null;\n  };\n\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    props.close();\n    setLoading(false);\n    setAlready(\"\");\n  };\n  // USER ADMIN PROFILE UPDATE VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    admin_type: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    name: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Admin name is required\"\n          : /[-]?\\d+(\\.\\d+)?/.test(value)\n            ? \"Admin name can not have a number.\"\n            : value.length < 2\n              ? \"Admin name should have 2 or more letters\"\n              : /[^A-Za-z 0-9]/g.test(value)\n                ? \"Cannot use special character \"\n                : \"\",\n    ],\n    email: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n            ? null\n            : \"Email is invalid\",\n    ],\n    password: [\n      (value) =>\n        state.admin_id\n          ? value === \"\"\n          : value === \"\"\n            ? \"Password is required\"\n            : /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.* ).{8,16}$/.test(\n              value\n            )\n              ? null\n              : \"Password must contain digit, one uppercase letter, one special character, no space, and it must be 8-16 characters long\",\n    ],\n    admin_type: [\n      (value) =>\n        value === \"\" || value.trim() === \"\" ? \"Admin type is required\" : null,\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, setErrors, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n  /*Function to get admin detail */\n  const AdminData = async () => {\n    try {\n      const userData = await AdminDetails(props.adminId);\n      if (userData === undefined || userData.data.length === 0) {\n        setState(initialFormState);\n      } else {\n        setState(userData.data[0]);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  useEffect(() => {\n    if (props.adminId === \"0\" || props.adminId === undefined) {\n      setState(initialFormState);\n    } else {\n      AdminData();\n    }\n  }, [props]);\n\n  // USER ADMIN PROFILE UPDATE SUBMIT BUTTON\n  const onAminProfileUpdateClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        const responseData = await AddAdmin(state);\n        if (responseData.message === \"admin added successfully\") {\n          toast.success(\"Admin added successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n        if (responseData.message === \"admin updated successfully\") {\n          toast.success(\"Admin Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n        if (responseData.message === \"Admin already exists\") {\n          setAlready(\"Admin already exists\");\n          setLoading(false);\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END USER ADMIN PROFILE UPDATE VALIDATION\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n          {props.adminId === \"0\" ? (\n            <h5 className=\"text-center pt-2 mb-7\">Add Admin</h5>\n          ) : (\n            <h5 className=\"text-center pt-2 mb-7\">Update Admin</h5>\n          )}\n          <form onSubmit={onAminProfileUpdateClick}>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"name\"\n                className=\"font-size-4 text-black-2  line-height-reset\"\n              >\n                Admin Name <span className=\"text-danger\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                className={\n                  errors.name\n                    ? \"form-control border border-danger\"\n                    : \"form-control\"\n                }\n                value={state.name}\n                onChange={onInputChange}\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"eg. Apple\"\n              />\n              {/*----ERROR MESSAGE FOR Admin Name----*/}\n              {errors.name && (\n                <span key={errors.name} className=\"text-danger font-size-3\">\n                  {errors.name}\n                </span>\n              )}\n            </div>\n            <div className=\"form-group \">\n              <label\n                htmlFor=\"email\"\n                className=\"font-size-4 text-black-2  line-height-reset\"\n              >\n                E-mail <span className=\"text-danger\">*</span> :\n              </label>\n              <input\n                className={\n                  errors.email\n                    ? \"form-control border border-danger\"\n                    : \"form-control\"\n                }\n                value={state.email}\n                onChange={onInputChange}\n                id=\"email\"\n                name=\"email\"\n                type={\"email\"}\n                disabled={props.adminId === \"0\" ? false : true}\n              />\n              {/*----ERROR MESSAGE FOR EMAIL----*/}\n              {errors.email && (\n                <span key={errors.email} className=\"text-danger font-size-3\">\n                  {errors.email}\n                </span>\n              )}\n            </div>\n            {state.admin_id ? null : (\n              <div className=\"form-group \">\n                <label\n                  htmlFor=\"password\"\n                  className=\"font-size-4 text-black-2  line-height-reset\"\n                >\n                  Password <span className=\"text-danger\">*</span> :\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    className={\n                      errors.password\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    value={state.password}\n                    onChange={onInputChange}\n                    id=\"password\"\n                    name=\"password\"\n                  />\n                  <span className=\"password-icon\" onClick={toggleShowPassword}>\n                    {renderIcon()}\n                  </span>\n                </div>\n                {/*----ERROR MESSAGE FOR ADMIN PASSWORD----*/}\n                {errors.password && (\n                  <span\n                    key={errors.password}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.password}\n                  </span>\n                )}\n              </div>\n            )}\n            <div className=\"form-group \">\n              <label\n                htmlFor=\"admin_type\"\n                className=\"font-size-4 text-black-2  line-height-reset\"\n              >\n                Admin Type <span className=\"text-danger\">*</span> :\n              </label>\n              <select\n                type={\"text\"}\n                className={\n                  errors.admin_type\n                    ? \"form-control border border-danger\"\n                    : \"form-control\"\n                }\n                value={state.admin_type}\n                onChange={onInputChange}\n                id=\"admin_type\"\n                name=\"admin_type\"\n                multiple={false}\n              >\n                <option value={\"\"}>Select</option>\n                <option value={\"super-admin\"}>Superadmin</option>\n                <option value={\"admin\"}>Admin</option>\n                <option value={\"manager\"}>Manager</option>\n              </select>\n              {/*----ERROR MESSAGE FOR ADMIN TYPE----*/}\n              {errors.admin_type && (\n                <span\n                  key={errors.admin_type}\n                  className=\"text-danger font-size-3\"\n                >\n                  {errors.admin_type}\n                </span>\n              )}\n            </div>\n            <span className=\"text-danger font-size-3\">{already}</span>\n            <div className=\"form-group text-center\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default Addadmin;\n"
        }
    ]
}