{
    "sourceFile": "src/components/forms/admin/addfollowup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1709536584319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709641346877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,13 @@\n                             \"Do MMM YYYY, h:mm:ss a\"\n                           )}\n                         </i>\n                       </div>\n-                      <p className=\"font-size-4 m-0\">{res.remark}</p>\n+                      <p className=\"font-size-4 m-0\"><div\n+                        dangerouslySetInnerHTML={{\n+                          __html: res.remark,\n+                        }}\n+                      />{ }</p>\n                     </div>\n                   </div>\n                   // <div className=\"card mt-5 mb-5\" key={res.id}>\n                   //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n"
                },
                {
                    "date": 1709893473994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,10 @@\n                             \"Do MMM YYYY, h:mm:ss a\"\n                           )}\n                         </i>\n                       </div>\n-                      <p className=\"font-size-4 m-0\"><div\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n                         dangerouslySetInnerHTML={{\n                           __html: res.remark,\n                         }}\n                       />{ }</p>\n@@ -525,12 +526,13 @@\n                           <p className=\"font-size-3 mb-0\">N/A</p>\n                         ) : (\n                           <p\n                             className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html:res.subject\n+                            }}\n                             title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n+                          />\n                         )}\n                       </td>\n                       <td>\n                         {res.remark === \"\" ||\n"
                },
                {
                    "date": 1709893539440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,12 +171,12 @@\n                         </i>\n                       </div>\n                       <p className=\"font-size-4 m-0\">\n                         <div\n-                        dangerouslySetInnerHTML={{\n-                          __html: res.remark,\n-                        }}\n-                      />{ }</p>\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        />{ }</p>\n                     </div>\n                   </div>\n                   // <div className=\"card mt-5 mb-5\" key={res.id}>\n                   //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n@@ -526,13 +526,12 @@\n                           <p className=\"font-size-3 mb-0\">N/A</p>\n                         ) : (\n                           <p\n                             className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html:res.subject\n-                            }}\n                             title={res.subject}\n-                          />\n+                          >\n+                            {res.subject}\n+                          </p>\n                         )}\n                       </td>\n                       <td>\n                         {res.remark === \"\" ||\n@@ -540,11 +539,13 @@\n                           res.remark === null ||\n                           res.remark === undefined ? (\n                           <p className=\"font-size-3 mb-0\">N/A</p>\n                         ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\">\n-                            <small>{res.remark}</small>\n-                          </p>\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n                         )}\n                       </td>\n                       <td>\n                         {res.created_at === \"\" ||\n"
                },
                {
                    "date": 1710745287375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,9 @@\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n   let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n   // le/*tjobId*/ = props.job_id;\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n+\n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n \n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n@@ -91,8 +85,16 @@\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, onInputChange, errors, setErrors, validate } =\n     useValidation(initialFormState, validators);\n \n+      /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+  \n   // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n"
                },
                {
                    "date": 1712052132276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,16 +85,16 @@\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, onInputChange, errors, setErrors, validate } =\n     useValidation(initialFormState, validators);\n \n-      /* Functionality to close the modal */\n+  /* Functionality to close the modal */\n   const close = () => {\n     setState(initialFormState);\n     setErrors(\"\");\n     setLoading(false);\n     // props.close();\n   };\n-  \n+\n   // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n@@ -198,9 +198,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\"||user_type===\"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712053213477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,597 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import { getSingleFollowup, AddFollowup } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  // le/*tjobId*/ = props.job_id;\n+\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      const userData = await getSingleFollowup(\n+        props.employee_id !== \"\" ? props.employee_id : null,\n+        columnName,\n+        sortOrder\n+        // props.job_id\n+      );\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    remark: \"\",\n+    next_followup_date: \"\",\n+    subject: \"\",\n+    employee_id: employId,\n+    status: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        let responseData = await AddFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        />{ }</p>\n+                    </div>\n+                  </div>\n+                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n+                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n+                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n+                  //       <span className=\"text-dark\"> Posted date: </span>\n+                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n+                  //     </div>\n+                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n+                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n+                  //         <span className=\"text-dark\"> Next date: </span>\n+                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n+                  //       </div>}\n+                  //   </div>\n+                  //   <div className=\"card-body p-3\">{res.remark}</div>\n+                  // </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712057539957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,601 +594,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import { getSingleFollowup, AddFollowup } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  // le/*tjobId*/ = props.job_id;\n-\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      const userData = await getSingleFollowup(\n-        props.employee_id !== \"\" ? props.employee_id : null,\n-        columnName,\n-        sortOrder\n-        // props.job_id\n-      );\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    remark: \"\",\n-    next_followup_date: \"\",\n-    subject: \"\",\n-    employee_id: employId,\n-    status: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        let responseData = await AddFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        />{ }</p>\n-                    </div>\n-                  </div>\n-                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n-                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n-                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n-                  //       <span className=\"text-dark\"> Posted date: </span>\n-                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n-                  //     </div>\n-                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n-                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n-                  //         <span className=\"text-dark\"> Next date: </span>\n-                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n-                  //       </div>}\n-                  //   </div>\n-                  //   <div className=\"card-body p-3\">{res.remark}</div>\n-                  // </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\"||user_type===\"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712061649920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup, getAllFollowUpData } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  // le/*tjobId*/ = props.job_id;\n+\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const/* userData = await gegetAllUsersFollowUpDatatSingleFollowup*/(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId,props.userType,columnName,sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    remark: \"\",\n+    next_followup_date: \"\",\n+    subject: \"\",\n+    employee_id: employId,\n+    status: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        let responseData = await AddFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        />{ }</p>\n+                    </div>\n+                  </div>\n+                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n+                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n+                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n+                  //       <span className=\"text-dark\"> Posted date: </span>\n+                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n+                  //     </div>\n+                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n+                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n+                  //         <span className=\"text-dark\"> Next date: </span>\n+                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n+                  //       </div>}\n+                  //   </div>\n+                  //   <div className=\"card-body p-3\">{res.remark}</div>\n+                  // </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712061668975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   let [loading, setLoading] = useState(false);\n   /* Shorting states */\n   const [columnName, setcolumnName] = useState(\"next_followup_date\");\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n+  let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n   // le/*tjobId*/ = props.job_id;\n \n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n"
                },
                {
                    "date": 1712061678999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import useValidation from \"../../common/useValidation\";\n // import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup, getAllFollowUpData } from \"../../../api/api\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup } from \"../../../api/api\";\n import { toast, ToastContainer } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n import { Link } from \"react-router-dom\";\n import TextEditor from \"../../common/TextEditor\";\n@@ -597,601 +597,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import { getSingleFollowup, AddFollowup } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  // le/*tjobId*/ = props.job_id;\n-\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      const userData = await getSingleFollowup(\n-        props.employee_id !== \"\" ? props.employee_id : null,\n-        columnName,\n-        sortOrder\n-        // props.job_id\n-      );\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    remark: \"\",\n-    next_followup_date: \"\",\n-    subject: \"\",\n-    employee_id: employId,\n-    status: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        let responseData = await AddFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        />{ }</p>\n-                    </div>\n-                  </div>\n-                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n-                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n-                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n-                  //       <span className=\"text-dark\"> Posted date: </span>\n-                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n-                  //     </div>\n-                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n-                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n-                  //         <span className=\"text-dark\"> Next date: </span>\n-                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n-                  //       </div>}\n-                  //   </div>\n-                  //   <div className=\"card-body p-3\">{res.remark}</div>\n-                  // </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712061739193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n     try {\n       /*only for employee*/\n-      // const/* userData = await gegetAllUsersFollowUpDatatSingleFollowup*/(\n+      // const/* userData = await getSingleFollowup*/(\n       //   props.employee_id !== \"\" ? props.employee_id : null,\n       //   columnName,\n       //   sortOrder\n       //   // props.job_id\n@@ -51,9 +51,9 @@\n   };\n \n   /*Render function to get the Response*/\n   useEffect(() => {\n-    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n+    if (props.userId === undefined /*|| props.job_id === undefined*/) {\n     } else {\n       ResponseData();\n     }\n   }, [props, sortOrder]);\n"
                },
                {
                    "date": 1712061757356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n   };\n \n   /*Render function to get the Response*/\n   useEffect(() => {\n-    if (props.userId === undefined /*|| props.job_id === undefined*/) {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n     } else {\n       ResponseData();\n     }\n   }, [props, sortOrder]);\n"
                },
                {
                    "date": 1712061945989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,608 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  // le/*tjobId*/ = props.job_id;\n+\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const/* userData = await getSingleFollowup*/(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId,props.userType,columnName,sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    // Single user json\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    \"admin_id\": localStorage.getItem(\"admin_id\"),\n+    \"user_id\":props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"0\"\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        let responseData = await AddFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        />{ }</p>\n+                    </div>\n+                  </div>\n+                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n+                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n+                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n+                  //       <span className=\"text-dark\"> Posted date: </span>\n+                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n+                  //     </div>\n+                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n+                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n+                  //         <span className=\"text-dark\"> Next date: </span>\n+                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n+                  //       </div>}\n+                  //   </div>\n+                  //   <div className=\"card-body p-3\">{res.remark}</div>\n+                  // </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712061952661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   let [loading, setLoading] = useState(false);\n   /* Shorting states */\n   const [columnName, setcolumnName] = useState(\"next_followup_date\");\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  let employId = props.employee_id;\n+  // let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n   // le/*tjobId*/ = props.job_id;\n \n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n@@ -71,9 +71,9 @@\n     \"user_type\": props.userType,\n     \"remark\": \"\",\n     \"next_date\": \"\",\n     \"subject\": \"\",\n-    \"status\": \"0\"\n+    \"status\": \"\"\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     subject: [\n@@ -605,604 +605,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  // le/*tjobId*/ = props.job_id;\n-\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const/* userData = await getSingleFollowup*/(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId,props.userType,columnName,sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    remark: \"\",\n-    next_followup_date: \"\",\n-    subject: \"\",\n-    employee_id: employId,\n-    status: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        let responseData = await AddFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        />{ }</p>\n-                    </div>\n-                  </div>\n-                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n-                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n-                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n-                  //       <span className=\"text-dark\"> Posted date: </span>\n-                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n-                  //     </div>\n-                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n-                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n-                  //         <span className=\"text-dark\"> Next date: </span>\n-                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n-                  //       </div>}\n-                  //   </div>\n-                  //   <div className=\"card-body p-3\">{res.remark}</div>\n-                  // </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712062110880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import useValidation from \"../../common/useValidation\";\n // import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddFollowup } from \"../../../api/api\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData,AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n import { toast, ToastContainer } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n import { Link } from \"react-router-dom\";\n import TextEditor from \"../../common/TextEditor\";\n@@ -14,17 +14,16 @@\n   const [columnName, setcolumnName] = useState(\"next_followup_date\");\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n   // let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n-  // le/*tjobId*/ = props.job_id;\n \n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n \n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n     try {\n       /*only for employee*/\n-      // const/* userData = await getSingleFollowup*/(\n+      // const userData = await getSingleFollowup(\n       //   props.employee_id !== \"\" ? props.employee_id : null,\n       //   columnName,\n       //   sortOrder\n       //   // props.job_id\n@@ -59,14 +58,15 @@\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n   const initialFormState = {\n-    // Single user json\n+   /*only for employee*/\n     // remark: \"\",\n     // next_followup_date: \"\",\n     // subject: \"\",\n     // employee_id: employId,\n     // status: \"\",\n+    // For all user\n     \"admin_id\": localStorage.getItem(\"admin_id\"),\n     \"user_id\":props.userId,\n     \"user_type\": props.userType,\n     \"remark\": \"\",\n@@ -110,9 +110,12 @@\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n       try {\n-        let responseData = await AddFollowup(state);\n+         /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+                let responseData = await AddAllUserFollowup(state);\n         if (responseData.message === \"follow up updated successfully\") {\n           toast.success(\"Followup Updated successfully\", {\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n"
                },
                {
                    "date": 1712062230889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import useValidation from \"../../common/useValidation\";\n // import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData,AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n import { toast, ToastContainer } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n import { Link } from \"react-router-dom\";\n import TextEditor from \"../../common/TextEditor\";\n@@ -28,9 +28,9 @@\n       //   sortOrder\n       //   // props.job_id\n       // );\n       /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId,props.userType,columnName,sortOrder)\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n       if (\n         userData.data === null ||\n         userData.data === undefined ||\n         userData.data === \"undefined\" ||\n@@ -58,17 +58,17 @@\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n   const initialFormState = {\n-   /*only for employee*/\n+    /*only for employee*/\n     // remark: \"\",\n     // next_followup_date: \"\",\n     // subject: \"\",\n     // employee_id: employId,\n     // status: \"\",\n     // For all user\n     \"admin_id\": localStorage.getItem(\"admin_id\"),\n-    \"user_id\":props.userId,\n+    \"user_id\": props.userId,\n     \"user_type\": props.userType,\n     \"remark\": \"\",\n     \"next_date\": \"\",\n     \"subject\": \"\",\n@@ -110,12 +110,12 @@\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n       try {\n-         /*only for employee*/\n+        /*only for employee*/\n         // let responseData = await AddFollowup(state);\n         /*For all user*/\n-                let responseData = await AddAllUserFollowup(state);\n+        let responseData = await AddAllUserFollowup(state);\n         if (responseData.message === \"follow up updated successfully\") {\n           toast.success(\"Followup Updated successfully\", {\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n@@ -190,25 +190,11 @@\n                         <div\n                           dangerouslySetInnerHTML={{\n                             __html: res.remark,\n                           }}\n-                        />{ }</p>\n+                        /></p>\n                     </div>\n                   </div>\n-                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n-                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n-                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n-                  //       <span className=\"text-dark\"> Posted date: </span>\n-                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n-                  //     </div>\n-                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n-                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n-                  //         <span className=\"text-dark\"> Next date: </span>\n-                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n-                  //       </div>}\n-                  //   </div>\n-                  //   <div className=\"card-body p-3\">{res.remark}</div>\n-                  // </div>\n                 ))\n               )}\n             </div>\n             <div\n"
                },
                {
                    "date": 1712062415650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [columnName, setcolumnName] = useState(\"next_followup_date\");\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n   // let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n-\n+let adminId= localStorage.getItem(\"admin_id\")\n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n \n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n@@ -65,9 +65,9 @@\n     // subject: \"\",\n     // employee_id: employId,\n     // status: \"\",\n     // For all user\n-    \"admin_id\": localStorage.getItem(\"admin_id\"),\n+    \"admin_id\": adminId,\n     \"user_id\": props.userId,\n     \"user_type\": props.userType,\n     \"remark\": \"\",\n     \"next_date\": \"\",\n"
                },
                {
                    "date": 1712062557590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   const [columnName, setcolumnName] = useState(\"next_followup_date\");\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n   // let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n-let adminId= localStorage.getItem(\"admin_id\")\n+  let adminId = localStorage.getItem(\"admin_id\")\n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n \n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n@@ -198,9 +198,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712062603596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n       {props.employee_id !== \"\" ? (\n         <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n           <div className=\"row\">\n             <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n                 }`}\n             >\n               {response.length === 0 ? (\n                 <div className=\"single_note mb-5\">\n"
                },
                {
                    "date": 1712118585673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n   const [sortOrder, setSortOrder] = useState(\"ASC\");\n   // let employId = props.employee_id;\n   let user_type = localStorage.getItem(\"userType\");\n   let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n   // USER FOLLOW UP PROFILE UPDATE VALIDATION\n \n   /* Function to get the Response data*/\n   const ResponseData = async () => {\n@@ -71,9 +72,11 @@\n     \"user_type\": props.userType,\n     \"remark\": \"\",\n     \"next_date\": \"\",\n     \"subject\": \"\",\n-    \"status\": \"\"\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n   };\n   // VALIDATION CONDITIONS\n   const validators = {\n     subject: [\n"
                },
                {
                    "date": 1712121265133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712124029652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712148147219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\" ||(user_type !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n@@ -597,1204 +597,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712148174327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" ||(user_type !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\" ||(userType !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712148185855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,10 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" ||(userType !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\" ||\n+                (props.userType !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712148306983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n             </div>\n             <div\n               className={\n                 user_type === \"admin\" ||\n-                (props.userType !== \"employee\" && user === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                (props.userType !== \"employee\" && user_type === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712148317149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712148449659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\" || user_type === \"agent\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n@@ -597,605 +597,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ||\n-                (props.userType !== \"employee\" && user_type === \"agent\") ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712148476006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-nd-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712148515476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n       {props.employee_id !== \"\" ? (\n         <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n           <div className=\"row\">\n             <div\n-              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-nd-12\"\n+              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n               {response.length === 0 ? (\n                 <div className=\"single_note mb-5\">\n@@ -597,604 +597,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" || user_type === \"agent\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712150272493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,606 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if(!props.assigned_by_id){\n+        toast.success(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }else{\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }}\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712150325948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,12 +113,14 @@\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n       if(!props.assigned_by_id){\n-        toast.success(\"Please assign the admin first!\", {\n+        toast.error(\"Please assign the admin first!\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 1000,\n         });\n+        setLoading(false);\n+\n       }else{\n       try {\n         /*only for employee*/\n         // let responseData = await AddFollowup(state);\n@@ -603,604 +605,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712150365541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,8 +118,9 @@\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 1000,\n         });\n         setLoading(false);\n+        setState(initialFormState);\n \n       }else{\n       try {\n         /*only for employee*/\n"
                },
                {
                    "date": 1712150391544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,609 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if(!props.assigned_by_id){\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+\n+      }else{\n+      try {\n+        /*only for employee*/\n+        // let responseData = await AddFollowup(state);\n+        /*For all user*/\n+        let responseData = await AddAllUserFollowup(state);\n+        if (responseData.message === \"follow up updated successfully\") {\n+          toast.success(\"Followup Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }}\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712150577618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,644 +112,35 @@\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n-      if(!props.assigned_by_id){\n+      if (!props.assigned_by_id) {\n         toast.error(\"Please assign the admin first!\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 2000,\n         });\n         setLoading(false);\n         setState(initialFormState);\n-\n-      }else{\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n         }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }}\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n       }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n     } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      if(!props.assigned_by_id){\n-        toast.error(\"Please assign the admin first!\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-        setState(initialFormState);\n-\n-      }else{\n-      try {\n-        /*only for employee*/\n-        // let responseData = await AddFollowup(state);\n-        /*For all user*/\n-        let responseData = await AddAllUserFollowup(state);\n-        if (responseData.message === \"follow up updated successfully\") {\n-          toast.success(\"Followup Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }}\n-    } else {\n       setLoading(false);\n     }\n   };\n   // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n@@ -782,9 +173,9 @@\n       {props.employee_id !== \"\" ? (\n         <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n           <div className=\"row\">\n             <div\n-              className={`activity_container pr-10 ${user_type === \"admin\"  ? \"col-md-8 border-right\" : \"col-md-12\"\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n               {response.length === 0 ? (\n                 <div className=\"single_note mb-5\">\n@@ -819,9 +210,9 @@\n               )}\n             </div>\n             <div\n               className={\n-                user_type === \"admin\"  ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n               }\n             >\n               <form>\n                 <div className=\"form-group col px-0 pr-3\">\n"
                },
                {
                    "date": 1712150664923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,610 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      console.log(\"object\")\n+      if (!props.assigned_by_id) {\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n+        }\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {response.length === 0 ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712150698987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n-      console.log(\"object\")\n+      console.log(\"object\",!props.assigned_by_id)\n       if (!props.assigned_by_id) {\n         toast.error(\"Please assign the admin first!\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 2000,\n"
                },
                {
                    "date": 1712150716883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n-      console.log(\"object\",!props.assigned_by_id)\n+      console.log(\"object\",props.assigned_by_id)\n       if (!props.assigned_by_id) {\n         toast.error(\"Please assign the admin first!\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 2000,\n@@ -607,613 +607,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      if (!props.assigned_by_id) {\n-        toast.error(\"Please assign the admin first!\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 2000,\n-        });\n-        setLoading(false);\n-        setState(initialFormState);\n-      } else {\n-        try {\n-          /*only for employee*/\n-          // let responseData = await AddFollowup(state);\n-          /*For all user*/\n-          let responseData = await AddAllUserFollowup(state);\n-          if (responseData.message === \"follow up updated successfully\") {\n-            toast.success(\"Followup Updated successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-          }\n-        } catch (err) {\n-          console.log(err);\n-          setLoading(false);\n-        }\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {response.length === 0 ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712150744345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,8 @@\n   const onAminFollowClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n       setLoading(true);\n-      console.log(\"object\",props.assigned_by_id)\n       if (!props.assigned_by_id) {\n         toast.error(\"Please assign the admin first!\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 2000,\n"
                },
                {
                    "date": 1712150854977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n             <div\n               className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n-              {response.length === 0 ? (\n+              {response.length === 0||!response ? (\n                 <div className=\"single_note mb-5\">\n                   <div className=\"d-flex justify-content-center\">\n                     <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n                   </div>\n"
                },
                {
                    "date": 1712150892952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,8 +176,9 @@\n             <div\n               className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n+              {console.log(response)}\n               {response.length === 0||!response ? (\n                 <div className=\"single_note mb-5\">\n                   <div className=\"d-flex justify-content-center\">\n                     <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n"
                },
                {
                    "date": 1712560254500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,610 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    } else {\n+      ResponseData();\n+    }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if (!props.assigned_by_id) {\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n+        }\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {/* {console.log(response)} */}\n+              {response.length === 0||!response ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712579100843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,12 +51,12 @@\n   };\n \n   /*Render function to get the Response*/\n   useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n+    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    // } else {\n+    //   ResponseData();\n+    // }\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n   const initialFormState = {\n@@ -607,614 +607,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    } else {\n-      ResponseData();\n-    }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      if (!props.assigned_by_id) {\n-        toast.error(\"Please assign the admin first!\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 2000,\n-        });\n-        setLoading(false);\n-        setState(initialFormState);\n-      } else {\n-        try {\n-          /*only for employee*/\n-          // let responseData = await AddFollowup(state);\n-          /*For all user*/\n-          let responseData = await AddAllUserFollowup(state);\n-          if (responseData.message === \"follow up updated successfully\") {\n-            toast.success(\"Followup Updated successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-          }\n-        } catch (err) {\n-          console.log(err);\n-          setLoading(false);\n-        }\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {console.log(response)}\n-              {response.length === 0||!response ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712579119629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,610 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    // } else {\n+      ResponseData();\n+    // }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if (!props.assigned_by_id) {\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n+        }\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.employee_id !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {/* {console.log(response)} */}\n+              {response.length === 0||!response ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712579197792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n   /*Render function to get the Response*/\n   useEffect(() => {\n     // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n     // } else {\n-      ResponseData();\n+    ResponseData();\n     // }\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n@@ -169,231 +169,9 @@\n           <i className=\"fas fa-times\"></i>\n         </button>*/}\n \n       {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {/* {console.log(response)} */}\n-              {response.length === 0||!response ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      ) : (\n+      {props.employee_id === \"\" ? (\n         <div className=\"table-responsive main_table_div\">\n           <table className=\"table table-striped main_data_table\">\n             <thead>\n               <tr>\n@@ -599,197 +377,18 @@\n               )}\n             </tbody>\n           </table>\n         </div>\n-      )}\n \n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    // } else {\n-    //   ResponseData();\n-    // }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      if (!props.assigned_by_id) {\n-        toast.error(\"Please assign the admin first!\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 2000,\n-        });\n-        setLoading(false);\n-        setState(initialFormState);\n-      } else {\n-        try {\n-          /*only for employee*/\n-          // let responseData = await AddFollowup(state);\n-          /*For all user*/\n-          let responseData = await AddAllUserFollowup(state);\n-          if (responseData.message === \"follow up updated successfully\") {\n-            toast.success(\"Followup Updated successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-          }\n-        } catch (err) {\n-          console.log(err);\n-          setLoading(false);\n-        }\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id !== \"\" ? (\n+      ) : (\n         <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n           <div className=\"row\">\n             <div\n               className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n               {/* {console.log(response)} */}\n-              {response.length === 0||!response ? (\n+              {response.length === 0 || !response ? (\n                 <div className=\"single_note mb-5\">\n                   <div className=\"d-flex justify-content-center\">\n                     <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n                   </div>\n@@ -1001,216 +600,8 @@\n               </form>\n             </div>\n           </div>\n         </div>\n-      ) : (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n       )}\n \n       {/* </Modal> */}\n     </>\n"
                },
                {
                    "date": 1712579238121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,611 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    // } else {\n+    ResponseData();\n+    // }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if (!props.assigned_by_id) {\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n+        }\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.userId === \"\" ? (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.employee_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.employee_profile_image === \"\" ||\n+                                      res.employee_profile_image === null ||\n+                                      res.employee_profile_image === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.employee_profile_image\n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n+\n+      ) : (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {/* {console.log(response)} */}\n+              {response.length === 0 || !response ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712579427649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n   /*Render function to get the Response*/\n   useEffect(() => {\n     // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n     // } else {\n-    ResponseData();\n+      ResponseData();\n     // }\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n@@ -169,226 +169,17 @@\n           <i className=\"fas fa-times\"></i>\n         </button>*/}\n \n       {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.userId === \"\" ? (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-\n-      ) : (\n+      {props.userId !== \"\" ? (\n         <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n           <div className=\"row\">\n             <div\n               className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n               {/* {console.log(response)} */}\n-              {response.length === 0 || !response ? (\n+              {response.length === 0||!response ? (\n                 <div className=\"single_note mb-5\">\n                   <div className=\"d-flex justify-content-center\">\n                     <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n                   </div>\n@@ -600,8 +391,216 @@\n               </form>\n             </div>\n           </div>\n         </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            <tbody>\n+              {(response || []).map(\n+                (res) =>\n+                  res.status === \"1\" && (\n+                    <tr key={res.id}>\n+                      <td>\n+                        <Link\n+                          className=\"d-flex align-items-center\"\n+                          to={`/${res.user_id}`}\n+                        >\n+                          <div className=\"d-flex profile_box gx-2\">\n+                            <div className=\"media  align-items-center\">\n+                              <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                <img\n+                                  src={\n+                                    res.profile_photo  === \"\" ||\n+                                      res.profile_photo  === null ||\n+                                      res.profile_photo  === undefined\n+                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                      : res.profile_photo \n+                                  }\n+                                  alt=\"\"\n+                                  className=\"w-100\"\n+                                />\n+                              </div>\n+                            </div>\n+                            <div className=\" mb-0\">\n+                              {res.name === \"\" ||\n+                                res.name === \"null\" ||\n+                                res.name === null ||\n+                                res.name === undefined ? (\n+                                <p className=\"font-size-3 mb-0\">N/A</p>\n+                              ) : (\n+                                <p\n+                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                  title={res.name}\n+                                >\n+                                  {res.name}\n+                                </p>\n+                              )}\n+                            </div>\n+                          </div>\n+                        </Link>\n+                      </td>\n+                      <td>\n+                        {res.subject === \"\" ||\n+                          res.subject === \"null\" ||\n+                          res.subject === null ||\n+                          res.subject === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p\n+                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                            title={res.subject}\n+                          >\n+                            {res.subject}\n+                          </p>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.remark === \"\" ||\n+                          res.remark === \"null\" ||\n+                          res.remark === null ||\n+                          res.remark === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                            dangerouslySetInnerHTML={{\n+                              __html: res.remark\n+                            }} />\n+\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.created_at === \"\" ||\n+                          res.created_at === \"null\" ||\n+                          res.created_at === null ||\n+                          res.created_at === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>{moment(res.created_at).calendar()}</small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.next_followup_date === \"\" ||\n+                          res.next_followup_date === \"null\" ||\n+                          res.next_followup_date === null ||\n+                          res.next_followup_date === undefined ? (\n+                          <p className=\"font-size-3 mb-0\">N/A</p>\n+                        ) : (\n+                          <small>\n+                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                          </small>\n+                        )}\n+                      </td>\n+                      <td>\n+                        {res.status === \"\" ||\n+                          res.status === \"null\" ||\n+                          res.status === null ||\n+                          res.status === undefined ? (\n+                          <p className=\"font-size-3 mb-0\"></p>\n+                        ) : (\n+                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                        )}\n+                      </td>\n+                    </tr>\n+                  )\n+              )}\n+            </tbody>\n+          </table>\n+        </div>\n       )}\n \n       {/* </Modal> */}\n     </>\n"
                },
                {
                    "date": 1712579594604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -491,9 +491,9 @@\n             </thead>\n             <tbody>\n               {(response || []).map(\n                 (res) =>\n-                  res.status === \"1\" && (\n+                  res.status === \"1\" ?(\n                     <tr key={res.id}>\n                       <td>\n                         <Link\n                           className=\"d-flex align-items-center\"\n@@ -594,9 +594,12 @@\n                           <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n                         )}\n                       </td>\n                     </tr>\n-                  )\n+                  ):\n+                  <tr className=\"text-center\">\n+                    <th colSpan={6}>No data found</th>\n+                  </tr>\n               )}\n             </tbody>\n           </table>\n         </div>\n@@ -607,615 +610,4 @@\n   );\n }\n \n export default Addfollowup;\n-import React, { useState, useEffect } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n-import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n-import { toast, ToastContainer } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function Addfollowup(props) {\n-  let [response, setResponseData] = useState([]);\n-  let [loading, setLoading] = useState(false);\n-  /* Shorting states */\n-  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n-  const [sortOrder, setSortOrder] = useState(\"ASC\");\n-  // let employId = props.employee_id;\n-  let user_type = localStorage.getItem(\"userType\");\n-  let adminId = localStorage.getItem(\"admin_id\")\n-  let adminType = localStorage.getItem(\"admin_type\")\n-  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n-\n-  /* Function to get the Response data*/\n-  const ResponseData = async () => {\n-    try {\n-      /*only for employee*/\n-      // const userData = await getSingleFollowup(\n-      //   props.employee_id !== \"\" ? props.employee_id : null,\n-      //   columnName,\n-      //   sortOrder\n-      //   // props.job_id\n-      // );\n-      /*For All user*/\n-      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n-      if (\n-        userData.data === null ||\n-        userData.data === undefined ||\n-        userData.data === \"undefined\" ||\n-        userData.data === \"\" ||\n-        userData.data.length === 0\n-        // ||\n-        // props.employee_id === \"\" ||\n-        // props.employee_id === undefined\n-      ) {\n-        setResponseData([]);\n-      } else {\n-        setResponseData(userData.data.data);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-\n-  /*Render function to get the Response*/\n-  useEffect(() => {\n-    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n-    // } else {\n-    ResponseData();\n-    // }\n-  }, [props, sortOrder]);\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    /*only for employee*/\n-    // remark: \"\",\n-    // next_followup_date: \"\",\n-    // subject: \"\",\n-    // employee_id: employId,\n-    // status: \"\",\n-    // For all user\n-    \"admin_id\": adminId,\n-    \"user_id\": props.userId,\n-    \"user_type\": props.userType,\n-    \"remark\": \"\",\n-    \"next_date\": \"\",\n-    \"subject\": \"\",\n-    \"status\": \"\",\n-    \"assigned_by_id\": props.assigned_by_id,\n-    \"assigned_by_type\": adminType\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    subject: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"subject required\"\n-          : value.length < 2\n-            ? \"subjectz should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-    remark: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Discription required\"\n-          : value.length < 2\n-            ? \"Discription should have 2 or more letters.\"\n-            : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, setErrors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormState);\n-    setErrors(\"\");\n-    setLoading(false);\n-    // props.close();\n-  };\n-\n-  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n-  const onAminFollowClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      if (!props.assigned_by_id) {\n-        toast.error(\"Please assign the admin first!\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 2000,\n-        });\n-        setLoading(false);\n-        setState(initialFormState);\n-      } else {\n-        try {\n-          /*only for employee*/\n-          // let responseData = await AddFollowup(state);\n-          /*For all user*/\n-          let responseData = await AddAllUserFollowup(state);\n-          if (responseData.message === \"follow up updated successfully\") {\n-            toast.success(\"Followup Updated successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-          }\n-        } catch (err) {\n-          console.log(err);\n-          setLoading(false);\n-        }\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n-  const moment = require(\"moment\");\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    // setCurrentPage(1);\n-  };\n-  return (\n-    <>\n-      <ToastContainer />\n-      {/* <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      > \n-        <button\n-          type=\"button\"\n-          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n-          data-dismiss=\"modal\"\n-          onClick={close}\n-        >\n-          <i className=\"fas fa-times\"></i>\n-        </button>*/}\n-\n-      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n-      {props.employee_id === \"\" ? (\n-        <div className=\"table-responsive main_table_div\">\n-          <table className=\"table table-striped main_data_table\">\n-            <thead>\n-              <tr>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"employee_name\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Name\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"subject\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Subject\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"remark\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Note\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"created_at\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Added date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"next_followup_date\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Next Date\n-                  </Link>\n-                </th>\n-                <th\n-                  scope=\"col\"\n-                  className=\" border-0 font-size-4 font-weight-normal\"\n-                >\n-                  <Link\n-                    to={\"\"}\n-                    onClick={() => {\n-                      handleSort(\"status\");\n-                    }}\n-                    className=\"text-gray\"\n-                    title=\"Sort by Description\"\n-                  >\n-                    Status\n-                  </Link>\n-                </th>\n-              </tr>\n-            </thead>\n-            <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" && (\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.employee_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.employee_profile_image === \"\" ||\n-                                      res.employee_profile_image === null ||\n-                                      res.employee_profile_image === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.employee_profile_image\n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n-                              </div>\n-                            </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n-\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  )\n-              )}\n-            </tbody>\n-          </table>\n-        </div>\n-\n-      ) : (\n-        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n-          <div className=\"row\">\n-            <div\n-              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n-                }`}\n-            >\n-              {/* {console.log(response)} */}\n-              {response.length === 0 || !response ? (\n-                <div className=\"single_note mb-5\">\n-                  <div className=\"d-flex justify-content-center\">\n-                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n-                  </div>\n-                </div>\n-              ) : (\n-                (response || []).map((res) => (\n-                  <div className=\"single_note mb-5\" key={res.id}>\n-                    <div className=\"card p-2\">\n-                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n-                        <b className=\"font-size-4 font-weight-bold text-dark\">\n-                          {res.subject}\n-                        </b>\n-                        <i className=\"font-size-2\">\n-                          Created on:\n-                          {moment(res.created_at).format(\n-                            \"Do MMM YYYY, h:mm:ss a\"\n-                          )}\n-                        </i>\n-                      </div>\n-                      <p className=\"font-size-4 m-0\">\n-                        <div\n-                          dangerouslySetInnerHTML={{\n-                            __html: res.remark,\n-                          }}\n-                        /></p>\n-                    </div>\n-                  </div>\n-                ))\n-              )}\n-            </div>\n-            <div\n-              className={\n-                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n-              }\n-            >\n-              <form>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Subject: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      maxLength={60}\n-                      name=\"subject\"\n-                      value={state.subject || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.subject\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"subject\"\n-                      id=\"subject\"\n-                    />\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.subject && (\n-                    <span\n-                      key={errors.subject}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.subject}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"subject\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Status:\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <select\n-                      name=\"status\"\n-                      value={state.status || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"status\"\n-                      id=\"status\"\n-                    >\n-                      <option value={\"\"}>Select Status</option>\n-                      <option value={0}>Normal</option>\n-                      <option value={1}>Private</option>\n-                    </select>\n-                  </div>\n-                  {/*----ERROR MESSAGE FOR name----*/}\n-                  {errors.status && (\n-                    <span\n-                      key={errors.status}\n-                      className=\"text-danger font-size-3\"\n-                    >\n-                      {errors.status}\n-                    </span>\n-                  )}\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"remark\"\n-                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n-                  >\n-                    Add New Note: <span className=\"text-danger\">*</span>\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <div\n-                      className={\n-                        errors.remark\n-                          ? \"border border-danger rounded overflow-hidden\"\n-                          : \"border rounded overflow-hidden\"\n-                      }\n-                    >\n-                      <TextEditor\n-                        setState={setState}\n-                        state={state}\n-                        page={\"FollowUp\"} />\n-                      {/* <textarea\n-                        name=\"remark\"\n-                        value={state.remark}\n-                        onChange={onInputChange}\n-                        rows={8}\n-                        style={{ height: \"140px\" }}\n-                        className={\n-                          errors.remark\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"remark\"\n-                        placeholder=\"Add Note here\"\n-                      ></textarea> */}\n-                    </div>\n-                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n-                    {errors.remark && (\n-                      <span\n-                        key={errors.remark}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.remark}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group col px-0 pr-3\">\n-                  <label\n-                    htmlFor=\"next_followup_date\"\n-                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                  >\n-                    Next Date :\n-                  </label>\n-                  <div className=\"position-relative\">\n-                    <input\n-                      type=\"date\"\n-                      placeholder=\"Next followup date\"\n-                      id=\"next_followup_date\"\n-                      name=\"next_followup_date\"\n-                      min={moment().format(\"DD-MM-YYYY\")}\n-                      value={state.next_followup_date}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.next_followup_date\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n-                    {errors.next_followup_date && (\n-                      <span\n-                        key={errors.next_followup_date}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.next_followup_date}\n-                      </span>\n-                    )}\n-                  </div>\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      onClick={(e) => onAminFollowClick(e)}\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-\n-      {/* </Modal> */}\n-    </>\n-  );\n-}\n-\n-export default Addfollowup;\n"
                },
                {
                    "date": 1712579733574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n   /*Render function to get the Response*/\n   useEffect(() => {\n     // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n     // } else {\n-      ResponseData();\n+    ResponseData();\n     // }\n   }, [props, sortOrder]);\n \n   // INITIAL STATE ASSIGNMENT\n@@ -177,9 +177,9 @@\n               className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n                 }`}\n             >\n               {/* {console.log(response)} */}\n-              {response.length === 0||!response ? (\n+              {response.length === 0 || !response ? (\n                 <div className=\"single_note mb-5\">\n                   <div className=\"d-flex justify-content-center\">\n                     <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n                   </div>\n@@ -489,118 +489,122 @@\n                 </th>\n               </tr>\n             </thead>\n             <tbody>\n-              {(response || []).map(\n-                (res) =>\n-                  res.status === \"1\" ?(\n-                    <tr key={res.id}>\n-                      <td>\n-                        <Link\n-                          className=\"d-flex align-items-center\"\n-                          to={`/${res.user_id}`}\n-                        >\n-                          <div className=\"d-flex profile_box gx-2\">\n-                            <div className=\"media  align-items-center\">\n-                              <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                <img\n-                                  src={\n-                                    res.profile_photo  === \"\" ||\n-                                      res.profile_photo  === null ||\n-                                      res.profile_photo  === undefined\n-                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                      : res.profile_photo \n-                                  }\n-                                  alt=\"\"\n-                                  className=\"w-100\"\n-                                />\n+              {response.length === 0 ||\n+                response.map((item) => item.status === \"0\" || item.status === \"3\") ?\n+                <tr className=\"text-center\">\n+                  <th colSpan={6}>No data found</th>\n+                </tr>\n+                :\n+                (response || []).map(\n+                  (res) =>\n+                    res.status === \"1\" && (\n+                      <tr key={res.id}>\n+                        <td>\n+                          <Link\n+                            className=\"d-flex align-items-center\"\n+                            to={`/${res.user_id}`}\n+                          >\n+                            <div className=\"d-flex profile_box gx-2\">\n+                              <div className=\"media  align-items-center\">\n+                                <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                  <img\n+                                    src={\n+                                      res.profile_photo === \"\" ||\n+                                        res.profile_photo === null ||\n+                                        res.profile_photo === undefined\n+                                        ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                        : res.profile_photo\n+                                    }\n+                                    alt=\"\"\n+                                    className=\"w-100\"\n+                                  />\n+                                </div>\n                               </div>\n+                              <div className=\" mb-0\">\n+                                {res.name === \"\" ||\n+                                  res.name === \"null\" ||\n+                                  res.name === null ||\n+                                  res.name === undefined ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p\n+                                    className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                    title={res.name}\n+                                  >\n+                                    {res.name}\n+                                  </p>\n+                                )}\n+                              </div>\n                             </div>\n-                            <div className=\" mb-0\">\n-                              {res.name === \"\" ||\n-                                res.name === \"null\" ||\n-                                res.name === null ||\n-                                res.name === undefined ? (\n-                                <p className=\"font-size-3 mb-0\">N/A</p>\n-                              ) : (\n-                                <p\n-                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                  title={res.name}\n-                                >\n-                                  {res.name}\n-                                </p>\n-                              )}\n-                            </div>\n-                          </div>\n-                        </Link>\n-                      </td>\n-                      <td>\n-                        {res.subject === \"\" ||\n-                          res.subject === \"null\" ||\n-                          res.subject === null ||\n-                          res.subject === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p\n-                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                            title={res.subject}\n-                          >\n-                            {res.subject}\n-                          </p>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.remark === \"\" ||\n-                          res.remark === \"null\" ||\n-                          res.remark === null ||\n-                          res.remark === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                            dangerouslySetInnerHTML={{\n-                              __html: res.remark\n-                            }} />\n+                          </Link>\n+                        </td>\n+                        <td>\n+                          {res.subject === \"\" ||\n+                            res.subject === \"null\" ||\n+                            res.subject === null ||\n+                            res.subject === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <p\n+                              className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                              title={res.subject}\n+                            >\n+                              {res.subject}\n+                            </p>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.remark === \"\" ||\n+                            res.remark === \"null\" ||\n+                            res.remark === null ||\n+                            res.remark === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                              dangerouslySetInnerHTML={{\n+                                __html: res.remark\n+                              }} />\n \n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.created_at === \"\" ||\n-                          res.created_at === \"null\" ||\n-                          res.created_at === null ||\n-                          res.created_at === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>{moment(res.created_at).calendar()}</small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.next_followup_date === \"\" ||\n-                          res.next_followup_date === \"null\" ||\n-                          res.next_followup_date === null ||\n-                          res.next_followup_date === undefined ? (\n-                          <p className=\"font-size-3 mb-0\">N/A</p>\n-                        ) : (\n-                          <small>\n-                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                          </small>\n-                        )}\n-                      </td>\n-                      <td>\n-                        {res.status === \"\" ||\n-                          res.status === \"null\" ||\n-                          res.status === null ||\n-                          res.status === undefined ? (\n-                          <p className=\"font-size-3 mb-0\"></p>\n-                        ) : (\n-                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                        )}\n-                      </td>\n-                    </tr>\n-                  ):\n-                  <tr className=\"text-center\">\n-                    <th colSpan={6}>No data found</th>\n-                  </tr>\n-              )}\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.created_at === \"\" ||\n+                            res.created_at === \"null\" ||\n+                            res.created_at === null ||\n+                            res.created_at === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <small>{moment(res.created_at).calendar()}</small>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.next_followup_date === \"\" ||\n+                            res.next_followup_date === \"null\" ||\n+                            res.next_followup_date === null ||\n+                            res.next_followup_date === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <small>\n+                              {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                            </small>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.status === \"\" ||\n+                            res.status === \"null\" ||\n+                            res.status === null ||\n+                            res.status === undefined ? (\n+                            <p className=\"font-size-3 mb-0\"></p>\n+                          ) : (\n+                            <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                          )}\n+                        </td>\n+                      </tr>\n+                    )\n+\n+                )}\n             </tbody>\n           </table>\n         </div>\n       )}\n"
                },
                {
                    "date": 1712579804829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -488,8 +488,9 @@\n                   </Link>\n                 </th>\n               </tr>\n             </thead>\n+            {console.log( response.map((item) => item.status === \"0\" || item.status === \"3\"))}\n             <tbody>\n               {response.length === 0 ||\n                 response.map((item) => item.status === \"0\" || item.status === \"3\") ?\n                 <tr className=\"text-center\">\n"
                },
                {
                    "date": 1712579883567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -488,9 +488,9 @@\n                   </Link>\n                 </th>\n               </tr>\n             </thead>\n-            {console.log( response.map((item) => item.status === \"0\" || item.status === \"3\"))}\n+            {console.log( response.map((item) => item.status === \"0\" , item.status === \"3\",item.status))}\n             <tbody>\n               {response.length === 0 ||\n                 response.map((item) => item.status === \"0\" || item.status === \"3\") ?\n                 <tr className=\"text-center\">\n"
                },
                {
                    "date": 1712579945880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,618 @@\n+import React, { useState, useEffect } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+// import { Modal } from \"react-bootstrap\";\n+import {/* getSingleFollowup*/getAllUsersFollowUpData, AddAllUserFollowup /*AddFollowup*/ } from \"../../../api/api\";\n+import { toast, ToastContainer } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function Addfollowup(props) {\n+  let [response, setResponseData] = useState([]);\n+  let [loading, setLoading] = useState(false);\n+  /* Shorting states */\n+  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n+  const [sortOrder, setSortOrder] = useState(\"ASC\");\n+  // let employId = props.employee_id;\n+  let user_type = localStorage.getItem(\"userType\");\n+  let adminId = localStorage.getItem(\"admin_id\")\n+  let adminType = localStorage.getItem(\"admin_type\")\n+  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n+\n+  /* Function to get the Response data*/\n+  const ResponseData = async () => {\n+    try {\n+      /*only for employee*/\n+      // const userData = await getSingleFollowup(\n+      //   props.employee_id !== \"\" ? props.employee_id : null,\n+      //   columnName,\n+      //   sortOrder\n+      //   // props.job_id\n+      // );\n+      /*For All user*/\n+      const userData = await getAllUsersFollowUpData(props.userId, props.userType, columnName, sortOrder)\n+      if (\n+        userData.data === null ||\n+        userData.data === undefined ||\n+        userData.data === \"undefined\" ||\n+        userData.data === \"\" ||\n+        userData.data.length === 0\n+        // ||\n+        // props.employee_id === \"\" ||\n+        // props.employee_id === undefined\n+      ) {\n+        setResponseData([]);\n+      } else {\n+        setResponseData(userData.data.data);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+\n+  /*Render function to get the Response*/\n+  useEffect(() => {\n+    // if (props.userId === undefined || !props.userId/*|| props.job_id === undefined*/) {\n+    // } else {\n+    ResponseData();\n+    // }\n+  }, [props, sortOrder]);\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    /*only for employee*/\n+    // remark: \"\",\n+    // next_followup_date: \"\",\n+    // subject: \"\",\n+    // employee_id: employId,\n+    // status: \"\",\n+    // For all user\n+    \"admin_id\": adminId,\n+    \"user_id\": props.userId,\n+    \"user_type\": props.userType,\n+    \"remark\": \"\",\n+    \"next_date\": \"\",\n+    \"subject\": \"\",\n+    \"status\": \"\",\n+    \"assigned_by_id\": props.assigned_by_id,\n+    \"assigned_by_type\": adminType\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    subject: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"subject required\"\n+          : value.length < 2\n+            ? \"subjectz should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+    remark: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Discription required\"\n+          : value.length < 2\n+            ? \"Discription should have 2 or more letters.\"\n+            : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, setErrors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormState);\n+    setErrors(\"\");\n+    setLoading(false);\n+    // props.close();\n+  };\n+\n+  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n+  const onAminFollowClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      if (!props.assigned_by_id) {\n+        toast.error(\"Please assign the admin first!\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 2000,\n+        });\n+        setLoading(false);\n+        setState(initialFormState);\n+      } else {\n+        try {\n+          /*only for employee*/\n+          // let responseData = await AddFollowup(state);\n+          /*For all user*/\n+          let responseData = await AddAllUserFollowup(state);\n+          if (responseData.message === \"follow up updated successfully\") {\n+            toast.success(\"Followup Updated successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+          }\n+        } catch (err) {\n+          console.log(err);\n+          setLoading(false);\n+        }\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n+  const moment = require(\"moment\");\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    // setCurrentPage(1);\n+  };\n+  return (\n+    <>\n+      <ToastContainer />\n+      {/* <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      > \n+        <button\n+          type=\"button\"\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n+          data-dismiss=\"modal\"\n+          onClick={close}\n+        >\n+          <i className=\"fas fa-times\"></i>\n+        </button>*/}\n+\n+      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n+      {props.userId !== \"\" ? (\n+        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n+          <div className=\"row\">\n+            <div\n+              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-md-12\"\n+                }`}\n+            >\n+              {/* {console.log(response)} */}\n+              {response.length === 0 || !response ? (\n+                <div className=\"single_note mb-5\">\n+                  <div className=\"d-flex justify-content-center\">\n+                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n+                  </div>\n+                </div>\n+              ) : (\n+                (response || []).map((res) => (\n+                  <div className=\"single_note mb-5\" key={res.id}>\n+                    <div className=\"card p-2\">\n+                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n+                        <b className=\"font-size-4 font-weight-bold text-dark\">\n+                          {res.subject}\n+                        </b>\n+                        <i className=\"font-size-2\">\n+                          Created on:\n+                          {moment(res.created_at).format(\n+                            \"Do MMM YYYY, h:mm:ss a\"\n+                          )}\n+                        </i>\n+                      </div>\n+                      <p className=\"font-size-4 m-0\">\n+                        <div\n+                          dangerouslySetInnerHTML={{\n+                            __html: res.remark,\n+                          }}\n+                        /></p>\n+                    </div>\n+                  </div>\n+                ))\n+              )}\n+            </div>\n+            <div\n+              className={\n+                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n+              }\n+            >\n+              <form>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Subject: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      maxLength={60}\n+                      name=\"subject\"\n+                      value={state.subject || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.subject\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"subject\"\n+                      id=\"subject\"\n+                    />\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.subject && (\n+                    <span\n+                      key={errors.subject}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.subject}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"subject\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Status:\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <select\n+                      name=\"status\"\n+                      value={state.status || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"status\"\n+                      id=\"status\"\n+                    >\n+                      <option value={\"\"}>Select Status</option>\n+                      <option value={0}>Normal</option>\n+                      <option value={1}>Private</option>\n+                    </select>\n+                  </div>\n+                  {/*----ERROR MESSAGE FOR name----*/}\n+                  {errors.status && (\n+                    <span\n+                      key={errors.status}\n+                      className=\"text-danger font-size-3\"\n+                    >\n+                      {errors.status}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"remark\"\n+                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n+                  >\n+                    Add New Note: <span className=\"text-danger\">*</span>\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <div\n+                      className={\n+                        errors.remark\n+                          ? \"border border-danger rounded overflow-hidden\"\n+                          : \"border rounded overflow-hidden\"\n+                      }\n+                    >\n+                      <TextEditor\n+                        setState={setState}\n+                        state={state}\n+                        page={\"FollowUp\"} />\n+                      {/* <textarea\n+                        name=\"remark\"\n+                        value={state.remark}\n+                        onChange={onInputChange}\n+                        rows={8}\n+                        style={{ height: \"140px\" }}\n+                        className={\n+                          errors.remark\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"remark\"\n+                        placeholder=\"Add Note here\"\n+                      ></textarea> */}\n+                    </div>\n+                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n+                    {errors.remark && (\n+                      <span\n+                        key={errors.remark}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.remark}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group col px-0 pr-3\">\n+                  <label\n+                    htmlFor=\"next_followup_date\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Next Date :\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      type=\"date\"\n+                      placeholder=\"Next followup date\"\n+                      id=\"next_followup_date\"\n+                      name=\"next_followup_date\"\n+                      min={moment().format(\"DD-MM-YYYY\")}\n+                      value={state.next_followup_date}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.next_followup_date\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n+                    {errors.next_followup_date && (\n+                      <span\n+                        key={errors.next_followup_date}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.next_followup_date}\n+                      </span>\n+                    )}\n+                  </div>\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      onClick={(e) => onAminFollowClick(e)}\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+            </div>\n+          </div>\n+        </div>\n+      ) : (\n+        <div className=\"table-responsive main_table_div\">\n+          <table className=\"table table-striped main_data_table\">\n+            <thead>\n+              <tr>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"employee_name\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Name\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"subject\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Subject\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"remark\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Note\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"created_at\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Added date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"next_followup_date\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Next Date\n+                  </Link>\n+                </th>\n+                <th\n+                  scope=\"col\"\n+                  className=\" border-0 font-size-4 font-weight-normal\"\n+                >\n+                  <Link\n+                    to={\"\"}\n+                    onClick={() => {\n+                      handleSort(\"status\");\n+                    }}\n+                    className=\"text-gray\"\n+                    title=\"Sort by Description\"\n+                  >\n+                    Status\n+                  </Link>\n+                </th>\n+              </tr>\n+            </thead>\n+            {console.log( response.map((item) =>( item.status === \"0\" , item.status === \"3\",item.status)))}\n+            <tbody>\n+              {response.length === 0 ||\n+                response.map((item) => item.status === \"0\" || item.status === \"3\") ?\n+                <tr className=\"text-center\">\n+                  <th colSpan={6}>No data found</th>\n+                </tr>\n+                :\n+                (response || []).map(\n+                  (res) =>\n+                    res.status === \"1\" && (\n+                      <tr key={res.id}>\n+                        <td>\n+                          <Link\n+                            className=\"d-flex align-items-center\"\n+                            to={`/${res.user_id}`}\n+                          >\n+                            <div className=\"d-flex profile_box gx-2\">\n+                              <div className=\"media  align-items-center\">\n+                                <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                  <img\n+                                    src={\n+                                      res.profile_photo === \"\" ||\n+                                        res.profile_photo === null ||\n+                                        res.profile_photo === undefined\n+                                        ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                        : res.profile_photo\n+                                    }\n+                                    alt=\"\"\n+                                    className=\"w-100\"\n+                                  />\n+                                </div>\n+                              </div>\n+                              <div className=\" mb-0\">\n+                                {res.name === \"\" ||\n+                                  res.name === \"null\" ||\n+                                  res.name === null ||\n+                                  res.name === undefined ? (\n+                                  <p className=\"font-size-3 mb-0\">N/A</p>\n+                                ) : (\n+                                  <p\n+                                    className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                    title={res.name}\n+                                  >\n+                                    {res.name}\n+                                  </p>\n+                                )}\n+                              </div>\n+                            </div>\n+                          </Link>\n+                        </td>\n+                        <td>\n+                          {res.subject === \"\" ||\n+                            res.subject === \"null\" ||\n+                            res.subject === null ||\n+                            res.subject === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <p\n+                              className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                              title={res.subject}\n+                            >\n+                              {res.subject}\n+                            </p>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.remark === \"\" ||\n+                            res.remark === \"null\" ||\n+                            res.remark === null ||\n+                            res.remark === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                              dangerouslySetInnerHTML={{\n+                                __html: res.remark\n+                              }} />\n+\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.created_at === \"\" ||\n+                            res.created_at === \"null\" ||\n+                            res.created_at === null ||\n+                            res.created_at === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <small>{moment(res.created_at).calendar()}</small>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.next_followup_date === \"\" ||\n+                            res.next_followup_date === \"null\" ||\n+                            res.next_followup_date === null ||\n+                            res.next_followup_date === undefined ? (\n+                            <p className=\"font-size-3 mb-0\">N/A</p>\n+                          ) : (\n+                            <small>\n+                              {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                            </small>\n+                          )}\n+                        </td>\n+                        <td>\n+                          {res.status === \"\" ||\n+                            res.status === \"null\" ||\n+                            res.status === null ||\n+                            res.status === undefined ? (\n+                            <p className=\"font-size-3 mb-0\"></p>\n+                          ) : (\n+                            <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                          )}\n+                        </td>\n+                      </tr>\n+                    )\n+\n+                )}\n+            </tbody>\n+          </table>\n+        </div>\n+      )}\n+\n+      {/* </Modal> */}\n+    </>\n+  );\n+}\n+\n+export default Addfollowup;\n"
                },
                {
                    "date": 1712580023296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -488,124 +488,121 @@\n                   </Link>\n                 </th>\n               </tr>\n             </thead>\n-            {console.log( response.map((item) =>( item.status === \"0\" , item.status === \"3\",item.status)))}\n             <tbody>\n-              {response.length === 0 ||\n-                response.map((item) => item.status === \"0\" || item.status === \"3\") ?\n-                <tr className=\"text-center\">\n-                  <th colSpan={6}>No data found</th>\n-                </tr>\n-                :\n-                (response || []).map(\n-                  (res) =>\n-                    res.status === \"1\" && (\n-                      <tr key={res.id}>\n-                        <td>\n-                          <Link\n-                            className=\"d-flex align-items-center\"\n-                            to={`/${res.user_id}`}\n-                          >\n-                            <div className=\"d-flex profile_box gx-2\">\n-                              <div className=\"media  align-items-center\">\n-                                <div className=\"circle-30 mx-auto overflow-hidden\">\n-                                  <img\n-                                    src={\n-                                      res.profile_photo === \"\" ||\n-                                        res.profile_photo === null ||\n-                                        res.profile_photo === undefined\n-                                        ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                                        : res.profile_photo\n-                                    }\n-                                    alt=\"\"\n-                                    className=\"w-100\"\n-                                  />\n+              {\n+                response.map((item) => item.status === \"1\") ?\n+                  (response || []).map(\n+                    (res) =>\n+                      res.status === \"1\" && (\n+                        <tr key={res.id}>\n+                          <td>\n+                            <Link\n+                              className=\"d-flex align-items-center\"\n+                              to={`/${res.user_id}`}\n+                            >\n+                              <div className=\"d-flex profile_box gx-2\">\n+                                <div className=\"media  align-items-center\">\n+                                  <div className=\"circle-30 mx-auto overflow-hidden\">\n+                                    <img\n+                                      src={\n+                                        res.profile_photo === \"\" ||\n+                                          res.profile_photo === null ||\n+                                          res.profile_photo === undefined\n+                                          ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                                          : res.profile_photo\n+                                      }\n+                                      alt=\"\"\n+                                      className=\"w-100\"\n+                                    />\n+                                  </div>\n                                 </div>\n+                                <div className=\" mb-0\">\n+                                  {res.name === \"\" ||\n+                                    res.name === \"null\" ||\n+                                    res.name === null ||\n+                                    res.name === undefined ? (\n+                                    <p className=\"font-size-3 mb-0\">N/A</p>\n+                                  ) : (\n+                                    <p\n+                                      className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                      title={res.name}\n+                                    >\n+                                      {res.name}\n+                                    </p>\n+                                  )}\n+                                </div>\n                               </div>\n-                              <div className=\" mb-0\">\n-                                {res.name === \"\" ||\n-                                  res.name === \"null\" ||\n-                                  res.name === null ||\n-                                  res.name === undefined ? (\n-                                  <p className=\"font-size-3 mb-0\">N/A</p>\n-                                ) : (\n-                                  <p\n-                                    className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                                    title={res.name}\n-                                  >\n-                                    {res.name}\n-                                  </p>\n-                                )}\n-                              </div>\n-                            </div>\n-                          </Link>\n-                        </td>\n-                        <td>\n-                          {res.subject === \"\" ||\n-                            res.subject === \"null\" ||\n-                            res.subject === null ||\n-                            res.subject === undefined ? (\n-                            <p className=\"font-size-3 mb-0\">N/A</p>\n-                          ) : (\n-                            <p\n-                              className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n-                              title={res.subject}\n-                            >\n-                              {res.subject}\n-                            </p>\n-                          )}\n-                        </td>\n-                        <td>\n-                          {res.remark === \"\" ||\n-                            res.remark === \"null\" ||\n-                            res.remark === null ||\n-                            res.remark === undefined ? (\n-                            <p className=\"font-size-3 mb-0\">N/A</p>\n-                          ) : (\n-                            <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n-                              dangerouslySetInnerHTML={{\n-                                __html: res.remark\n-                              }} />\n+                            </Link>\n+                          </td>\n+                          <td>\n+                            {res.subject === \"\" ||\n+                              res.subject === \"null\" ||\n+                              res.subject === null ||\n+                              res.subject === undefined ? (\n+                              <p className=\"font-size-3 mb-0\">N/A</p>\n+                            ) : (\n+                              <p\n+                                className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n+                                title={res.subject}\n+                              >\n+                                {res.subject}\n+                              </p>\n+                            )}\n+                          </td>\n+                          <td>\n+                            {res.remark === \"\" ||\n+                              res.remark === \"null\" ||\n+                              res.remark === null ||\n+                              res.remark === undefined ? (\n+                              <p className=\"font-size-3 mb-0\">N/A</p>\n+                            ) : (\n+                              <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\"\n+                                dangerouslySetInnerHTML={{\n+                                  __html: res.remark\n+                                }} />\n \n-                          )}\n-                        </td>\n-                        <td>\n-                          {res.created_at === \"\" ||\n-                            res.created_at === \"null\" ||\n-                            res.created_at === null ||\n-                            res.created_at === undefined ? (\n-                            <p className=\"font-size-3 mb-0\">N/A</p>\n-                          ) : (\n-                            <small>{moment(res.created_at).calendar()}</small>\n-                          )}\n-                        </td>\n-                        <td>\n-                          {res.next_followup_date === \"\" ||\n-                            res.next_followup_date === \"null\" ||\n-                            res.next_followup_date === null ||\n-                            res.next_followup_date === undefined ? (\n-                            <p className=\"font-size-3 mb-0\">N/A</p>\n-                          ) : (\n-                            <small>\n-                              {moment(res.next_followup_date).format(\"MMM Do YY\")}\n-                            </small>\n-                          )}\n-                        </td>\n-                        <td>\n-                          {res.status === \"\" ||\n-                            res.status === \"null\" ||\n-                            res.status === null ||\n-                            res.status === undefined ? (\n-                            <p className=\"font-size-3 mb-0\"></p>\n-                          ) : (\n-                            <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n-                          )}\n-                        </td>\n-                      </tr>\n-                    )\n+                            )}\n+                          </td>\n+                          <td>\n+                            {res.created_at === \"\" ||\n+                              res.created_at === \"null\" ||\n+                              res.created_at === null ||\n+                              res.created_at === undefined ? (\n+                              <p className=\"font-size-3 mb-0\">N/A</p>\n+                            ) : (\n+                              <small>{moment(res.created_at).calendar()}</small>\n+                            )}\n+                          </td>\n+                          <td>\n+                            {res.next_followup_date === \"\" ||\n+                              res.next_followup_date === \"null\" ||\n+                              res.next_followup_date === null ||\n+                              res.next_followup_date === undefined ? (\n+                              <p className=\"font-size-3 mb-0\">N/A</p>\n+                            ) : (\n+                              <small>\n+                                {moment(res.next_followup_date).format(\"MMM Do YY\")}\n+                              </small>\n+                            )}\n+                          </td>\n+                          <td>\n+                            {res.status === \"\" ||\n+                              res.status === \"null\" ||\n+                              res.status === null ||\n+                              res.status === undefined ? (\n+                              <p className=\"font-size-3 mb-0\"></p>\n+                            ) : (\n+                              <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n+                            )}\n+                          </td>\n+                        </tr>\n+                      )\n \n-                )}\n+                  ) : <tr className=\"text-center\">\n+                    <th colSpan={6}>No data found</th>\n+                  </tr>}\n             </tbody>\n           </table>\n         </div>\n       )}\n"
                }
            ],
            "date": 1709536584319,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport useValidation from \"../../common/useValidation\";\n// import { Modal } from \"react-bootstrap\";\nimport { getSingleFollowup, AddFollowup } from \"../../../api/api\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nimport TextEditor from \"../../common/TextEditor\";\n\nfunction Addfollowup(props) {\n  let [response, setResponseData] = useState([]);\n  let [loading, setLoading] = useState(false);\n  /* Shorting states */\n  const [columnName, setcolumnName] = useState(\"next_followup_date\");\n  const [sortOrder, setSortOrder] = useState(\"ASC\");\n  let employId = props.employee_id;\n  let user_type = localStorage.getItem(\"userType\");\n  // le/*tjobId*/ = props.job_id;\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setLoading(false);\n    // props.close();\n  };\n  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n\n  /* Function to get the Response data*/\n  const ResponseData = async () => {\n    try {\n      const userData = await getSingleFollowup(\n        props.employee_id !== \"\" ? props.employee_id : null,\n        columnName,\n        sortOrder\n        // props.job_id\n      );\n      if (\n        userData.data === null ||\n        userData.data === undefined ||\n        userData.data === \"undefined\" ||\n        userData.data === \"\" ||\n        userData.data.length === 0\n        // ||\n        // props.employee_id === \"\" ||\n        // props.employee_id === undefined\n      ) {\n        setResponseData([]);\n      } else {\n        setResponseData(userData.data.data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /*Render function to get the Response*/\n  useEffect(() => {\n    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n    } else {\n      ResponseData();\n    }\n  }, [props, sortOrder]);\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    remark: \"\",\n    next_followup_date: \"\",\n    subject: \"\",\n    employee_id: employId,\n    status: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    subject: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"subject required\"\n          : value.length < 2\n            ? \"subjectz should have 2 or more letters.\"\n            : \"\",\n    ],\n    remark: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Discription required\"\n          : value.length < 2\n            ? \"Discription should have 2 or more letters.\"\n            : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, onInputChange, errors, setErrors, validate } =\n    useValidation(initialFormState, validators);\n\n  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n  const onAminFollowClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        let responseData = await AddFollowup(state);\n        if (responseData.message === \"follow up updated successfully\") {\n          toast.success(\"Followup Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n  const moment = require(\"moment\");\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n    // setCurrentPage(1);\n  };\n  return (\n    <>\n      <ToastContainer />\n      {/* <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      > \n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>*/}\n\n      {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n      {props.employee_id !== \"\" ? (\n        <div className=\"bg-white rounded h-100vh px-11 py-7 overflow-y-hidden\">\n          <div className=\"row\">\n            <div\n              className={`activity_container pr-10 ${user_type === \"admin\" ? \"col-md-8 border-right\" : \"col-nd-12\"\n                }`}\n            >\n              {response.length === 0 ? (\n                <div className=\"single_note mb-5\">\n                  <div className=\"d-flex justify-content-center\">\n                    <p className=\"text-italic font-size-3 m-0\">No Data Found</p>\n                  </div>\n                </div>\n              ) : (\n                (response || []).map((res) => (\n                  <div className=\"single_note mb-5\" key={res.id}>\n                    <div className=\"card p-2\">\n                      <div className=\"m-0 d-flex justify-content-between align-items-center\">\n                        <b className=\"font-size-4 font-weight-bold text-dark\">\n                          {res.subject}\n                        </b>\n                        <i className=\"font-size-2\">\n                          Created on:\n                          {moment(res.created_at).format(\n                            \"Do MMM YYYY, h:mm:ss a\"\n                          )}\n                        </i>\n                      </div>\n                      <p className=\"font-size-4 m-0\">{res.remark}</p>\n                    </div>\n                  </div>\n                  // <div className=\"card mt-5 mb-5\" key={res.id}>\n                  //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n                  //     <div className=\"card-head font-size-3 text-dark card_left\">\n                  //       <span className=\"text-dark\"> Posted date: </span>\n                  //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n                  //     </div>\n                  //     {res.next_followup_date === \"0000-00-00\" ? null :\n                  //       <div className=\"card-head font-size-3 text-dark card_right\">\n                  //         <span className=\"text-dark\"> Next date: </span>\n                  //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n                  //       </div>}\n                  //   </div>\n                  //   <div className=\"card-body p-3\">{res.remark}</div>\n                  // </div>\n                ))\n              )}\n            </div>\n            <div\n              className={\n                user_type === \"admin\" ? \"px-10 py-5 col-md-4\" : \"d-none\"\n              }\n            >\n              <form>\n                <div className=\"form-group col px-0 pr-3\">\n                  <label\n                    htmlFor=\"subject\"\n                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  >\n                    Subject: <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"position-relative\">\n                    <input\n                      maxLength={60}\n                      name=\"subject\"\n                      value={state.subject || \"\"}\n                      onChange={onInputChange}\n                      type=\"text\"\n                      className={\n                        errors.subject\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"subject\"\n                      id=\"subject\"\n                    />\n                  </div>\n                  {/*----ERROR MESSAGE FOR name----*/}\n                  {errors.subject && (\n                    <span\n                      key={errors.subject}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.subject}\n                    </span>\n                  )}\n                </div>\n                <div className=\"form-group col px-0 pr-3\">\n                  <label\n                    htmlFor=\"subject\"\n                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  >\n                    Status:\n                  </label>\n                  <div className=\"position-relative\">\n                    <select\n                      name=\"status\"\n                      value={state.status || \"\"}\n                      onChange={onInputChange}\n                      type=\"text\"\n                      className={\n                        errors.status\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"status\"\n                      id=\"status\"\n                    >\n                      <option value={\"\"}>Select Status</option>\n                      <option value={0}>Normal</option>\n                      <option value={1}>Private</option>\n                    </select>\n                  </div>\n                  {/*----ERROR MESSAGE FOR name----*/}\n                  {errors.status && (\n                    <span\n                      key={errors.status}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.status}\n                    </span>\n                  )}\n                </div>\n                <div className=\"form-group col px-0 pr-3\">\n                  <label\n                    htmlFor=\"remark\"\n                    className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                  >\n                    Add New Note: <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"position-relative\">\n                    <div\n                      className={\n                        errors.remark\n                          ? \"border border-danger rounded overflow-hidden\"\n                          : \"border rounded overflow-hidden\"\n                      }\n                    >\n                      <TextEditor\n                        setState={setState}\n                        state={state}\n                        page={\"FollowUp\"} />\n                      {/* <textarea\n                        name=\"remark\"\n                        value={state.remark}\n                        onChange={onInputChange}\n                        rows={8}\n                        style={{ height: \"140px\" }}\n                        className={\n                          errors.remark\n                            ? \"form-control border border-danger\"\n                            : \"form-control\"\n                        }\n                        id=\"remark\"\n                        placeholder=\"Add Note here\"\n                      ></textarea> */}\n                    </div>\n                    {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                    {errors.remark && (\n                      <span\n                        key={errors.remark}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.remark}\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"form-group col px-0 pr-3\">\n                  <label\n                    htmlFor=\"next_followup_date\"\n                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                  >\n                    Next Date :\n                  </label>\n                  <div className=\"position-relative\">\n                    <input\n                      type=\"date\"\n                      placeholder=\"Next followup date\"\n                      id=\"next_followup_date\"\n                      name=\"next_followup_date\"\n                      min={moment().format(\"DD-MM-YYYY\")}\n                      value={state.next_followup_date}\n                      onChange={onInputChange}\n                      onKeyDownCapture={(e) => e.preventDefault()}\n                      className={\n                        errors.next_followup_date\n                          ? \"form-control coustam_datepicker border border-danger\"\n                          : \"form-control coustam_datepicker\"\n                      }\n                    />\n                    {/*----ERROR MESSAGE FOR next_followup_date----*/}\n                    {errors.next_followup_date && (\n                      <span\n                        key={errors.next_followup_date}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.next_followup_date}\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"form-group text-center\">\n                  {loading === true ? (\n                    <button\n                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                      type=\"button\"\n                      disabled\n                    >\n                      <span\n                        className=\"spinner-border spinner-border-sm \"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                      <span className=\"sr-only\">Loading...</span>\n                    </button>\n                  ) : (\n                    <button\n                      onClick={(e) => onAminFollowClick(e)}\n                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                      type=\"button\"\n                    >\n                      Submit\n                    </button>\n                  )}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"table-responsive main_table_div\">\n          <table className=\"table table-striped main_data_table\">\n            <thead>\n              <tr>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"employee_name\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Name\n                  </Link>\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"subject\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Subject\n                  </Link>\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"remark\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Note\n                  </Link>\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"created_at\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Added date\n                  </Link>\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"next_followup_date\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Next Date\n                  </Link>\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\" border-0 font-size-4 font-weight-normal\"\n                >\n                  <Link\n                    to={\"\"}\n                    onClick={() => {\n                      handleSort(\"status\");\n                    }}\n                    className=\"text-gray\"\n                    title=\"Sort by Description\"\n                  >\n                    Status\n                  </Link>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {(response || []).map(\n                (res) =>\n                  res.status === \"1\" && (\n                    <tr key={res.id}>\n                      <td>\n                        <Link\n                          className=\"d-flex align-items-center\"\n                          to={`/${res.employee_id}`}\n                        >\n                          <div className=\"d-flex profile_box gx-2\">\n                            <div className=\"media  align-items-center\">\n                              <div className=\"circle-30 mx-auto overflow-hidden\">\n                                <img\n                                  src={\n                                    res.employee_profile_image === \"\" ||\n                                      res.employee_profile_image === null ||\n                                      res.employee_profile_image === undefined\n                                      ? \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                                      : res.employee_profile_image\n                                  }\n                                  alt=\"\"\n                                  className=\"w-100\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\" mb-0\">\n                              {res.name === \"\" ||\n                                res.name === \"null\" ||\n                                res.name === null ||\n                                res.name === undefined ? (\n                                <p className=\"font-size-3 mb-0\">N/A</p>\n                              ) : (\n                                <p\n                                  className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n                                  title={res.name}\n                                >\n                                  {res.name}\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        </Link>\n                      </td>\n                      <td>\n                        {res.subject === \"\" ||\n                          res.subject === \"null\" ||\n                          res.subject === null ||\n                          res.subject === undefined ? (\n                          <p className=\"font-size-3 mb-0\">N/A</p>\n                        ) : (\n                          <p\n                            className=\"m-0 text-black-2 font-weight-bold text-capitalize text-truncate\"\n                            title={res.subject}\n                          >\n                            {res.subject}\n                          </p>\n                        )}\n                      </td>\n                      <td>\n                        {res.remark === \"\" ||\n                          res.remark === \"null\" ||\n                          res.remark === null ||\n                          res.remark === undefined ? (\n                          <p className=\"font-size-3 mb-0\">N/A</p>\n                        ) : (\n                          <p className=\"m-0 text-black-2 font-weight-bold text-capitalize  text-truncate\">\n                            <small>{res.remark}</small>\n                          </p>\n                        )}\n                      </td>\n                      <td>\n                        {res.created_at === \"\" ||\n                          res.created_at === \"null\" ||\n                          res.created_at === null ||\n                          res.created_at === undefined ? (\n                          <p className=\"font-size-3 mb-0\">N/A</p>\n                        ) : (\n                          <small>{moment(res.created_at).calendar()}</small>\n                        )}\n                      </td>\n                      <td>\n                        {res.next_followup_date === \"\" ||\n                          res.next_followup_date === \"null\" ||\n                          res.next_followup_date === null ||\n                          res.next_followup_date === undefined ? (\n                          <p className=\"font-size-3 mb-0\">N/A</p>\n                        ) : (\n                          <small>\n                            {moment(res.next_followup_date).format(\"MMM Do YY\")}\n                          </small>\n                        )}\n                      </td>\n                      <td>\n                        {res.status === \"\" ||\n                          res.status === \"null\" ||\n                          res.status === null ||\n                          res.status === undefined ? (\n                          <p className=\"font-size-3 mb-0\"></p>\n                        ) : (\n                          <small>{res.status === \"1\" ? \"Private\" : \"\"}</small>\n                        )}\n                      </td>\n                    </tr>\n                  )\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {/* </Modal> */}\n    </>\n  );\n}\n\nexport default Addfollowup;\n"
        }
    ]
}