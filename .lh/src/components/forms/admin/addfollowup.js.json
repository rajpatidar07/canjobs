{
    "sourceFile": "src/components/forms/admin/addfollowup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1692955359603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692955367228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n import useValidation from \"../../common/useValidation\";\n-// import { Modal } from \"react-bootstrap\";\n+import { Modal } from \"react-bootstrap\";\n import { getSingleFollowup, AddFollowup } from \"../../../api/api\";\n import { toast, ToastContainer } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n \n"
                },
                {
                    "date": 1692955512072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from \"react\";\n import useValidation from \"../../common/useValidation\";\n-import { Modal } from \"react-bootstrap\";\n+// import { Modal } from \"react-bootstrap\";\n import { getSingleFollowup, AddFollowup } from \"../../../api/api\";\n import { toast, ToastContainer } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n \n@@ -100,22 +100,22 @@\n   const moment = require(\"moment\");\n   return (\n     <>\n       <ToastContainer />\n-      <Modal\n+      {/* <Modal\n         show={props.show}\n         size=\"lg\"\n         aria-labelledby=\"contained-modal-title-vcenter\"\n         centered\n       > \n         <button\n           type=\"button\"\n-          className={props.show ?\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \":\"d-none\"}\n+          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n           data-dismiss=\"modal\"\n           onClick={close}\n         >\n           <i className=\"fas fa-times\"></i>\n-        </button>\n+        </button>*/}\n       <div className=\"bg-white rounded h-100 px-11 py-7 overflow-y-hidden\">\n         {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n         <div className=\"row\">\n           <div className=\"activity_container pr-10 col-md-8 border-right\">\n@@ -296,9 +296,9 @@\n             </form>\n           </div>\n         </div>\n       </div>\n-      </Modal>\n+      {/* </Modal> */}\n     </>\n   );\n }\n \n"
                },
                {
                    "date": 1693200780922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,14 +144,14 @@\n                 // <div className=\"card mt-5 mb-5\" key={res.id}>\n                 //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n                 //     <div className=\"card-head font-size-3 text-dark card_left\">\n                 //       <span className=\"text-dark\"> Posted date: </span>\n-                //       {moment(res.created_at).format(\"YYYY-MM-DD\")}\n+                //       {moment(res.created_at).format(\"DD-MM-YYYY\")}\n                 //     </div>\n                 //     {res.next_followup_date === \"0000-00-00\" ? null :\n                 //       <div className=\"card-head font-size-3 text-dark card_right\">\n                 //         <span className=\"text-dark\"> Next date: </span>\n-                //         {moment(res.next_followup_date).format(\"YYYY-MM-DD\")}\n+                //         {moment(res.next_followup_date).format(\"DD-MM-YYYY\")}\n                 //       </div>}\n                 //   </div>\n                 //   <div className=\"card-body p-3\">{res.remark}</div>\n                 // </div>\n@@ -245,11 +245,11 @@\n                     type=\"date\"\n                     placeholder=\"Next followup date\"\n                     id=\"next_followup_date\"\n                     name=\"next_followup_date\"\n-                    min={moment().format(\"YYYY-MM-DD\")}\n+                    min={moment().format(\"DD-MM-YYYY\")}\n                     value={moment(state.next_followup_date).format(\n-                      \"YYYY-MM-DD\"\n+                      \"DD-MM-YYYY\"\n                     )}\n                     onChange={onInputChange}\n                     onKeyDownCapture={(e) => e.preventDefault()}\n                     className={\n"
                },
                {
                    "date": 1693201111887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,14 @@\n         props.employee_id\n         // props.job_id\n       );\n       if (\n-        // userData.data.length === 0 ||\n+        userData.data === null ||\n+        userData.data === undefined||\n+        userData.data === \"undefined\"||\n+        userData.data === \"\"||\n+        userData.data === \"null\"||\n+        userData.data.length === 0 ||\n         props.employee_id === \"\" ||\n         props.employee_id === undefined\n       ) {\n         setResponseData([]);\n"
                },
                {
                    "date": 1693486845813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n           props.setApiCall(true);\n           return close();\n         }\n       } catch (err) {\n-        toast.error(\"Something went wrong\", {\n+       console.log(err) {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 1000,\n         });\n         setLoading(false);\n"
                },
                {
                    "date": 1693486958622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,12 +90,9 @@\n           props.setApiCall(true);\n           return close();\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false);\n       }\n     } else {\n       setLoading(false);\n"
                },
                {
                    "date": 1693809677363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,11 +248,9 @@\n                     placeholder=\"Next followup date\"\n                     id=\"next_followup_date\"\n                     name=\"next_followup_date\"\n                     min={moment().format(\"DD-MM-YYYY\")}\n-                    value={moment(state.next_followup_date).format(\n-                      \"DD-MM-YYYY\"\n-                    )}\n+                    value={state.next_followup_date}\n                     onChange={onInputChange}\n                     onKeyDownCapture={(e) => e.preventDefault()}\n                     className={\n                       errors.next_followup_date\n"
                }
            ],
            "date": 1692955359603,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport useValidation from \"../../common/useValidation\";\n// import { Modal } from \"react-bootstrap\";\nimport { getSingleFollowup, AddFollowup } from \"../../../api/api\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Addfollowup(props) {\n  let [response, setResponseData] = useState([]);\n  let [loading, setLoading] = useState(false);\n  let employId = props.employee_id;\n  // le/*tjobId*/ = props.job_id;\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setLoading(false);\n    // props.close();\n  };\n  // USER FOLLOW UP PROFILE UPDATE VALIDATION\n\n  /* Function to get the Response data*/\n  const ResponseData = async () => {\n    try {\n      const userData = await getSingleFollowup(\n        props.employee_id\n        // props.job_id\n      );\n      if (\n        // userData.data.length === 0 ||\n        props.employee_id === \"\" ||\n        props.employee_id === undefined\n      ) {\n        setResponseData([]);\n      } else {\n        setResponseData(userData.data);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n\n  /*Render function to get the Response*/\n  useEffect(() => {\n    if (props.employee_id === undefined /*|| props.job_id === undefined*/) {\n    } else {\n      ResponseData();\n    }\n  }, [props]);\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    remark: \"\",\n    next_followup_date: \"\",\n    subject: \"\",\n    employee_id: employId,\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    remark: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Discription required\"\n          : value.length < 2\n            ? \"Discription should have 2 or more letters.\"\n            : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, onInputChange, errors, setErrors, validate } =\n    useValidation(initialFormState, validators);\n\n  // USER FOLLOW UP PROFILE UPDATE SUBMIT BUTTON\n  const onAminFollowClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        let responseData = await AddFollowup(state);\n        if (responseData.message === \"follow up updated successfully\") {\n          toast.success(\"Followup Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n      } catch (err) {\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END USER FOLLOW UP PROFILE UPDATE VALIDATION\n  const moment = require(\"moment\");\n  return (\n    <>\n      <ToastContainer />\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      > \n        <button\n          type=\"button\"\n          className={props.show ?\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \":\"d-none\"}\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n      <div className=\"bg-white rounded h-100 px-11 py-7 overflow-y-hidden\">\n        {/* <h5 className=\"text-center pt-2 mb-7\">Follow Ups</h5> */}\n        <div className=\"row\">\n          <div className=\"activity_container pr-10 col-md-8 border-right\">\n            {response.length === 0 ?\n              <div className=\"single_note mb-5\">\n                <div className=\"d-flex justify-content-center\">\n                  <p className=\"text-italic font-size-3 m-0\">\n                    No Data Found\n                  </p>\n                </div>\n              </div> : (response || []).map((res) => (\n                <div className=\"single_note mb-5\" key={res.id}>\n                  <div className=\"d-flex justify-content-between\">\n                    <i className=\"font-size-3\">\n                      Created on:{\" \"}\n                      {moment(res.created_at).format(\"Do MMM YYYY, h:mm:ss a\")}\n                    </i>\n                  </div>\n                  <div className=\"card p-5\">\n                    <p className=\"font-size-4 m-0\">\n                      <b>{res.subject}</b>\n                    </p>\n                    <p className=\"font-size-4 m-0\">{res.remark}</p>\n                  </div>\n                </div>\n                // <div className=\"card mt-5 mb-5\" key={res.id}>\n                //   <div className=\"card-header d-flex justify-content-space-between px-3 py-1\">\n                //     <div className=\"card-head font-size-3 text-dark card_left\">\n                //       <span className=\"text-dark\"> Posted date: </span>\n                //       {moment(res.created_at).format(\"YYYY-MM-DD\")}\n                //     </div>\n                //     {res.next_followup_date === \"0000-00-00\" ? null :\n                //       <div className=\"card-head font-size-3 text-dark card_right\">\n                //         <span className=\"text-dark\"> Next date: </span>\n                //         {moment(res.next_followup_date).format(\"YYYY-MM-DD\")}\n                //       </div>}\n                //   </div>\n                //   <div className=\"card-body p-3\">{res.remark}</div>\n                // </div>\n              ))}\n          </div>\n          <div className=\"px-10 py-5 col-md-4\">\n            <form>\n              <div className=\"form-group col px-0 pr-3\">\n                <label\n                  htmlFor=\"subject\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                >\n                  Subject: <span className=\"text-danger\">*</span>\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    maxLength={20}\n                    name=\"subject\"\n                    value={state.subject || \"\"}\n                    onChange={onInputChange}\n                    type=\"text\"\n                    className={\n                      errors.subject\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"subject\"\n                    id=\"subject\"\n                  />\n                </div>\n                {/*----ERROR MESSAGE FOR name----*/}\n                {errors.subject && (\n                  <span\n                    key={errors.subject}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.subject}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col px-0 pr-3\">\n                <label\n                  htmlFor=\"remark\"\n                  className=\"font-size-3 text-black-2 font-weight-semibold line-height-reset mb-0\"\n                >\n                  Add New Note: <span className=\"text-danger\">*</span>\n                </label>\n                <div className=\"position-relative\">\n                  <div\n                    className={\n                      errors.remark\n                        ? \"border border-danger rounded overflow-hidden\"\n                        : \"border rounded overflow-hidden\"\n                    }\n                  >\n                    <textarea\n                      name=\"remark\"\n                      value={state.remark}\n                      onChange={onInputChange}\n                      rows={8}\n                      style={{ height: \"140px\" }}\n                      className={\n                        errors.remark\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"remark\"\n                      placeholder=\"Add Note here\"\n                    ></textarea>\n                  </div>\n                  {/*----ERROR MESSAGE FOR DESRIPTION----*/}\n                  {errors.remark && (\n                    <span\n                      key={errors.remark}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.remark}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col px-0 pr-3\">\n                <label\n                  htmlFor=\"next_followup_date\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Next Date :\n                </label>\n                <div className=\"position-relative\">\n                  <input\n                    type=\"date\"\n                    placeholder=\"Next followup date\"\n                    id=\"next_followup_date\"\n                    name=\"next_followup_date\"\n                    min={moment().format(\"YYYY-MM-DD\")}\n                    value={moment(state.next_followup_date).format(\n                      \"YYYY-MM-DD\"\n                    )}\n                    onChange={onInputChange}\n                    onKeyDownCapture={(e) => e.preventDefault()}\n                    className={\n                      errors.next_followup_date\n                        ? \"form-control coustam_datepicker border border-danger\"\n                        : \"form-control coustam_datepicker\"\n                    }\n                  />\n                  {/*----ERROR MESSAGE FOR next_followup_date----*/}\n                  {errors.next_followup_date && (\n                    <span\n                      key={errors.next_followup_date}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.next_followup_date}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group text-center\">\n                {loading === true ? (\n                  <button\n                    className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                    type=\"button\"\n                    disabled\n                  >\n                    <span\n                      className=\"spinner-border spinner-border-sm \"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                    <span className=\"sr-only\">Loading...</span>\n                  </button>\n                ) : (\n                  <button\n                    onClick={(e) => onAminFollowClick(e)}\n                    className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                    type=\"button\"\n                  >\n                    Submit\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default Addfollowup;\n"
        }
    ]
}