{
    "sourceFile": "src/components/forms/admin/FilterForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1709814579617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709814621637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form onSubmit={onAddFIlterClick}>\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                }
            ],
            "date": 1709814579617,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport useValidation from \"../../common/useValidation\";\nimport { AddFIlter } from \"../../../api//api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { FiPlus } from \"react-icons/fi\";\nfunction AddFilter(props) {\n  let [loading, setLoading] = useState(false);\n\n  // FILTER UPDATE VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    id: \"\",\n    json_item: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    json_item: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Filter type is required\"\n          : value.length < 2\n          ? \"Filter type should have 2 or more letters\"\n          : !/^[A-Za-z0-9 ]*$/.test(value)\n          ? \"Cannot use special character \"\n          : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, onInputChange, setErrors, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  // FILTER UPDATE SUBMIT BUTTON\n  const onAddFIlterClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        const responseData = await AddFIlter(state, props.id);\n        if (responseData.message === \"item already exist !\") {\n          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n          props.setApiCall(true);\n          setState(initialFormState);\n          setLoading(false);\n        }\n        if (responseData.message === \"filter item added successfully\") {\n          toast.success(\"Filter added successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          setState(initialFormState);\n          setLoading(false);\n          setErrors(\"\");\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END FILTER UPDATE VALIDATION\n  return (\n    <div className=\"p-0 m-0\">\n      <form onSubmit={onAddFIlterClick}>\n        <div className=\"form  p-0\">\n          <div className=\"input-group mb-3\">\n            <input\n              className={\n                errors.json_item\n                  ? \"form-control border border-danger\"\n                  : \"form-control\"\n              }\n              value={state.json_item}\n              onChange={onInputChange}\n              id=\"json_item\"\n              name=\"json_item\"\n              type={\"text\"}\n              placeholder={\n                props.id === 1\n                  ? \"Skill Type\"\n                  : props.id === 4\n                  ? \"Industry Type\"\n                  : props.id === 5\n                  ? \"Education Type\"\n                  : props.id === 6\n                  ? \"Corporation Type\"\n                  : props.id === 7\n                  ? \"Language Type\"\n                  : \"\"\n              }\n              // maxLength={60}\n            />\n            {loading === true ? (\n              <button\n                className=\"btn action_btn btn-primaryy\"\n                type=\"button\"\n                disabled\n              >\n                <div\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                ></div>\n              </button>\n            ) : (\n              <button\n                className=\"btn  action_btn btn-primary \"\n                type=\"submit\"\n                id=\"button-addon2\"\n                title=\"Add Filter\"\n              >\n                <FiPlus />\n              </button>\n            )}\n          </div>\n          {/*----ERROR MESSAGE FOR EMAIL----*/}\n          {errors.json_item && (\n            <span key={errors.json_item} className=\"text-danger font-size-3\">\n              {errors.json_item}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddFilter;\n"
        }
    ]
}