{
    "sourceFile": "src/components/forms/admin/FilterForm.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 37,
            "patches": [
                {
                    "date": 1709814579617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709814621637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form onSubmit={onAddFIlterClick}>\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713337139398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setSearchResults(searchResults);\n+    setLoading(false);\n+  };\n+\n+  const yourSearchFunction = (searchTerm) => {\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = listData.filter((item) =>\n+      item.name.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713337174800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setSearchResults(searchResults);\n+    setLoading(false);\n+  };\n+\n+  const yourSearchFunction = (searchTerm) => {\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = FilterData.filter((item) =>\n+      item.name.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713337214443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n   const yourSearchFunction = (searchTerm) => {\n     // Implement your search logic here\n     // This could be a filter operation on your list data\n     // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = FilterData.filter((item) =>\n+    const filteredResults = props.FilterData.filter((item) =>\n       item.name.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n     return filteredResults;\n   };\n@@ -198,467 +198,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults(searchResults);\n-    setLoading(false);\n-  };\n-\n-  const yourSearchFunction = (searchTerm) => {\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = listData.filter((item) =>\n-      item.name.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form onSubmit={onAddFIlterClick}>\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          : !/^[A-Za-z0-9 ]*$/.test(value)\n-          ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form onSubmit={onAddFIlterClick}>\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713337336142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setSearchResults(searchResults);\n+    setLoading(false);\n+  };\n+\n+  const yourSearchFunction = (searchTerm) => {\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value .toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713337424946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setSearchResults(searchResults);\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713337437551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n     // For demonstration purposes, let's assume listData is an array of objects\n     const filteredResults = props.FilterData.filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n+    console.log(filteredResults)\n     return filteredResults;\n   };\n   \n   return (\n@@ -203,406 +204,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults(searchResults);\n-    setLoading(false);\n-  };\n-\n-  const yourSearchFunction = (searchTerm) => {\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value .toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults(searchResults);\n-    setLoading(false);\n-  };\n-\n-  const yourSearchFunction = (searchTerm) => {\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.name.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713337843751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setSearchResults(searchResults, props.id);\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    console.log(filteredResults)\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713338130117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     setLoading(true);\n     // Perform your search logic here using state.json_item\n     // For example:\n     const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults(searchResults, props.id);\n+    props.setSearchResults({ results: searchResults, id: props.id });\n     setLoading(false);\n   };\n   const yourSearchFunction = (searchTerm) => {\n     if (!Array.isArray(props.FilterData)) {\n@@ -82,9 +82,8 @@\n     // For demonstration purposes, let's assume listData is an array of objects\n     const filteredResults = props.FilterData.filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n-    console.log(filteredResults)\n     return filteredResults;\n   };\n   \n   return (\n@@ -204,211 +203,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults(searchResults);\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    console.log(filteredResults)\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713342484195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData,props.filterType: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713342525877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,206 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713342789676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    console.log(filteredResults)\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713343319641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.FilterData.filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    console.log(filteredResults)\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary \"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-secondry \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713343370051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n         </button>\n       ) : (\n         <>\n           <button\n-            className=\"btn  action_btn btn-primary \"\n+            className=\"btn  action_btn btn-primary px-2\"\n             type=\"submit\"\n             id=\"button-addon2\"\n             title=\"Add Filter\"\n             onClick={onAddFIlterClick}\n@@ -205,829 +205,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    console.log(filteredResults)\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData,props.filterType: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setSearchResults({ results: searchResults, id: props.id });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-primary \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713343382889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,8 @@\n     // For demonstration purposes, let's assume listData is an array of objects\n     const filteredResults = props.FilterData.filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n-    console.log(filteredResults)\n     return filteredResults;\n   };\n   \n   return (\n"
                },
                {
                    "date": 1713343433465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n   \n     // Implement your search logic here\n     // This could be a filter operation on your list data\n     // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.FilterData.filter((item) =>\n+    const filteredResults = props.filterData[props.filterTyp].filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n     return filteredResults;\n   };\n"
                },
                {
                    "date": 1713343610453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+          ? \"Filter type should have 2 or more letters\"\n+          // : !/^[A-Za-z0-9 ]*$/.test(value)\n+          // ? \"Cannot use special character \"\n+          : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      setLoading(false);\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+  \n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    setState({...state,json_item:\"\"})\n+    return filteredResults;\n+  };\n+  \n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          {/* <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item\n+                  ? \"form-control border border-danger\"\n+                  : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                  ? \"Industry Type\"\n+                  : props.id === 5\n+                  ? \"Education Type\"\n+                  : props.id === 6\n+                  ? \"Corporation Type\"\n+                  : props.id === 7\n+                  ? \"Language Type\"\n+                  : \"\"\n+              }\n+              // maxLength={60}\n+            />\n+            {loading === true ? (\n+              <button\n+                className=\"btn action_btn btn-primaryy\"\n+                type=\"button\"\n+                disabled\n+              >\n+                <div\n+                  className=\"spinner-border spinner-border-sm\"\n+                  role=\"status\"\n+                ></div>\n+              </button>\n+            ) : (\n+              <button\n+                className=\"btn  action_btn btn-primary \"\n+                type=\"submit\"\n+                id=\"button-addon2\"\n+                title=\"Add Filter\"\n+              >\n+                <FiPlus />\n+              </button>\n+            )}\n+          </div> */}\n+           <div className=\"input-group mb-3\">\n+      <input\n+        className={\n+          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+        }\n+        value={state.json_item}\n+        onChange={onInputChange}\n+        id=\"json_item\"\n+        name=\"json_item\"\n+        type={\"text\"}\n+        placeholder={\n+          props.id === 1\n+            ? \"Skill Type\"\n+            : props.id === 4\n+            ? \"Industry Type\"\n+            : props.id === 5\n+            ? \"Education Type\"\n+            : props.id === 6\n+            ? \"Corporation Type\"\n+            : props.id === 7\n+            ? \"Language Type\"\n+            : \"\"\n+        }\n+        // maxLength={60}\n+      />\n+      {loading ? (\n+        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+        </button>\n+      ) : (\n+        <>\n+          <button\n+            className=\"btn  action_btn btn-primary px-2\"\n+            type=\"submit\"\n+            id=\"button-addon2\"\n+            title=\"Add Filter\"\n+            onClick={onAddFIlterClick}\n+          >\n+            <FiPlus />\n+          </button>\n+          <button\n+            className=\"btn  action_btn btn-secondry \"\n+            type=\"button\"\n+            id=\"button-addon3\"\n+            title=\"Search\"\n+            onClick={handleSearch}\n+          >\n+            Search\n+          </button>\n+        </>\n+      )}\n+    </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713343777645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import \"react-toastify/dist/ReactToastify.css\";\n import { FiPlus } from \"react-icons/fi\";\n function AddFilter(props) {\n   let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n \n   // FILTER UPDATE VALIDATION\n \n   // INITIAL STATE ASSIGNMENT\n@@ -21,10 +22,10 @@\n         value === \"\" || value.trim() === \"\"\n           ? \"Filter type is required\"\n           : value.length < 2\n           ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n+          : !/^[A-Za-z0-9 ]*$/.test(value)\n+          ? \"Cannot use special character \"\n           : \"\",\n     ],\n   };\n   // CUSTOM VALIDATIONS IMPORT\n@@ -52,21 +53,25 @@\n           props.setApiCall(true);\n           setState(initialFormState);\n           setLoading(false);\n           setErrors(\"\");\n+          setCancelBtn(false)\n         }\n       } catch (err) {\n         console.log(err);\n         setLoading(false);\n+        setCancelBtn(false)\n       }\n     } else {\n       setLoading(false);\n+      setCancelBtn(false)\n     }\n   };\n   // END FILTER UPDATE VALIDATION\n   /*Search function for filter */\n   const handleSearch = () => {\n     setLoading(true);\n+    setCancelBtn(true)\n     // Perform your search logic here using state.json_item\n     // For example:\n     const searchResults = yourSearchFunction(state.json_item);\n     props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n@@ -91,57 +96,8 @@\n   return (\n     <div className=\"p-0 m-0\">\n       <form >\n         <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n            <div className=\"input-group mb-3\">\n       <input\n         className={\n           errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n@@ -205,211 +161,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          // : !/^[A-Za-z0-9 ]*$/.test(value)\n-          // ? \"Cannot use special character \"\n-          : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      setLoading(false);\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-  \n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.filterData[props.filterTyp].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-  \n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          {/* <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item\n-                  ? \"form-control border border-danger\"\n-                  : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                  ? \"Industry Type\"\n-                  : props.id === 5\n-                  ? \"Education Type\"\n-                  : props.id === 6\n-                  ? \"Corporation Type\"\n-                  : props.id === 7\n-                  ? \"Language Type\"\n-                  : \"\"\n-              }\n-              // maxLength={60}\n-            />\n-            {loading === true ? (\n-              <button\n-                className=\"btn action_btn btn-primaryy\"\n-                type=\"button\"\n-                disabled\n-              >\n-                <div\n-                  className=\"spinner-border spinner-border-sm\"\n-                  role=\"status\"\n-                ></div>\n-              </button>\n-            ) : (\n-              <button\n-                className=\"btn  action_btn btn-primary \"\n-                type=\"submit\"\n-                id=\"button-addon2\"\n-                title=\"Add Filter\"\n-              >\n-                <FiPlus />\n-              </button>\n-            )}\n-          </div> */}\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary px-2\"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-secondry \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713343866415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,12 @@\n       (value) =>\n         value === \"\" || value.trim() === \"\"\n           ? \"Filter type is required\"\n           : value.length < 2\n-          ? \"Filter type should have 2 or more letters\"\n-          : !/^[A-Za-z0-9 ]*$/.test(value)\n-          ? \"Cannot use special character \"\n-          : \"\",\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n     ],\n   };\n   // CUSTOM VALIDATIONS IMPORT\n   const { state, setState, onInputChange, setErrors, errors, validate } =\n@@ -73,83 +73,89 @@\n     setCancelBtn(true)\n     // Perform your search logic here using state.json_item\n     // For example:\n     const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData,[props.filterType]: searchResults });\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n     setLoading(false);\n   };\n   const yourSearchFunction = (searchTerm) => {\n     if (!Array.isArray(props.FilterData)) {\n       console.error(\"FilterData is not an array.\");\n       return [];\n     }\n-  \n+\n     // Implement your search logic here\n     // This could be a filter operation on your list data\n     // For demonstration purposes, let's assume listData is an array of objects\n     const filteredResults = props.filterData[props.filterType].filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n-    setState({...state,json_item:\"\"})\n+    setState({ ...state, json_item: \"\" })\n     return filteredResults;\n   };\n-  \n+\n   return (\n     <div className=\"p-0 m-0\">\n       <form >\n         <div className=\"form  p-0\">\n-           <div className=\"input-group mb-3\">\n-      <input\n-        className={\n-          errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-        }\n-        value={state.json_item}\n-        onChange={onInputChange}\n-        id=\"json_item\"\n-        name=\"json_item\"\n-        type={\"text\"}\n-        placeholder={\n-          props.id === 1\n-            ? \"Skill Type\"\n-            : props.id === 4\n-            ? \"Industry Type\"\n-            : props.id === 5\n-            ? \"Education Type\"\n-            : props.id === 6\n-            ? \"Corporation Type\"\n-            : props.id === 7\n-            ? \"Language Type\"\n-            : \"\"\n-        }\n-        // maxLength={60}\n-      />\n-      {loading ? (\n-        <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-          <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-        </button>\n-      ) : (\n-        <>\n-          <button\n-            className=\"btn  action_btn btn-primary px-2\"\n-            type=\"submit\"\n-            id=\"button-addon2\"\n-            title=\"Add Filter\"\n-            onClick={onAddFIlterClick}\n-          >\n-            <FiPlus />\n-          </button>\n-          <button\n-            className=\"btn  action_btn btn-secondry \"\n-            type=\"button\"\n-            id=\"button-addon3\"\n-            title=\"Search\"\n-            onClick={handleSearch}\n-          >\n-            Search\n-          </button>\n-        </>\n-      )}\n-    </div>\n+          <div className=\"input-group mb-3\">\n+            {cancelBtn\n+              ?\n+              <Link onClick={() => {\n+                setCancelBtn(false)\n+                props.setApiCall(true)\n+              }}>x</Link>\n+              : null}<input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title=\"Search\"\n+                  onClick={handleSearch}\n+                >\n+                  Search\n+                </button>\n+              </>\n+            )}\n+          </div>\n           {/*----ERROR MESSAGE FOR EMAIL----*/}\n           {errors.json_item && (\n             <span key={errors.json_item} className=\"text-danger font-size-3\">\n               {errors.json_item}\n"
                },
                {
                    "date": 1713343877253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import useValidation from \"../../common/useValidation\";\n import { AddFIlter } from \"../../../api//api\";\n import { toast } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n import { FiPlus } from \"react-icons/fi\";\n function AddFilter(props) {\n   let [loading, setLoading] = useState(false);\n   let [cancelBtn, setCancelBtn] = useState(false);\n"
                },
                {
                    "date": 1713343964488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n         <div className=\"form  p-0\">\n           <div className=\"input-group mb-3\">\n             {cancelBtn\n               ?\n-              <Link onClick={() => {\n+              <Link  className=\"px-2\" onClick={() => {\n                 setCancelBtn(false)\n                 props.setApiCall(true)\n               }}>x</Link>\n               : null}<input\n"
                },
                {
                    "date": 1713344001463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,171 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+          setCancelBtn(false)\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setCancelBtn(false)\n+      }\n+    } else {\n+      setLoading(false);\n+      setCancelBtn(false)\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    setCancelBtn(true)\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    setState({ ...state, json_item: \"\" })\n+    return filteredResults;\n+  };\n+\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            {cancelBtn\n+              ?\n+              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n+                setCancelBtn(false)\n+                props.setApiCall(true)\n+              }}>x</Link>\n+              : null}<input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title=\"Search\"\n+                  onClick={handleSearch}\n+                >\n+                  Search\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713344782437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,171 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+          setCancelBtn(false)\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setCancelBtn(false)\n+      }\n+    } else {\n+      setLoading(false);\n+      setCancelBtn(false)\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    setCancelBtn(true)\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    setState(initialFormState)\n+    return filteredResults;\n+  };\n+\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            {cancelBtn\n+              ?\n+              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n+                setCancelBtn(false)\n+                props.setApiCall(true)\n+              }}>x</Link>\n+              : null}<input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title=\"Search\"\n+                  onClick={handleSearch}\n+                >\n+                  Search\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713344795900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,171 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+          setCancelBtn(false)\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setCancelBtn(false)\n+      }\n+    } else {\n+      setLoading(false);\n+      setCancelBtn(false)\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    setCancelBtn(true)\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n+    setLoading(false);\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    setState(initialFormState)\n+    return filteredResults;\n+  };\n+\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            {cancelBtn\n+              ?\n+              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n+                setCancelBtn(false)\n+                props.setApiCall(true)\n+              }}>x</Link>\n+              : null}<input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title=\"Search\"\n+                  onClick={handleSearch}\n+                >\n+                  Search\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713344821178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,9 @@\n               ?\n               <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n                 setCancelBtn(false)\n                 props.setApiCall(true)\n+                setState(initialFormState)\n               }}>x</Link>\n               : null}<input\n               className={\n                 errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n@@ -168,517 +169,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [cancelBtn, setCancelBtn] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-            ? \"Filter type should have 2 or more letters\"\n-            : !/^[A-Za-z0-9 ]*$/.test(value)\n-              ? \"Cannot use special character \"\n-              : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-          setCancelBtn(false)\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-        setCancelBtn(false)\n-      }\n-    } else {\n-      setLoading(false);\n-      setCancelBtn(false)\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    setCancelBtn(true)\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.filterData[props.filterType].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    setState(initialFormState)\n-    return filteredResults;\n-  };\n-\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            {cancelBtn\n-              ?\n-              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n-                setCancelBtn(false)\n-                props.setApiCall(true)\n-              }}>x</Link>\n-              : null}<input\n-              className={\n-                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                    ? \"Industry Type\"\n-                    : props.id === 5\n-                      ? \"Education Type\"\n-                      : props.id === 6\n-                        ? \"Corporation Type\"\n-                        : props.id === 7\n-                          ? \"Language Type\"\n-                          : \"\"\n-              }\n-            // maxLength={60}\n-            />\n-            {loading ? (\n-              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-              </button>\n-            ) : (\n-              <>\n-                <button\n-                  className=\"btn  action_btn btn-primary px-2\"\n-                  type=\"submit\"\n-                  id=\"button-addon2\"\n-                  title=\"Add Filter\"\n-                  onClick={onAddFIlterClick}\n-                >\n-                  <FiPlus />\n-                </button>\n-                <button\n-                  className=\"btn  action_btn btn-secondry \"\n-                  type=\"button\"\n-                  id=\"button-addon3\"\n-                  title=\"Search\"\n-                  onClick={handleSearch}\n-                >\n-                  Search\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [cancelBtn, setCancelBtn] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-            ? \"Filter type should have 2 or more letters\"\n-            : !/^[A-Za-z0-9 ]*$/.test(value)\n-              ? \"Cannot use special character \"\n-              : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-          setCancelBtn(false)\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-        setCancelBtn(false)\n-      }\n-    } else {\n-      setLoading(false);\n-      setCancelBtn(false)\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    setCancelBtn(true)\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.filterData[props.filterType].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    setState({ ...state, json_item: \"\" })\n-    return filteredResults;\n-  };\n-\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            {cancelBtn\n-              ?\n-              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n-                setCancelBtn(false)\n-                props.setApiCall(true)\n-              }}>x</Link>\n-              : null}<input\n-              className={\n-                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                    ? \"Industry Type\"\n-                    : props.id === 5\n-                      ? \"Education Type\"\n-                      : props.id === 6\n-                        ? \"Corporation Type\"\n-                        : props.id === 7\n-                          ? \"Language Type\"\n-                          : \"\"\n-              }\n-            // maxLength={60}\n-            />\n-            {loading ? (\n-              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-              </button>\n-            ) : (\n-              <>\n-                <button\n-                  className=\"btn  action_btn btn-primary px-2\"\n-                  type=\"submit\"\n-                  id=\"button-addon2\"\n-                  title=\"Add Filter\"\n-                  onClick={onAddFIlterClick}\n-                >\n-                  <FiPlus />\n-                </button>\n-                <button\n-                  className=\"btn  action_btn btn-secondry \"\n-                  type=\"button\"\n-                  id=\"button-addon3\"\n-                  title=\"Search\"\n-                  onClick={handleSearch}\n-                >\n-                  Search\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [cancelBtn, setCancelBtn] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-            ? \"Filter type should have 2 or more letters\"\n-            : !/^[A-Za-z0-9 ]*$/.test(value)\n-              ? \"Cannot use special character \"\n-              : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-          setCancelBtn(false)\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-        setCancelBtn(false)\n-      }\n-    } else {\n-      setLoading(false);\n-      setCancelBtn(false)\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    setCancelBtn(true)\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n-    setLoading(false);\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.filterData[props.filterType].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    setState({ ...state, json_item: \"\" })\n-    return filteredResults;\n-  };\n-\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            {cancelBtn\n-              ?\n-              <Link  className=\"px-2\" onClick={() => {\n-                setCancelBtn(false)\n-                props.setApiCall(true)\n-              }}>x</Link>\n-              : null}<input\n-              className={\n-                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                    ? \"Industry Type\"\n-                    : props.id === 5\n-                      ? \"Education Type\"\n-                      : props.id === 6\n-                        ? \"Corporation Type\"\n-                        : props.id === 7\n-                          ? \"Language Type\"\n-                          : \"\"\n-              }\n-            // maxLength={60}\n-            />\n-            {loading ? (\n-              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-              </button>\n-            ) : (\n-              <>\n-                <button\n-                  className=\"btn  action_btn btn-primary px-2\"\n-                  type=\"submit\"\n-                  id=\"button-addon2\"\n-                  title=\"Add Filter\"\n-                  onClick={onAddFIlterClick}\n-                >\n-                  <FiPlus />\n-                </button>\n-                <button\n-                  className=\"btn  action_btn btn-secondry \"\n-                  type=\"button\"\n-                  id=\"button-addon3\"\n-                  title=\"Search\"\n-                  onClick={handleSearch}\n-                >\n-                  Search\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713344897210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,9 @@\n     // For example:\n     const searchResults = yourSearchFunction(state.json_item);\n     props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n     setLoading(false);\n+    setState(initialFormState)\n   };\n   const yourSearchFunction = (searchTerm) => {\n     if (!Array.isArray(props.FilterData)) {\n       console.error(\"FilterData is not an array.\");\n@@ -89,9 +90,8 @@\n     // For demonstration purposes, let's assume listData is an array of objects\n     const filteredResults = props.filterData[props.filterType].filter((item) =>\n       item.value.toLowerCase().includes(searchTerm.toLowerCase())\n     );\n-    setState(initialFormState)\n     return filteredResults;\n   };\n \n   return (\n"
                },
                {
                    "date": 1713345032264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,12 +148,19 @@\n                 <button\n                   className=\"btn  action_btn btn-secondry \"\n                   type=\"button\"\n                   id=\"button-addon3\"\n-                  title=\"Search\"\n-                  onClick={handleSearch}\n+                  title={cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n+                  onClick={cancelBtn\n+                    ? () => {\n+                      setCancelBtn(false)\n+                      props.setApiCall(true)\n+                      setState(initialFormState)\n+                    } : () => handleSearch()}\n                 >\n-                  Search\n+                  {cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n                 </button>\n               </>\n             )}\n           </div>\n"
                },
                {
                    "date": 1713345046766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,16 +98,9 @@\n     <div className=\"p-0 m-0\">\n       <form >\n         <div className=\"form  p-0\">\n           <div className=\"input-group mb-3\">\n-            {cancelBtn\n-              ?\n-              <Link title=\"Cancel\" className=\"px-2\" onClick={() => {\n-                setCancelBtn(false)\n-                props.setApiCall(true)\n-                setState(initialFormState)\n-              }}>x</Link>\n-              : null}<input\n+           <input\n               className={\n                 errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n               }\n               value={state.json_item}\n"
                },
                {
                    "date": 1713345054549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n     <div className=\"p-0 m-0\">\n       <form >\n         <div className=\"form  p-0\">\n           <div className=\"input-group mb-3\">\n-           <input\n+            <input\n               className={\n                 errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n               }\n               value={state.json_item}\n"
                },
                {
                    "date": 1713345117162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,173 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+          setCancelBtn(false)\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setCancelBtn(false)\n+      }\n+    } else {\n+      setLoading(false);\n+      setCancelBtn(false)\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    setCancelBtn(true)\n+    // Perform your search logic here using state.json_item\n+    // For example:\n+    const searchResults = yourSearchFunction(state.json_item);\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n+    setLoading(false);\n+    setState(initialFormState)\n+  };\n+  const yourSearchFunction = (searchTerm) => {\n+    if (!Array.isArray(props.FilterData)) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    console.log(props.filterData[props.filterType])\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    );\n+    return filteredResults;\n+  };\n+\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title={cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n+                  onClick={cancelBtn\n+                    ? () => {\n+                      setCancelBtn(false)\n+                      props.setApiCall(true)\n+                      setState(initialFormState)\n+                    } : () => handleSearch()}\n+                >\n+                  {cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713345174233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,183 +71,9 @@\n   /*Search function for filter */\n   const handleSearch = () => {\n     setLoading(true);\n     setCancelBtn(true)\n-    // Perform your search logic here using state.json_item\n-    // For example:\n-    const searchResults = yourSearchFunction(state.json_item);\n-    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n-    setLoading(false);\n-    setState(initialFormState)\n-  };\n-  const yourSearchFunction = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n     console.log(props.filterData[props.filterType])\n-    const filteredResults = props.filterData[props.filterType].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                    ? \"Industry Type\"\n-                    : props.id === 5\n-                      ? \"Education Type\"\n-                      : props.id === 6\n-                        ? \"Corporation Type\"\n-                        : props.id === 7\n-                          ? \"Language Type\"\n-                          : \"\"\n-              }\n-            // maxLength={60}\n-            />\n-            {loading ? (\n-              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-              </button>\n-            ) : (\n-              <>\n-                <button\n-                  className=\"btn  action_btn btn-primary px-2\"\n-                  type=\"submit\"\n-                  id=\"button-addon2\"\n-                  title=\"Add Filter\"\n-                  onClick={onAddFIlterClick}\n-                >\n-                  <FiPlus />\n-                </button>\n-                <button\n-                  className=\"btn  action_btn btn-secondry \"\n-                  type=\"button\"\n-                  id=\"button-addon3\"\n-                  title={cancelBtn\n-                    ? \"Cancel\" : \"Search\"}\n-                  onClick={cancelBtn\n-                    ? () => {\n-                      setCancelBtn(false)\n-                      props.setApiCall(true)\n-                      setState(initialFormState)\n-                    } : () => handleSearch()}\n-                >\n-                  {cancelBtn\n-                    ? \"Cancel\" : \"Search\"}\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [cancelBtn, setCancelBtn] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-            ? \"Filter type should have 2 or more letters\"\n-            : !/^[A-Za-z0-9 ]*$/.test(value)\n-              ? \"Cannot use special character \"\n-              : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-          setCancelBtn(false)\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-        setCancelBtn(false)\n-      }\n-    } else {\n-      setLoading(false);\n-      setCancelBtn(false)\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    setCancelBtn(true)\n-    // Perform your search logic here using state.json_item\n-    // For example:\n     const searchResults = yourSearchFunction(state.json_item);\n     props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n     setLoading(false);\n     setState(initialFormState)\n"
                },
                {
                    "date": 1713345194321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,14 +72,14 @@\n   const handleSearch = () => {\n     setLoading(true);\n     setCancelBtn(true)\n     console.log(props.filterData[props.filterType])\n-    const searchResults = yourSearchFunction(state.json_item);\n+    const searchResults = SearchFilterFun(state.json_item);\n     props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n     setLoading(false);\n     setState(initialFormState)\n   };\n-  const yourSearchFunction = (searchTerm) => {\n+  const SearchFilterFun = (searchTerm) => {\n     if (!Array.isArray(props.FilterData)) {\n       console.error(\"FilterData is not an array.\");\n       return [];\n     }\n"
                },
                {
                    "date": 1713345252138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n     setLoading(false);\n     setState(initialFormState)\n   };\n   const SearchFilterFun = (searchTerm) => {\n-    if (!Array.isArray(props.FilterData)) {\n+    if (!Array.isArray(props.filterData[props.filterType])) {\n       console.error(\"FilterData is not an array.\");\n       return [];\n     }\n \n"
                },
                {
                    "date": 1713345447398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n   /*Search function for filter */\n   const handleSearch = () => {\n     setLoading(true);\n     setCancelBtn(true)\n-    console.log(props.filterData[props.filterType])\n     const searchResults = SearchFilterFun(state.json_item);\n     props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n     setLoading(false);\n     setState(initialFormState)\n"
                },
                {
                    "date": 1713346680776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,175 @@\n+import React, { useState } from \"react\";\n+import useValidation from \"../../common/useValidation\";\n+import { AddFIlter } from \"../../../api//api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import { Link } from \"react-router-dom\";\n+import { FiPlus } from \"react-icons/fi\";\n+function AddFilter(props) {\n+  let [loading, setLoading] = useState(false);\n+  let [cancelBtn, setCancelBtn] = useState(false);\n+\n+  // FILTER UPDATE VALIDATION\n+\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormState = {\n+    id: \"\",\n+    json_item: \"\",\n+  };\n+  // VALIDATION CONDITIONS\n+  const validators = {\n+    json_item: [\n+      (value) =>\n+        value === \"\" || value.trim() === \"\"\n+          ? \"Filter type is required\"\n+          : value.length < 2\n+            ? \"Filter type should have 2 or more letters\"\n+            : !/^[A-Za-z0-9 ]*$/.test(value)\n+              ? \"Cannot use special character \"\n+              : \"\",\n+    ],\n+  };\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, setErrors, errors, validate } =\n+    useValidation(initialFormState, validators);\n+\n+  // FILTER UPDATE SUBMIT BUTTON\n+  const onAddFIlterClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddFIlter(state, props.id);\n+        if (responseData.message === \"item already exist !\") {\n+          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+        }\n+        if (responseData.message === \"filter item added successfully\") {\n+          toast.success(\"Filter added successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          setState(initialFormState);\n+          setLoading(false);\n+          setErrors(\"\");\n+          setCancelBtn(false)\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setCancelBtn(false)\n+      }\n+    } else {\n+      setLoading(false);\n+      setCancelBtn(false)\n+    }\n+  };\n+  // END FILTER UPDATE VALIDATION\n+  /*Search function for filter */\n+  const handleSearch = () => {\n+    setLoading(true);\n+    setCancelBtn(true)\n+    const searchResults = SearchFilterFun(state.json_item);\n+    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n+    setLoading(false);\n+    setState(initialFormState)\n+  };\n+  const SearchFilterFun = (searchTerm) => {\n+    if (!Array.isArray(props.filterData[props.filterType])) {\n+      console.error(\"FilterData is not an array.\");\n+      return [];\n+    }\n+\n+    // Implement your search logic here\n+    // This could be a filter operation on your list data\n+    // For demonstration purposes, let's assume listData is an array of objects\n+    // const filteredResults = props.filterData[props.filterType].filter((item) =>\n+    //   item.value.toLowerCase().includes(searchTerm.toLowerCase())\n+    // );\n+    const filteredResults = props.filterData[props.filterType].filter((item) =>\n+  item.value.toLowerCase().includes(searchTerm.toLowerCase()) &&\n+  searchTerm.length >= 3\n+);\n+\n+    return filteredResults;\n+  };\n+\n+  return (\n+    <div className=\"p-0 m-0\">\n+      <form >\n+        <div className=\"form  p-0\">\n+          <div className=\"input-group mb-3\">\n+            <input\n+              className={\n+                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n+              }\n+              value={state.json_item}\n+              onChange={onInputChange}\n+              id=\"json_item\"\n+              name=\"json_item\"\n+              type={\"text\"}\n+              placeholder={\n+                props.id === 1\n+                  ? \"Skill Type\"\n+                  : props.id === 4\n+                    ? \"Industry Type\"\n+                    : props.id === 5\n+                      ? \"Education Type\"\n+                      : props.id === 6\n+                        ? \"Corporation Type\"\n+                        : props.id === 7\n+                          ? \"Language Type\"\n+                          : \"\"\n+              }\n+            // maxLength={60}\n+            />\n+            {loading ? (\n+              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n+                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n+              </button>\n+            ) : (\n+              <>\n+                <button\n+                  className=\"btn  action_btn btn-primary px-2\"\n+                  type=\"submit\"\n+                  id=\"button-addon2\"\n+                  title=\"Add Filter\"\n+                  onClick={onAddFIlterClick}\n+                >\n+                  <FiPlus />\n+                </button>\n+                <button\n+                  className=\"btn  action_btn btn-secondry \"\n+                  type=\"button\"\n+                  id=\"button-addon3\"\n+                  title={cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n+                  onClick={cancelBtn\n+                    ? () => {\n+                      setCancelBtn(false)\n+                      props.setApiCall(true)\n+                      setState(initialFormState)\n+                    } : () => handleSearch()}\n+                >\n+                  {cancelBtn\n+                    ? \"Cancel\" : \"Search\"}\n+                </button>\n+              </>\n+            )}\n+          </div>\n+          {/*----ERROR MESSAGE FOR EMAIL----*/}\n+          {errors.json_item && (\n+            <span key={errors.json_item} className=\"text-danger font-size-3\">\n+              {errors.json_item}\n+            </span>\n+          )}\n+        </div>\n+      </form>\n+    </div>\n+  );\n+}\n+\n+export default AddFilter;\n"
                },
                {
                    "date": 1713414082503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import useValidation from \"../../common/useValidation\";\n import { AddFIlter } from \"../../../api//api\";\n import { toast } from \"react-toastify\";\n import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n+// import { Link } from \"react-router-dom\";\n import { FiPlus } from \"react-icons/fi\";\n function AddFilter(props) {\n   let [loading, setLoading] = useState(false);\n   let [cancelBtn, setCancelBtn] = useState(false);\n@@ -172,174 +172,4 @@\n   );\n }\n \n export default AddFilter;\n-import React, { useState } from \"react\";\n-import useValidation from \"../../common/useValidation\";\n-import { AddFIlter } from \"../../../api//api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import { Link } from \"react-router-dom\";\n-import { FiPlus } from \"react-icons/fi\";\n-function AddFilter(props) {\n-  let [loading, setLoading] = useState(false);\n-  let [cancelBtn, setCancelBtn] = useState(false);\n-\n-  // FILTER UPDATE VALIDATION\n-\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormState = {\n-    id: \"\",\n-    json_item: \"\",\n-  };\n-  // VALIDATION CONDITIONS\n-  const validators = {\n-    json_item: [\n-      (value) =>\n-        value === \"\" || value.trim() === \"\"\n-          ? \"Filter type is required\"\n-          : value.length < 2\n-            ? \"Filter type should have 2 or more letters\"\n-            : !/^[A-Za-z0-9 ]*$/.test(value)\n-              ? \"Cannot use special character \"\n-              : \"\",\n-    ],\n-  };\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, setErrors, errors, validate } =\n-    useValidation(initialFormState, validators);\n-\n-  // FILTER UPDATE SUBMIT BUTTON\n-  const onAddFIlterClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddFIlter(state, props.id);\n-        if (responseData.message === \"item already exist !\") {\n-          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-        }\n-        if (responseData.message === \"filter item added successfully\") {\n-          toast.success(\"Filter added successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          setState(initialFormState);\n-          setLoading(false);\n-          setErrors(\"\");\n-          setCancelBtn(false)\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-        setCancelBtn(false)\n-      }\n-    } else {\n-      setLoading(false);\n-      setCancelBtn(false)\n-    }\n-  };\n-  // END FILTER UPDATE VALIDATION\n-  /*Search function for filter */\n-  const handleSearch = () => {\n-    setLoading(true);\n-    setCancelBtn(true)\n-    const searchResults = SearchFilterFun(state.json_item);\n-    props.setFilterData({ ...props.filterData, [props.filterType]: searchResults });\n-    setLoading(false);\n-    setState(initialFormState)\n-  };\n-  const SearchFilterFun = (searchTerm) => {\n-    if (!Array.isArray(props.filterData[props.filterType])) {\n-      console.error(\"FilterData is not an array.\");\n-      return [];\n-    }\n-\n-    // Implement your search logic here\n-    // This could be a filter operation on your list data\n-    // For demonstration purposes, let's assume listData is an array of objects\n-    const filteredResults = props.filterData[props.filterType].filter((item) =>\n-      item.value.toLowerCase().includes(searchTerm.toLowerCase())\n-    );\n-    return filteredResults;\n-  };\n-\n-  return (\n-    <div className=\"p-0 m-0\">\n-      <form >\n-        <div className=\"form  p-0\">\n-          <div className=\"input-group mb-3\">\n-            <input\n-              className={\n-                errors.json_item ? \"form-control border border-danger\" : \"form-control\"\n-              }\n-              value={state.json_item}\n-              onChange={onInputChange}\n-              id=\"json_item\"\n-              name=\"json_item\"\n-              type={\"text\"}\n-              placeholder={\n-                props.id === 1\n-                  ? \"Skill Type\"\n-                  : props.id === 4\n-                    ? \"Industry Type\"\n-                    : props.id === 5\n-                      ? \"Education Type\"\n-                      : props.id === 6\n-                        ? \"Corporation Type\"\n-                        : props.id === 7\n-                          ? \"Language Type\"\n-                          : \"\"\n-              }\n-            // maxLength={60}\n-            />\n-            {loading ? (\n-              <button className=\"btn action_btn btn-primaryy\" type=\"button\" disabled>\n-                <div className=\"spinner-border spinner-border-sm\" role=\"status\"></div>\n-              </button>\n-            ) : (\n-              <>\n-                <button\n-                  className=\"btn  action_btn btn-primary px-2\"\n-                  type=\"submit\"\n-                  id=\"button-addon2\"\n-                  title=\"Add Filter\"\n-                  onClick={onAddFIlterClick}\n-                >\n-                  <FiPlus />\n-                </button>\n-                <button\n-                  className=\"btn  action_btn btn-secondry \"\n-                  type=\"button\"\n-                  id=\"button-addon3\"\n-                  title={cancelBtn\n-                    ? \"Cancel\" : \"Search\"}\n-                  onClick={cancelBtn\n-                    ? () => {\n-                      setCancelBtn(false)\n-                      props.setApiCall(true)\n-                      setState(initialFormState)\n-                    } : () => handleSearch()}\n-                >\n-                  {cancelBtn\n-                    ? \"Cancel\" : \"Search\"}\n-                </button>\n-              </>\n-            )}\n-          </div>\n-          {/*----ERROR MESSAGE FOR EMAIL----*/}\n-          {errors.json_item && (\n-            <span key={errors.json_item} className=\"text-danger font-size-3\">\n-              {errors.json_item}\n-            </span>\n-          )}\n-        </div>\n-      </form>\n-    </div>\n-  );\n-}\n-\n-export default AddFilter;\n"
                },
                {
                    "date": 1713414094488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n                 >\n                   <FiPlus />\n                 </button>\n                 <button\n-                  className=\"btn  action_btn btn-secondry \"\n+                  className=\"btn  action_btn btn-secondry d-none\"\n                   type=\"button\"\n                   id=\"button-addon3\"\n                   title={cancelBtn\n                     ? \"Cancel\" : \"Search\"}\n"
                }
            ],
            "date": 1709814579617,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport useValidation from \"../../common/useValidation\";\nimport { AddFIlter } from \"../../../api//api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { FiPlus } from \"react-icons/fi\";\nfunction AddFilter(props) {\n  let [loading, setLoading] = useState(false);\n\n  // FILTER UPDATE VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    id: \"\",\n    json_item: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    json_item: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Filter type is required\"\n          : value.length < 2\n          ? \"Filter type should have 2 or more letters\"\n          : !/^[A-Za-z0-9 ]*$/.test(value)\n          ? \"Cannot use special character \"\n          : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, onInputChange, setErrors, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  // FILTER UPDATE SUBMIT BUTTON\n  const onAddFIlterClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        const responseData = await AddFIlter(state, props.id);\n        if (responseData.message === \"item already exist !\") {\n          setErrors({ ...errors, json_item: [\"Filter already exist !\"] });\n          props.setApiCall(true);\n          setState(initialFormState);\n          setLoading(false);\n        }\n        if (responseData.message === \"filter item added successfully\") {\n          toast.success(\"Filter added successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          setState(initialFormState);\n          setLoading(false);\n          setErrors(\"\");\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END FILTER UPDATE VALIDATION\n  return (\n    <div className=\"p-0 m-0\">\n      <form onSubmit={onAddFIlterClick}>\n        <div className=\"form  p-0\">\n          <div className=\"input-group mb-3\">\n            <input\n              className={\n                errors.json_item\n                  ? \"form-control border border-danger\"\n                  : \"form-control\"\n              }\n              value={state.json_item}\n              onChange={onInputChange}\n              id=\"json_item\"\n              name=\"json_item\"\n              type={\"text\"}\n              placeholder={\n                props.id === 1\n                  ? \"Skill Type\"\n                  : props.id === 4\n                  ? \"Industry Type\"\n                  : props.id === 5\n                  ? \"Education Type\"\n                  : props.id === 6\n                  ? \"Corporation Type\"\n                  : props.id === 7\n                  ? \"Language Type\"\n                  : \"\"\n              }\n              // maxLength={60}\n            />\n            {loading === true ? (\n              <button\n                className=\"btn action_btn btn-primaryy\"\n                type=\"button\"\n                disabled\n              >\n                <div\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                ></div>\n              </button>\n            ) : (\n              <button\n                className=\"btn  action_btn btn-primary \"\n                type=\"submit\"\n                id=\"button-addon2\"\n                title=\"Add Filter\"\n              >\n                <FiPlus />\n              </button>\n            )}\n          </div>\n          {/*----ERROR MESSAGE FOR EMAIL----*/}\n          {errors.json_item && (\n            <span key={errors.json_item} className=\"text-danger font-size-3\">\n              {errors.json_item}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddFilter;\n"
        }
    ]
}