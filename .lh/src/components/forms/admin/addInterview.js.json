{
    "sourceFile": "src/components/forms/admin/addInterview.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1693200780901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486845687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n           props.setApiCall(true)\n           return close();\n         }\n       } catch (err) {\n-        toast.error(\"Something went wrong\", {\n+       console.log(err) {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 1000,\n         });\n         setLoading(false)\n"
                },
                {
                    "date": 1693486958324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,12 +82,9 @@\n           props.setApiCall(true)\n           return close();\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false)\n       }\n     } else {\n       setLoading(false);\n"
                }
            ],
            "date": 1693200780901,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\nimport { AddInterviewSchedule, getInterview } from \"../../../api/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport moment from \"moment\";\nfunction AddInterview(props) {\n  let [loading, setLoading] = useState(false);\n  let employeeId = props.resData.employee_id;\n  let jobId = props.job_id;\n\n  /* Functionality to close the modal */\n  const close = () => {\n    setState({ ...state, interview_date: \"\", interview_status: \"\" });\n    setErrors(\"\");\n    setLoading(false);\n    props.close();\n  };\n  // USER INTERVIEW UPDATE VALIDATION\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    interview_date: \"\",\n    interview_status: props.resData.status === \"pending\" || props.resData.status === \"\" ? \"pending\" : \"\"\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    interview_date: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Interview date is required\"\n          : null,\n    ],\n    interview_status: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Interview status is required\"\n          : null,\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, setErrors, onInputChange, errors, validate } =\n    useValidation(initialFormState, validators);\n\n  const InterviewData = async () => {\n    try {\n      const userData = await getInterview(jobId, employeeId);\n      if (userData.data.length === 0) {\n        setState({ state, interview_date: \"\" });\n      } else {\n        if (props.Interview === \"interview\") {\n          setState({ state, interview_date: props.resData.interview_date });\n        }\n        else {\n          setState({ state, interview_date: userData.data[0].interview_date, interview_status: userData.data[0].status });\n        }\n      }\n    } catch (err) {\n      console.log(err)\n    }\n    // console.log(\"state =>\", state , \"date =>\" , props.resData.interview_date ,userData)\n  };\n\n  /*Render function to get the interview*/\n  useEffect(() => {\n    InterviewData();\n  }, [props]);\n\n  // USER INTERVIEW UPDATE SUBMIT BUTTON\n  const onAddInterviewClick = async (event) => {\n\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        const responseData = await AddInterviewSchedule(state, employeeId, jobId);\n        if (responseData.message === \"data inserted successfully\") {\n          toast.success(\"Interview Scheduled successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true)\n          return close();\n        }\n      } catch (err) {\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false)\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n  // END USER ADMIN PROFILE UPDATE VALIDATION\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper \"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        <div className=\"bg-white rounded h-100 px-11 pt-7 overflow-y-hidden\">\n          <h5 className=\"text-center pt-2 mb-7\">Schedule Interview</h5>\n\n          <form onSubmit={onAddInterviewClick}>\n            <div className=\"form-group row mb-0\">\n              <label\n                htmlFor=\"interview_status\"\n                className=\"font-size-4 text-black-2  line-height-reset\"\n              >\n                Interview Status <span className=\"text-danger\">*</span> :\n              </label>\n              <select\n                name=\"interview_status\"\n                className={\n                  errors.interview_status\n                    ? \"form-control mx-5 col border border-danger\"\n                    : \"form-control col mx-5\"\n                }\n                value={state.interview_status}\n                onChange={onInputChange}\n                id=\"interview_status\"\n              >\n                <option value={\"\"}>Select Status</option>\n                <option value={\"pending\"}>Schedule / Reschedule</option>\n                <option value={\"complete\"}>Complete</option>\n              </select>\n            </div>\n            {/*----ERROR MESSAGE FOR EMAIL----*/}\n            {errors.interview_status && (\n              <span\n                key={errors.interview_status}\n                className=\"text-danger font-size-3 px-5\"\n              >\n                {errors.interview_status}\n              </span>\n            )}\n            <div className=\"form-group mt-5\">\n              <label\n                htmlFor=\"interview_date\"\n                className=\"font-size-4 text-black-2  line-height-reset\"\n              >\n                Interview date <span className=\"text-danger\">*</span> :\n              </label>\n              <input\n                className={\n                  errors.interview_date\n                    ? \"form-control coustam_datepicker border border-danger\"\n                    : \"form-control coustam_datepicker\"\n                }\n                value={moment(state.interview_date).format(\"DD-MM-YYYY\")}\n                onChange={onInputChange}\n                id=\"interview_date\"\n                name=\"interview_date\"\n                type={\"date\"}\n                placeholder=\"Interview date\"\n                onKeyDownCapture={(e) => e.preventDefault()}\n                min={moment().format(\"DD-MM-YYYY\")}\n              />\n              {/*----ERROR MESSAGE FOR EMAIL----*/}\n              {errors.interview_date && (\n                <span\n                  key={errors.interview_date}\n                  className=\"text-danger font-size-3\"\n                >\n                  {errors.interview_date}\n                </span>\n              )}\n            </div>\n            <div className=\"form-group text-center\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  onClick={onAddInterviewClick}\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddInterview;\n"
        }
    ]
}