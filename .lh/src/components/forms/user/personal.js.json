{
    "sourceFile": "src/components/forms/user/personal.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1713775555301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1713851521049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1359 @@\n+import moment from \"moment/moment\";\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+// import { CKEditor } from \"ckeditor4-react\";\n+// import FroalaEditor from \"react-froala-wysiwyg\";\n+// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n+// import \"froala-editor/css/froala_style.min.css\";\n+// import \"froala-editor/js/plugins.pkgd.min.js\";\n+\n+import {\n+  AddEmployeeDetails,\n+  EmployeeDetails,\n+  GetAgentJson,\n+  getallAdminData,\n+  // GetFilter,\n+  // AddEmployeePermission,\n+} from \"../../../api/api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import FilterJson from \"../../json/filterjson\";\n+// import Select from \"react-select\";\n+// import AddAgent from \"../admin/addAgent\";\n+// import { Link } from \"react-router-dom\";\n+import AddNewAgent from \"../admin/add_agent\";\n+import Permissions from \"../../json/emailPermisionJson\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function PersonalDetails(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  const [loading, setLoading] = useState(false);\n+  const [agentList, setAgentList] = useState([]);\n+  const [admiinList, setAdminList] = useState([]);\n+  // const [jsonList, setJsonList] = useState([]);\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n+  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n+  /*data and id states */\n+  let [agentId /*, setAgentId*/] = useState();\n+\n+  let user_type = localStorage.getItem(\"userType\");\n+  // let admin_id = localStorage.getItem(\"admin_id\");\n+  // USER PERSONAL DETAIL VALIDATION\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormStateuser = {\n+    name: \"\",\n+    email: \"\",\n+    contact_no: \"\",\n+    description: \"\",\n+    date_of_birth: \"\",\n+    gender: \"\",\n+    marital_status: \"\",\n+    nationality: \"\",\n+    current_location: \"\",\n+    currently_located_country: \"\",\n+    language: \"\",\n+    religion: \"\",\n+    interested_in: \"\",\n+    experience: \"\",\n+    work_permit_canada: \"\",\n+    work_permit_other_country: \"\",\n+    resume: \"\",\n+    profile_photo: \"\",\n+    is_featured: \"\",\n+    status: props.employeeId === \"0\" ? \"1\" : \"\",\n+    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n+    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n+    assigned_by: \"\"\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormStateuser);\n+    setErrors(\"\");\n+    setLoading(false);\n+    props.close();\n+  };\n+\n+  // VALIDATION CONDITIONS\n+\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Name is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 2\n+              ? \"Name should have 2 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Name can not have a number.\"\n+                : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Mobile number is required\"\n+          : value.length < 10\n+            ? \"Mobile number should be more than 10 digits\"\n+            : value.length > 13\n+              ? \"Mobile no should be of 13 digits\"\n+              : \"\",\n+    ],\n+    // description: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Description is required\"\n+    //       : value.length < 5\n+    //       ? \"Description should have 5 or more letter\"\n+    //       : null,\n+    // ],\n+    date_of_birth: [\n+      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n+    ],\n+    gender: [\n+      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n+    ],\n+    marital_status: [\n+      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n+    ],\n+    // nationality: [\n+    //   (value) =>\n+    //     value === \"\" || value === null\n+    //       ? \"Nationality is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Nationality should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Nationality can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    current_location: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Location is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 3\n+              ? \"Location should have 3 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Location can not have a number.\"\n+                : \"\",\n+    ],\n+    // currently_located_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Country is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Country should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Country can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    language: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Language is required\"\n+          : \"\",\n+    ],\n+    // religion: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Religion is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Religion should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Religion can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    interested_in: [\n+      (value) => (value === \"\" ? \"Interested in is required\" : null),\n+    ],\n+    experience: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Experience is required\" : null,\n+    ],\n+    resume: [\n+      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n+    ],\n+    work_permit_canada: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Work Permit is required\" : null,\n+    ],\n+    // work_permit_other_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Other Permit is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 2\n+    //       ? \"Other permit sholud have 2 or more letters\"\n+    //       : \"\",\n+    // ],\n+    reffer_by:\n+      props.employeeId !== \"0\" || user_type === \"user\"\n+        ? null\n+        : [\n+          (value) =>\n+            value === \"\" || value === null ? \"Refferer is required\" : null,\n+        ],\n+    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n+    //   ? null\n+    //   : [\n+    //     (value) =>\n+    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n+    //   ],\n+  };\n+\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, validate, setErrors } =\n+    useValidation(initialFormStateuser, validators);\n+  // const handleEditorChange = (content, editor) => {\n+  //   setState({ ...state, description: content });\n+  // };\n+\n+  // API CALL\n+  const UserData = async () => {\n+    try {\n+      const userData = await EmployeeDetails(props.employeeId);\n+      if (userData.data.employee.length === 0) {\n+        setState([]);\n+      } else {\n+        setState(userData.data.employee[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setLoading(false);\n+    }\n+  };\n+  /*Function to get admin json list */\n+  const AdminJson = async () => {\n+    let response = await getallAdminData();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n+      // if (Array.isArray(newAdminJson)) {\n+      //   const options = newAdminJson.map((option) => ({\n+      //     value: option.admin_id,\n+      //     label: option.name,\n+      //   }));\n+      //   setAdminList(options);\n+      // }\n+      // setJsonList(json.data.data);\n+      setAdminList(response.data)\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onAdminSelectChange = (option) => {\n+  //   setState({ ...state, assigned_by: option.value });\n+  // };\n+  /*Function to get agent json list */\n+  const AgentJson = async () => {\n+    let response = await GetAgentJson();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // if (Array.isArray(response)) {\n+      //   const options = response.map((option) => ({\n+      //     value: option.id,\n+      //     label: option.u_id + \"  \" + option.name,\n+      //     name: option.name\n+      //   }));\n+      // }\n+      setAgentList(response);\n+      // setJsonList(json.data.data);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onSelectChange = (option) => {\n+  //   setState({ ...state, reffer_by: option.value });\n+  // };\n+  useEffect(() => {\n+    AgentJson();\n+    if (user_type === \"admin\") {\n+      AdminJson()\n+    }\n+    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n+      setState(initialFormStateuser);\n+    } else {\n+      UserData();\n+    }\n+    setShowAgentMOdal(false);\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [props, apiCall]);\n+\n+  // USER PERSONAL DETAIL SUBMIT BUTTON\n+  async function onUserPersonalDetailClick(event) {\n+    // console.log(errors)\n+    event.preventDefault();\n+    if (validate() && imgError === \"\") {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddEmployeeDetails(state);\n+        if (responseData.message === \"Employee data inserted successfully\") {\n+          try {\n+            // let Response = await AddEmployeePermission(Permissions);\n+            // conditions for the response toaster message\n+            // if (Response.message === \"successfully\") {\n+            toast.success(\"Candidate added successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+            // }\n+          } catch (err) {\n+            console.log(err);\n+          }\n+        }\n+        if (responseData.message === \"Employee data updated successfully\") {\n+          toast.success(\"Candidate Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      toast.error(\"Please complete the profile first!\", {\n+        position: toast.POSITION.TOP_RIGHT,\n+        autoClose: 1000,\n+      });\n+      setLoading(false);\n+    }\n+  }\n+  // END USER PERSONAL DETAIL VALIDATION\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+  /*Onchange function of Resume */\n+  const handleUploadFile = async (e) => {\n+    // const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n+    const allowedFormats = [\".pdf\", \".doc\", \".docx\", \".jpg\", \".jpeg\", \".png\"];\n+    const file = e.target.files[0];\n+    const fileType = `.${file.name.split(\".\").pop()}`\n+    console.log(file.type, fileType)\n+    if (allowedFormats.includes(fileType)) {\n+      console.log(\"object\")\n+      encoded = await convertToBase64(file);\n+      let base64Name = encoded.base64;\n+      let finalBase = base64Name;\n+      setState({ ...state, resume: finalBase });\n+    } else {\n+      setErrors({\n+        ...errors,\n+        resume: [\n+          \"Invalid file format. Please upload an image (JPEG or PNG) or a PDF.\",\n+        ],\n+      });\n+    }\n+  };\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n+  // Calculate min and max dates dynamically\n+  // const currentYear = moment().year();\n+  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n+  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        {showAddEAgentModal ? (\n+          <div className=\"form-group col-md-12\">\n+            <button\n+              className=\"btn btn-primary\"\n+              onClick={() => setShowAgentMOdal(false)}\n+            >\n+              Cancel\n+            </button>\n+            <AddNewAgent\n+              agentId={agentId}\n+              apiCall={apiCall}\n+              setApiCall={setApiCall}\n+            />\n+          </div>\n+        ) : (\n+          <>\n+            <button\n+              type=\"button\"\n+              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+              data-dismiss=\"modal\"\n+              onClick={close}\n+            >\n+              <i className=\"fas fa-times\"></i>\n+            </button>\n+            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n+              <form onSubmit={onUserPersonalDetailClick}>\n+                {props.employeeId === \"0\" ? (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Add Candidate Details\n+                  </h5>\n+                ) : (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Update {props.pageNameForForm === \"ApplicantType\" ?\n+                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n+                          ? \"Assigned To\" :\n+                          \"Candidate Details\"}\n+                  </h5>\n+                )}\n+                {/* FIRST LINE */}\n+                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n+                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n+                  \"d-none\" : \"\"}`}>\n+                  <div className=\"mb-4 position-relative\">\n+                    <input\n+                      type={\"file\"}\n+                      id=\"profile_photo\"\n+                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                      onChange={handleFileChange}\n+                      className=\"d-none\"\n+                    />\n+                    <img\n+                      className=\"rounded-circle\"\n+                      src={\n+                        state.profile_photo\n+                          ? state.profile_photo\n+                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                      }\n+                      alt=\"\"\n+                      width={\"100px\"}\n+                      height={\"100px\"}\n+                    />\n+                    <label\n+                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                      htmlFor=\"profile_photo\"\n+                    >\n+                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                    </label>\n+                  </div>\n+                  <small className=\"text-danger\">{imgError}</small>\n+                </div>\n+                <div className=\"row pt-5\">\n+                  <input\n+                    maxLength={20}\n+                    name=\"employee_id\"\n+                    value={state.id || \"\"}\n+                    type=\"hidden\"\n+                    id=\"employee_id\"\n+                  />\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"name\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Full Name: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      name=\"name\"\n+                      value={state.name || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.name\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"Full Name\"\n+                      id=\"name\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR name----*/}\n+                    {errors.name && (\n+                      <span\n+                        key={errors.name}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.name}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"email\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Email Id: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"email\"\n+                      name=\"email\"\n+                      value={state.email || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.email\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control \"\n+                      }\n+                      id=\"email\"\n+                      placeholder=\"email\"\n+                    // disabled={props.employeeId === \"0\" ? false : true}\n+                    />\n+                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                    {errors.email && (\n+                      <span\n+                        key={errors.email}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.email}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"contact_no\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Mobile Number: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      type=\"number\"\n+                      min={0}\n+                      placeholder=\"Mobile Number\"\n+                      name=\"contact_no\"\n+                      value={state.contact_no || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.contact_no\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"contact_no\"\n+                      maxLength={13}\n+                    />\n+                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n+                    {errors.contact_no && (\n+                      <span\n+                        key={errors.contact_no}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.contact_no}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"description\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      style={{ top: \"-12px\" }}\n+                    >\n+                      About:\n+                    </label>\n+                    <TextEditor\n+                      state={state}\n+                      setState={setState}\n+                      page={\"description\"}\n+                    />\n+\n+                    {/* <textarea\n+                      name=\"description\"\n+                      value={state.description || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"description\"\n+                      placeholder=\"Description\"\n+                    ></textarea> */}\n+                    {/* <FroalaEditor\n+                      model={state.description}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, description: newContent })\n+                      }\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.description && (\n+                      <span\n+                        key={errors.description}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.description}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* SECOND LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"date_of_birth\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Date Of Birth: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      // max={moment().format(\"DD-MM-YYYY\")}\n+                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n+                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n+                      type=\"date\"\n+                      placeholder=\"Date Of Birth \"\n+                      name=\"date_of_birth\"\n+                      value={state.date_of_birth || \"\"}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.date_of_birth\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                      id=\"date_of_birth\"\n+                    />\n+\n+                    {/*----ERROR MESSAGE FOR DOB----*/}\n+                    {errors.date_of_birth && (\n+                      <span\n+                        key={errors.date_of_birth}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.date_of_birth}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"gender\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Gender: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"gender\"\n+                      value={state.gender || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.gender\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"gender\"\n+                    >\n+                      <option value={\"\"}>User Gender</option>\n+                      <option value={\"male\"}>Male</option>\n+                      <option value={\"female\"}>Female</option>\n+                      <option value={\"other\"}>Other</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.gender && (\n+                      <span\n+                        key={errors.gender}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.gender}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"marital_status\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Marital Status: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"marital_status\"\n+                      value={state.marital_status || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.marital_status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"marital_status\"\n+                    >\n+                      <option value={\"\"}>Marital Status</option>\n+                      <option value={\"single\"}>Single</option>\n+                      <option value={\"widow\"}>Widow</option>\n+                      <option value={\"married\"}>Married</option>\n+                      <option value={\"separated\"}>Separated</option>\n+                      <option value={\"divorced\"}>Divorced</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n+                    {errors.marital_status && (\n+                      <span\n+                        key={errors.marital_status}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.marital_status}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* THIRD LINE */}\n+                  {/* <div className=\"form-group col-md-4\">\n+                    <label\n+                      htmlFor=\"nationality\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Nationality / Citizenship:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"nationality / Citizenship\"\n+                      name=\"nationality\"\n+                      value={state.nationality || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.nationality\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"nationality\"\n+                    />\n+                    // ----ERROR MESSAGE FOR nationality----\n+                    {errors.nationality && (\n+                      <span\n+                        key={errors.nationality}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.nationality}\n+                      </span>\n+                    )}\n+                  </div> */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"current_location\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Current Location: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"Current Location\"\n+                      name=\"current_location\"\n+                      value={state.current_location || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.current_location\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"current_location\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n+                    {errors.current_location && (\n+                      <span\n+                        key={errors.current_location}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.current_location}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"currently_located_country\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Country Of Residence:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.currently_located_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Currently Located Country\"\n+                      id=\"currently_located_country\"\n+                      name=\"currently_located_country\"\n+                      value={state.currently_located_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select Country</option>\n+                      {(FilterJson.location || []).map((item, i) => (\n+                        <option value={item} key={i}>\n+                          {item}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n+                    {errors.currently_located_country && (\n+                      <span\n+                        key={errors.currently_located_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.currently_located_country}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* FOURTH LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"language\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      English level {/*(Max 3)*/}:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"language\"\n+                      value={state.language || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.language\n+                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                          : \"text-capitalize form-control position-relative overflow-hidden\"\n+                      }\n+                      placeholder=\"Language\"\n+                      id=\"language\"\n+                    >\n+                      <option value={\"\"}>Level</option>\n+                      <option value={\"no english\"}> No English</option>\n+                      <option value={\"basic\"}>Basic</option>\n+                      <option value={\"medium\"}>Medium</option>\n+                      <option value={\"advance\"}>Advance</option>\n+                      {/* {(jsonList.Language || []).map((Lang) => (\n+                        <option key={Lang.id} value={Lang.value}>\n+                          {Lang.value}\n+                        </option>\n+                      ))} */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n+                    {errors.language && (\n+                      <span\n+                        key={errors.language}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.language}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* <div className=\"form-group col-md-4\">\n+                <label\n+                  htmlFor=\"religion\"\n+                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                >\n+                  Religion: <span className=\"text-danger\">*</span>\n+                </label>\n+                <input\n+                  maxLength={20}\n+                  type=\"text\"\n+                  className={\n+                    errors.religion\n+                      ? \"form-control border border-danger\"\n+                      : \"form-control\"\n+                  }\n+                  placeholder=\"religion\"\n+                  id=\"religion\"\n+                  name=\"religion\"\n+                  value={state.religion || \"\"}\n+                  onChange={onInputChange}\n+                />\n+                {errors.religion && (\n+                  <span\n+                    key={errors.religion}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.religion}\n+                  </span>\n+                )}\n+              </div> */}\n+                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n+                    ? \"d-none\"\n+                    : `${props.pageNameForForm === \"ApplicantType\" ?\n+                      \"col-md-12\" : \"col-md-4\"}\n+                      `}`\n+                  }>\n+                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n+                      Applicant's Type : <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      className={`${errors.interested_in\n+                        ? \"form-control  border border-danger \"\n+                        : \"form-control \"}\n+                          ${state.interested_in === \"pnp\" ?\n+                          `text-uppercase` :\n+                          \"text-capitalize\"}`\n+                      }\n+                      id=\"interested_in\"\n+                      name=\"interested_in\"\n+                      value={state.interested_in || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select</option>\n+                      {(FilterJson.interested || []).map((interest) => (\n+                        <option key={interest} value={interest}\n+                          className={interest === \"pnp\" ?\n+                            `text-uppercase` :\n+                            \"text-capitalize\"}>\n+                          {interest}\n+                        </option>\n+                      ))}\n+                      {/* <option value={\"swap\"}>SWEP</option>\n+                  <option value={\"parttime\"}>Part-time</option>\n+                  <option value={\"all\"}>All</option> */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR interested_in----*/}\n+                    {errors.interested_in && (\n+                      <span\n+                        key={errors.interested_in}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.interested_in}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {state.interested_in === \"pnp\" &&\n+                    <div className={`form-group \n+                    ${props.user_of_page === \"assignedUser\" ||\n+                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        ? \"d-none\"\n+                        : `${props.pageNameForForm === \"Category\" ?\n+                          \"col-md-12\" : \"col-md-4\"}\n+                        `}`}>\n+                      <label\n+                        htmlFor=\"category\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Sub Type:\n+                      </label>\n+                      <select\n+                        name=\"category\"\n+                        value={state.category || \"\"}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.category\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"category\"\n+                      >\n+                        <option value={\"\"}>Select user type</option>\n+                        <option value={\"aos\"}>AOS</option>\n+                        <option value={\"rrs\"}>RRS</option>\n+                        <option value={\"tech pathway\"}>Tech Pathway</option>\n+                      </select>\n+                      {/* ----ERROR MESSAGE FOR category---- */}\n+                      {errors.category && (\n+                        <span\n+                          key={errors.category}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.category}\n+                        </span>\n+                      )}\n+                    </div>}\n+                  <div className={`form-group col-md-4\n+                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"experience\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Experience: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"experience\"\n+                      value={state.experience || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.experience\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"experience\"\n+                    >\n+                      <option value={\"\"}>User Experience</option>\n+                      {(FilterJson.experience || []).map((ex, i) => (\n+                        <option value={ex} key={i}>\n+                          {ex}\n+                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR experience----*/}\n+                    {errors.experience && (\n+                      <span\n+                        key={errors.experience}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.experience}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"work_permit_canada\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      If Candidate is Inside Canada\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"work_permit_canada\"\n+                      value={state.work_permit_canada || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.work_permit_canada\n+                          ? \"form-control  border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"work_permit_canada\"\n+                    >\n+                      <option value={\"\"}>Permit </option>\n+                      <option value={\"no\"}>No</option>\n+                      <option value={\"yes\"}>Yes</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n+                    {errors.work_permit_canada && (\n+                      <span\n+                        key={errors.work_permit_canada}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_canada}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`${state.work_permit_canada === \"yes\" &&\n+                      props.user_of_page === \"\"\n+                      ? \"form-group col-md-4\"\n+                      : \"d-none\"\n+                      }`}\n+                  >\n+                    <label\n+                      htmlFor=\"otherpermit\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Candidate Status:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.work_permit_other_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Permit of Other Country\"\n+                      id=\"work_permit_other_country\"\n+                      name=\"work_permit_other_country\"\n+                      value={state.work_permit_other_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select status</option>\n+                      {(FilterJson.canadian_candidate_work_status || []).map(\n+                        (item, i) => (\n+                          <option value={item} key={i}>\n+                            {item}\n+                          </option>\n+                        )\n+                      )}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n+                    {errors.work_permit_other_country && (\n+                      <span\n+                        key={errors.work_permit_other_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_other_country}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={\n+                      `form-group  ${user_type === \"user\" ||\n+                        props.pageNameForForm === \"Category\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"assignedUser\"\n+                        ? \" d-none\"\n+                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n+                    `}\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"reffer_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Referred By:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={agentList || []} \n+                      name=\"reffer_by\"\n+                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n+                      id=\"reffer_by\"\n+                      onChange={onSelectChange}\n+                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n+                    /> */}\n+                    <select\n+                      name=\"reffer_by\"\n+                      value={state.reffer_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.reffer_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"reffer_by\"\n+                      disabled={user_type === \"agent\"}\n+                    >\n+                      <option value={\"\"}>Select partner </option>\n+                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n+                    </select>\n+                    <span\n+                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n+                      onClick={() => setShowAgentMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Partner\"\n+                    >\n+                      +\n+                    </span>\n+\n+                    {/* ERROR MSG FOR REFFER BY */}\n+                    {errors.reffer_by && (\n+                      <span\n+                        key={errors.reffer_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.reffer_by}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`form-group\n+                    ${user_type === \"agent\"\n+                        || props.pageNameForForm === \"Category\"\n+                        || user_type === \"user\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"d-none\"\n+                        : props.user_of_page === \"assignedUser\" ?\n+                          \"d-flex col-md-12\" :\n+                          \"d-flex col-md-4\"}`\n+                    }\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"assigned_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Assigned To:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={\"\" || admiinList}\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by}\n+                      id=\"assigned_by\"\n+                      onChange={onAdminSelectChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control border border-danger px-0 pt-4 \"\n+                          : \"form-control px-0 pt-4 border-0\"\n+                      }\n+                    /> */}\n+                    <select\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"assigned_by\"\n+                    >\n+                      <option value={\"\"}>Select Admin </option>\n+                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n+                    </select>\n+                    {/* <span\n+                      className=\"btn btn-sm btn-secondary\"\n+                      onClick={() => setShowAdminMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Admin\"\n+                    >\n+                      +\n+                    </span>  */}\n+\n+                    {/* ERROR MSG FOR REFFER BY  */}\n+                    {errors.assigned_by && (\n+                      <span\n+                        key={errors.assigned_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.assigned_by}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                    || props.pageNameForForm === \"ApplicantType\" ||\n+                    props.pageNameForForm === \"Category\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"resume\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n+                    </label>\n+                    <input\n+                      type=\"file\"\n+                      placeholder=\"Resume\"\n+                      id=\"resume\"\n+                      name=\"resume\"\n+                      // accept=\".pdf,application/pdf\"\n+                      accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\"\n+                      onChange={handleUploadFile}\n+                      className={\n+                        errors.resume\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR RESUME----*/}\n+                    {errors.resume && (\n+                      <span\n+                        key={errors.resume}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.resume}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {user_type === \"admin\" ? (\n+                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                      || props.pageNameForForm === \"ApplicantType\"\n+                      || props.pageNameForForm === \"Category\"\n+                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                      <label\n+                        htmlFor=\"fetured\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"fetured\"\n+                          name=\"fetured\"\n+                          checked={state.is_featured === \"1\"}\n+                          value={state.is_featured}\n+                          onChange={(e) =>\n+                            setState({\n+                              ...state,\n+                              is_featured:\n+                                state.is_featured === \"\" ||\n+                                  state.is_featured === \"0\"\n+                                  ? \"1\"\n+                                  : \"0\",\n+                            })\n+                          }\n+                        />\n+                      </label>\n+                    </div>\n+                  ) : null}\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"submit\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+              {/* </div> */}\n+            </div>\n+          </>\n+        )}\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default PersonalDetails;\n"
                },
                {
                    "date": 1713857303387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1359 @@\n+import moment from \"moment/moment\";\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+// import { CKEditor } from \"ckeditor4-react\";\n+// import FroalaEditor from \"react-froala-wysiwyg\";\n+// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n+// import \"froala-editor/css/froala_style.min.css\";\n+// import \"froala-editor/js/plugins.pkgd.min.js\";\n+\n+import {\n+  AddEmployeeDetails,\n+  EmployeeDetails,\n+  GetAgentJson,\n+  getallAdminData,\n+  // GetFilter,\n+  // AddEmployeePermission,\n+} from \"../../../api/api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import FilterJson from \"../../json/filterjson\";\n+// import Select from \"react-select\";\n+// import AddAgent from \"../admin/addAgent\";\n+// import { Link } from \"react-router-dom\";\n+import AddNewAgent from \"../admin/add_agent\";\n+import Permissions from \"../../json/emailPermisionJson\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function PersonalDetails(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  const [loading, setLoading] = useState(false);\n+  const [agentList, setAgentList] = useState([]);\n+  const [admiinList, setAdminList] = useState([]);\n+  // const [jsonList, setJsonList] = useState([]);\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n+  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n+  /*data and id states */\n+  let [agentId /*, setAgentId*/] = useState();\n+\n+  let user_type = localStorage.getItem(\"userType\");\n+  // let admin_id = localStorage.getItem(\"admin_id\");\n+  // USER PERSONAL DETAIL VALIDATION\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormStateuser = {\n+    name: \"\",\n+    email: \"\",\n+    contact_no: \"\",\n+    description: \"\",\n+    date_of_birth: \"\",\n+    gender: \"\",\n+    marital_status: \"\",\n+    nationality: \"\",\n+    current_location: \"\",\n+    currently_located_country: \"\",\n+    language: \"\",\n+    religion: \"\",\n+    interested_in: \"\",\n+    experience: \"\",\n+    work_permit_canada: \"\",\n+    work_permit_other_country: \"\",\n+    resume: \"\",\n+    profile_photo: \"\",\n+    is_featured: \"\",\n+    status: props.employeeId === \"0\" ? \"1\" : \"\",\n+    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n+    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n+    assigned_by: \"\"\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormStateuser);\n+    setErrors(\"\");\n+    setLoading(false);\n+    props.close();\n+  };\n+\n+  // VALIDATION CONDITIONS\n+\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Name is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 2\n+              ? \"Name should have 2 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Name can not have a number.\"\n+                : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Mobile number is required\"\n+          : value.length < 10\n+            ? \"Mobile number should be more than 10 digits\"\n+            : value.length > 13\n+              ? \"Mobile no should be of 13 digits\"\n+              : \"\",\n+    ],\n+    // description: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Description is required\"\n+    //       : value.length < 5\n+    //       ? \"Description should have 5 or more letter\"\n+    //       : null,\n+    // ],\n+    date_of_birth: [\n+      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n+    ],\n+    gender: [\n+      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n+    ],\n+    marital_status: [\n+      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n+    ],\n+    // nationality: [\n+    //   (value) =>\n+    //     value === \"\" || value === null\n+    //       ? \"Nationality is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Nationality should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Nationality can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    current_location: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Location is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 3\n+              ? \"Location should have 3 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Location can not have a number.\"\n+                : \"\",\n+    ],\n+    // currently_located_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Country is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Country should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Country can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    language: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Language is required\"\n+          : \"\",\n+    ],\n+    // religion: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Religion is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Religion should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Religion can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    interested_in: [\n+      (value) => (value === \"\" ? \"Interested in is required\" : null),\n+    ],\n+    experience: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Experience is required\" : null,\n+    ],\n+    resume: [\n+      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n+    ],\n+    work_permit_canada: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Work Permit is required\" : null,\n+    ],\n+    // work_permit_other_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Other Permit is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 2\n+    //       ? \"Other permit sholud have 2 or more letters\"\n+    //       : \"\",\n+    // ],\n+    reffer_by:\n+      props.employeeId !== \"0\" || user_type === \"user\"\n+        ? null\n+        : [\n+          (value) =>\n+            value === \"\" || value === null ? \"Refferer is required\" : null,\n+        ],\n+    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n+    //   ? null\n+    //   : [\n+    //     (value) =>\n+    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n+    //   ],\n+  };\n+\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, validate, setErrors } =\n+    useValidation(initialFormStateuser, validators);\n+  // const handleEditorChange = (content, editor) => {\n+  //   setState({ ...state, description: content });\n+  // };\n+\n+  // API CALL\n+  const UserData = async () => {\n+    try {\n+      const userData = await EmployeeDetails(props.employeeId);\n+      if (userData.data.employee.length === 0) {\n+        setState([]);\n+      } else {\n+        setState(userData.data.employee[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setLoading(false);\n+    }\n+  };\n+  /*Function to get admin json list */\n+  const AdminJson = async () => {\n+    let response = await getallAdminData();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n+      // if (Array.isArray(newAdminJson)) {\n+      //   const options = newAdminJson.map((option) => ({\n+      //     value: option.admin_id,\n+      //     label: option.name,\n+      //   }));\n+      //   setAdminList(options);\n+      // }\n+      // setJsonList(json.data.data);\n+      setAdminList(response.data)\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onAdminSelectChange = (option) => {\n+  //   setState({ ...state, assigned_by: option.value });\n+  // };\n+  /*Function to get agent json list */\n+  const AgentJson = async () => {\n+    let response = await GetAgentJson();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // if (Array.isArray(response)) {\n+      //   const options = response.map((option) => ({\n+      //     value: option.id,\n+      //     label: option.u_id + \"  \" + option.name,\n+      //     name: option.name\n+      //   }));\n+      // }\n+      setAgentList(response);\n+      // setJsonList(json.data.data);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onSelectChange = (option) => {\n+  //   setState({ ...state, reffer_by: option.value });\n+  // };\n+  useEffect(() => {\n+    AgentJson();\n+    if (user_type === \"admin\") {\n+      AdminJson()\n+    }\n+    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n+      setState(initialFormStateuser);\n+    } else {\n+      UserData();\n+    }\n+    setShowAgentMOdal(false);\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [props, apiCall]);\n+\n+  // USER PERSONAL DETAIL SUBMIT BUTTON\n+  async function onUserPersonalDetailClick(event) {\n+    // console.log(errors)\n+    event.preventDefault();\n+    if (validate() && imgError === \"\") {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddEmployeeDetails(state);\n+        if (responseData.message === \"Employee data inserted successfully\") {\n+          try {\n+            // let Response = await AddEmployeePermission(Permissions);\n+            // conditions for the response toaster message\n+            // if (Response.message === \"successfully\") {\n+            toast.success(\"Candidate added successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+            // }\n+          } catch (err) {\n+            console.log(err);\n+          }\n+        }\n+        if (responseData.message === \"Employee data updated successfully\") {\n+          toast.success(\"Candidate Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      toast.error(\"Please complete the profile first!\", {\n+        position: toast.POSITION.TOP_RIGHT,\n+        autoClose: 1000,\n+      });\n+      setLoading(false);\n+    }\n+  }\n+  // END USER PERSONAL DETAIL VALIDATION\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+  /*Onchange function of Resume */\n+  const handleUploadFile = async (e) => {\n+    // const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n+    const allowedFormats = [\".pdf\", \".doc\", \".docx\", \".jpg\", \".jpeg\", \".png\"];\n+    const file = e.target.files[0];\n+    const fileType = `.${file.name.split(\".\").pop()}`\n+    console.log(file.type, fileType)\n+    if (allowedFormats.includes(fileType)) {\n+      console.log(\"object\")\n+      encoded = await convertToBase64(file);\n+      let base64Name = encoded.base64;\n+      let finalBase = base64Name;\n+      setState({ ...state, resume: finalBase });\n+    } else {\n+      setErrors({\n+        ...errors,\n+        resume: [\n+          \"Invalid file format. Please upload an image (JPEG, JPG or PNG) ,DOC ,DOCX or a PDF.\",\n+        ],\n+      });\n+    }\n+  };\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n+  // Calculate min and max dates dynamically\n+  // const currentYear = moment().year();\n+  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n+  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        {showAddEAgentModal ? (\n+          <div className=\"form-group col-md-12\">\n+            <button\n+              className=\"btn btn-primary\"\n+              onClick={() => setShowAgentMOdal(false)}\n+            >\n+              Cancel\n+            </button>\n+            <AddNewAgent\n+              agentId={agentId}\n+              apiCall={apiCall}\n+              setApiCall={setApiCall}\n+            />\n+          </div>\n+        ) : (\n+          <>\n+            <button\n+              type=\"button\"\n+              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+              data-dismiss=\"modal\"\n+              onClick={close}\n+            >\n+              <i className=\"fas fa-times\"></i>\n+            </button>\n+            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n+              <form onSubmit={onUserPersonalDetailClick}>\n+                {props.employeeId === \"0\" ? (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Add Candidate Details\n+                  </h5>\n+                ) : (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Update {props.pageNameForForm === \"ApplicantType\" ?\n+                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n+                          ? \"Assigned To\" :\n+                          \"Candidate Details\"}\n+                  </h5>\n+                )}\n+                {/* FIRST LINE */}\n+                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n+                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n+                  \"d-none\" : \"\"}`}>\n+                  <div className=\"mb-4 position-relative\">\n+                    <input\n+                      type={\"file\"}\n+                      id=\"profile_photo\"\n+                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                      onChange={handleFileChange}\n+                      className=\"d-none\"\n+                    />\n+                    <img\n+                      className=\"rounded-circle\"\n+                      src={\n+                        state.profile_photo\n+                          ? state.profile_photo\n+                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                      }\n+                      alt=\"\"\n+                      width={\"100px\"}\n+                      height={\"100px\"}\n+                    />\n+                    <label\n+                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                      htmlFor=\"profile_photo\"\n+                    >\n+                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                    </label>\n+                  </div>\n+                  <small className=\"text-danger\">{imgError}</small>\n+                </div>\n+                <div className=\"row pt-5\">\n+                  <input\n+                    maxLength={20}\n+                    name=\"employee_id\"\n+                    value={state.id || \"\"}\n+                    type=\"hidden\"\n+                    id=\"employee_id\"\n+                  />\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"name\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Full Name: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      name=\"name\"\n+                      value={state.name || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.name\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"Full Name\"\n+                      id=\"name\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR name----*/}\n+                    {errors.name && (\n+                      <span\n+                        key={errors.name}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.name}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"email\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Email Id: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"email\"\n+                      name=\"email\"\n+                      value={state.email || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.email\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control \"\n+                      }\n+                      id=\"email\"\n+                      placeholder=\"email\"\n+                    // disabled={props.employeeId === \"0\" ? false : true}\n+                    />\n+                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                    {errors.email && (\n+                      <span\n+                        key={errors.email}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.email}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"contact_no\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Mobile Number: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      type=\"number\"\n+                      min={0}\n+                      placeholder=\"Mobile Number\"\n+                      name=\"contact_no\"\n+                      value={state.contact_no || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.contact_no\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"contact_no\"\n+                      maxLength={13}\n+                    />\n+                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n+                    {errors.contact_no && (\n+                      <span\n+                        key={errors.contact_no}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.contact_no}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"description\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      style={{ top: \"-12px\" }}\n+                    >\n+                      About:\n+                    </label>\n+                    <TextEditor\n+                      state={state}\n+                      setState={setState}\n+                      page={\"description\"}\n+                    />\n+\n+                    {/* <textarea\n+                      name=\"description\"\n+                      value={state.description || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"description\"\n+                      placeholder=\"Description\"\n+                    ></textarea> */}\n+                    {/* <FroalaEditor\n+                      model={state.description}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, description: newContent })\n+                      }\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.description && (\n+                      <span\n+                        key={errors.description}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.description}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* SECOND LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"date_of_birth\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Date Of Birth: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      // max={moment().format(\"DD-MM-YYYY\")}\n+                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n+                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n+                      type=\"date\"\n+                      placeholder=\"Date Of Birth \"\n+                      name=\"date_of_birth\"\n+                      value={state.date_of_birth || \"\"}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.date_of_birth\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                      id=\"date_of_birth\"\n+                    />\n+\n+                    {/*----ERROR MESSAGE FOR DOB----*/}\n+                    {errors.date_of_birth && (\n+                      <span\n+                        key={errors.date_of_birth}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.date_of_birth}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"gender\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Gender: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"gender\"\n+                      value={state.gender || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.gender\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"gender\"\n+                    >\n+                      <option value={\"\"}>User Gender</option>\n+                      <option value={\"male\"}>Male</option>\n+                      <option value={\"female\"}>Female</option>\n+                      <option value={\"other\"}>Other</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.gender && (\n+                      <span\n+                        key={errors.gender}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.gender}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"marital_status\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Marital Status: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"marital_status\"\n+                      value={state.marital_status || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.marital_status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"marital_status\"\n+                    >\n+                      <option value={\"\"}>Marital Status</option>\n+                      <option value={\"single\"}>Single</option>\n+                      <option value={\"widow\"}>Widow</option>\n+                      <option value={\"married\"}>Married</option>\n+                      <option value={\"separated\"}>Separated</option>\n+                      <option value={\"divorced\"}>Divorced</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n+                    {errors.marital_status && (\n+                      <span\n+                        key={errors.marital_status}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.marital_status}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* THIRD LINE */}\n+                  {/* <div className=\"form-group col-md-4\">\n+                    <label\n+                      htmlFor=\"nationality\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Nationality / Citizenship:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"nationality / Citizenship\"\n+                      name=\"nationality\"\n+                      value={state.nationality || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.nationality\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"nationality\"\n+                    />\n+                    // ----ERROR MESSAGE FOR nationality----\n+                    {errors.nationality && (\n+                      <span\n+                        key={errors.nationality}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.nationality}\n+                      </span>\n+                    )}\n+                  </div> */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"current_location\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Current Location: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"Current Location\"\n+                      name=\"current_location\"\n+                      value={state.current_location || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.current_location\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"current_location\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n+                    {errors.current_location && (\n+                      <span\n+                        key={errors.current_location}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.current_location}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"currently_located_country\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Country Of Residence:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.currently_located_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Currently Located Country\"\n+                      id=\"currently_located_country\"\n+                      name=\"currently_located_country\"\n+                      value={state.currently_located_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select Country</option>\n+                      {(FilterJson.location || []).map((item, i) => (\n+                        <option value={item} key={i}>\n+                          {item}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n+                    {errors.currently_located_country && (\n+                      <span\n+                        key={errors.currently_located_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.currently_located_country}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* FOURTH LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"language\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      English level {/*(Max 3)*/}:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"language\"\n+                      value={state.language || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.language\n+                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                          : \"text-capitalize form-control position-relative overflow-hidden\"\n+                      }\n+                      placeholder=\"Language\"\n+                      id=\"language\"\n+                    >\n+                      <option value={\"\"}>Level</option>\n+                      <option value={\"no english\"}> No English</option>\n+                      <option value={\"basic\"}>Basic</option>\n+                      <option value={\"medium\"}>Medium</option>\n+                      <option value={\"advance\"}>Advance</option>\n+                      {/* {(jsonList.Language || []).map((Lang) => (\n+                        <option key={Lang.id} value={Lang.value}>\n+                          {Lang.value}\n+                        </option>\n+                      ))} */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n+                    {errors.language && (\n+                      <span\n+                        key={errors.language}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.language}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* <div className=\"form-group col-md-4\">\n+                <label\n+                  htmlFor=\"religion\"\n+                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                >\n+                  Religion: <span className=\"text-danger\">*</span>\n+                </label>\n+                <input\n+                  maxLength={20}\n+                  type=\"text\"\n+                  className={\n+                    errors.religion\n+                      ? \"form-control border border-danger\"\n+                      : \"form-control\"\n+                  }\n+                  placeholder=\"religion\"\n+                  id=\"religion\"\n+                  name=\"religion\"\n+                  value={state.religion || \"\"}\n+                  onChange={onInputChange}\n+                />\n+                {errors.religion && (\n+                  <span\n+                    key={errors.religion}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.religion}\n+                  </span>\n+                )}\n+              </div> */}\n+                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n+                    ? \"d-none\"\n+                    : `${props.pageNameForForm === \"ApplicantType\" ?\n+                      \"col-md-12\" : \"col-md-4\"}\n+                      `}`\n+                  }>\n+                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n+                      Applicant's Type : <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      className={`${errors.interested_in\n+                        ? \"form-control  border border-danger \"\n+                        : \"form-control \"}\n+                          ${state.interested_in === \"pnp\" ?\n+                          `text-uppercase` :\n+                          \"text-capitalize\"}`\n+                      }\n+                      id=\"interested_in\"\n+                      name=\"interested_in\"\n+                      value={state.interested_in || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select</option>\n+                      {(FilterJson.interested || []).map((interest) => (\n+                        <option key={interest} value={interest}\n+                          className={interest === \"pnp\" ?\n+                            `text-uppercase` :\n+                            \"text-capitalize\"}>\n+                          {interest}\n+                        </option>\n+                      ))}\n+                      {/* <option value={\"swap\"}>SWEP</option>\n+                  <option value={\"parttime\"}>Part-time</option>\n+                  <option value={\"all\"}>All</option> */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR interested_in----*/}\n+                    {errors.interested_in && (\n+                      <span\n+                        key={errors.interested_in}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.interested_in}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {state.interested_in === \"pnp\" &&\n+                    <div className={`form-group \n+                    ${props.user_of_page === \"assignedUser\" ||\n+                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        ? \"d-none\"\n+                        : `${props.pageNameForForm === \"Category\" ?\n+                          \"col-md-12\" : \"col-md-4\"}\n+                        `}`}>\n+                      <label\n+                        htmlFor=\"category\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Sub Type:\n+                      </label>\n+                      <select\n+                        name=\"category\"\n+                        value={state.category || \"\"}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.category\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"category\"\n+                      >\n+                        <option value={\"\"}>Select user type</option>\n+                        <option value={\"aos\"}>AOS</option>\n+                        <option value={\"rrs\"}>RRS</option>\n+                        <option value={\"tech pathway\"}>Tech Pathway</option>\n+                      </select>\n+                      {/* ----ERROR MESSAGE FOR category---- */}\n+                      {errors.category && (\n+                        <span\n+                          key={errors.category}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.category}\n+                        </span>\n+                      )}\n+                    </div>}\n+                  <div className={`form-group col-md-4\n+                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"experience\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Experience: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"experience\"\n+                      value={state.experience || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.experience\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"experience\"\n+                    >\n+                      <option value={\"\"}>User Experience</option>\n+                      {(FilterJson.experience || []).map((ex, i) => (\n+                        <option value={ex} key={i}>\n+                          {ex}\n+                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR experience----*/}\n+                    {errors.experience && (\n+                      <span\n+                        key={errors.experience}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.experience}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"work_permit_canada\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      If Candidate is Inside Canada\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"work_permit_canada\"\n+                      value={state.work_permit_canada || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.work_permit_canada\n+                          ? \"form-control  border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"work_permit_canada\"\n+                    >\n+                      <option value={\"\"}>Permit </option>\n+                      <option value={\"no\"}>No</option>\n+                      <option value={\"yes\"}>Yes</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n+                    {errors.work_permit_canada && (\n+                      <span\n+                        key={errors.work_permit_canada}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_canada}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`${state.work_permit_canada === \"yes\" &&\n+                      props.user_of_page === \"\"\n+                      ? \"form-group col-md-4\"\n+                      : \"d-none\"\n+                      }`}\n+                  >\n+                    <label\n+                      htmlFor=\"otherpermit\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Candidate Status:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.work_permit_other_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Permit of Other Country\"\n+                      id=\"work_permit_other_country\"\n+                      name=\"work_permit_other_country\"\n+                      value={state.work_permit_other_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select status</option>\n+                      {(FilterJson.canadian_candidate_work_status || []).map(\n+                        (item, i) => (\n+                          <option value={item} key={i}>\n+                            {item}\n+                          </option>\n+                        )\n+                      )}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n+                    {errors.work_permit_other_country && (\n+                      <span\n+                        key={errors.work_permit_other_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_other_country}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={\n+                      `form-group  ${user_type === \"user\" ||\n+                        props.pageNameForForm === \"Category\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"assignedUser\"\n+                        ? \" d-none\"\n+                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n+                    `}\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"reffer_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Referred By:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={agentList || []} \n+                      name=\"reffer_by\"\n+                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n+                      id=\"reffer_by\"\n+                      onChange={onSelectChange}\n+                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n+                    /> */}\n+                    <select\n+                      name=\"reffer_by\"\n+                      value={state.reffer_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.reffer_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"reffer_by\"\n+                      disabled={user_type === \"agent\"}\n+                    >\n+                      <option value={\"\"}>Select partner </option>\n+                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n+                    </select>\n+                    <span\n+                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n+                      onClick={() => setShowAgentMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Partner\"\n+                    >\n+                      +\n+                    </span>\n+\n+                    {/* ERROR MSG FOR REFFER BY */}\n+                    {errors.reffer_by && (\n+                      <span\n+                        key={errors.reffer_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.reffer_by}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`form-group\n+                    ${user_type === \"agent\"\n+                        || props.pageNameForForm === \"Category\"\n+                        || user_type === \"user\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"d-none\"\n+                        : props.user_of_page === \"assignedUser\" ?\n+                          \"d-flex col-md-12\" :\n+                          \"d-flex col-md-4\"}`\n+                    }\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"assigned_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Assigned To:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={\"\" || admiinList}\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by}\n+                      id=\"assigned_by\"\n+                      onChange={onAdminSelectChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control border border-danger px-0 pt-4 \"\n+                          : \"form-control px-0 pt-4 border-0\"\n+                      }\n+                    /> */}\n+                    <select\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"assigned_by\"\n+                    >\n+                      <option value={\"\"}>Select Admin </option>\n+                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n+                    </select>\n+                    {/* <span\n+                      className=\"btn btn-sm btn-secondary\"\n+                      onClick={() => setShowAdminMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Admin\"\n+                    >\n+                      +\n+                    </span>  */}\n+\n+                    {/* ERROR MSG FOR REFFER BY  */}\n+                    {errors.assigned_by && (\n+                      <span\n+                        key={errors.assigned_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.assigned_by}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                    || props.pageNameForForm === \"ApplicantType\" ||\n+                    props.pageNameForForm === \"Category\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"resume\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n+                    </label>\n+                    <input\n+                      type=\"file\"\n+                      placeholder=\"Resume\"\n+                      id=\"resume\"\n+                      name=\"resume\"\n+                      // accept=\".pdf,application/pdf\"\n+                      accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\"\n+                      onChange={handleUploadFile}\n+                      className={\n+                        errors.resume\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR RESUME----*/}\n+                    {errors.resume && (\n+                      <span\n+                        key={errors.resume}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.resume}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {user_type === \"admin\" ? (\n+                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                      || props.pageNameForForm === \"ApplicantType\"\n+                      || props.pageNameForForm === \"Category\"\n+                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                      <label\n+                        htmlFor=\"fetured\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"fetured\"\n+                          name=\"fetured\"\n+                          checked={state.is_featured === \"1\"}\n+                          value={state.is_featured}\n+                          onChange={(e) =>\n+                            setState({\n+                              ...state,\n+                              is_featured:\n+                                state.is_featured === \"\" ||\n+                                  state.is_featured === \"0\"\n+                                  ? \"1\"\n+                                  : \"0\",\n+                            })\n+                          }\n+                        />\n+                      </label>\n+                    </div>\n+                  ) : null}\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"submit\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+              {/* </div> */}\n+            </div>\n+          </>\n+        )}\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default PersonalDetails;\n"
                },
                {
                    "date": 1713935074327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1367 @@\n+import moment from \"moment/moment\";\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import useValidation from \"../../common/useValidation\";\n+// import { CKEditor } from \"ckeditor4-react\";\n+// import FroalaEditor from \"react-froala-wysiwyg\";\n+// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n+// import \"froala-editor/css/froala_style.min.css\";\n+// import \"froala-editor/js/plugins.pkgd.min.js\";\n+\n+import {\n+  AddEmployeeDetails,\n+  EmployeeDetails,\n+  GetAgentJson,\n+  getallAdminData,\n+  // GetFilter,\n+  // AddEmployeePermission,\n+} from \"../../../api/api\";\n+import { toast } from \"react-toastify\";\n+import \"react-toastify/dist/ReactToastify.css\";\n+import FilterJson from \"../../json/filterjson\";\n+// import Select from \"react-select\";\n+// import AddAgent from \"../admin/addAgent\";\n+// import { Link } from \"react-router-dom\";\n+import AddNewAgent from \"../admin/add_agent\";\n+import Permissions from \"../../json/emailPermisionJson\";\n+import TextEditor from \"../../common/TextEditor\";\n+\n+function PersonalDetails(props) {\n+  let encoded;\n+  const [imgError, setImgError] = useState(\"\");\n+  const [loading, setLoading] = useState(false);\n+  const [agentList, setAgentList] = useState([]);\n+  const [admiinList, setAdminList] = useState([]);\n+  // const [jsonList, setJsonList] = useState([]);\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n+  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n+  /*data and id states */\n+  let [agentId /*, setAgentId*/] = useState();\n+\n+  let user_type = localStorage.getItem(\"userType\");\n+  // let admin_id = localStorage.getItem(\"admin_id\");\n+  // USER PERSONAL DETAIL VALIDATION\n+  // INITIAL STATE ASSIGNMENT\n+  const initialFormStateuser = {\n+    name: \"\",\n+    email: \"\",\n+    contact_no: \"\",\n+    description: \"\",\n+    date_of_birth: \"\",\n+    gender: \"\",\n+    marital_status: \"\",\n+    nationality: \"\",\n+    current_location: \"\",\n+    currently_located_country: \"\",\n+    language: \"\",\n+    religion: \"\",\n+    interested_in: \"\",\n+    experience: \"\",\n+    work_permit_canada: \"\",\n+    work_permit_other_country: \"\",\n+    resume: \"\",\n+    profile_photo: \"\",\n+    is_featured: \"\",\n+    status: props.employeeId === \"0\" ? \"1\" : \"\",\n+    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n+    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n+    assigned_by: \"\"\n+  };\n+\n+  /* Functionality to close the modal */\n+  const close = () => {\n+    setState(initialFormStateuser);\n+    setErrors(\"\");\n+    setLoading(false);\n+    props.close();\n+  };\n+\n+  // VALIDATION CONDITIONS\n+\n+  const validators = {\n+    name: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Name is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 2\n+              ? \"Name should have 2 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Name can not have a number.\"\n+                : \"\",\n+    ],\n+    email: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+            ? null\n+            : \"Email is invalid\",\n+    ],\n+    contact_no: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Mobile number is required\"\n+          : value.length < 10\n+            ? \"Mobile number should be more than 10 digits\"\n+            : value.length > 13\n+              ? \"Mobile no should be of 13 digits\"\n+              : \"\",\n+    ],\n+    // description: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Description is required\"\n+    //       : value.length < 5\n+    //       ? \"Description should have 5 or more letter\"\n+    //       : null,\n+    // ],\n+    date_of_birth: [\n+      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n+    ],\n+    gender: [\n+      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n+    ],\n+    marital_status: [\n+      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n+    ],\n+    // nationality: [\n+    //   (value) =>\n+    //     value === \"\" || value === null\n+    //       ? \"Nationality is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Nationality should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Nationality can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    current_location: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Location is required\"\n+          : /[^A-Za-z 0-9]/g.test(value)\n+            ? \"Cannot use special character \"\n+            : value.length < 3\n+              ? \"Location should have 3 or more letter\"\n+              : /[-]?\\d+(\\.\\d+)?/.test(value)\n+                ? \"Location can not have a number.\"\n+                : \"\",\n+    ],\n+    // currently_located_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Country is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Country should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Country can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    language: [\n+      (value) =>\n+        value === \"\" || value === null || value.trim() === \"\"\n+          ? \"Language is required\"\n+          : \"\",\n+    ],\n+    // religion: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Religion is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 3\n+    //       ? \"Religion should have 3 or more letter\"\n+    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n+    //       ? \"Religion can not have a number.\"\n+    //       : \"\",\n+    // ],\n+    interested_in: [\n+      (value) => (value === \"\" ? \"Interested in is required\" : null),\n+    ],\n+    experience: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Experience is required\" : null,\n+    ],\n+    resume: [\n+      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n+    ],\n+    work_permit_canada: [\n+      (value) =>\n+        value === \"\" || value === null ? \"Work Permit is required\" : null,\n+    ],\n+    // work_permit_other_country: [\n+    //   (value) =>\n+    //     value === \"\" || value === null || value.trim() === \"\"\n+    //       ? \"Other Permit is required\"\n+    //       : /[^A-Za-z 0-9]/g.test(value)\n+    //       ? \"Cannot use special character \"\n+    //       : value.length < 2\n+    //       ? \"Other permit sholud have 2 or more letters\"\n+    //       : \"\",\n+    // ],\n+    reffer_by:\n+      props.employeeId !== \"0\" || user_type === \"user\"\n+        ? null\n+        : [\n+          (value) =>\n+            value === \"\" || value === null ? \"Refferer is required\" : null,\n+        ],\n+    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n+    //   ? null\n+    //   : [\n+    //     (value) =>\n+    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n+    //   ],\n+  };\n+\n+  // CUSTOM VALIDATIONS IMPORT\n+  const { state, setState, onInputChange, errors, validate, setErrors } =\n+    useValidation(initialFormStateuser, validators);\n+  // const handleEditorChange = (content, editor) => {\n+  //   setState({ ...state, description: content });\n+  // };\n+\n+  // API CALL\n+  const UserData = async () => {\n+    try {\n+      const userData = await EmployeeDetails(props.employeeId);\n+      if (userData.data.employee.length === 0) {\n+        setState([]);\n+      } else {\n+        setState(userData.data.employee[0]);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setLoading(false);\n+    }\n+  };\n+  /*Function to get admin json list */\n+  const AdminJson = async () => {\n+    let response = await getallAdminData();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n+      // if (Array.isArray(newAdminJson)) {\n+      //   const options = newAdminJson.map((option) => ({\n+      //     value: option.admin_id,\n+      //     label: option.name,\n+      //   }));\n+      //   setAdminList(options);\n+      // }\n+      // setJsonList(json.data.data);\n+      setAdminList(response.data)\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onAdminSelectChange = (option) => {\n+  //   setState({ ...state, assigned_by: option.value });\n+  // };\n+  /*Function to get agent json list */\n+  const AgentJson = async () => {\n+    let response = await GetAgentJson();\n+    try {\n+      // let json = await GetFilter();\n+      // console.log(json);\n+      // if (Array.isArray(response)) {\n+      //   const options = response.map((option) => ({\n+      //     value: option.id,\n+      //     label: option.u_id + \"  \" + option.name,\n+      //     name: option.name\n+      //   }));\n+      // }\n+      setAgentList(response);\n+      // setJsonList(json.data.data);\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  };\n+  /*Function to set data to the search agent  */\n+  // const onSelectChange = (option) => {\n+  //   setState({ ...state, reffer_by: option.value });\n+  // };\n+  useEffect(() => {\n+    AgentJson();\n+    if (user_type === \"admin\") {\n+      AdminJson()\n+    }\n+    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n+      setState(initialFormStateuser);\n+    } else {\n+      UserData();\n+    }\n+    setShowAgentMOdal(false);\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [props, apiCall]);\n+\n+  // USER PERSONAL DETAIL SUBMIT BUTTON\n+  async function onUserPersonalDetailClick(event) {\n+    // console.log(errors)\n+    event.preventDefault();\n+    if (validate() && imgError === \"\") {\n+      setLoading(true);\n+      try {\n+        const responseData = await AddEmployeeDetails(state);\n+        if (responseData.message === \"Employee data inserted successfully\") {\n+          try {\n+            // let Response = await AddEmployeePermission(Permissions);\n+            // conditions for the response toaster message\n+            // if (Response.message === \"successfully\") {\n+            toast.success(\"Candidate added successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            props.setApiCall(true);\n+            return close();\n+            // }\n+          } catch (err) {\n+            console.log(err);\n+          }\n+        }\n+        if (responseData.message === \"Employee data updated successfully\") {\n+          toast.success(\"Candidate Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          props.setApiCall(true);\n+          return close();\n+        }\n+        if (responseData.message ===\n+          \"Email already exists\"){\n+          toast.success(\"Candidate Updated successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+        setErrors({ ...errors, email: \"Email already exists\" })\n+        return close();}\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    } else {\n+      toast.error(\"Please complete the profile first!\", {\n+        position: toast.POSITION.TOP_RIGHT,\n+        autoClose: 1000,\n+      });\n+      setLoading(false);\n+    }\n+  }\n+  // END USER PERSONAL DETAIL VALIDATION\n+  /*Function to convert file to base64 */\n+  const convertToBase64 = (file) => {\n+    return new Promise((resolve, reject) => {\n+      const fileReader = new FileReader();\n+      fileReader.addEventListener(\"load\", () => {\n+        resolve({ base64: fileReader.result });\n+      });\n+      fileReader.readAsDataURL(file);\n+      fileReader.onerror = (error) => {\n+        reject(error);\n+      };\n+    });\n+  };\n+  /*Onchange function of Resume */\n+  const handleUploadFile = async (e) => {\n+    // const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n+    const allowedFormats = [\".pdf\", \".doc\", \".docx\", \".jpg\", \".jpeg\", \".png\"];\n+    const file = e.target.files[0];\n+    const fileType = `.${file.name.split(\".\").pop()}`\n+    console.log(file.type, fileType)\n+    if (allowedFormats.includes(fileType)) {\n+      console.log(\"object\")\n+      encoded = await convertToBase64(file);\n+      let base64Name = encoded.base64;\n+      let finalBase = base64Name;\n+      setState({ ...state, resume: finalBase });\n+    } else {\n+      setErrors({\n+        ...errors,\n+        resume: [\n+          \"Invalid file format. Please upload an image (JPEG, JPG or PNG) ,DOC ,DOCX or a PDF.\",\n+        ],\n+      });\n+    }\n+  };\n+  /*Onchange function of profile */\n+  const handleFileChange = async (event) => {\n+    const file = event.target.files[0];\n+    const reader = new FileReader();\n+\n+    reader.onload = (event) => {\n+      const img = new Image();\n+      img.onload = () => {\n+        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n+          setImgError(\"Image size can't be more then 100 kb\");\n+        } else {\n+          setImgError(\"\");\n+          setState({ ...state, profile_photo: event.target.result });\n+        }\n+      };\n+      img.src = event.target.result;\n+    };\n+\n+    // Read the file as a data URL\n+    reader.readAsDataURL(file);\n+    encoded = await convertToBase64(file);\n+    let base64Name = encoded.base64;\n+    setState({ ...state, profile_photo: base64Name });\n+  };\n+  // Calculate min and max dates dynamically\n+  // const currentYear = moment().year();\n+  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n+  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n+  return (\n+    <>\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        {showAddEAgentModal ? (\n+          <div className=\"form-group col-md-12\">\n+            <button\n+              className=\"btn btn-primary\"\n+              onClick={() => setShowAgentMOdal(false)}\n+            >\n+              Cancel\n+            </button>\n+            <AddNewAgent\n+              agentId={agentId}\n+              apiCall={apiCall}\n+              setApiCall={setApiCall}\n+            />\n+          </div>\n+        ) : (\n+          <>\n+            <button\n+              type=\"button\"\n+              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+              data-dismiss=\"modal\"\n+              onClick={close}\n+            >\n+              <i className=\"fas fa-times\"></i>\n+            </button>\n+            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n+              <form onSubmit={onUserPersonalDetailClick}>\n+                {props.employeeId === \"0\" ? (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Add Candidate Details\n+                  </h5>\n+                ) : (\n+                  <h5 className=\"text-center pt-2 mb-7\">\n+                    Update {props.pageNameForForm === \"ApplicantType\" ?\n+                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n+                          ? \"Assigned To\" :\n+                          \"Candidate Details\"}\n+                  </h5>\n+                )}\n+                {/* FIRST LINE */}\n+                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n+                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n+                  \"d-none\" : \"\"}`}>\n+                  <div className=\"mb-4 position-relative\">\n+                    <input\n+                      type={\"file\"}\n+                      id=\"profile_photo\"\n+                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n+                      onChange={handleFileChange}\n+                      className=\"d-none\"\n+                    />\n+                    <img\n+                      className=\"rounded-circle\"\n+                      src={\n+                        state.profile_photo\n+                          ? state.profile_photo\n+                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n+                      }\n+                      alt=\"\"\n+                      width={\"100px\"}\n+                      height={\"100px\"}\n+                    />\n+                    <label\n+                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n+                      htmlFor=\"profile_photo\"\n+                    >\n+                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n+                    </label>\n+                  </div>\n+                  <small className=\"text-danger\">{imgError}</small>\n+                </div>\n+                <div className=\"row pt-5\">\n+                  <input\n+                    maxLength={20}\n+                    name=\"employee_id\"\n+                    value={state.id || \"\"}\n+                    type=\"hidden\"\n+                    id=\"employee_id\"\n+                  />\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"name\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Full Name: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      name=\"name\"\n+                      value={state.name || \"\"}\n+                      onChange={onInputChange}\n+                      type=\"text\"\n+                      className={\n+                        errors.name\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"Full Name\"\n+                      id=\"name\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR name----*/}\n+                    {errors.name && (\n+                      <span\n+                        key={errors.name}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.name}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"email\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Email Id: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"email\"\n+                      name=\"email\"\n+                      value={state.email || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.email\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control \"\n+                      }\n+                      id=\"email\"\n+                      placeholder=\"email\"\n+                    // disabled={props.employeeId === \"0\" ? false : true}\n+                    />\n+                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                    {errors.email && (\n+                      <span\n+                        key={errors.email}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.email}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"contact_no\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Mobile Number: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      type=\"number\"\n+                      min={0}\n+                      placeholder=\"Mobile Number\"\n+                      name=\"contact_no\"\n+                      value={state.contact_no || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.contact_no\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"contact_no\"\n+                      maxLength={13}\n+                    />\n+                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n+                    {errors.contact_no && (\n+                      <span\n+                        key={errors.contact_no}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.contact_no}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"description\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      style={{ top: \"-12px\" }}\n+                    >\n+                      About:\n+                    </label>\n+                    <TextEditor\n+                      state={state}\n+                      setState={setState}\n+                      page={\"description\"}\n+                    />\n+\n+                    {/* <textarea\n+                      name=\"description\"\n+                      value={state.description || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"description\"\n+                      placeholder=\"Description\"\n+                    ></textarea> */}\n+                    {/* <FroalaEditor\n+                      model={state.description}\n+                      onModelChange={(newContent) =>\n+                        setState({ ...state, description: newContent })\n+                      }\n+                      className={\n+                        errors.description\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    /> */}\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.description && (\n+                      <span\n+                        key={errors.description}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.description}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* SECOND LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"date_of_birth\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Date Of Birth: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      // max={moment().format(\"DD-MM-YYYY\")}\n+                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n+                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n+                      type=\"date\"\n+                      placeholder=\"Date Of Birth \"\n+                      name=\"date_of_birth\"\n+                      value={state.date_of_birth || \"\"}\n+                      onChange={onInputChange}\n+                      onKeyDownCapture={(e) => e.preventDefault()}\n+                      className={\n+                        errors.date_of_birth\n+                          ? \"form-control coustam_datepicker border border-danger\"\n+                          : \"form-control coustam_datepicker\"\n+                      }\n+                      id=\"date_of_birth\"\n+                    />\n+\n+                    {/*----ERROR MESSAGE FOR DOB----*/}\n+                    {errors.date_of_birth && (\n+                      <span\n+                        key={errors.date_of_birth}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.date_of_birth}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"gender\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Gender: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"gender\"\n+                      value={state.gender || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.gender\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"gender\"\n+                    >\n+                      <option value={\"\"}>User Gender</option>\n+                      <option value={\"male\"}>Male</option>\n+                      <option value={\"female\"}>Female</option>\n+                      <option value={\"other\"}>Other</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR GENDER----*/}\n+                    {errors.gender && (\n+                      <span\n+                        key={errors.gender}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.gender}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"marital_status\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Marital Status: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"marital_status\"\n+                      value={state.marital_status || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.marital_status\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"marital_status\"\n+                    >\n+                      <option value={\"\"}>Marital Status</option>\n+                      <option value={\"single\"}>Single</option>\n+                      <option value={\"widow\"}>Widow</option>\n+                      <option value={\"married\"}>Married</option>\n+                      <option value={\"separated\"}>Separated</option>\n+                      <option value={\"divorced\"}>Divorced</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n+                    {errors.marital_status && (\n+                      <span\n+                        key={errors.marital_status}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.marital_status}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* THIRD LINE */}\n+                  {/* <div className=\"form-group col-md-4\">\n+                    <label\n+                      htmlFor=\"nationality\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Nationality / Citizenship:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"nationality / Citizenship\"\n+                      name=\"nationality\"\n+                      value={state.nationality || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.nationality\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"nationality\"\n+                    />\n+                    // ----ERROR MESSAGE FOR nationality----\n+                    {errors.nationality && (\n+                      <span\n+                        key={errors.nationality}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.nationality}\n+                      </span>\n+                    )}\n+                  </div> */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"current_location\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Current Location: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <input\n+                      maxLength={60}\n+                      type=\"text\"\n+                      placeholder=\"Current Location\"\n+                      name=\"current_location\"\n+                      value={state.current_location || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.current_location\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"current_location\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n+                    {errors.current_location && (\n+                      <span\n+                        key={errors.current_location}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.current_location}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"currently_located_country\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Country Of Residence:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.currently_located_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Currently Located Country\"\n+                      id=\"currently_located_country\"\n+                      name=\"currently_located_country\"\n+                      value={state.currently_located_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select Country</option>\n+                      {(FilterJson.location || []).map((item, i) => (\n+                        <option value={item} key={i}>\n+                          {item}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n+                    {errors.currently_located_country && (\n+                      <span\n+                        key={errors.currently_located_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.currently_located_country}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  {/* FOURTH LINE */}\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"language\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      English level {/*(Max 3)*/}:\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"language\"\n+                      value={state.language || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.language\n+                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n+                          : \"text-capitalize form-control position-relative overflow-hidden\"\n+                      }\n+                      placeholder=\"Language\"\n+                      id=\"language\"\n+                    >\n+                      <option value={\"\"}>Level</option>\n+                      <option value={\"no english\"}> No English</option>\n+                      <option value={\"basic\"}>Basic</option>\n+                      <option value={\"medium\"}>Medium</option>\n+                      <option value={\"advance\"}>Advance</option>\n+                      {/* {(jsonList.Language || []).map((Lang) => (\n+                        <option key={Lang.id} value={Lang.value}>\n+                          {Lang.value}\n+                        </option>\n+                      ))} */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n+                    {errors.language && (\n+                      <span\n+                        key={errors.language}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.language}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {/* <div className=\"form-group col-md-4\">\n+                <label\n+                  htmlFor=\"religion\"\n+                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                >\n+                  Religion: <span className=\"text-danger\">*</span>\n+                </label>\n+                <input\n+                  maxLength={20}\n+                  type=\"text\"\n+                  className={\n+                    errors.religion\n+                      ? \"form-control border border-danger\"\n+                      : \"form-control\"\n+                  }\n+                  placeholder=\"religion\"\n+                  id=\"religion\"\n+                  name=\"religion\"\n+                  value={state.religion || \"\"}\n+                  onChange={onInputChange}\n+                />\n+                {errors.religion && (\n+                  <span\n+                    key={errors.religion}\n+                    className=\"text-danger font-size-3\"\n+                  >\n+                    {errors.religion}\n+                  </span>\n+                )}\n+              </div> */}\n+                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n+                    ? \"d-none\"\n+                    : `${props.pageNameForForm === \"ApplicantType\" ?\n+                      \"col-md-12\" : \"col-md-4\"}\n+                      `}`\n+                  }>\n+                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n+                      Applicant's Type : <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      className={`${errors.interested_in\n+                        ? \"form-control  border border-danger \"\n+                        : \"form-control \"}\n+                          ${state.interested_in === \"pnp\" ?\n+                          `text-uppercase` :\n+                          \"text-capitalize\"}`\n+                      }\n+                      id=\"interested_in\"\n+                      name=\"interested_in\"\n+                      value={state.interested_in || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select</option>\n+                      {(FilterJson.interested || []).map((interest) => (\n+                        <option key={interest} value={interest}\n+                          className={interest === \"pnp\" ?\n+                            `text-uppercase` :\n+                            \"text-capitalize\"}>\n+                          {interest}\n+                        </option>\n+                      ))}\n+                      {/* <option value={\"swap\"}>SWEP</option>\n+                  <option value={\"parttime\"}>Part-time</option>\n+                  <option value={\"all\"}>All</option> */}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR interested_in----*/}\n+                    {errors.interested_in && (\n+                      <span\n+                        key={errors.interested_in}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.interested_in}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {state.interested_in === \"pnp\" &&\n+                    <div className={`form-group \n+                    ${props.user_of_page === \"assignedUser\" ||\n+                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        ? \"d-none\"\n+                        : `${props.pageNameForForm === \"Category\" ?\n+                          \"col-md-12\" : \"col-md-4\"}\n+                        `}`}>\n+                      <label\n+                        htmlFor=\"category\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Sub Type:\n+                      </label>\n+                      <select\n+                        name=\"category\"\n+                        value={state.category || \"\"}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.category\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        id=\"category\"\n+                      >\n+                        <option value={\"\"}>Select user type</option>\n+                        <option value={\"aos\"}>AOS</option>\n+                        <option value={\"rrs\"}>RRS</option>\n+                        <option value={\"tech pathway\"}>Tech Pathway</option>\n+                      </select>\n+                      {/* ----ERROR MESSAGE FOR category---- */}\n+                      {errors.category && (\n+                        <span\n+                          key={errors.category}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.category}\n+                        </span>\n+                      )}\n+                    </div>}\n+                  <div className={`form-group col-md-4\n+                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"experience\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Experience: <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"experience\"\n+                      value={state.experience || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.experience\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"experience\"\n+                    >\n+                      <option value={\"\"}>User Experience</option>\n+                      {(FilterJson.experience || []).map((ex, i) => (\n+                        <option value={ex} key={i}>\n+                          {ex}\n+                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n+                        </option>\n+                      ))}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR experience----*/}\n+                    {errors.experience && (\n+                      <span\n+                        key={errors.experience}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.experience}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"work_permit_canada\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      If Candidate is Inside Canada\n+                      <span className=\"text-danger\">*</span>\n+                    </label>\n+                    <select\n+                      name=\"work_permit_canada\"\n+                      value={state.work_permit_canada || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.work_permit_canada\n+                          ? \"form-control  border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      id=\"work_permit_canada\"\n+                    >\n+                      <option value={\"\"}>Permit </option>\n+                      <option value={\"no\"}>No</option>\n+                      <option value={\"yes\"}>Yes</option>\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n+                    {errors.work_permit_canada && (\n+                      <span\n+                        key={errors.work_permit_canada}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_canada}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`${state.work_permit_canada === \"yes\" &&\n+                      props.user_of_page === \"\"\n+                      ? \"form-group col-md-4\"\n+                      : \"d-none\"\n+                      }`}\n+                  >\n+                    <label\n+                      htmlFor=\"otherpermit\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Candidate Status:\n+                    </label>\n+                    <select\n+                      maxLength={60}\n+                      type=\"text\"\n+                      className={\n+                        errors.work_permit_other_country\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      placeholder=\"Permit of Other Country\"\n+                      id=\"work_permit_other_country\"\n+                      name=\"work_permit_other_country\"\n+                      value={state.work_permit_other_country || \"\"}\n+                      onChange={onInputChange}\n+                    >\n+                      <option value={\"\"}>Select status</option>\n+                      {(FilterJson.canadian_candidate_work_status || []).map(\n+                        (item, i) => (\n+                          <option value={item} key={i}>\n+                            {item}\n+                          </option>\n+                        )\n+                      )}\n+                    </select>\n+                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n+                    {errors.work_permit_other_country && (\n+                      <span\n+                        key={errors.work_permit_other_country}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.work_permit_other_country}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={\n+                      `form-group  ${user_type === \"user\" ||\n+                        props.pageNameForForm === \"Category\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"assignedUser\"\n+                        ? \" d-none\"\n+                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n+                    `}\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"reffer_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Referred By:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={agentList || []} \n+                      name=\"reffer_by\"\n+                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n+                      id=\"reffer_by\"\n+                      onChange={onSelectChange}\n+                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n+                    /> */}\n+                    <select\n+                      name=\"reffer_by\"\n+                      value={state.reffer_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.reffer_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"reffer_by\"\n+                      disabled={user_type === \"agent\"}\n+                    >\n+                      <option value={\"\"}>Select partner </option>\n+                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n+                    </select>\n+                    <span\n+                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n+                      onClick={() => setShowAgentMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Partner\"\n+                    >\n+                      +\n+                    </span>\n+\n+                    {/* ERROR MSG FOR REFFER BY */}\n+                    {errors.reffer_by && (\n+                      <span\n+                        key={errors.reffer_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.reffer_by}\n+                      </span>\n+                    )}\n+                  </div>\n+                  <div\n+                    className={`form-group\n+                    ${user_type === \"agent\"\n+                        || props.pageNameForForm === \"Category\"\n+                        || user_type === \"user\"\n+                        || props.pageNameForForm === \"ApplicantType\"\n+                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n+                        ? \"d-none\"\n+                        : props.user_of_page === \"assignedUser\" ?\n+                          \"d-flex col-md-12\" :\n+                          \"d-flex col-md-4\"}`\n+                    }\n+                    style={{ position: \"relative\" }}\n+                  >\n+                    <label\n+                      htmlFor=\"assigned_by\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Assigned To:<span className=\"text-danger\">*</span>\n+                    </label>\n+                    {/* <Select\n+                      options={\"\" || admiinList}\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by}\n+                      id=\"assigned_by\"\n+                      onChange={onAdminSelectChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control border border-danger px-0 pt-4 \"\n+                          : \"form-control px-0 pt-4 border-0\"\n+                      }\n+                    /> */}\n+                    <select\n+                      name=\"assigned_by\"\n+                      value={state.assigned_by || \"\"}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.assigned_by\n+                          ? \"form-control text-capitalize border border-danger\"\n+                          : \"form-control text-capitalize\"\n+                      }\n+                      id=\"assigned_by\"\n+                    >\n+                      <option value={\"\"}>Select Admin </option>\n+                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n+                    </select>\n+                    {/* <span\n+                      className=\"btn btn-sm btn-secondary\"\n+                      onClick={() => setShowAdminMOdal(true)}\n+                      style={{\n+                        width: \"auto\",\n+                        minWidth: \"auto\",\n+                        height: \"44px\",\n+                      }}\n+                      title=\"Add New Admin\"\n+                    >\n+                      +\n+                    </span>  */}\n+\n+                    {/* ERROR MSG FOR REFFER BY  */}\n+                    {errors.assigned_by && (\n+                      <span\n+                        key={errors.assigned_by}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.assigned_by}\n+                      </span>\n+                    )}\n+                  </div>\n+\n+                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                    || props.pageNameForForm === \"ApplicantType\" ||\n+                    props.pageNameForForm === \"Category\" ||\n+                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                    <label\n+                      htmlFor=\"resume\"\n+                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                    >\n+                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n+                    </label>\n+                    <input\n+                      type=\"file\"\n+                      placeholder=\"Resume\"\n+                      id=\"resume\"\n+                      name=\"resume\"\n+                      // accept=\".pdf,application/pdf\"\n+                      accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\"\n+                      onChange={handleUploadFile}\n+                      className={\n+                        errors.resume\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                    />\n+                    {/*----ERROR MESSAGE FOR RESUME----*/}\n+                    {errors.resume && (\n+                      <span\n+                        key={errors.resume}\n+                        className=\"text-danger font-size-3\"\n+                      >\n+                        {errors.resume}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {user_type === \"admin\" ? (\n+                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n+                      || props.pageNameForForm === \"ApplicantType\"\n+                      || props.pageNameForForm === \"Category\"\n+                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n+                      <label\n+                        htmlFor=\"fetured\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"fetured\"\n+                          name=\"fetured\"\n+                          checked={state.is_featured === \"1\"}\n+                          value={state.is_featured}\n+                          onChange={(e) =>\n+                            setState({\n+                              ...state,\n+                              is_featured:\n+                                state.is_featured === \"\" ||\n+                                  state.is_featured === \"0\"\n+                                  ? \"1\"\n+                                  : \"0\",\n+                            })\n+                          }\n+                        />\n+                      </label>\n+                    </div>\n+                  ) : null}\n+                </div>\n+                <div className=\"form-group text-center\">\n+                  {loading === true ? (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"button\"\n+                      disabled\n+                    >\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                      type=\"submit\"\n+                    >\n+                      Submit\n+                    </button>\n+                  )}\n+                </div>\n+              </form>\n+              {/* </div> */}\n+            </div>\n+          </>\n+        )}\n+      </Modal>\n+    </>\n+  );\n+}\n+\n+export default PersonalDetails;\n"
                },
                {
                    "date": 1713935085337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,1372 +334,14 @@\n           props.setApiCall(true);\n           return close();\n         }\n         if (responseData.message ===\n-          \"Email already exists\"){\n+          \"Email already exists\") {\n           toast.success(\"Candidate Updated successfully\", {\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n           });\n-        setErrors({ ...errors, email: \"Email already exists\" })\n-        return close();}\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      toast.error(\"Please complete the profile first!\", {\n-        position: toast.POSITION.TOP_RIGHT,\n-        autoClose: 1000,\n-      });\n-      setLoading(false);\n-    }\n-  }\n-  // END USER PERSONAL DETAIL VALIDATION\n-  /*Function to convert file to base64 */\n-  const convertToBase64 = (file) => {\n-    return new Promise((resolve, reject) => {\n-      const fileReader = new FileReader();\n-      fileReader.addEventListener(\"load\", () => {\n-        resolve({ base64: fileReader.result });\n-      });\n-      fileReader.readAsDataURL(file);\n-      fileReader.onerror = (error) => {\n-        reject(error);\n-      };\n-    });\n-  };\n-  /*Onchange function of Resume */\n-  const handleUploadFile = async (e) => {\n-    // const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n-    const allowedFormats = [\".pdf\", \".doc\", \".docx\", \".jpg\", \".jpeg\", \".png\"];\n-    const file = e.target.files[0];\n-    const fileType = `.${file.name.split(\".\").pop()}`\n-    console.log(file.type, fileType)\n-    if (allowedFormats.includes(fileType)) {\n-      console.log(\"object\")\n-      encoded = await convertToBase64(file);\n-      let base64Name = encoded.base64;\n-      let finalBase = base64Name;\n-      setState({ ...state, resume: finalBase });\n-    } else {\n-      setErrors({\n-        ...errors,\n-        resume: [\n-          \"Invalid file format. Please upload an image (JPEG, JPG or PNG) ,DOC ,DOCX or a PDF.\",\n-        ],\n-      });\n-    }\n-  };\n-  /*Onchange function of profile */\n-  const handleFileChange = async (event) => {\n-    const file = event.target.files[0];\n-    const reader = new FileReader();\n-\n-    reader.onload = (event) => {\n-      const img = new Image();\n-      img.onload = () => {\n-        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n-          setImgError(\"Image size can't be more then 100 kb\");\n-        } else {\n-          setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n-        }\n-      };\n-      img.src = event.target.result;\n-    };\n-\n-    // Read the file as a data URL\n-    reader.readAsDataURL(file);\n-    encoded = await convertToBase64(file);\n-    let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n-  };\n-  // Calculate min and max dates dynamically\n-  // const currentYear = moment().year();\n-  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n-  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        {showAddEAgentModal ? (\n-          <div className=\"form-group col-md-12\">\n-            <button\n-              className=\"btn btn-primary\"\n-              onClick={() => setShowAgentMOdal(false)}\n-            >\n-              Cancel\n-            </button>\n-            <AddNewAgent\n-              agentId={agentId}\n-              apiCall={apiCall}\n-              setApiCall={setApiCall}\n-            />\n-          </div>\n-        ) : (\n-          <>\n-            <button\n-              type=\"button\"\n-              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-              data-dismiss=\"modal\"\n-              onClick={close}\n-            >\n-              <i className=\"fas fa-times\"></i>\n-            </button>\n-            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n-              <form onSubmit={onUserPersonalDetailClick}>\n-                {props.employeeId === \"0\" ? (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Add Candidate Details\n-                  </h5>\n-                ) : (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Update {props.pageNameForForm === \"ApplicantType\" ?\n-                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n-                          ? \"Assigned To\" :\n-                          \"Candidate Details\"}\n-                  </h5>\n-                )}\n-                {/* FIRST LINE */}\n-                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n-                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n-                  \"d-none\" : \"\"}`}>\n-                  <div className=\"mb-4 position-relative\">\n-                    <input\n-                      type={\"file\"}\n-                      id=\"profile_photo\"\n-                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n-                      onChange={handleFileChange}\n-                      className=\"d-none\"\n-                    />\n-                    <img\n-                      className=\"rounded-circle\"\n-                      src={\n-                        state.profile_photo\n-                          ? state.profile_photo\n-                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                      }\n-                      alt=\"\"\n-                      width={\"100px\"}\n-                      height={\"100px\"}\n-                    />\n-                    <label\n-                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n-                      htmlFor=\"profile_photo\"\n-                    >\n-                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n-                    </label>\n-                  </div>\n-                  <small className=\"text-danger\">{imgError}</small>\n-                </div>\n-                <div className=\"row pt-5\">\n-                  <input\n-                    maxLength={20}\n-                    name=\"employee_id\"\n-                    value={state.id || \"\"}\n-                    type=\"hidden\"\n-                    id=\"employee_id\"\n-                  />\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"name\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Full Name: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      name=\"name\"\n-                      value={state.name || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.name\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"Full Name\"\n-                      id=\"name\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR name----*/}\n-                    {errors.name && (\n-                      <span\n-                        key={errors.name}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.name}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"email\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Email Id: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"email\"\n-                      name=\"email\"\n-                      value={state.email || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.email\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control \"\n-                      }\n-                      id=\"email\"\n-                      placeholder=\"email\"\n-                    // disabled={props.employeeId === \"0\" ? false : true}\n-                    />\n-                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                    {errors.email && (\n-                      <span\n-                        key={errors.email}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.email}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"contact_no\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Mobile Number: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      type=\"number\"\n-                      min={0}\n-                      placeholder=\"Mobile Number\"\n-                      name=\"contact_no\"\n-                      value={state.contact_no || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.contact_no\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"contact_no\"\n-                      maxLength={13}\n-                    />\n-                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n-                    {errors.contact_no && (\n-                      <span\n-                        key={errors.contact_no}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.contact_no}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"description\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      style={{ top: \"-12px\" }}\n-                    >\n-                      About:\n-                    </label>\n-                    <TextEditor\n-                      state={state}\n-                      setState={setState}\n-                      page={\"description\"}\n-                    />\n-\n-                    {/* <textarea\n-                      name=\"description\"\n-                      value={state.description || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"description\"\n-                      placeholder=\"Description\"\n-                    ></textarea> */}\n-                    {/* <FroalaEditor\n-                      model={state.description}\n-                      onModelChange={(newContent) =>\n-                        setState({ ...state, description: newContent })\n-                      }\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    /> */}\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.description && (\n-                      <span\n-                        key={errors.description}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.description}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* SECOND LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"date_of_birth\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Date Of Birth: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      // max={moment().format(\"DD-MM-YYYY\")}\n-                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n-                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n-                      type=\"date\"\n-                      placeholder=\"Date Of Birth \"\n-                      name=\"date_of_birth\"\n-                      value={state.date_of_birth || \"\"}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.date_of_birth\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                      id=\"date_of_birth\"\n-                    />\n-\n-                    {/*----ERROR MESSAGE FOR DOB----*/}\n-                    {errors.date_of_birth && (\n-                      <span\n-                        key={errors.date_of_birth}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.date_of_birth}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"gender\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Gender: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"gender\"\n-                      value={state.gender || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.gender\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"gender\"\n-                    >\n-                      <option value={\"\"}>User Gender</option>\n-                      <option value={\"male\"}>Male</option>\n-                      <option value={\"female\"}>Female</option>\n-                      <option value={\"other\"}>Other</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.gender && (\n-                      <span\n-                        key={errors.gender}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.gender}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"marital_status\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Marital Status: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"marital_status\"\n-                      value={state.marital_status || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.marital_status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"marital_status\"\n-                    >\n-                      <option value={\"\"}>Marital Status</option>\n-                      <option value={\"single\"}>Single</option>\n-                      <option value={\"widow\"}>Widow</option>\n-                      <option value={\"married\"}>Married</option>\n-                      <option value={\"separated\"}>Separated</option>\n-                      <option value={\"divorced\"}>Divorced</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n-                    {errors.marital_status && (\n-                      <span\n-                        key={errors.marital_status}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.marital_status}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* THIRD LINE */}\n-                  {/* <div className=\"form-group col-md-4\">\n-                    <label\n-                      htmlFor=\"nationality\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Nationality / Citizenship:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"nationality / Citizenship\"\n-                      name=\"nationality\"\n-                      value={state.nationality || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.nationality\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"nationality\"\n-                    />\n-                    // ----ERROR MESSAGE FOR nationality----\n-                    {errors.nationality && (\n-                      <span\n-                        key={errors.nationality}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.nationality}\n-                      </span>\n-                    )}\n-                  </div> */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"current_location\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Current Location: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"Current Location\"\n-                      name=\"current_location\"\n-                      value={state.current_location || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.current_location\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"current_location\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n-                    {errors.current_location && (\n-                      <span\n-                        key={errors.current_location}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.current_location}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"currently_located_country\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Country Of Residence:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.currently_located_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Currently Located Country\"\n-                      id=\"currently_located_country\"\n-                      name=\"currently_located_country\"\n-                      value={state.currently_located_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select Country</option>\n-                      {(FilterJson.location || []).map((item, i) => (\n-                        <option value={item} key={i}>\n-                          {item}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n-                    {errors.currently_located_country && (\n-                      <span\n-                        key={errors.currently_located_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.currently_located_country}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* FOURTH LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"language\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      English level {/*(Max 3)*/}:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"language\"\n-                      value={state.language || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.language\n-                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n-                          : \"text-capitalize form-control position-relative overflow-hidden\"\n-                      }\n-                      placeholder=\"Language\"\n-                      id=\"language\"\n-                    >\n-                      <option value={\"\"}>Level</option>\n-                      <option value={\"no english\"}> No English</option>\n-                      <option value={\"basic\"}>Basic</option>\n-                      <option value={\"medium\"}>Medium</option>\n-                      <option value={\"advance\"}>Advance</option>\n-                      {/* {(jsonList.Language || []).map((Lang) => (\n-                        <option key={Lang.id} value={Lang.value}>\n-                          {Lang.value}\n-                        </option>\n-                      ))} */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n-                    {errors.language && (\n-                      <span\n-                        key={errors.language}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.language}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* <div className=\"form-group col-md-4\">\n-                <label\n-                  htmlFor=\"religion\"\n-                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                >\n-                  Religion: <span className=\"text-danger\">*</span>\n-                </label>\n-                <input\n-                  maxLength={20}\n-                  type=\"text\"\n-                  className={\n-                    errors.religion\n-                      ? \"form-control border border-danger\"\n-                      : \"form-control\"\n-                  }\n-                  placeholder=\"religion\"\n-                  id=\"religion\"\n-                  name=\"religion\"\n-                  value={state.religion || \"\"}\n-                  onChange={onInputChange}\n-                />\n-                {errors.religion && (\n-                  <span\n-                    key={errors.religion}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.religion}\n-                  </span>\n-                )}\n-              </div> */}\n-                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n-                    ? \"d-none\"\n-                    : `${props.pageNameForForm === \"ApplicantType\" ?\n-                      \"col-md-12\" : \"col-md-4\"}\n-                      `}`\n-                  }>\n-                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n-                      Applicant's Type : <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      className={`${errors.interested_in\n-                        ? \"form-control  border border-danger \"\n-                        : \"form-control \"}\n-                          ${state.interested_in === \"pnp\" ?\n-                          `text-uppercase` :\n-                          \"text-capitalize\"}`\n-                      }\n-                      id=\"interested_in\"\n-                      name=\"interested_in\"\n-                      value={state.interested_in || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select</option>\n-                      {(FilterJson.interested || []).map((interest) => (\n-                        <option key={interest} value={interest}\n-                          className={interest === \"pnp\" ?\n-                            `text-uppercase` :\n-                            \"text-capitalize\"}>\n-                          {interest}\n-                        </option>\n-                      ))}\n-                      {/* <option value={\"swap\"}>SWEP</option>\n-                  <option value={\"parttime\"}>Part-time</option>\n-                  <option value={\"all\"}>All</option> */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR interested_in----*/}\n-                    {errors.interested_in && (\n-                      <span\n-                        key={errors.interested_in}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.interested_in}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {state.interested_in === \"pnp\" &&\n-                    <div className={`form-group \n-                    ${props.user_of_page === \"assignedUser\" ||\n-                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        ? \"d-none\"\n-                        : `${props.pageNameForForm === \"Category\" ?\n-                          \"col-md-12\" : \"col-md-4\"}\n-                        `}`}>\n-                      <label\n-                        htmlFor=\"category\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Sub Type:\n-                      </label>\n-                      <select\n-                        name=\"category\"\n-                        value={state.category || \"\"}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.category\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"category\"\n-                      >\n-                        <option value={\"\"}>Select user type</option>\n-                        <option value={\"aos\"}>AOS</option>\n-                        <option value={\"rrs\"}>RRS</option>\n-                        <option value={\"tech pathway\"}>Tech Pathway</option>\n-                      </select>\n-                      {/* ----ERROR MESSAGE FOR category---- */}\n-                      {errors.category && (\n-                        <span\n-                          key={errors.category}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.category}\n-                        </span>\n-                      )}\n-                    </div>}\n-                  <div className={`form-group col-md-4\n-                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"experience\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Experience: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"experience\"\n-                      value={state.experience || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.experience\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"experience\"\n-                    >\n-                      <option value={\"\"}>User Experience</option>\n-                      {(FilterJson.experience || []).map((ex, i) => (\n-                        <option value={ex} key={i}>\n-                          {ex}\n-                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR experience----*/}\n-                    {errors.experience && (\n-                      <span\n-                        key={errors.experience}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.experience}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"work_permit_canada\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      If Candidate is Inside Canada\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"work_permit_canada\"\n-                      value={state.work_permit_canada || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.work_permit_canada\n-                          ? \"form-control  border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"work_permit_canada\"\n-                    >\n-                      <option value={\"\"}>Permit </option>\n-                      <option value={\"no\"}>No</option>\n-                      <option value={\"yes\"}>Yes</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n-                    {errors.work_permit_canada && (\n-                      <span\n-                        key={errors.work_permit_canada}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_canada}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`${state.work_permit_canada === \"yes\" &&\n-                      props.user_of_page === \"\"\n-                      ? \"form-group col-md-4\"\n-                      : \"d-none\"\n-                      }`}\n-                  >\n-                    <label\n-                      htmlFor=\"otherpermit\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Candidate Status:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.work_permit_other_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Permit of Other Country\"\n-                      id=\"work_permit_other_country\"\n-                      name=\"work_permit_other_country\"\n-                      value={state.work_permit_other_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select status</option>\n-                      {(FilterJson.canadian_candidate_work_status || []).map(\n-                        (item, i) => (\n-                          <option value={item} key={i}>\n-                            {item}\n-                          </option>\n-                        )\n-                      )}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n-                    {errors.work_permit_other_country && (\n-                      <span\n-                        key={errors.work_permit_other_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_other_country}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={\n-                      `form-group  ${user_type === \"user\" ||\n-                        props.pageNameForForm === \"Category\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"assignedUser\"\n-                        ? \" d-none\"\n-                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n-                    `}\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"reffer_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Referred By:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={agentList || []} \n-                      name=\"reffer_by\"\n-                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n-                      id=\"reffer_by\"\n-                      onChange={onSelectChange}\n-                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n-                    /> */}\n-                    <select\n-                      name=\"reffer_by\"\n-                      value={state.reffer_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.reffer_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"reffer_by\"\n-                      disabled={user_type === \"agent\"}\n-                    >\n-                      <option value={\"\"}>Select partner </option>\n-                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n-                    </select>\n-                    <span\n-                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n-                      onClick={() => setShowAgentMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Partner\"\n-                    >\n-                      +\n-                    </span>\n-\n-                    {/* ERROR MSG FOR REFFER BY */}\n-                    {errors.reffer_by && (\n-                      <span\n-                        key={errors.reffer_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.reffer_by}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`form-group\n-                    ${user_type === \"agent\"\n-                        || props.pageNameForForm === \"Category\"\n-                        || user_type === \"user\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"d-none\"\n-                        : props.user_of_page === \"assignedUser\" ?\n-                          \"d-flex col-md-12\" :\n-                          \"d-flex col-md-4\"}`\n-                    }\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"assigned_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Assigned To:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={\"\" || admiinList}\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by}\n-                      id=\"assigned_by\"\n-                      onChange={onAdminSelectChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control border border-danger px-0 pt-4 \"\n-                          : \"form-control px-0 pt-4 border-0\"\n-                      }\n-                    /> */}\n-                    <select\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"assigned_by\"\n-                    >\n-                      <option value={\"\"}>Select Admin </option>\n-                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n-                    </select>\n-                    {/* <span\n-                      className=\"btn btn-sm btn-secondary\"\n-                      onClick={() => setShowAdminMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Admin\"\n-                    >\n-                      +\n-                    </span>  */}\n-\n-                    {/* ERROR MSG FOR REFFER BY  */}\n-                    {errors.assigned_by && (\n-                      <span\n-                        key={errors.assigned_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.assigned_by}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                    || props.pageNameForForm === \"ApplicantType\" ||\n-                    props.pageNameForForm === \"Category\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"resume\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n-                    </label>\n-                    <input\n-                      type=\"file\"\n-                      placeholder=\"Resume\"\n-                      id=\"resume\"\n-                      name=\"resume\"\n-                      // accept=\".pdf,application/pdf\"\n-                      accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\"\n-                      onChange={handleUploadFile}\n-                      className={\n-                        errors.resume\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR RESUME----*/}\n-                    {errors.resume && (\n-                      <span\n-                        key={errors.resume}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.resume}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {user_type === \"admin\" ? (\n-                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                      || props.pageNameForForm === \"ApplicantType\"\n-                      || props.pageNameForForm === \"Category\"\n-                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                      <label\n-                        htmlFor=\"fetured\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"fetured\"\n-                          name=\"fetured\"\n-                          checked={state.is_featured === \"1\"}\n-                          value={state.is_featured}\n-                          onChange={(e) =>\n-                            setState({\n-                              ...state,\n-                              is_featured:\n-                                state.is_featured === \"\" ||\n-                                  state.is_featured === \"0\"\n-                                  ? \"1\"\n-                                  : \"0\",\n-                            })\n-                          }\n-                        />\n-                      </label>\n-                    </div>\n-                  ) : null}\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"submit\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-              {/* </div> */}\n-            </div>\n-          </>\n-        )}\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default PersonalDetails;\n-import moment from \"moment/moment\";\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-// import { CKEditor } from \"ckeditor4-react\";\n-// import FroalaEditor from \"react-froala-wysiwyg\";\n-// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n-// import \"froala-editor/css/froala_style.min.css\";\n-// import \"froala-editor/js/plugins.pkgd.min.js\";\n-\n-import {\n-  AddEmployeeDetails,\n-  EmployeeDetails,\n-  GetAgentJson,\n-  getallAdminData,\n-  // GetFilter,\n-  // AddEmployeePermission,\n-} from \"../../../api/api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import FilterJson from \"../../json/filterjson\";\n-// import Select from \"react-select\";\n-// import AddAgent from \"../admin/addAgent\";\n-// import { Link } from \"react-router-dom\";\n-import AddNewAgent from \"../admin/add_agent\";\n-import Permissions from \"../../json/emailPermisionJson\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function PersonalDetails(props) {\n-  let encoded;\n-  const [imgError, setImgError] = useState(\"\");\n-  const [loading, setLoading] = useState(false);\n-  const [agentList, setAgentList] = useState([]);\n-  const [admiinList, setAdminList] = useState([]);\n-  // const [jsonList, setJsonList] = useState([]);\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n-  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n-  /*data and id states */\n-  let [agentId /*, setAgentId*/] = useState();\n-\n-  let user_type = localStorage.getItem(\"userType\");\n-  // let admin_id = localStorage.getItem(\"admin_id\");\n-  // USER PERSONAL DETAIL VALIDATION\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormStateuser = {\n-    name: \"\",\n-    email: \"\",\n-    contact_no: \"\",\n-    description: \"\",\n-    date_of_birth: \"\",\n-    gender: \"\",\n-    marital_status: \"\",\n-    nationality: \"\",\n-    current_location: \"\",\n-    currently_located_country: \"\",\n-    language: \"\",\n-    religion: \"\",\n-    interested_in: \"\",\n-    experience: \"\",\n-    work_permit_canada: \"\",\n-    work_permit_other_country: \"\",\n-    resume: \"\",\n-    profile_photo: \"\",\n-    is_featured: \"\",\n-    status: props.employeeId === \"0\" ? \"1\" : \"\",\n-    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n-    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n-    assigned_by: \"\"\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormStateuser);\n-    setErrors(\"\");\n-    setLoading(false);\n-    props.close();\n-  };\n-\n-  // VALIDATION CONDITIONS\n-\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Name is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 2\n-              ? \"Name should have 2 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Name can not have a number.\"\n-                : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    contact_no: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Mobile number is required\"\n-          : value.length < 10\n-            ? \"Mobile number should be more than 10 digits\"\n-            : value.length > 13\n-              ? \"Mobile no should be of 13 digits\"\n-              : \"\",\n-    ],\n-    // description: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Description is required\"\n-    //       : value.length < 5\n-    //       ? \"Description should have 5 or more letter\"\n-    //       : null,\n-    // ],\n-    date_of_birth: [\n-      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n-    ],\n-    gender: [\n-      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n-    ],\n-    marital_status: [\n-      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n-    ],\n-    // nationality: [\n-    //   (value) =>\n-    //     value === \"\" || value === null\n-    //       ? \"Nationality is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Nationality should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Nationality can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    current_location: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Location is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 3\n-              ? \"Location should have 3 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Location can not have a number.\"\n-                : \"\",\n-    ],\n-    // currently_located_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Country is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Country should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Country can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    language: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Language is required\"\n-          : \"\",\n-    ],\n-    // religion: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Religion is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Religion should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Religion can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    interested_in: [\n-      (value) => (value === \"\" ? \"Interested in is required\" : null),\n-    ],\n-    experience: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Experience is required\" : null,\n-    ],\n-    resume: [\n-      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n-    ],\n-    work_permit_canada: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Work Permit is required\" : null,\n-    ],\n-    // work_permit_other_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Other Permit is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 2\n-    //       ? \"Other permit sholud have 2 or more letters\"\n-    //       : \"\",\n-    // ],\n-    reffer_by:\n-      props.employeeId !== \"0\" || user_type === \"user\"\n-        ? null\n-        : [\n-          (value) =>\n-            value === \"\" || value === null ? \"Refferer is required\" : null,\n-        ],\n-    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n-    //   ? null\n-    //   : [\n-    //     (value) =>\n-    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n-    //   ],\n-  };\n-\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, validate, setErrors } =\n-    useValidation(initialFormStateuser, validators);\n-  // const handleEditorChange = (content, editor) => {\n-  //   setState({ ...state, description: content });\n-  // };\n-\n-  // API CALL\n-  const UserData = async () => {\n-    try {\n-      const userData = await EmployeeDetails(props.employeeId);\n-      if (userData.data.employee.length === 0) {\n-        setState([]);\n-      } else {\n-        setState(userData.data.employee[0]);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setLoading(false);\n-    }\n-  };\n-  /*Function to get admin json list */\n-  const AdminJson = async () => {\n-    let response = await getallAdminData();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n-      // if (Array.isArray(newAdminJson)) {\n-      //   const options = newAdminJson.map((option) => ({\n-      //     value: option.admin_id,\n-      //     label: option.name,\n-      //   }));\n-      //   setAdminList(options);\n-      // }\n-      // setJsonList(json.data.data);\n-      setAdminList(response.data)\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onAdminSelectChange = (option) => {\n-  //   setState({ ...state, assigned_by: option.value });\n-  // };\n-  /*Function to get agent json list */\n-  const AgentJson = async () => {\n-    let response = await GetAgentJson();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // if (Array.isArray(response)) {\n-      //   const options = response.map((option) => ({\n-      //     value: option.id,\n-      //     label: option.u_id + \"  \" + option.name,\n-      //     name: option.name\n-      //   }));\n-      // }\n-      setAgentList(response);\n-      // setJsonList(json.data.data);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onSelectChange = (option) => {\n-  //   setState({ ...state, reffer_by: option.value });\n-  // };\n-  useEffect(() => {\n-    AgentJson();\n-    if (user_type === \"admin\") {\n-      AdminJson()\n-    }\n-    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n-      setState(initialFormStateuser);\n-    } else {\n-      UserData();\n-    }\n-    setShowAgentMOdal(false);\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [props, apiCall]);\n-\n-  // USER PERSONAL DETAIL SUBMIT BUTTON\n-  async function onUserPersonalDetailClick(event) {\n-    // console.log(errors)\n-    event.preventDefault();\n-    if (validate() && imgError === \"\") {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddEmployeeDetails(state);\n-        if (responseData.message === \"Employee data inserted successfully\") {\n-          try {\n-            // let Response = await AddEmployeePermission(Permissions);\n-            // conditions for the response toaster message\n-            // if (Response.message === \"successfully\") {\n-            toast.success(\"Candidate added successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-            // }\n-          } catch (err) {\n-            console.log(err);\n-          }\n-        }\n-        if (responseData.message === \"Employee data updated successfully\") {\n-          toast.success(\"Candidate Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n+          setErrors({ ...errors, email: \"Email already exists\" })\n           return close();\n         }\n       } catch (err) {\n         console.log(err);\n@@ -2723,2720 +1365,4 @@\n   );\n }\n \n export default PersonalDetails;\n-import moment from \"moment/moment\";\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-// import { CKEditor } from \"ckeditor4-react\";\n-// import FroalaEditor from \"react-froala-wysiwyg\";\n-// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n-// import \"froala-editor/css/froala_style.min.css\";\n-// import \"froala-editor/js/plugins.pkgd.min.js\";\n-\n-import {\n-  AddEmployeeDetails,\n-  EmployeeDetails,\n-  GetAgentJson,\n-  getallAdminData,\n-  // GetFilter,\n-  // AddEmployeePermission,\n-} from \"../../../api/api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import FilterJson from \"../../json/filterjson\";\n-// import Select from \"react-select\";\n-// import AddAgent from \"../admin/addAgent\";\n-// import { Link } from \"react-router-dom\";\n-import AddNewAgent from \"../admin/add_agent\";\n-import Permissions from \"../../json/emailPermisionJson\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function PersonalDetails(props) {\n-  let encoded;\n-  const [imgError, setImgError] = useState(\"\");\n-  const [loading, setLoading] = useState(false);\n-  const [agentList, setAgentList] = useState([]);\n-  const [admiinList, setAdminList] = useState([]);\n-  // const [jsonList, setJsonList] = useState([]);\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n-  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n-  /*data and id states */\n-  let [agentId /*, setAgentId*/] = useState();\n-\n-  let user_type = localStorage.getItem(\"userType\");\n-  // let admin_id = localStorage.getItem(\"admin_id\");\n-  // USER PERSONAL DETAIL VALIDATION\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormStateuser = {\n-    name: \"\",\n-    email: \"\",\n-    contact_no: \"\",\n-    description: \"\",\n-    date_of_birth: \"\",\n-    gender: \"\",\n-    marital_status: \"\",\n-    nationality: \"\",\n-    current_location: \"\",\n-    currently_located_country: \"\",\n-    language: \"\",\n-    religion: \"\",\n-    interested_in: \"\",\n-    experience: \"\",\n-    work_permit_canada: \"\",\n-    work_permit_other_country: \"\",\n-    resume: \"\",\n-    profile_photo: \"\",\n-    is_featured: \"\",\n-    status: props.employeeId === \"0\" ? \"1\" : \"\",\n-    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n-    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n-    assigned_by: \"\"\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormStateuser);\n-    setErrors(\"\");\n-    setLoading(false);\n-    props.close();\n-  };\n-\n-  // VALIDATION CONDITIONS\n-\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Name is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 2\n-              ? \"Name should have 2 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Name can not have a number.\"\n-                : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    contact_no: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Mobile number is required\"\n-          : value.length < 10\n-            ? \"Mobile number should be more than 10 digits\"\n-            : value.length > 13\n-              ? \"Mobile no should be of 13 digits\"\n-              : \"\",\n-    ],\n-    // description: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Description is required\"\n-    //       : value.length < 5\n-    //       ? \"Description should have 5 or more letter\"\n-    //       : null,\n-    // ],\n-    date_of_birth: [\n-      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n-    ],\n-    gender: [\n-      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n-    ],\n-    marital_status: [\n-      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n-    ],\n-    // nationality: [\n-    //   (value) =>\n-    //     value === \"\" || value === null\n-    //       ? \"Nationality is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Nationality should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Nationality can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    current_location: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Location is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 3\n-              ? \"Location should have 3 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Location can not have a number.\"\n-                : \"\",\n-    ],\n-    // currently_located_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Country is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Country should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Country can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    language: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Language is required\"\n-          : \"\",\n-    ],\n-    // religion: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Religion is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Religion should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Religion can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    interested_in: [\n-      (value) => (value === \"\" ? \"Interested in is required\" : null),\n-    ],\n-    experience: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Experience is required\" : null,\n-    ],\n-    resume: [\n-      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n-    ],\n-    work_permit_canada: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Work Permit is required\" : null,\n-    ],\n-    // work_permit_other_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Other Permit is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 2\n-    //       ? \"Other permit sholud have 2 or more letters\"\n-    //       : \"\",\n-    // ],\n-    reffer_by:\n-      props.employeeId !== \"0\" || user_type === \"user\"\n-        ? null\n-        : [\n-          (value) =>\n-            value === \"\" || value === null ? \"Refferer is required\" : null,\n-        ],\n-    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n-    //   ? null\n-    //   : [\n-    //     (value) =>\n-    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n-    //   ],\n-  };\n-\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, validate, setErrors } =\n-    useValidation(initialFormStateuser, validators);\n-  // const handleEditorChange = (content, editor) => {\n-  //   setState({ ...state, description: content });\n-  // };\n-\n-  // API CALL\n-  const UserData = async () => {\n-    try {\n-      const userData = await EmployeeDetails(props.employeeId);\n-      if (userData.data.employee.length === 0) {\n-        setState([]);\n-      } else {\n-        setState(userData.data.employee[0]);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setLoading(false);\n-    }\n-  };\n-  /*Function to get admin json list */\n-  const AdminJson = async () => {\n-    let response = await getallAdminData();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n-      // if (Array.isArray(newAdminJson)) {\n-      //   const options = newAdminJson.map((option) => ({\n-      //     value: option.admin_id,\n-      //     label: option.name,\n-      //   }));\n-      //   setAdminList(options);\n-      // }\n-      // setJsonList(json.data.data);\n-      setAdminList(response.data)\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onAdminSelectChange = (option) => {\n-  //   setState({ ...state, assigned_by: option.value });\n-  // };\n-  /*Function to get agent json list */\n-  const AgentJson = async () => {\n-    let response = await GetAgentJson();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // if (Array.isArray(response)) {\n-      //   const options = response.map((option) => ({\n-      //     value: option.id,\n-      //     label: option.u_id + \"  \" + option.name,\n-      //     name: option.name\n-      //   }));\n-      // }\n-      setAgentList(response);\n-      // setJsonList(json.data.data);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onSelectChange = (option) => {\n-  //   setState({ ...state, reffer_by: option.value });\n-  // };\n-  useEffect(() => {\n-    AgentJson();\n-    if (user_type === \"admin\") {\n-      AdminJson()\n-    }\n-    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n-      setState(initialFormStateuser);\n-    } else {\n-      UserData();\n-    }\n-    setShowAgentMOdal(false);\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [props, apiCall]);\n-\n-  // USER PERSONAL DETAIL SUBMIT BUTTON\n-  async function onUserPersonalDetailClick(event) {\n-    // console.log(errors)\n-    event.preventDefault();\n-    if (validate() && imgError === \"\") {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddEmployeeDetails(state);\n-        if (responseData.message === \"Employee data inserted successfully\") {\n-          try {\n-            // let Response = await AddEmployeePermission(Permissions);\n-            // conditions for the response toaster message\n-            // if (Response.message === \"successfully\") {\n-            toast.success(\"Candidate added successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-            // }\n-          } catch (err) {\n-            console.log(err);\n-          }\n-        }\n-        if (responseData.message === \"Employee data updated successfully\") {\n-          toast.success(\"Candidate Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      toast.error(\"Please complete the profile first!\", {\n-        position: toast.POSITION.TOP_RIGHT,\n-        autoClose: 1000,\n-      });\n-      setLoading(false);\n-    }\n-  }\n-  // END USER PERSONAL DETAIL VALIDATION\n-  /*Function to convert file to base64 */\n-  const convertToBase64 = (file) => {\n-    return new Promise((resolve, reject) => {\n-      const fileReader = new FileReader();\n-      fileReader.addEventListener(\"load\", () => {\n-        resolve({ base64: fileReader.result });\n-      });\n-      fileReader.readAsDataURL(file);\n-      fileReader.onerror = (error) => {\n-        reject(error);\n-      };\n-    });\n-  };\n-  /*Onchange function of Resume */\n-  const handleUploadFile = async (e) => {\n-    // const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n-    const allowedFormats = [\".pdf\", \".doc\", \".docx\", \".jpg\", \".jpeg\", \".png\"];\n-    const file = e.target.files[0];\n-    const fileType = `.${file.name.split(\".\").pop()}`\n-    console.log(file.type, fileType)\n-    if (allowedFormats.includes(fileType)) {\n-      console.log(\"object\")\n-      encoded = await convertToBase64(file);\n-      let base64Name = encoded.base64;\n-      let finalBase = base64Name;\n-      setState({ ...state, resume: finalBase });\n-    } else {\n-      setErrors({\n-        ...errors,\n-        resume: [\n-          \"Invalid file format. Please upload an image (JPEG or PNG) or a PDF.\",\n-        ],\n-      });\n-    }\n-  };\n-  /*Onchange function of profile */\n-  const handleFileChange = async (event) => {\n-    const file = event.target.files[0];\n-    const reader = new FileReader();\n-\n-    reader.onload = (event) => {\n-      const img = new Image();\n-      img.onload = () => {\n-        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n-          setImgError(\"Image size can't be more then 100 kb\");\n-        } else {\n-          setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n-        }\n-      };\n-      img.src = event.target.result;\n-    };\n-\n-    // Read the file as a data URL\n-    reader.readAsDataURL(file);\n-    encoded = await convertToBase64(file);\n-    let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n-  };\n-  // Calculate min and max dates dynamically\n-  // const currentYear = moment().year();\n-  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n-  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        {showAddEAgentModal ? (\n-          <div className=\"form-group col-md-12\">\n-            <button\n-              className=\"btn btn-primary\"\n-              onClick={() => setShowAgentMOdal(false)}\n-            >\n-              Cancel\n-            </button>\n-            <AddNewAgent\n-              agentId={agentId}\n-              apiCall={apiCall}\n-              setApiCall={setApiCall}\n-            />\n-          </div>\n-        ) : (\n-          <>\n-            <button\n-              type=\"button\"\n-              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-              data-dismiss=\"modal\"\n-              onClick={close}\n-            >\n-              <i className=\"fas fa-times\"></i>\n-            </button>\n-            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n-              <form onSubmit={onUserPersonalDetailClick}>\n-                {props.employeeId === \"0\" ? (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Add Candidate Details\n-                  </h5>\n-                ) : (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Update {props.pageNameForForm === \"ApplicantType\" ?\n-                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n-                          ? \"Assigned To\" :\n-                          \"Candidate Details\"}\n-                  </h5>\n-                )}\n-                {/* FIRST LINE */}\n-                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n-                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n-                  \"d-none\" : \"\"}`}>\n-                  <div className=\"mb-4 position-relative\">\n-                    <input\n-                      type={\"file\"}\n-                      id=\"profile_photo\"\n-                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n-                      onChange={handleFileChange}\n-                      className=\"d-none\"\n-                    />\n-                    <img\n-                      className=\"rounded-circle\"\n-                      src={\n-                        state.profile_photo\n-                          ? state.profile_photo\n-                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                      }\n-                      alt=\"\"\n-                      width={\"100px\"}\n-                      height={\"100px\"}\n-                    />\n-                    <label\n-                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n-                      htmlFor=\"profile_photo\"\n-                    >\n-                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n-                    </label>\n-                  </div>\n-                  <small className=\"text-danger\">{imgError}</small>\n-                </div>\n-                <div className=\"row pt-5\">\n-                  <input\n-                    maxLength={20}\n-                    name=\"employee_id\"\n-                    value={state.id || \"\"}\n-                    type=\"hidden\"\n-                    id=\"employee_id\"\n-                  />\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"name\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Full Name: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      name=\"name\"\n-                      value={state.name || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.name\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"Full Name\"\n-                      id=\"name\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR name----*/}\n-                    {errors.name && (\n-                      <span\n-                        key={errors.name}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.name}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"email\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Email Id: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"email\"\n-                      name=\"email\"\n-                      value={state.email || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.email\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control \"\n-                      }\n-                      id=\"email\"\n-                      placeholder=\"email\"\n-                    // disabled={props.employeeId === \"0\" ? false : true}\n-                    />\n-                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                    {errors.email && (\n-                      <span\n-                        key={errors.email}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.email}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"contact_no\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Mobile Number: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      type=\"number\"\n-                      min={0}\n-                      placeholder=\"Mobile Number\"\n-                      name=\"contact_no\"\n-                      value={state.contact_no || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.contact_no\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"contact_no\"\n-                      maxLength={13}\n-                    />\n-                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n-                    {errors.contact_no && (\n-                      <span\n-                        key={errors.contact_no}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.contact_no}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"description\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      style={{ top: \"-12px\" }}\n-                    >\n-                      About:\n-                    </label>\n-                    <TextEditor\n-                      state={state}\n-                      setState={setState}\n-                      page={\"description\"}\n-                    />\n-\n-                    {/* <textarea\n-                      name=\"description\"\n-                      value={state.description || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"description\"\n-                      placeholder=\"Description\"\n-                    ></textarea> */}\n-                    {/* <FroalaEditor\n-                      model={state.description}\n-                      onModelChange={(newContent) =>\n-                        setState({ ...state, description: newContent })\n-                      }\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    /> */}\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.description && (\n-                      <span\n-                        key={errors.description}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.description}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* SECOND LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"date_of_birth\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Date Of Birth: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      // max={moment().format(\"DD-MM-YYYY\")}\n-                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n-                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n-                      type=\"date\"\n-                      placeholder=\"Date Of Birth \"\n-                      name=\"date_of_birth\"\n-                      value={state.date_of_birth || \"\"}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.date_of_birth\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                      id=\"date_of_birth\"\n-                    />\n-\n-                    {/*----ERROR MESSAGE FOR DOB----*/}\n-                    {errors.date_of_birth && (\n-                      <span\n-                        key={errors.date_of_birth}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.date_of_birth}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"gender\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Gender: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"gender\"\n-                      value={state.gender || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.gender\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"gender\"\n-                    >\n-                      <option value={\"\"}>User Gender</option>\n-                      <option value={\"male\"}>Male</option>\n-                      <option value={\"female\"}>Female</option>\n-                      <option value={\"other\"}>Other</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.gender && (\n-                      <span\n-                        key={errors.gender}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.gender}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"marital_status\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Marital Status: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"marital_status\"\n-                      value={state.marital_status || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.marital_status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"marital_status\"\n-                    >\n-                      <option value={\"\"}>Marital Status</option>\n-                      <option value={\"single\"}>Single</option>\n-                      <option value={\"widow\"}>Widow</option>\n-                      <option value={\"married\"}>Married</option>\n-                      <option value={\"separated\"}>Separated</option>\n-                      <option value={\"divorced\"}>Divorced</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n-                    {errors.marital_status && (\n-                      <span\n-                        key={errors.marital_status}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.marital_status}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* THIRD LINE */}\n-                  {/* <div className=\"form-group col-md-4\">\n-                    <label\n-                      htmlFor=\"nationality\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Nationality / Citizenship:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"nationality / Citizenship\"\n-                      name=\"nationality\"\n-                      value={state.nationality || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.nationality\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"nationality\"\n-                    />\n-                    // ----ERROR MESSAGE FOR nationality----\n-                    {errors.nationality && (\n-                      <span\n-                        key={errors.nationality}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.nationality}\n-                      </span>\n-                    )}\n-                  </div> */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"current_location\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Current Location: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"Current Location\"\n-                      name=\"current_location\"\n-                      value={state.current_location || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.current_location\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"current_location\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n-                    {errors.current_location && (\n-                      <span\n-                        key={errors.current_location}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.current_location}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"currently_located_country\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Country Of Residence:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.currently_located_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Currently Located Country\"\n-                      id=\"currently_located_country\"\n-                      name=\"currently_located_country\"\n-                      value={state.currently_located_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select Country</option>\n-                      {(FilterJson.location || []).map((item, i) => (\n-                        <option value={item} key={i}>\n-                          {item}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n-                    {errors.currently_located_country && (\n-                      <span\n-                        key={errors.currently_located_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.currently_located_country}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* FOURTH LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"language\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      English level {/*(Max 3)*/}:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"language\"\n-                      value={state.language || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.language\n-                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n-                          : \"text-capitalize form-control position-relative overflow-hidden\"\n-                      }\n-                      placeholder=\"Language\"\n-                      id=\"language\"\n-                    >\n-                      <option value={\"\"}>Level</option>\n-                      <option value={\"no english\"}> No English</option>\n-                      <option value={\"basic\"}>Basic</option>\n-                      <option value={\"medium\"}>Medium</option>\n-                      <option value={\"advance\"}>Advance</option>\n-                      {/* {(jsonList.Language || []).map((Lang) => (\n-                        <option key={Lang.id} value={Lang.value}>\n-                          {Lang.value}\n-                        </option>\n-                      ))} */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n-                    {errors.language && (\n-                      <span\n-                        key={errors.language}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.language}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* <div className=\"form-group col-md-4\">\n-                <label\n-                  htmlFor=\"religion\"\n-                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                >\n-                  Religion: <span className=\"text-danger\">*</span>\n-                </label>\n-                <input\n-                  maxLength={20}\n-                  type=\"text\"\n-                  className={\n-                    errors.religion\n-                      ? \"form-control border border-danger\"\n-                      : \"form-control\"\n-                  }\n-                  placeholder=\"religion\"\n-                  id=\"religion\"\n-                  name=\"religion\"\n-                  value={state.religion || \"\"}\n-                  onChange={onInputChange}\n-                />\n-                {errors.religion && (\n-                  <span\n-                    key={errors.religion}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.religion}\n-                  </span>\n-                )}\n-              </div> */}\n-                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n-                    ? \"d-none\"\n-                    : `${props.pageNameForForm === \"ApplicantType\" ?\n-                      \"col-md-12\" : \"col-md-4\"}\n-                      `}`\n-                  }>\n-                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n-                      Applicant's Type : <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      className={`${errors.interested_in\n-                        ? \"form-control  border border-danger \"\n-                        : \"form-control \"}\n-                          ${state.interested_in === \"pnp\" ?\n-                          `text-uppercase` :\n-                          \"text-capitalize\"}`\n-                      }\n-                      id=\"interested_in\"\n-                      name=\"interested_in\"\n-                      value={state.interested_in || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select</option>\n-                      {(FilterJson.interested || []).map((interest) => (\n-                        <option key={interest} value={interest}\n-                          className={interest === \"pnp\" ?\n-                            `text-uppercase` :\n-                            \"text-capitalize\"}>\n-                          {interest}\n-                        </option>\n-                      ))}\n-                      {/* <option value={\"swap\"}>SWEP</option>\n-                  <option value={\"parttime\"}>Part-time</option>\n-                  <option value={\"all\"}>All</option> */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR interested_in----*/}\n-                    {errors.interested_in && (\n-                      <span\n-                        key={errors.interested_in}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.interested_in}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {state.interested_in === \"pnp\" &&\n-                    <div className={`form-group \n-                    ${props.user_of_page === \"assignedUser\" ||\n-                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        ? \"d-none\"\n-                        : `${props.pageNameForForm === \"Category\" ?\n-                          \"col-md-12\" : \"col-md-4\"}\n-                        `}`}>\n-                      <label\n-                        htmlFor=\"category\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Sub Type:\n-                      </label>\n-                      <select\n-                        name=\"category\"\n-                        value={state.category || \"\"}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.category\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"category\"\n-                      >\n-                        <option value={\"\"}>Select user type</option>\n-                        <option value={\"aos\"}>AOS</option>\n-                        <option value={\"rrs\"}>RRS</option>\n-                        <option value={\"tech pathway\"}>Tech Pathway</option>\n-                      </select>\n-                      {/* ----ERROR MESSAGE FOR category---- */}\n-                      {errors.category && (\n-                        <span\n-                          key={errors.category}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.category}\n-                        </span>\n-                      )}\n-                    </div>}\n-                  <div className={`form-group col-md-4\n-                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"experience\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Experience: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"experience\"\n-                      value={state.experience || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.experience\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"experience\"\n-                    >\n-                      <option value={\"\"}>User Experience</option>\n-                      {(FilterJson.experience || []).map((ex, i) => (\n-                        <option value={ex} key={i}>\n-                          {ex}\n-                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR experience----*/}\n-                    {errors.experience && (\n-                      <span\n-                        key={errors.experience}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.experience}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"work_permit_canada\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      If Candidate is Inside Canada\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"work_permit_canada\"\n-                      value={state.work_permit_canada || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.work_permit_canada\n-                          ? \"form-control  border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"work_permit_canada\"\n-                    >\n-                      <option value={\"\"}>Permit </option>\n-                      <option value={\"no\"}>No</option>\n-                      <option value={\"yes\"}>Yes</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n-                    {errors.work_permit_canada && (\n-                      <span\n-                        key={errors.work_permit_canada}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_canada}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`${state.work_permit_canada === \"yes\" &&\n-                      props.user_of_page === \"\"\n-                      ? \"form-group col-md-4\"\n-                      : \"d-none\"\n-                      }`}\n-                  >\n-                    <label\n-                      htmlFor=\"otherpermit\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Candidate Status:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.work_permit_other_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Permit of Other Country\"\n-                      id=\"work_permit_other_country\"\n-                      name=\"work_permit_other_country\"\n-                      value={state.work_permit_other_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select status</option>\n-                      {(FilterJson.canadian_candidate_work_status || []).map(\n-                        (item, i) => (\n-                          <option value={item} key={i}>\n-                            {item}\n-                          </option>\n-                        )\n-                      )}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n-                    {errors.work_permit_other_country && (\n-                      <span\n-                        key={errors.work_permit_other_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_other_country}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={\n-                      `form-group  ${user_type === \"user\" ||\n-                        props.pageNameForForm === \"Category\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"assignedUser\"\n-                        ? \" d-none\"\n-                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n-                    `}\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"reffer_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Referred By:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={agentList || []} \n-                      name=\"reffer_by\"\n-                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n-                      id=\"reffer_by\"\n-                      onChange={onSelectChange}\n-                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n-                    /> */}\n-                    <select\n-                      name=\"reffer_by\"\n-                      value={state.reffer_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.reffer_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"reffer_by\"\n-                      disabled={user_type === \"agent\"}\n-                    >\n-                      <option value={\"\"}>Select partner </option>\n-                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n-                    </select>\n-                    <span\n-                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n-                      onClick={() => setShowAgentMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Partner\"\n-                    >\n-                      +\n-                    </span>\n-\n-                    {/* ERROR MSG FOR REFFER BY */}\n-                    {errors.reffer_by && (\n-                      <span\n-                        key={errors.reffer_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.reffer_by}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`form-group\n-                    ${user_type === \"agent\"\n-                        || props.pageNameForForm === \"Category\"\n-                        || user_type === \"user\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"d-none\"\n-                        : props.user_of_page === \"assignedUser\" ?\n-                          \"d-flex col-md-12\" :\n-                          \"d-flex col-md-4\"}`\n-                    }\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"assigned_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Assigned To:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={\"\" || admiinList}\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by}\n-                      id=\"assigned_by\"\n-                      onChange={onAdminSelectChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control border border-danger px-0 pt-4 \"\n-                          : \"form-control px-0 pt-4 border-0\"\n-                      }\n-                    /> */}\n-                    <select\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"assigned_by\"\n-                    >\n-                      <option value={\"\"}>Select Admin </option>\n-                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n-                    </select>\n-                    {/* <span\n-                      className=\"btn btn-sm btn-secondary\"\n-                      onClick={() => setShowAdminMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Admin\"\n-                    >\n-                      +\n-                    </span>  */}\n-\n-                    {/* ERROR MSG FOR REFFER BY  */}\n-                    {errors.assigned_by && (\n-                      <span\n-                        key={errors.assigned_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.assigned_by}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                    || props.pageNameForForm === \"ApplicantType\" ||\n-                    props.pageNameForForm === \"Category\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"resume\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n-                    </label>\n-                    <input\n-                      type=\"file\"\n-                      placeholder=\"Resume\"\n-                      id=\"resume\"\n-                      name=\"resume\"\n-                      // accept=\".pdf,application/pdf\"\n-                      accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png\"\n-                      onChange={handleUploadFile}\n-                      className={\n-                        errors.resume\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR RESUME----*/}\n-                    {errors.resume && (\n-                      <span\n-                        key={errors.resume}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.resume}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {user_type === \"admin\" ? (\n-                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                      || props.pageNameForForm === \"ApplicantType\"\n-                      || props.pageNameForForm === \"Category\"\n-                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                      <label\n-                        htmlFor=\"fetured\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"fetured\"\n-                          name=\"fetured\"\n-                          checked={state.is_featured === \"1\"}\n-                          value={state.is_featured}\n-                          onChange={(e) =>\n-                            setState({\n-                              ...state,\n-                              is_featured:\n-                                state.is_featured === \"\" ||\n-                                  state.is_featured === \"0\"\n-                                  ? \"1\"\n-                                  : \"0\",\n-                            })\n-                          }\n-                        />\n-                      </label>\n-                    </div>\n-                  ) : null}\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"submit\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-              {/* </div> */}\n-            </div>\n-          </>\n-        )}\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default PersonalDetails;\n-import moment from \"moment/moment\";\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import useValidation from \"../../common/useValidation\";\n-// import { CKEditor } from \"ckeditor4-react\";\n-// import FroalaEditor from \"react-froala-wysiwyg\";\n-// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n-// import \"froala-editor/css/froala_style.min.css\";\n-// import \"froala-editor/js/plugins.pkgd.min.js\";\n-\n-import {\n-  AddEmployeeDetails,\n-  EmployeeDetails,\n-  GetAgentJson,\n-  getallAdminData,\n-  // GetFilter,\n-  // AddEmployeePermission,\n-} from \"../../../api/api\";\n-import { toast } from \"react-toastify\";\n-import \"react-toastify/dist/ReactToastify.css\";\n-import FilterJson from \"../../json/filterjson\";\n-// import Select from \"react-select\";\n-// import AddAgent from \"../admin/addAgent\";\n-// import { Link } from \"react-router-dom\";\n-import AddNewAgent from \"../admin/add_agent\";\n-import Permissions from \"../../json/emailPermisionJson\";\n-import TextEditor from \"../../common/TextEditor\";\n-\n-function PersonalDetails(props) {\n-  let encoded;\n-  const [imgError, setImgError] = useState(\"\");\n-  const [loading, setLoading] = useState(false);\n-  const [agentList, setAgentList] = useState([]);\n-  const [admiinList, setAdminList] = useState([]);\n-  // const [jsonList, setJsonList] = useState([]);\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n-  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n-  /*data and id states */\n-  let [agentId /*, setAgentId*/] = useState();\n-\n-  let user_type = localStorage.getItem(\"userType\");\n-  // let admin_id = localStorage.getItem(\"admin_id\");\n-  // USER PERSONAL DETAIL VALIDATION\n-  // INITIAL STATE ASSIGNMENT\n-  const initialFormStateuser = {\n-    name: \"\",\n-    email: \"\",\n-    contact_no: \"\",\n-    description: \"\",\n-    date_of_birth: \"\",\n-    gender: \"\",\n-    marital_status: \"\",\n-    nationality: \"\",\n-    current_location: \"\",\n-    currently_located_country: \"\",\n-    language: \"\",\n-    religion: \"\",\n-    interested_in: \"\",\n-    experience: \"\",\n-    work_permit_canada: \"\",\n-    work_permit_other_country: \"\",\n-    resume: \"\",\n-    profile_photo: \"\",\n-    is_featured: \"\",\n-    status: props.employeeId === \"0\" ? \"1\" : \"\",\n-    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n-    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n-    assigned_by: \"\"\n-  };\n-\n-  /* Functionality to close the modal */\n-  const close = () => {\n-    setState(initialFormStateuser);\n-    setErrors(\"\");\n-    setLoading(false);\n-    props.close();\n-  };\n-\n-  // VALIDATION CONDITIONS\n-\n-  const validators = {\n-    name: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Name is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 2\n-              ? \"Name should have 2 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Name can not have a number.\"\n-                : \"\",\n-    ],\n-    email: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-            ? null\n-            : \"Email is invalid\",\n-    ],\n-    contact_no: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Mobile number is required\"\n-          : value.length < 10\n-            ? \"Mobile number should be more than 10 digits\"\n-            : value.length > 13\n-              ? \"Mobile no should be of 13 digits\"\n-              : \"\",\n-    ],\n-    // description: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Description is required\"\n-    //       : value.length < 5\n-    //       ? \"Description should have 5 or more letter\"\n-    //       : null,\n-    // ],\n-    date_of_birth: [\n-      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n-    ],\n-    gender: [\n-      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n-    ],\n-    marital_status: [\n-      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n-    ],\n-    // nationality: [\n-    //   (value) =>\n-    //     value === \"\" || value === null\n-    //       ? \"Nationality is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Nationality should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Nationality can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    current_location: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Location is required\"\n-          : /[^A-Za-z 0-9]/g.test(value)\n-            ? \"Cannot use special character \"\n-            : value.length < 3\n-              ? \"Location should have 3 or more letter\"\n-              : /[-]?\\d+(\\.\\d+)?/.test(value)\n-                ? \"Location can not have a number.\"\n-                : \"\",\n-    ],\n-    // currently_located_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Country is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Country should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Country can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    language: [\n-      (value) =>\n-        value === \"\" || value === null || value.trim() === \"\"\n-          ? \"Language is required\"\n-          : \"\",\n-    ],\n-    // religion: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Religion is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 3\n-    //       ? \"Religion should have 3 or more letter\"\n-    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n-    //       ? \"Religion can not have a number.\"\n-    //       : \"\",\n-    // ],\n-    interested_in: [\n-      (value) => (value === \"\" ? \"Interested in is required\" : null),\n-    ],\n-    experience: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Experience is required\" : null,\n-    ],\n-    resume: [\n-      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n-    ],\n-    work_permit_canada: [\n-      (value) =>\n-        value === \"\" || value === null ? \"Work Permit is required\" : null,\n-    ],\n-    // work_permit_other_country: [\n-    //   (value) =>\n-    //     value === \"\" || value === null || value.trim() === \"\"\n-    //       ? \"Other Permit is required\"\n-    //       : /[^A-Za-z 0-9]/g.test(value)\n-    //       ? \"Cannot use special character \"\n-    //       : value.length < 2\n-    //       ? \"Other permit sholud have 2 or more letters\"\n-    //       : \"\",\n-    // ],\n-    reffer_by:\n-      props.employeeId !== \"0\" || user_type === \"user\"\n-        ? null\n-        : [\n-          (value) =>\n-            value === \"\" || value === null ? \"Refferer is required\" : null,\n-        ],\n-    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n-    //   ? null\n-    //   : [\n-    //     (value) =>\n-    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n-    //   ],\n-  };\n-\n-  // CUSTOM VALIDATIONS IMPORT\n-  const { state, setState, onInputChange, errors, validate, setErrors } =\n-    useValidation(initialFormStateuser, validators);\n-  // const handleEditorChange = (content, editor) => {\n-  //   setState({ ...state, description: content });\n-  // };\n-\n-  // API CALL\n-  const UserData = async () => {\n-    try {\n-      const userData = await EmployeeDetails(props.employeeId);\n-      if (userData.data.employee.length === 0) {\n-        setState([]);\n-      } else {\n-        setState(userData.data.employee[0]);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setLoading(false);\n-    }\n-  };\n-  /*Function to get admin json list */\n-  const AdminJson = async () => {\n-    let response = await getallAdminData();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n-      // if (Array.isArray(newAdminJson)) {\n-      //   const options = newAdminJson.map((option) => ({\n-      //     value: option.admin_id,\n-      //     label: option.name,\n-      //   }));\n-      //   setAdminList(options);\n-      // }\n-      // setJsonList(json.data.data);\n-      setAdminList(response.data)\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onAdminSelectChange = (option) => {\n-  //   setState({ ...state, assigned_by: option.value });\n-  // };\n-  /*Function to get agent json list */\n-  const AgentJson = async () => {\n-    let response = await GetAgentJson();\n-    try {\n-      // let json = await GetFilter();\n-      // console.log(json);\n-      // if (Array.isArray(response)) {\n-      //   const options = response.map((option) => ({\n-      //     value: option.id,\n-      //     label: option.u_id + \"  \" + option.name,\n-      //     name: option.name\n-      //   }));\n-      // }\n-      setAgentList(response);\n-      // setJsonList(json.data.data);\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  };\n-  /*Function to set data to the search agent  */\n-  // const onSelectChange = (option) => {\n-  //   setState({ ...state, reffer_by: option.value });\n-  // };\n-  useEffect(() => {\n-    AgentJson();\n-    if (user_type === \"admin\") {\n-      AdminJson()\n-    }\n-    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n-      setState(initialFormStateuser);\n-    } else {\n-      UserData();\n-    }\n-    setShowAgentMOdal(false);\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [props, apiCall]);\n-\n-  // USER PERSONAL DETAIL SUBMIT BUTTON\n-  async function onUserPersonalDetailClick(event) {\n-    // console.log(errors)\n-    event.preventDefault();\n-    if (validate() && imgError === \"\") {\n-      setLoading(true);\n-      try {\n-        const responseData = await AddEmployeeDetails(state);\n-        if (responseData.message === \"Employee data inserted successfully\") {\n-          try {\n-            // let Response = await AddEmployeePermission(Permissions);\n-            // conditions for the response toaster message\n-            // if (Response.message === \"successfully\") {\n-            toast.success(\"Candidate added successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.setApiCall(true);\n-            return close();\n-            // }\n-          } catch (err) {\n-            console.log(err);\n-          }\n-        }\n-        if (responseData.message === \"Employee data updated successfully\") {\n-          toast.success(\"Candidate Updated successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.setApiCall(true);\n-          return close();\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    } else {\n-      toast.error(\"Please complete the profile first!\", {\n-        position: toast.POSITION.TOP_RIGHT,\n-        autoClose: 1000,\n-      });\n-      setLoading(false);\n-    }\n-  }\n-  // END USER PERSONAL DETAIL VALIDATION\n-  /*Function to convert file to base64 */\n-  const convertToBase64 = (file) => {\n-    return new Promise((resolve, reject) => {\n-      const fileReader = new FileReader();\n-      fileReader.addEventListener(\"load\", () => {\n-        resolve({ base64: fileReader.result });\n-      });\n-      fileReader.readAsDataURL(file);\n-      fileReader.onerror = (error) => {\n-        reject(error);\n-      };\n-    });\n-  };\n-  /*Onchange function of Resume */\n-  const handleUploadFile = async (e) => {\n-    const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n-\n-    const file = e.target.files[0];\n-\n-    if (allowedFormats.includes(file.type)) {\n-      encoded = await convertToBase64(file);\n-      let base64Name = encoded.base64;\n-      let finalBase = base64Name;\n-      setState({ ...state, resume: finalBase });\n-    } else {\n-      setErrors({\n-        ...errors,\n-        resume: [\n-          \"Invalid file format. Please upload an image (JPEG or PNG) or a PDF.\",\n-        ],\n-      });\n-    }\n-  };\n-\n-  /*Onchange function of profile */\n-  const handleFileChange = async (event) => {\n-    const file = event.target.files[0];\n-    const reader = new FileReader();\n-\n-    reader.onload = (event) => {\n-      const img = new Image();\n-      img.onload = () => {\n-        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n-          setImgError(\"Image size can't be more then 100 kb\");\n-        } else {\n-          setImgError(\"\");\n-          setState({ ...state, profile_photo: event.target.result });\n-        }\n-      };\n-      img.src = event.target.result;\n-    };\n-\n-    // Read the file as a data URL\n-    reader.readAsDataURL(file);\n-    encoded = await convertToBase64(file);\n-    let base64Name = encoded.base64;\n-    setState({ ...state, profile_photo: base64Name });\n-  };\n-  // Calculate min and max dates dynamically\n-  // const currentYear = moment().year();\n-  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n-  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n-  return (\n-    <>\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        {showAddEAgentModal ? (\n-          <div className=\"form-group col-md-12\">\n-            <button\n-              className=\"btn btn-primary\"\n-              onClick={() => setShowAgentMOdal(false)}\n-            >\n-              Cancel\n-            </button>\n-            <AddNewAgent\n-              agentId={agentId}\n-              apiCall={apiCall}\n-              setApiCall={setApiCall}\n-            />\n-          </div>\n-        ) : (\n-          <>\n-            <button\n-              type=\"button\"\n-              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-              data-dismiss=\"modal\"\n-              onClick={close}\n-            >\n-              <i className=\"fas fa-times\"></i>\n-            </button>\n-            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n-              <form onSubmit={onUserPersonalDetailClick}>\n-                {props.employeeId === \"0\" ? (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Add Candidate Details\n-                  </h5>\n-                ) : (\n-                  <h5 className=\"text-center pt-2 mb-7\">\n-                    Update {props.pageNameForForm === \"ApplicantType\" ?\n-                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n-                          ? \"Assigned To\" :\n-                          \"Candidate Details\"}\n-                  </h5>\n-                )}\n-                {/* FIRST LINE */}\n-                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n-                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n-                  \"d-none\" : \"\"}`}>\n-                  <div className=\"mb-4 position-relative\">\n-                    <input\n-                      type={\"file\"}\n-                      id=\"profile_photo\"\n-                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n-                      onChange={handleFileChange}\n-                      className=\"d-none\"\n-                    />\n-                    <img\n-                      className=\"rounded-circle\"\n-                      src={\n-                        state.profile_photo\n-                          ? state.profile_photo\n-                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n-                      }\n-                      alt=\"\"\n-                      width={\"100px\"}\n-                      height={\"100px\"}\n-                    />\n-                    <label\n-                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n-                      htmlFor=\"profile_photo\"\n-                    >\n-                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n-                    </label>\n-                  </div>\n-                  <small className=\"text-danger\">{imgError}</small>\n-                </div>\n-                <div className=\"row pt-5\">\n-                  <input\n-                    maxLength={20}\n-                    name=\"employee_id\"\n-                    value={state.id || \"\"}\n-                    type=\"hidden\"\n-                    id=\"employee_id\"\n-                  />\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"name\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Full Name: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      name=\"name\"\n-                      value={state.name || \"\"}\n-                      onChange={onInputChange}\n-                      type=\"text\"\n-                      className={\n-                        errors.name\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      placeholder=\"Full Name\"\n-                      id=\"name\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR name----*/}\n-                    {errors.name && (\n-                      <span\n-                        key={errors.name}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.name}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"email\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Email Id: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"email\"\n-                      name=\"email\"\n-                      value={state.email || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.email\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control \"\n-                      }\n-                      id=\"email\"\n-                      placeholder=\"email\"\n-                    // disabled={props.employeeId === \"0\" ? false : true}\n-                    />\n-                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                    {errors.email && (\n-                      <span\n-                        key={errors.email}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.email}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"contact_no\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Mobile Number: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      type=\"number\"\n-                      min={0}\n-                      placeholder=\"Mobile Number\"\n-                      name=\"contact_no\"\n-                      value={state.contact_no || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.contact_no\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"contact_no\"\n-                      maxLength={13}\n-                    />\n-                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n-                    {errors.contact_no && (\n-                      <span\n-                        key={errors.contact_no}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.contact_no}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"description\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      style={{ top: \"-12px\" }}\n-                    >\n-                      About:\n-                    </label>\n-                    <TextEditor\n-                      state={state}\n-                      setState={setState}\n-                      page={\"description\"}\n-                    />\n-\n-                    {/* <textarea\n-                      name=\"description\"\n-                      value={state.description || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"description\"\n-                      placeholder=\"Description\"\n-                    ></textarea> */}\n-                    {/* <FroalaEditor\n-                      model={state.description}\n-                      onModelChange={(newContent) =>\n-                        setState({ ...state, description: newContent })\n-                      }\n-                      className={\n-                        errors.description\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    /> */}\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.description && (\n-                      <span\n-                        key={errors.description}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.description}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* SECOND LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"date_of_birth\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Date Of Birth: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      // max={moment().format(\"DD-MM-YYYY\")}\n-                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n-                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n-                      type=\"date\"\n-                      placeholder=\"Date Of Birth \"\n-                      name=\"date_of_birth\"\n-                      value={state.date_of_birth || \"\"}\n-                      onChange={onInputChange}\n-                      onKeyDownCapture={(e) => e.preventDefault()}\n-                      className={\n-                        errors.date_of_birth\n-                          ? \"form-control coustam_datepicker border border-danger\"\n-                          : \"form-control coustam_datepicker\"\n-                      }\n-                      id=\"date_of_birth\"\n-                    />\n-\n-                    {/*----ERROR MESSAGE FOR DOB----*/}\n-                    {errors.date_of_birth && (\n-                      <span\n-                        key={errors.date_of_birth}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.date_of_birth}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"gender\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Gender: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"gender\"\n-                      value={state.gender || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.gender\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"gender\"\n-                    >\n-                      <option value={\"\"}>User Gender</option>\n-                      <option value={\"male\"}>Male</option>\n-                      <option value={\"female\"}>Female</option>\n-                      <option value={\"other\"}>Other</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR GENDER----*/}\n-                    {errors.gender && (\n-                      <span\n-                        key={errors.gender}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.gender}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"marital_status\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Marital Status: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"marital_status\"\n-                      value={state.marital_status || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.marital_status\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"marital_status\"\n-                    >\n-                      <option value={\"\"}>Marital Status</option>\n-                      <option value={\"single\"}>Single</option>\n-                      <option value={\"widow\"}>Widow</option>\n-                      <option value={\"married\"}>Married</option>\n-                      <option value={\"separated\"}>Separated</option>\n-                      <option value={\"divorced\"}>Divorced</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n-                    {errors.marital_status && (\n-                      <span\n-                        key={errors.marital_status}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.marital_status}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* THIRD LINE */}\n-                  {/* <div className=\"form-group col-md-4\">\n-                    <label\n-                      htmlFor=\"nationality\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Nationality / Citizenship:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"nationality / Citizenship\"\n-                      name=\"nationality\"\n-                      value={state.nationality || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.nationality\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"nationality\"\n-                    />\n-                    // ----ERROR MESSAGE FOR nationality----\n-                    {errors.nationality && (\n-                      <span\n-                        key={errors.nationality}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.nationality}\n-                      </span>\n-                    )}\n-                  </div> */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"current_location\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Current Location: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <input\n-                      maxLength={60}\n-                      type=\"text\"\n-                      placeholder=\"Current Location\"\n-                      name=\"current_location\"\n-                      value={state.current_location || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.current_location\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"current_location\"\n-                    />\n-                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n-                    {errors.current_location && (\n-                      <span\n-                        key={errors.current_location}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.current_location}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"currently_located_country\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Country Of Residence:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.currently_located_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Currently Located Country\"\n-                      id=\"currently_located_country\"\n-                      name=\"currently_located_country\"\n-                      value={state.currently_located_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select Country</option>\n-                      {(FilterJson.location || []).map((item, i) => (\n-                        <option value={item} key={i}>\n-                          {item}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n-                    {errors.currently_located_country && (\n-                      <span\n-                        key={errors.currently_located_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.currently_located_country}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  {/* FOURTH LINE */}\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"language\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      English level {/*(Max 3)*/}:\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"language\"\n-                      value={state.language || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.language\n-                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n-                          : \"text-capitalize form-control position-relative overflow-hidden\"\n-                      }\n-                      placeholder=\"Language\"\n-                      id=\"language\"\n-                    >\n-                      <option value={\"\"}>Level</option>\n-                      <option value={\"no english\"}> No English</option>\n-                      <option value={\"basic\"}>Basic</option>\n-                      <option value={\"medium\"}>Medium</option>\n-                      <option value={\"advance\"}>Advance</option>\n-                      {/* {(jsonList.Language || []).map((Lang) => (\n-                        <option key={Lang.id} value={Lang.value}>\n-                          {Lang.value}\n-                        </option>\n-                      ))} */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n-                    {errors.language && (\n-                      <span\n-                        key={errors.language}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.language}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {/* <div className=\"form-group col-md-4\">\n-                <label\n-                  htmlFor=\"religion\"\n-                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                >\n-                  Religion: <span className=\"text-danger\">*</span>\n-                </label>\n-                <input\n-                  maxLength={20}\n-                  type=\"text\"\n-                  className={\n-                    errors.religion\n-                      ? \"form-control border border-danger\"\n-                      : \"form-control\"\n-                  }\n-                  placeholder=\"religion\"\n-                  id=\"religion\"\n-                  name=\"religion\"\n-                  value={state.religion || \"\"}\n-                  onChange={onInputChange}\n-                />\n-                {errors.religion && (\n-                  <span\n-                    key={errors.religion}\n-                    className=\"text-danger font-size-3\"\n-                  >\n-                    {errors.religion}\n-                  </span>\n-                )}\n-              </div> */}\n-                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n-                    ? \"d-none\"\n-                    : `${props.pageNameForForm === \"ApplicantType\" ?\n-                      \"col-md-12\" : \"col-md-4\"}\n-                      `}`\n-                  }>\n-                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n-                      Applicant's Type : <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      className={`${errors.interested_in\n-                        ? \"form-control  border border-danger \"\n-                        : \"form-control \"}\n-                          ${state.interested_in === \"pnp\" ?\n-                          `text-uppercase` :\n-                          \"text-capitalize\"}`\n-                      }\n-                      id=\"interested_in\"\n-                      name=\"interested_in\"\n-                      value={state.interested_in || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select</option>\n-                      {(FilterJson.interested || []).map((interest) => (\n-                        <option key={interest} value={interest}\n-                          className={interest === \"pnp\" ?\n-                            `text-uppercase` :\n-                            \"text-capitalize\"}>\n-                          {interest}\n-                        </option>\n-                      ))}\n-                      {/* <option value={\"swap\"}>SWEP</option>\n-                  <option value={\"parttime\"}>Part-time</option>\n-                  <option value={\"all\"}>All</option> */}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR interested_in----*/}\n-                    {errors.interested_in && (\n-                      <span\n-                        key={errors.interested_in}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.interested_in}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {state.interested_in === \"pnp\" &&\n-                    <div className={`form-group \n-                    ${props.user_of_page === \"assignedUser\" ||\n-                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        ? \"d-none\"\n-                        : `${props.pageNameForForm === \"Category\" ?\n-                          \"col-md-12\" : \"col-md-4\"}\n-                        `}`}>\n-                      <label\n-                        htmlFor=\"category\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Sub Type:\n-                      </label>\n-                      <select\n-                        name=\"category\"\n-                        value={state.category || \"\"}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.category\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        id=\"category\"\n-                      >\n-                        <option value={\"\"}>Select user type</option>\n-                        <option value={\"aos\"}>AOS</option>\n-                        <option value={\"rrs\"}>RRS</option>\n-                        <option value={\"tech pathway\"}>Tech Pathway</option>\n-                      </select>\n-                      {/* ----ERROR MESSAGE FOR category---- */}\n-                      {errors.category && (\n-                        <span\n-                          key={errors.category}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.category}\n-                        </span>\n-                      )}\n-                    </div>}\n-                  <div className={`form-group col-md-4\n-                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"experience\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Experience: <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"experience\"\n-                      value={state.experience || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.experience\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"experience\"\n-                    >\n-                      <option value={\"\"}>User Experience</option>\n-                      {(FilterJson.experience || []).map((ex, i) => (\n-                        <option value={ex} key={i}>\n-                          {ex}\n-                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n-                        </option>\n-                      ))}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR experience----*/}\n-                    {errors.experience && (\n-                      <span\n-                        key={errors.experience}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.experience}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"work_permit_canada\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      If Candidate is Inside Canada\n-                      <span className=\"text-danger\">*</span>\n-                    </label>\n-                    <select\n-                      name=\"work_permit_canada\"\n-                      value={state.work_permit_canada || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.work_permit_canada\n-                          ? \"form-control  border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                      id=\"work_permit_canada\"\n-                    >\n-                      <option value={\"\"}>Permit </option>\n-                      <option value={\"no\"}>No</option>\n-                      <option value={\"yes\"}>Yes</option>\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n-                    {errors.work_permit_canada && (\n-                      <span\n-                        key={errors.work_permit_canada}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_canada}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`${state.work_permit_canada === \"yes\" &&\n-                      props.user_of_page === \"\"\n-                      ? \"form-group col-md-4\"\n-                      : \"d-none\"\n-                      }`}\n-                  >\n-                    <label\n-                      htmlFor=\"otherpermit\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Candidate Status:\n-                    </label>\n-                    <select\n-                      maxLength={60}\n-                      type=\"text\"\n-                      className={\n-                        errors.work_permit_other_country\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      placeholder=\"Permit of Other Country\"\n-                      id=\"work_permit_other_country\"\n-                      name=\"work_permit_other_country\"\n-                      value={state.work_permit_other_country || \"\"}\n-                      onChange={onInputChange}\n-                    >\n-                      <option value={\"\"}>Select status</option>\n-                      {(FilterJson.canadian_candidate_work_status || []).map(\n-                        (item, i) => (\n-                          <option value={item} key={i}>\n-                            {item}\n-                          </option>\n-                        )\n-                      )}\n-                    </select>\n-                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n-                    {errors.work_permit_other_country && (\n-                      <span\n-                        key={errors.work_permit_other_country}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.work_permit_other_country}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={\n-                      `form-group  ${user_type === \"user\"|| \n-                      props.pageNameForForm === \"Category\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"assignedUser\"\n-                        ? \" d-none\"\n-                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n-                    `}\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"reffer_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Referred By:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={agentList || []} \n-                      name=\"reffer_by\"\n-                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n-                      id=\"reffer_by\"\n-                      onChange={onSelectChange}\n-                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n-                    /> */}\n-                    <select\n-                      name=\"reffer_by\"\n-                      value={state.reffer_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.reffer_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"reffer_by\"\n-                      disabled={user_type === \"agent\"}\n-                    >\n-                      <option value={\"\"}>Select partner </option>\n-                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n-                    </select>\n-                    <span\n-                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n-                      onClick={() => setShowAgentMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Partner\"\n-                    >\n-                      +\n-                    </span>\n-\n-                    {/* ERROR MSG FOR REFFER BY */}\n-                    {errors.reffer_by && (\n-                      <span\n-                        key={errors.reffer_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.reffer_by}\n-                      </span>\n-                    )}\n-                  </div>\n-                  <div\n-                    className={`form-group\n-                    ${user_type === \"agent\"\n-                        || props.pageNameForForm === \"Category\"\n-                        || user_type === \"user\"\n-                        || props.pageNameForForm === \"ApplicantType\"\n-                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n-                        ? \"d-none\"\n-                        : props.user_of_page === \"assignedUser\" ?\n-                          \"d-flex col-md-12\" :\n-                          \"d-flex col-md-4\"}`\n-                    }\n-                    style={{ position: \"relative\" }}\n-                  >\n-                    <label\n-                      htmlFor=\"assigned_by\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Assigned To:<span className=\"text-danger\">*</span>\n-                    </label>\n-                    {/* <Select\n-                      options={\"\" || admiinList}\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by}\n-                      id=\"assigned_by\"\n-                      onChange={onAdminSelectChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control border border-danger px-0 pt-4 \"\n-                          : \"form-control px-0 pt-4 border-0\"\n-                      }\n-                    /> */}\n-                    <select\n-                      name=\"assigned_by\"\n-                      value={state.assigned_by || \"\"}\n-                      onChange={onInputChange}\n-                      className={\n-                        errors.assigned_by\n-                          ? \"form-control text-capitalize border border-danger\"\n-                          : \"form-control text-capitalize\"\n-                      }\n-                      id=\"assigned_by\"\n-                    >\n-                      <option value={\"\"}>Select Admin </option>\n-                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n-                    </select>\n-                    {/* <span\n-                      className=\"btn btn-sm btn-secondary\"\n-                      onClick={() => setShowAdminMOdal(true)}\n-                      style={{\n-                        width: \"auto\",\n-                        minWidth: \"auto\",\n-                        height: \"44px\",\n-                      }}\n-                      title=\"Add New Admin\"\n-                    >\n-                      +\n-                    </span>  */}\n-\n-                    {/* ERROR MSG FOR REFFER BY  */}\n-                    {errors.assigned_by && (\n-                      <span\n-                        key={errors.assigned_by}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.assigned_by}\n-                      </span>\n-                    )}\n-                  </div>\n-\n-                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                    || props.pageNameForForm === \"ApplicantType\" ||\n-                    props.pageNameForForm === \"Category\" ||\n-                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                    <label\n-                      htmlFor=\"resume\"\n-                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                    >\n-                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n-                    </label>\n-                    <input\n-                      type=\"file\"\n-                      placeholder=\"Resume\"\n-                      id=\"resume\"\n-                      name=\"resume\"\n-                      accept=\".pdf,application/pdf\"\n-                      onChange={handleUploadFile}\n-                      className={\n-                        errors.resume\n-                          ? \"form-control border border-danger\"\n-                          : \"form-control\"\n-                      }\n-                    />\n-                    {/*----ERROR MESSAGE FOR RESUME----*/}\n-                    {errors.resume && (\n-                      <span\n-                        key={errors.resume}\n-                        className=\"text-danger font-size-3\"\n-                      >\n-                        {errors.resume}\n-                      </span>\n-                    )}\n-                  </div>\n-                  {user_type === \"admin\" ? (\n-                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n-                      || props.pageNameForForm === \"ApplicantType\"\n-                      || props.pageNameForForm === \"Category\"\n-                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n-                      <label\n-                        htmlFor=\"fetured\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"fetured\"\n-                          name=\"fetured\"\n-                          checked={state.is_featured === \"1\"}\n-                          value={state.is_featured}\n-                          onChange={(e) =>\n-                            setState({\n-                              ...state,\n-                              is_featured:\n-                                state.is_featured === \"\" ||\n-                                  state.is_featured === \"0\"\n-                                  ? \"1\"\n-                                  : \"0\",\n-                            })\n-                          }\n-                        />\n-                      </label>\n-                    </div>\n-                  ) : null}\n-                </div>\n-                <div className=\"form-group text-center\">\n-                  {loading === true ? (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"button\"\n-                      disabled\n-                    >\n-                      <span\n-                        className=\"spinner-border spinner-border-sm \"\n-                        role=\"status\"\n-                        aria-hidden=\"true\"\n-                      ></span>\n-                      <span className=\"sr-only\">Loading...</span>\n-                    </button>\n-                  ) : (\n-                    <button\n-                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                      type=\"submit\"\n-                    >\n-                      Submit\n-                    </button>\n-                  )}\n-                </div>\n-              </form>\n-              {/* </div> */}\n-            </div>\n-          </>\n-        )}\n-      </Modal>\n-    </>\n-  );\n-}\n-\n-export default PersonalDetails;\n"
                },
                {
                    "date": 1713935153594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n \n   /* Functionality to close the modal */\n   const close = () => {\n     setState(initialFormStateuser);\n-    setErrors(\"\");\n     setLoading(false);\n     props.close();\n   };\n \n"
                },
                {
                    "date": 1713935182722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,8 +318,9 @@\n               position: toast.POSITION.TOP_RIGHT,\n               autoClose: 1000,\n             });\n             props.setApiCall(true);\n+            setErrors(\"\");\n             return close();\n             // }\n           } catch (err) {\n             console.log(err);\n@@ -330,8 +331,9 @@\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n           });\n           props.setApiCall(true);\n+          setErrors(\"\");\n           return close();\n         }\n         if (responseData.message ===\n           \"Email already exists\") {\n"
                },
                {
                    "date": 1713935301245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -341,9 +341,9 @@\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n           });\n           setErrors({ ...errors, email: \"Email already exists\" })\n-          return close();\n+          setLoading(false);\n         }\n       } catch (err) {\n         console.log(err);\n         setLoading(false);\n"
                },
                {
                    "date": 1713936044748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -557,9 +557,9 @@\n                           : \"form-control \"\n                       }\n                       id=\"email\"\n                       placeholder=\"email\"\n-                    // disabled={props.employeeId === \"0\" ? false : true}\n+                      disabled={user_type === \"user\"}\n                     />\n                     {/*----ERROR MESSAGE FOR EMAIL----*/}\n                     {errors.email && (\n                       <span\n"
                }
            ],
            "date": 1713775555300,
            "name": "Commit-0",
            "content": "import moment from \"moment/moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\n// import { CKEditor } from \"ckeditor4-react\";\n// import FroalaEditor from \"react-froala-wysiwyg\";\n// import \"froala-editor/css/froala_editor.pkgd.min.css\";\n// import \"froala-editor/css/froala_style.min.css\";\n// import \"froala-editor/js/plugins.pkgd.min.js\";\n\nimport {\n  AddEmployeeDetails,\n  EmployeeDetails,\n  GetAgentJson,\n  getallAdminData,\n  // GetFilter,\n  // AddEmployeePermission,\n} from \"../../../api/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FilterJson from \"../../json/filterjson\";\n// import Select from \"react-select\";\n// import AddAgent from \"../admin/addAgent\";\n// import { Link } from \"react-router-dom\";\nimport AddNewAgent from \"../admin/add_agent\";\nimport Permissions from \"../../json/emailPermisionJson\";\nimport TextEditor from \"../../common/TextEditor\";\n\nfunction PersonalDetails(props) {\n  let encoded;\n  const [imgError, setImgError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [agentList, setAgentList] = useState([]);\n  const [admiinList, setAdminList] = useState([]);\n  // const [jsonList, setJsonList] = useState([]);\n  let [apiCall, setApiCall] = useState(false);\n  let [showAddEAgentModal, setShowAgentMOdal] = useState(false);\n  // let [showAddEAdminModal, setShowAdminMOdal] = useState(false);\n  /*data and id states */\n  let [agentId /*, setAgentId*/] = useState();\n\n  let user_type = localStorage.getItem(\"userType\");\n  // let admin_id = localStorage.getItem(\"admin_id\");\n  // USER PERSONAL DETAIL VALIDATION\n  // INITIAL STATE ASSIGNMENT\n  const initialFormStateuser = {\n    name: \"\",\n    email: \"\",\n    contact_no: \"\",\n    description: \"\",\n    date_of_birth: \"\",\n    gender: \"\",\n    marital_status: \"\",\n    nationality: \"\",\n    current_location: \"\",\n    currently_located_country: \"\",\n    language: \"\",\n    religion: \"\",\n    interested_in: \"\",\n    experience: \"\",\n    work_permit_canada: \"\",\n    work_permit_other_country: \"\",\n    resume: \"\",\n    profile_photo: \"\",\n    is_featured: \"\",\n    status: props.employeeId === \"0\" ? \"1\" : \"\",\n    reffer_by: user_type === \"agent\" ? localStorage.getItem(\"agent_id\") : \"\",\n    permission: props.employeeId === \"0\" ? JSON.stringify(Permissions) : null,\n    assigned_by: \"\"\n  };\n\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormStateuser);\n    setErrors(\"\");\n    setLoading(false);\n    props.close();\n  };\n\n  // VALIDATION CONDITIONS\n\n  const validators = {\n    name: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Name is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n            ? \"Cannot use special character \"\n            : value.length < 2\n              ? \"Name should have 2 or more letter\"\n              : /[-]?\\d+(\\.\\d+)?/.test(value)\n                ? \"Name can not have a number.\"\n                : \"\",\n    ],\n    email: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n            ? null\n            : \"Email is invalid\",\n    ],\n    contact_no: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Mobile number is required\"\n          : value.length < 10\n            ? \"Mobile number should be more than 10 digits\"\n            : value.length > 13\n              ? \"Mobile no should be of 13 digits\"\n              : \"\",\n    ],\n    // description: [\n    //   (value) =>\n    //     value === \"\" || value === null || value.trim() === \"\"\n    //       ? \"Description is required\"\n    //       : value.length < 5\n    //       ? \"Description should have 5 or more letter\"\n    //       : null,\n    // ],\n    date_of_birth: [\n      (value) => (value === \"\" || value === null ? \"Dob is required\" : \"\"),\n    ],\n    gender: [\n      (value) => (value === \"\" || value === null ? \"Gender is required\" : null),\n    ],\n    marital_status: [\n      (value) => (value === \"\" || value === null ? \"Status is required\" : null),\n    ],\n    // nationality: [\n    //   (value) =>\n    //     value === \"\" || value === null\n    //       ? \"Nationality is required\"\n    //       : /[^A-Za-z 0-9]/g.test(value)\n    //       ? \"Cannot use special character \"\n    //       : value.length < 3\n    //       ? \"Nationality should have 3 or more letter\"\n    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n    //       ? \"Nationality can not have a number.\"\n    //       : \"\",\n    // ],\n    current_location: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Location is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n            ? \"Cannot use special character \"\n            : value.length < 3\n              ? \"Location should have 3 or more letter\"\n              : /[-]?\\d+(\\.\\d+)?/.test(value)\n                ? \"Location can not have a number.\"\n                : \"\",\n    ],\n    // currently_located_country: [\n    //   (value) =>\n    //     value === \"\" || value === null || value.trim() === \"\"\n    //       ? \"Country is required\"\n    //       : /[^A-Za-z 0-9]/g.test(value)\n    //       ? \"Cannot use special character \"\n    //       : value.length < 3\n    //       ? \"Country should have 3 or more letter\"\n    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n    //       ? \"Country can not have a number.\"\n    //       : \"\",\n    // ],\n    language: [\n      (value) =>\n        value === \"\" || value === null || value.trim() === \"\"\n          ? \"Language is required\"\n          : \"\",\n    ],\n    // religion: [\n    //   (value) =>\n    //     value === \"\" || value === null || value.trim() === \"\"\n    //       ? \"Religion is required\"\n    //       : /[^A-Za-z 0-9]/g.test(value)\n    //       ? \"Cannot use special character \"\n    //       : value.length < 3\n    //       ? \"Religion should have 3 or more letter\"\n    //       : /[-]?\\d+(\\.\\d+)?/.test(value)\n    //       ? \"Religion can not have a number.\"\n    //       : \"\",\n    // ],\n    interested_in: [\n      (value) => (value === \"\" ? \"Interested in is required\" : null),\n    ],\n    experience: [\n      (value) =>\n        value === \"\" || value === null ? \"Experience is required\" : null,\n    ],\n    resume: [\n      // (value) => (value === \"\" || value === null ? \"Resume is required\" : null),\n    ],\n    work_permit_canada: [\n      (value) =>\n        value === \"\" || value === null ? \"Work Permit is required\" : null,\n    ],\n    // work_permit_other_country: [\n    //   (value) =>\n    //     value === \"\" || value === null || value.trim() === \"\"\n    //       ? \"Other Permit is required\"\n    //       : /[^A-Za-z 0-9]/g.test(value)\n    //       ? \"Cannot use special character \"\n    //       : value.length < 2\n    //       ? \"Other permit sholud have 2 or more letters\"\n    //       : \"\",\n    // ],\n    reffer_by:\n      props.employeeId !== \"0\" || user_type === \"user\"\n        ? null\n        : [\n          (value) =>\n            value === \"\" || value === null ? \"Refferer is required\" : null,\n        ],\n    // assigned_by: props.employeeId !== \"0\" || user_type === \"user\" || user_type === \"agent\"\n    //   ? null\n    //   : [\n    //     (value) =>\n    //       value === \"\" || value === null ? \"Assigned To is required\" : null,\n    //   ],\n  };\n\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, onInputChange, errors, validate, setErrors } =\n    useValidation(initialFormStateuser, validators);\n  // const handleEditorChange = (content, editor) => {\n  //   setState({ ...state, description: content });\n  // };\n\n  // API CALL\n  const UserData = async () => {\n    try {\n      const userData = await EmployeeDetails(props.employeeId);\n      if (userData.data.employee.length === 0) {\n        setState([]);\n      } else {\n        setState(userData.data.employee[0]);\n      }\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n  /*Function to get admin json list */\n  const AdminJson = async () => {\n    let response = await getallAdminData();\n    try {\n      // let json = await GetFilter();\n      // console.log(json);\n      // let newAdminJson = response.data.filter((item) => admin_id !== item.admin_id)\n      // if (Array.isArray(newAdminJson)) {\n      //   const options = newAdminJson.map((option) => ({\n      //     value: option.admin_id,\n      //     label: option.name,\n      //   }));\n      //   setAdminList(options);\n      // }\n      // setJsonList(json.data.data);\n      setAdminList(response.data)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /*Function to set data to the search agent  */\n  // const onAdminSelectChange = (option) => {\n  //   setState({ ...state, assigned_by: option.value });\n  // };\n  /*Function to get agent json list */\n  const AgentJson = async () => {\n    let response = await GetAgentJson();\n    try {\n      // let json = await GetFilter();\n      // console.log(json);\n      // if (Array.isArray(response)) {\n      //   const options = response.map((option) => ({\n      //     value: option.id,\n      //     label: option.u_id + \"  \" + option.name,\n      //     name: option.name\n      //   }));\n      // }\n      setAgentList(response);\n      // setJsonList(json.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /*Function to set data to the search agent  */\n  // const onSelectChange = (option) => {\n  //   setState({ ...state, reffer_by: option.value });\n  // };\n  useEffect(() => {\n    AgentJson();\n    if (user_type === \"admin\") {\n      AdminJson()\n    }\n    if (props.employeeId === \"0\" || props.employeeId === undefined) {\n      setState(initialFormStateuser);\n    } else {\n      UserData();\n    }\n    setShowAgentMOdal(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props, apiCall]);\n\n  // USER PERSONAL DETAIL SUBMIT BUTTON\n  async function onUserPersonalDetailClick(event) {\n    // console.log(errors)\n    event.preventDefault();\n    if (validate() && imgError === \"\") {\n      setLoading(true);\n      try {\n        const responseData = await AddEmployeeDetails(state);\n        if (responseData.message === \"Employee data inserted successfully\") {\n          try {\n            // let Response = await AddEmployeePermission(Permissions);\n            // conditions for the response toaster message\n            // if (Response.message === \"successfully\") {\n            toast.success(\"Candidate added successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.setApiCall(true);\n            return close();\n            // }\n          } catch (err) {\n            console.log(err);\n          }\n        }\n        if (responseData.message === \"Employee data updated successfully\") {\n          toast.success(\"Candidate Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.setApiCall(true);\n          return close();\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      }\n    } else {\n      toast.error(\"Please complete the profile first!\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 1000,\n      });\n      setLoading(false);\n    }\n  }\n  // END USER PERSONAL DETAIL VALIDATION\n  /*Function to convert file to base64 */\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", () => {\n        resolve({ base64: fileReader.result });\n      });\n      fileReader.readAsDataURL(file);\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n  /*Onchange function of Resume */\n  const handleUploadFile = async (e) => {\n    const allowedFormats = [\"image/jpeg\", \"image/png\", \"application/pdf\"]; // List of allowed formats\n\n    const file = e.target.files[0];\n\n    if (allowedFormats.includes(file.type)) {\n      encoded = await convertToBase64(file);\n      let base64Name = encoded.base64;\n      let finalBase = base64Name;\n      setState({ ...state, resume: finalBase });\n    } else {\n      setErrors({\n        ...errors,\n        resume: [\n          \"Invalid file format. Please upload an image (JPEG or PNG) or a PDF.\",\n        ],\n      });\n    }\n  };\n\n  /*Onchange function of profile */\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const img = new Image();\n      img.onload = () => {\n        if (/*file.size > 1024 * 100*/ (file.size > 100) * 1024 === true) {\n          setImgError(\"Image size can't be more then 100 kb\");\n        } else {\n          setImgError(\"\");\n          setState({ ...state, profile_photo: event.target.result });\n        }\n      };\n      img.src = event.target.result;\n    };\n\n    // Read the file as a data URL\n    reader.readAsDataURL(file);\n    encoded = await convertToBase64(file);\n    let base64Name = encoded.base64;\n    setState({ ...state, profile_photo: base64Name });\n  };\n  // Calculate min and max dates dynamically\n  // const currentYear = moment().year();\n  // const minDate = moment().subtract(10, 'years').format(\"YYYY-MM-DD\");\n  // const maxDate = moment().add(10, 'years').format(\"YYYY-MM-DD\");\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        {showAddEAgentModal ? (\n          <div className=\"form-group col-md-12\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => setShowAgentMOdal(false)}\n            >\n              Cancel\n            </button>\n            <AddNewAgent\n              agentId={agentId}\n              apiCall={apiCall}\n              setApiCall={setApiCall}\n            />\n          </div>\n        ) : (\n          <>\n            <button\n              type=\"button\"\n              className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n              data-dismiss=\"modal\"\n              onClick={close}\n            >\n              <i className=\"fas fa-times\"></i>\n            </button>\n            <div className=\"bg-white rounded h-100 px-11 pt-7\">\n              <form onSubmit={onUserPersonalDetailClick}>\n                {props.employeeId === \"0\" ? (\n                  <h5 className=\"text-center pt-2 mb-7\">\n                    Add Candidate Details\n                  </h5>\n                ) : (\n                  <h5 className=\"text-center pt-2 mb-7\">\n                    Update {props.pageNameForForm === \"ApplicantType\" ?\n                      \" Applicant Type\" : props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n                        ? \"Reffer By\" : props.user_of_page === \"assignedUser\"\n                          ? \"Assigned To\" :\n                          \"Candidate Details\"}\n                  </h5>\n                )}\n                {/* FIRST LINE */}\n                <div className={`form-group mx-auto text-center ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" ||\n                  props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ?\n                  \"d-none\" : \"\"}`}>\n                  <div className=\"mb-4 position-relative\">\n                    <input\n                      type={\"file\"}\n                      id=\"profile_photo\"\n                      accept=\"image/png,image/jpeg,image/jpg,image/gif\"\n                      onChange={handleFileChange}\n                      className=\"d-none\"\n                    />\n                    <img\n                      className=\"rounded-circle\"\n                      src={\n                        state.profile_photo\n                          ? state.profile_photo\n                          : \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png\"\n                      }\n                      alt=\"\"\n                      width={\"100px\"}\n                      height={\"100px\"}\n                    />\n                    <label\n                      className=\"mt-lg-20 mx-lg-35 bg-transparent edit_profile_icon\"\n                      htmlFor=\"profile_photo\"\n                    >\n                      <span className=\"fas fa-pen text-white bg-gray p-1 rounded mx-lg-14 mt-lg-3 \"></span>\n                    </label>\n                  </div>\n                  <small className=\"text-danger\">{imgError}</small>\n                </div>\n                <div className=\"row pt-5\">\n                  <input\n                    maxLength={20}\n                    name=\"employee_id\"\n                    value={state.id || \"\"}\n                    type=\"hidden\"\n                    id=\"employee_id\"\n                  />\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"name\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Full Name: <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      maxLength={60}\n                      name=\"name\"\n                      value={state.name || \"\"}\n                      onChange={onInputChange}\n                      type=\"text\"\n                      className={\n                        errors.name\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Full Name\"\n                      id=\"name\"\n                    />\n                    {/*----ERROR MESSAGE FOR name----*/}\n                    {errors.name && (\n                      <span\n                        key={errors.name}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.name}\n                      </span>\n                    )}\n                  </div>\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"email\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Email Id: <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      maxLength={60}\n                      type=\"email\"\n                      name=\"email\"\n                      value={state.email || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.email\n                          ? \"form-control border border-danger\"\n                          : \"form-control \"\n                      }\n                      id=\"email\"\n                      placeholder=\"email\"\n                    // disabled={props.employeeId === \"0\" ? false : true}\n                    />\n                    {/*----ERROR MESSAGE FOR EMAIL----*/}\n                    {errors.email && (\n                      <span\n                        key={errors.email}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.email}\n                      </span>\n                    )}\n                  </div>\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"contact_no\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Mobile Number: <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      type=\"number\"\n                      min={0}\n                      placeholder=\"Mobile Number\"\n                      name=\"contact_no\"\n                      value={state.contact_no || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.contact_no\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"contact_no\"\n                      maxLength={13}\n                    />\n                    {/*----ERROR MESSAGE FOR MOBILENO----*/}\n                    {errors.contact_no && (\n                      <span\n                        key={errors.contact_no}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.contact_no}\n                      </span>\n                    )}\n                  </div>\n\n                  <div className={`form-group col-md-12 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"description\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      style={{ top: \"-12px\" }}\n                    >\n                      About:\n                    </label>\n                    <TextEditor\n                      state={state}\n                      setState={setState}\n                      page={\"description\"}\n                    />\n\n                    {/* <textarea\n                      name=\"description\"\n                      value={state.description || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.description\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"description\"\n                      placeholder=\"Description\"\n                    ></textarea> */}\n                    {/* <FroalaEditor\n                      model={state.description}\n                      onModelChange={(newContent) =>\n                        setState({ ...state, description: newContent })\n                      }\n                      className={\n                        errors.description\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    /> */}\n                    {/*----ERROR MESSAGE FOR GENDER----*/}\n                    {errors.description && (\n                      <span\n                        key={errors.description}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.description}\n                      </span>\n                    )}\n                  </div>\n\n                  {/* SECOND LINE */}\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"date_of_birth\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Date Of Birth: <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      // max={moment().format(\"DD-MM-YYYY\")}\n                      min={moment().subtract(44, 'years').format(\"YYYY-MM-DD\")}\n                      max={moment().subtract(1, 'year').endOf('year').format(\"YYYY-MM-DD\")}\n                      type=\"date\"\n                      placeholder=\"Date Of Birth \"\n                      name=\"date_of_birth\"\n                      value={state.date_of_birth || \"\"}\n                      onChange={onInputChange}\n                      onKeyDownCapture={(e) => e.preventDefault()}\n                      className={\n                        errors.date_of_birth\n                          ? \"form-control coustam_datepicker border border-danger\"\n                          : \"form-control coustam_datepicker\"\n                      }\n                      id=\"date_of_birth\"\n                    />\n\n                    {/*----ERROR MESSAGE FOR DOB----*/}\n                    {errors.date_of_birth && (\n                      <span\n                        key={errors.date_of_birth}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.date_of_birth}\n                      </span>\n                    )}\n                  </div>\n\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"gender\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Gender: <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      name=\"gender\"\n                      value={state.gender || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.gender\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"gender\"\n                    >\n                      <option value={\"\"}>User Gender</option>\n                      <option value={\"male\"}>Male</option>\n                      <option value={\"female\"}>Female</option>\n                      <option value={\"other\"}>Other</option>\n                    </select>\n                    {/*----ERROR MESSAGE FOR GENDER----*/}\n                    {errors.gender && (\n                      <span\n                        key={errors.gender}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.gender}\n                      </span>\n                    )}\n                  </div>\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"marital_status\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Marital Status: <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      name=\"marital_status\"\n                      value={state.marital_status || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.marital_status\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"marital_status\"\n                    >\n                      <option value={\"\"}>Marital Status</option>\n                      <option value={\"single\"}>Single</option>\n                      <option value={\"widow\"}>Widow</option>\n                      <option value={\"married\"}>Married</option>\n                      <option value={\"separated\"}>Separated</option>\n                      <option value={\"divorced\"}>Divorced</option>\n                    </select>\n                    {/*----ERROR MESSAGE FOR MARITAL STATUS----*/}\n                    {errors.marital_status && (\n                      <span\n                        key={errors.marital_status}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.marital_status}\n                      </span>\n                    )}\n                  </div>\n                  {/* THIRD LINE */}\n                  {/* <div className=\"form-group col-md-4\">\n                    <label\n                      htmlFor=\"nationality\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Nationality / Citizenship:\n                      <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      maxLength={60}\n                      type=\"text\"\n                      placeholder=\"nationality / Citizenship\"\n                      name=\"nationality\"\n                      value={state.nationality || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.nationality\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"nationality\"\n                    />\n                    // ----ERROR MESSAGE FOR nationality----\n                    {errors.nationality && (\n                      <span\n                        key={errors.nationality}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.nationality}\n                      </span>\n                    )}\n                  </div> */}\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"current_location\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Current Location: <span className=\"text-danger\">*</span>\n                    </label>\n                    <input\n                      maxLength={60}\n                      type=\"text\"\n                      placeholder=\"Current Location\"\n                      name=\"current_location\"\n                      value={state.current_location || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.current_location\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"current_location\"\n                    />\n                    {/*----ERROR MESSAGE FOR LOCATION----*/}\n                    {errors.current_location && (\n                      <span\n                        key={errors.current_location}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.current_location}\n                      </span>\n                    )}\n                  </div>\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"currently_located_country\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Country Of Residence:\n                    </label>\n                    <select\n                      maxLength={60}\n                      type=\"text\"\n                      className={\n                        errors.currently_located_country\n                          ? \"form-control text-capitalize border border-danger\"\n                          : \"form-control text-capitalize\"\n                      }\n                      placeholder=\"Currently Located Country\"\n                      id=\"currently_located_country\"\n                      name=\"currently_located_country\"\n                      value={state.currently_located_country || \"\"}\n                      onChange={onInputChange}\n                    >\n                      <option value={\"\"}>Select Country</option>\n                      {(FilterJson.location || []).map((item, i) => (\n                        <option value={item} key={i}>\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                    {/*----ERROR MESSAGE FOR COUNTRY----*/}\n                    {errors.currently_located_country && (\n                      <span\n                        key={errors.currently_located_country}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.currently_located_country}\n                      </span>\n                    )}\n                  </div>\n\n                  {/* FOURTH LINE */}\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"language\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      English level {/*(Max 3)*/}:\n                      <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      name=\"language\"\n                      value={state.language || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.language\n                          ? \"text-capitalize form-control border border-danger position-relative overflow-hidden\"\n                          : \"text-capitalize form-control position-relative overflow-hidden\"\n                      }\n                      placeholder=\"Language\"\n                      id=\"language\"\n                    >\n                      <option value={\"\"}>Level</option>\n                      <option value={\"no english\"}> No English</option>\n                      <option value={\"basic\"}>Basic</option>\n                      <option value={\"medium\"}>Medium</option>\n                      <option value={\"advance\"}>Advance</option>\n                      {/* {(jsonList.Language || []).map((Lang) => (\n                        <option key={Lang.id} value={Lang.value}>\n                          {Lang.value}\n                        </option>\n                      ))} */}\n                    </select>\n                    {/*----ERROR MESSAGE FOR LANGUAGE----*/}\n                    {errors.language && (\n                      <span\n                        key={errors.language}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.language}\n                      </span>\n                    )}\n                  </div>\n                  {/* <div className=\"form-group col-md-4\">\n                <label\n                  htmlFor=\"religion\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Religion: <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  maxLength={20}\n                  type=\"text\"\n                  className={\n                    errors.religion\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"religion\"\n                  id=\"religion\"\n                  name=\"religion\"\n                  value={state.religion || \"\"}\n                  onChange={onInputChange}\n                />\n                {errors.religion && (\n                  <span\n                    key={errors.religion}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.religion}\n                  </span>\n                )}\n              </div> */}\n                  <div className={`form-group  ${props.user_of_page === \"assignedUser\" ||\n                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" || props.pageNameForForm === \"Category\"\n                    ? \"d-none\"\n                    : `${props.pageNameForForm === \"ApplicantType\" ?\n                      \"col-md-12\" : \"col-md-4\"}\n                      `}`\n                  }>\n                    <label className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\">\n                      Applicant's Type : <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      className={`${errors.interested_in\n                        ? \"form-control  border border-danger \"\n                        : \"form-control \"}\n                          ${state.interested_in === \"pnp\" ?\n                          `text-uppercase` :\n                          \"text-capitalize\"}`\n                      }\n                      id=\"interested_in\"\n                      name=\"interested_in\"\n                      value={state.interested_in || \"\"}\n                      onChange={onInputChange}\n                    >\n                      <option value={\"\"}>Select</option>\n                      {(FilterJson.interested || []).map((interest) => (\n                        <option key={interest} value={interest}\n                          className={interest === \"pnp\" ?\n                            `text-uppercase` :\n                            \"text-capitalize\"}>\n                          {interest}\n                        </option>\n                      ))}\n                      {/* <option value={\"swap\"}>SWEP</option>\n                  <option value={\"parttime\"}>Part-time</option>\n                  <option value={\"all\"}>All</option> */}\n                    </select>\n                    {/*----ERROR MESSAGE FOR interested_in----*/}\n                    {errors.interested_in && (\n                      <span\n                        key={errors.interested_in}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.interested_in}\n                      </span>\n                    )}\n                  </div>\n                  {state.interested_in === \"pnp\" &&\n                    <div className={`form-group \n                    ${props.user_of_page === \"assignedUser\" ||\n                        props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n                        || props.pageNameForForm === \"ApplicantType\"\n                        ? \"d-none\"\n                        : `${props.pageNameForForm === \"Category\" ?\n                          \"col-md-12\" : \"col-md-4\"}\n                        `}`}>\n                      <label\n                        htmlFor=\"category\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        Sub Type:\n                      </label>\n                      <select\n                        name=\"category\"\n                        value={state.category || \"\"}\n                        onChange={onInputChange}\n                        className={\n                          errors.category\n                            ? \"form-control border border-danger\"\n                            : \"form-control\"\n                        }\n                        id=\"category\"\n                      >\n                        <option value={\"\"}>Select user type</option>\n                        <option value={\"aos\"}>AOS</option>\n                        <option value={\"rrs\"}>RRS</option>\n                        <option value={\"tech pathway\"}>Tech Pathway</option>\n                      </select>\n                      {/* ----ERROR MESSAGE FOR category---- */}\n                      {errors.category && (\n                        <span\n                          key={errors.category}\n                          className=\"text-danger font-size-3\"\n                        >\n                          {errors.category}\n                        </span>\n                      )}\n                    </div>}\n                  <div className={`form-group col-md-4\n                  ${props.user_of_page === \"assignedUser\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n                      || props.pageNameForForm === \"ApplicantType\" || props.pageNameForForm === \"Category\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"experience\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Experience: <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      name=\"experience\"\n                      value={state.experience || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.experience\n                          ? \"form-control text-capitalize border border-danger\"\n                          : \"form-control text-capitalize\"\n                      }\n                      id=\"experience\"\n                    >\n                      <option value={\"\"}>User Experience</option>\n                      {(FilterJson.experience || []).map((ex, i) => (\n                        <option value={ex} key={i}>\n                          {ex}\n                          {ex === \"fresher\" || ex === \"Other\" || ex === \"other\" ? \"\" : \"Years\"}\n                        </option>\n                      ))}\n                    </select>\n                    {/*----ERROR MESSAGE FOR experience----*/}\n                    {errors.experience && (\n                      <span\n                        key={errors.experience}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.experience}\n                      </span>\n                    )}\n                  </div>\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\" || props.pageNameForForm === \"Category\" || props.pageNameForForm === \"ApplicantType\" || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"work_permit_canada\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      If Candidate is Inside Canada\n                      <span className=\"text-danger\">*</span>\n                    </label>\n                    <select\n                      name=\"work_permit_canada\"\n                      value={state.work_permit_canada || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.work_permit_canada\n                          ? \"form-control  border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"work_permit_canada\"\n                    >\n                      <option value={\"\"}>Permit </option>\n                      <option value={\"no\"}>No</option>\n                      <option value={\"yes\"}>Yes</option>\n                    </select>\n                    {/*----ERROR MESSAGE FOR WORK PERMIT----*/}\n                    {errors.work_permit_canada && (\n                      <span\n                        key={errors.work_permit_canada}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.work_permit_canada}\n                      </span>\n                    )}\n                  </div>\n                  <div\n                    className={`${state.work_permit_canada === \"yes\" &&\n                      props.user_of_page === \"\"\n                      ? \"form-group col-md-4\"\n                      : \"d-none\"\n                      }`}\n                  >\n                    <label\n                      htmlFor=\"otherpermit\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Candidate Status:\n                    </label>\n                    <select\n                      maxLength={60}\n                      type=\"text\"\n                      className={\n                        errors.work_permit_other_country\n                          ? \"form-control text-capitalize border border-danger\"\n                          : \"form-control text-capitalize\"\n                      }\n                      placeholder=\"Permit of Other Country\"\n                      id=\"work_permit_other_country\"\n                      name=\"work_permit_other_country\"\n                      value={state.work_permit_other_country || \"\"}\n                      onChange={onInputChange}\n                    >\n                      <option value={\"\"}>Select status</option>\n                      {(FilterJson.canadian_candidate_work_status || []).map(\n                        (item, i) => (\n                          <option value={item} key={i}>\n                            {item}\n                          </option>\n                        )\n                      )}\n                    </select>\n                    {/*----ERROR MESSAGE FOR OTHER COUNTRY PERMIT----*/}\n                    {errors.work_permit_other_country && (\n                      <span\n                        key={errors.work_permit_other_country}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.work_permit_other_country}\n                      </span>\n                    )}\n                  </div>\n                  <div\n                    className={\n                      `form-group  ${user_type === \"user\"|| \n                      props.pageNameForForm === \"Category\"\n                        || props.pageNameForForm === \"ApplicantType\"\n                        || props.user_of_page === \"assignedUser\"\n                        ? \" d-none\"\n                        : ` d-flex ${props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \" col-md-12\" : \" col-md-4 \"}`}\n                    `}\n                    style={{ position: \"relative\" }}\n                  >\n                    <label\n                      htmlFor=\"reffer_by\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Referred By:<span className=\"text-danger\">*</span>\n                    </label>\n                    {/* <Select\n                      options={agentList || []} \n                      name=\"reffer_by\"\n                      defaultValue={agentList && agentList.find(item => item.value === state.reffer_by) ? agentList.find(item => item.value === state.reffer_by).label : \"\"}\n                      id=\"reffer_by\"\n                      onChange={onSelectChange}\n                      className={errors.reffer_by ? \"form-control border border-danger px-0 pt-4\" : \"form-control px-0 pt-4 border-0\"}\n                    /> */}\n                    <select\n                      name=\"reffer_by\"\n                      value={state.reffer_by || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.reffer_by\n                          ? \"form-control text-capitalize border border-danger\"\n                          : \"form-control text-capitalize\"\n                      }\n                      id=\"reffer_by\"\n                      disabled={user_type === \"agent\"}\n                    >\n                      <option value={\"\"}>Select partner </option>\n                      {agentList.map((item) => <option value={item.id}>{item.u_id} </option>)}\n                    </select>\n                    <span\n                      className={user_type === \"agent\" ? \"d-none\" : \"btn btn-sm btn-secondary\"}\n                      onClick={() => setShowAgentMOdal(true)}\n                      style={{\n                        width: \"auto\",\n                        minWidth: \"auto\",\n                        height: \"44px\",\n                      }}\n                      title=\"Add New Partner\"\n                    >\n                      +\n                    </span>\n\n                    {/* ERROR MSG FOR REFFER BY */}\n                    {errors.reffer_by && (\n                      <span\n                        key={errors.reffer_by}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.reffer_by}\n                      </span>\n                    )}\n                  </div>\n                  <div\n                    className={`form-group\n                    ${user_type === \"agent\"\n                        || props.pageNameForForm === \"Category\"\n                        || user_type === \"user\"\n                        || props.pageNameForForm === \"ApplicantType\"\n                        || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\"\n                        ? \"d-none\"\n                        : props.user_of_page === \"assignedUser\" ?\n                          \"d-flex col-md-12\" :\n                          \"d-flex col-md-4\"}`\n                    }\n                    style={{ position: \"relative\" }}\n                  >\n                    <label\n                      htmlFor=\"assigned_by\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Assigned To:<span className=\"text-danger\">*</span>\n                    </label>\n                    {/* <Select\n                      options={\"\" || admiinList}\n                      name=\"assigned_by\"\n                      value={state.assigned_by}\n                      id=\"assigned_by\"\n                      onChange={onAdminSelectChange}\n                      className={\n                        errors.assigned_by\n                          ? \"form-control border border-danger px-0 pt-4 \"\n                          : \"form-control px-0 pt-4 border-0\"\n                      }\n                    /> */}\n                    <select\n                      name=\"assigned_by\"\n                      value={state.assigned_by || \"\"}\n                      onChange={onInputChange}\n                      className={\n                        errors.assigned_by\n                          ? \"form-control text-capitalize border border-danger\"\n                          : \"form-control text-capitalize\"\n                      }\n                      id=\"assigned_by\"\n                    >\n                      <option value={\"\"}>Select Admin </option>\n                      {(admiinList || []).map((item) => <option value={item.admin_id}>{item.name} </option>)}\n                    </select>\n                    {/* <span\n                      className=\"btn btn-sm btn-secondary\"\n                      onClick={() => setShowAdminMOdal(true)}\n                      style={{\n                        width: \"auto\",\n                        minWidth: \"auto\",\n                        height: \"44px\",\n                      }}\n                      title=\"Add New Admin\"\n                    >\n                      +\n                    </span>  */}\n\n                    {/* ERROR MSG FOR REFFER BY  */}\n                    {errors.assigned_by && (\n                      <span\n                        key={errors.assigned_by}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.assigned_by}\n                      </span>\n                    )}\n                  </div>\n\n                  <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n                    || props.pageNameForForm === \"ApplicantType\" ||\n                    props.pageNameForForm === \"Category\" ||\n                    props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                    <label\n                      htmlFor=\"resume\"\n                      className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                    >\n                      Resume: {/*<span className=\"text-danger\">*</span>*/}\n                    </label>\n                    <input\n                      type=\"file\"\n                      placeholder=\"Resume\"\n                      id=\"resume\"\n                      name=\"resume\"\n                      accept=\".pdf,application/pdf\"\n                      onChange={handleUploadFile}\n                      className={\n                        errors.resume\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                    />\n                    {/*----ERROR MESSAGE FOR RESUME----*/}\n                    {errors.resume && (\n                      <span\n                        key={errors.resume}\n                        className=\"text-danger font-size-3\"\n                      >\n                        {errors.resume}\n                      </span>\n                    )}\n                  </div>\n                  {user_type === \"admin\" ? (\n                    <div className={`form-group col-md-4 ${props.user_of_page === \"assignedUser\"\n                      || props.pageNameForForm === \"ApplicantType\"\n                      || props.pageNameForForm === \"Category\"\n                      || props.user_of_page === \"agentAssigned\" || props.pageNameForForm === \"agentAssigned\" ? \"d-none\" : \"\"}`}>\n                      <label\n                        htmlFor=\"fetured\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n\n                        <input\n                          type=\"checkbox\"\n                          id=\"fetured\"\n                          name=\"fetured\"\n                          checked={state.is_featured === \"1\"}\n                          value={state.is_featured}\n                          onChange={(e) =>\n                            setState({\n                              ...state,\n                              is_featured:\n                                state.is_featured === \"\" ||\n                                  state.is_featured === \"0\"\n                                  ? \"1\"\n                                  : \"0\",\n                            })\n                          }\n                        />\n                      </label>\n                    </div>\n                  ) : null}\n                </div>\n                <div className=\"form-group text-center\">\n                  {loading === true ? (\n                    <button\n                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                      type=\"button\"\n                      disabled\n                    >\n                      <span\n                        className=\"spinner-border spinner-border-sm \"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                      <span className=\"sr-only\">Loading...</span>\n                    </button>\n                  ) : (\n                    <button\n                      className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  )}\n                </div>\n              </form>\n              {/* </div> */}\n            </div>\n          </>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nexport default PersonalDetails;\n"
        }
    ]
}