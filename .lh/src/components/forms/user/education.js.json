{
    "sourceFile": "src/components/forms/user/education.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1710309721560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710309859588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,9 +555,9 @@\n             </div>\n           </form>\n           {/* </div> */}\n           <SAlert\n-className=\"text-capitalize\"\n+  style={{ textTransform: 'capitalize' }}\n             show={deleteAlert}\n             title={deleteName}\n             text=\"Are you Sure you want to delete !\"\n             onConfirm={() => deleteEducation(deleteId)}\n"
                },
                {
                    "date": 1710310148816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,9 +555,8 @@\n             </div>\n           </form>\n           {/* </div> */}\n           <SAlert\n-  style={{ textTransform: 'capitalize' }}\n             show={deleteAlert}\n             title={deleteName}\n             text=\"Are you Sure you want to delete !\"\n             onConfirm={() => deleteEducation(deleteId)}\n"
                },
                {
                    "date": 1710503309957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,9 +297,9 @@\n                 </div>\n               ))}\n             </div>\n             <h4>\n-              {state.education_id ? \"Update Education\" : \"Add Education\"}{\" \"}\n+              {state.education_id ? \"Update Education\" : \"Add Education\"}\n             </h4>\n             <div className=\"row pt-5\">\n               <div className=\"form-group col-md-6\">\n                 <label\n"
                },
                {
                    "date": 1710504369699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,9 +297,9 @@\n                 </div>\n               ))}\n             </div>\n             <h4>\n-              {state.education_id ? \"Update Education\" : \"Add Education\"}\n+              {state.education_id ? \"Update Education\" : \"Add Education\"}{\" \"}\n             </h4>\n             <div className=\"row pt-5\">\n               <div className=\"form-group col-md-6\">\n                 <label\n"
                }
            ],
            "date": 1710309721560,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  EmployeeEducationDetails,\n  AddEmployeeEducation,\n  DeleteEmployeeEducation,\n  GetFilter,\n} from \"../../../api/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SAlert from \"../../common/sweetAlert\";\nimport FilterJson from \"../../json/filterjson\";\n\nfunction Education(props) {\n  /*Data states */\n  let [educationData, setEducationData] = useState([]);\n  let [EducationList, setEducationList] = useState([]);\n  const [apiCall, setApiCall] = useState(false);\n  /*Delete Api */\n  const [loading, setLoading] = useState(false);\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  /*----USER Education VALIDATION----*/\n  const initialFormState = {\n    qualification: \"\",\n    university_institute: \"\",\n    course: \"\",\n    specialization: \"\",\n    institute_location: \"\",\n    passing_year: \"\",\n  };\n  /* Functionality to close the modal */\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setLoading(false);\n    props.close();\n  };\n  /*Function to get the jSon */\n  const JsonData = async () => {\n    try {\n      let Json = await GetFilter();\n      if (Json.data.message === \"No data found\") {\n        setEducationList([]);\n      } else {\n        setEducationList(Json.data.data.Education);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /*Render method to get the json*/\n  useEffect(() => {\n    JsonData();\n  }, [apiCall]);\n  /*----VALIDATION CONTENT----*/\n  const validators = {\n    qualification: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"Qualification is required\"\n          : null,\n    ],\n    university_institute: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"University is required\"\n          : /[^A-Za-z 0-9]/g.test(value)\n          ? \"Cannot use special character \"\n          : value.length < 2\n          ? \"University should have 2 or more letters\"\n          : null,\n    ],\n    course: [\n      (value) =>\n        value === null || value.trim() === \"\" ? \"Course is required\" : null,\n    ],\n    // specialization: [\n    //   (value) =>\n    //     value === null || value.trim() === \"\"\n    //       ? \"Specialization is required\"\n    //       : null,\n    // ],\n    // institute_location: [\n    //   (value) =>\n    //     value === null || value.trim() === \"\"\n    //       ? \"Institute location is required\"\n    //       : null,\n    // ],\n    passing_year: [\n      (value) =>\n        value === \"\" || value === null\n          ? \"Passing Year is required\"\n          : !/^[0-9]+$/.test(value)\n          ? \"Only numbers are allowed\"\n          : !/^(?!0000)\\d{4}$/.test(value)\n          ? \"Please enter a valid year between 1000 and 9999.\"\n          : null,\n    ],\n  };\n  /*----LOGIN ONCHANGE FUNCTION----*/\n  const { state, setState, onInputChange, errors, setErrors, validate } =\n    useValidation(initialFormState, validators);\n  // API CALL\n\n  /*Function to get education data */\n  const EducationData = async (data) => {\n    try {\n      let EducationDetails = await EmployeeEducationDetails(\n        props.employeeId\n      ); /*\"No Employee found\"*/\n      if (EducationDetails.data.education.length === 0) {\n        setEducationData([]);\n      } else {\n        setEducationData(EducationDetails.data.education);\n      }\n      if (data !== undefined || data) {\n        setState(data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /*Render function to get education list */\n  useEffect(() => {\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n    if (\n      (props.employeeId === undefined && educationData.length === 0) ||\n      deleteAlert === true\n    ) {\n      setState(initialFormState);\n    } else {\n      EducationData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [apiCall, props.employeeId]);\n\n  /*----EDUCATION SUBMIT FUNCTION----*/\n  const onEducationSubmitClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        let responseData = await AddEmployeeEducation(state, props.employeeId);\n        if (responseData.message === \"Employee data updated successfully\") {\n          toast.success(\"Education Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setState(initialFormState);\n          setErrors(\"\");\n          setLoading(false);\n          setApiCall(true);\n          props.setApiCall(true);\n        }\n        if (responseData.message === \"Employee data inserted successfully\") {\n          toast.success(\"Education Added successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setState(initialFormState);\n          setErrors(\"\");\n          setLoading(false);\n          setApiCall(true);\n          props.setApiCall(true);\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n      } //\"\n      // handle form submission\n    } else {\n      setLoading(false);\n    }\n  };\n  // END USER Education VALIDATION\n\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.education_id);\n    setDeleteName(e.course);\n    setDeleteAlert(true);\n  };\n  /*To cancel the delete alert box */\n  const CancelDelete = () => {\n    setDeleteAlert(false);\n  };\n  /*To call Api to delete Skill */\n  async function deleteEducation(e) {\n    try {\n      const responseData = await DeleteEmployeeEducation(e);\n      if (responseData.message === \"Education details has been deleted\") {\n        toast.error(\"Education deleted Successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setApiCall(true);\n        props.setApiCall(true);\n        setDeleteAlert(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /*Code to get current year */\n  // let date = moment();\n  // const currentYear = date.year();\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        {/* <div className=\"modal-dialog max-width-px-540 position-relative\"> */}\n        <div className=\"bg-white rounded h-100 px-11 pt-7\">\n          <form onSubmit={onEducationSubmitClick}>\n            <h5 className=\"text-center pt-2 mb-7\">Education Details</h5>\n            <div className=\"row mb-5 bg-light py-5 pr-10 pl-4 rounded\">\n              {(educationData || []).map((education) => (\n                <div\n                  className=\"col-12 text-capitalize p-0\"\n                  key={education.education_id}\n                >\n                  <div className=\"w-100 card px-6 py-3 shadow-8 border-0 mb-2\">\n                    <div className=\"d-flex align-items-center flex-wrap flex-sm-nowrap justify-content-md-between \">\n                      <div className=\"media align-items-center company_box p-0\">\n                        <div className=\"text_box text-left w-100 mt-n2\">\n                          <span\n                            className=\"font-size-4 font-weight-semibold w-100\"\n                            onClick={() => EducationData(education)}\n                          >\n                            {education.qualification + \" \"}\n                            <span className=\"font-size-4 text-break\">\n                              ({education.university_institute})\n                            </span>\n                          </span>\n                          <span className=\"font-size-3 text-default-color text-break\">\n                            {education.course}\n                            {education.specialization\n                              ? `,  ${education.specialization}`\n                              : \" \"}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"d-flex\">\n                        <div className=\"d-flex align-items-center justify-content-right flex-wrap text-right\">\n                          <span className=\"font-size-4 text-gray w-100\">\n                            {education.passing_year}\n                          </span>\n                          <span\n                            className={`${\n                              education.institute_location === null\n                                ? \"d-none\"\n                                : \"\"\n                            } font-size-3 text-gray w-100`}\n                          >\n                            <span className=\"mr-2\">\n                              <img\n                                src=\"image/svg/icon-loaction-pin-black.svg\"\n                                alt=\"\"\n                              />\n                            </span>\n                            {education.institute_location}\n                          </span>\n                        </div>\n                        <div className=\"w-auto education_btn_grp\">\n                          <Link\n                            to=\"\"\n                            className=\"fa fa-edit text-gray px-5\"\n                            onClick={() => EducationData(education)}\n                          ></Link>\n                          <Link\n                            to=\"\"\n                            className=\"fa fa-trash px-5\"\n                            onClick={() => ShowDeleteAlert(education)}\n                          ></Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <h4>\n              {state.education_id ? \"Update Education\" : \"Add Education\"}{\" \"}\n            </h4>\n            <div className=\"row pt-5\">\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"qualification\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Qualification: <span className=\"text-danger\">*</span>\n                </label>\n                <select\n                  className={\n                    errors.qualification\n                      ? \"form-control text-capitalize border border-danger\"\n                      : \"form-control text-capitalize\"\n                  }\n                  name=\"qualification\"\n                  id=\"qualification\"\n                  value={state.qualification || \"\"}\n                  onChange={onInputChange}\n                >\n                  <option value={\"\"}>Select</option>\n                  {(FilterJson.qualification || []).map((data, i) => {\n                    return (\n                      <option value={data} key={i}>\n                        {data}\n                      </option>\n                    );\n                  })}\n                </select>\n                {/*----ERROR MESSAGE FOR QUALIFICATION----*/}\n                {errors.qualification && (\n                  <span\n                    key={errors.qualification}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.qualification}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"course\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Course: <span className=\"text-danger\">*</span>\n                </label>\n                <select\n                  className={\n                    errors.course\n                      ? \"text-capitalize form-control border border-danger\"\n                      : \"text-capitalize form-control\"\n                  }\n                  name=\"course\"\n                  id=\"course\"\n                  value={state.course || \"\"}\n                  onChange={onInputChange}\n                >\n                  <option value={\"\"}>Select</option>\n                  {(EducationList || []).map((course) => (\n                    <option value={course.value} key={course.id}>\n                      {course.value}\n                    </option>\n                  ))}\n                </select>\n                {/*----ERROR MESSAGE FOR course----*/}\n                {errors.course && (\n                  <span key={errors.course} className=\"text-danger font-size-3\">\n                    {errors.course}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"university_institute\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  University / Institute: <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  maxLength={60}\n                  type=\"text\"\n                  placeholder=\"University/Institute \"\n                  className={\n                    errors.university_institute\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  name=\"university_institute\"\n                  id=\"university_institute\"\n                  value={state.university_institute || \"\"}\n                  onChange={onInputChange}\n                />\n                {/*----ERROR MESSAGE FOR UNIVERSITY----*/}\n                {errors.university_institute && (\n                  <span\n                    key={errors.university_institute}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.university_institute}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"institute_location\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Institute Location:\n                </label>\n                <div className=\"position-relative\">\n                  <select\n                    className={\n                      errors.institute_location\n                        ? \"form-control text-capitalize border border-danger\"\n                        : \"form-control text-capitalize\"\n                    }\n                    name=\"institute_location\"\n                    id=\"institute_location\"\n                    value={state.institute_location || \"\"}\n                    onChange={onInputChange}\n                  >\n                    <option value={\"\"}>Institute location</option>\n                    {(FilterJson.location || []).map((data, i) => {\n                      return (\n                        <option value={data} key={i}>\n                          {data}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  {/*----ERROR MESSAGE FOR institute_location----*/}\n                  {errors.institute_location && (\n                    <span\n                      key={errors.institute_location}\n                      className=\"text-danger font-size-3\"\n                    >\n                      {errors.institute_location}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"specialization\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Specialisation:\n                </label>\n                <input\n                  className={\n                    errors.specialization\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  name=\"specialization\"\n                  id=\"specialization\"\n                  value={state.specialization || \"\"}\n                  onChange={onInputChange}\n                  placeholder=\"Specialization\"\n                />\n                {/* <select\n                  className={\n                    errors.specialization\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  name=\"specialization\"\n                  id=\"specialization\"\n                  value={state.specialization||\"\"}\n                  onChange={onInputChange}\n                >\n                  <option value={\"\"}>Select Specialization</option>\n                  {(FilterJson.Specialization || []).map((Specialization) => (\n                    <option value={Specialization} key={Specialization}>\n                      {Specialization}\n                    </option>\n                  ))}\n                </select> */}\n                {/*----ERROR MESSAGE FOR SPECIALIZATION----*/}\n                {errors.specialization && (\n                  <span\n                    key={errors.specialization}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.specialization}\n                  </span>\n                )}\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label\n                  htmlFor=\"passing_year\"\n                  className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                >\n                  Passing Year: <span className=\"text-danger\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    errors.passing_year\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Passing Year\"\n                  id=\"passing_year\"\n                  name=\"passing_year\"\n                  value={state.passing_year}\n                  onChange={onInputChange}\n                  // max={currentYear}\n                  maxLength={4}\n                  minLength={4}\n                />\n                {/*----ERROR MESSAGE FOR PASSING YEAR----*/}\n                {errors.passing_year && (\n                  <span\n                    key={errors.passing_year}\n                    className=\"text-danger font-size-3\"\n                  >\n                    {errors.passing_year}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            <div className=\"form-group text-center d-flex justify-content-center\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              )}\n              <button\n                type=\"button\"\n                className=\"btn btn-primary mx-5\"\n                data-dismiss=\"modal\"\n                onClick={close}\n              >\n                Close\n              </button>\n            </div>\n          </form>\n          {/* </div> */}\n          <SAlert\nclassName=\"text-capitalize\"\n            show={deleteAlert}\n            title={deleteName}\n            text=\"Are you Sure you want to delete !\"\n            onConfirm={() => deleteEducation(deleteId)}\n            showCancelButton={true}\n            onCancel={CancelDelete}\n          />\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nexport default Education;\n"
        }
    ]
}