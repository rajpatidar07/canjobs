{
    "sourceFile": "src/components/forms/user/skills.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1693486845044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486958684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,9 @@\n         let SkillList = await GetFilter();\n         setSkillList(SkillList.data.data.Skill);\n       }\n       catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n       }\n       if (SkillDetails.data.skill.length === 0) {\n         SetSkillData([]);\n       } else {\n@@ -136,12 +133,9 @@\n           props.setApiCall(true);\n           setApiCall(true)\n         }\n       } catch (err) {\n-       console.log(err) {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+       console.log(err) \n         setLoading(false)\n       }\n     }\n   };\n@@ -163,12 +157,9 @@\n   async function deleteSkill(e) {\n     try {\n       const responseData = await DeleteEmployeeSkill(e);\n       if (responseData.message === \"skill has been deleted\") {\n-        toast.error(\"Skill deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+        toast.error(\"Skill deleted Successfully\", \n         props.setApiCall(true);\n         setApiCall(true);\n         setDeleteAlert(false);\n       }\n"
                },
                {
                    "date": 1693487044435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,9 +157,12 @@\n   async function deleteSkill(e) {\n     try {\n       const responseData = await DeleteEmployeeSkill(e);\n       if (responseData.message === \"skill has been deleted\") {\n-        toast.error(\"Skill deleted Successfully\", \n+        toast.error(\"Skill deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n         props.setApiCall(true);\n         setApiCall(true);\n         setDeleteAlert(false);\n       }\n"
                }
            ],
            "date": 1693486845044,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport useValidation from \"../../common/useValidation\";\nimport {\n  EmployeeSkillDetails,\n  AddEmployeeSkill,\n  DeleteEmployeeSkill,\n  GetFilter,\n} from \"../../../api/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nimport SAlert from \"../../common/sweetAlert\";\nimport Select from \"react-select\";\n\nfunction Skills(props) {\n  let [skillData, SetSkillData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [apiCall, setApiCall] = useState(false);\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  let [SkillList, setSkillList] = useState([]);\n  let [SkillOption, setSkillOption] = useState([]);\n  /* Functionality to close the modal */\n\n  const close = () => {\n    setState(initialFormState);\n    setErrors(\"\");\n    setLoading(false);\n    props.close();\n  };\n\n  // USER SKILLS VALIDATION\n\n  // INITIAL STATE ASSIGNMENT\n  const initialFormState = {\n    skill: \"\",\n  };\n  // VALIDATION CONDITIONS\n  const validators = {\n    skill: [\n      (value) =>\n        value === \"\" || value.trim() === \"\"\n          ? \"Skills / Software Name is required\"\n          : value.length < 3\n            ? \"Skills / Software Name should have 3 or more letter\"\n            : /[-]?\\d+(\\.\\d+)?/.test(value)\n              ? \"Skills / Software Name can not have a number.\"\n              : \"\",\n    ],\n  };\n  // CUSTOM VALIDATIONS IMPORT\n  const { state, setState, errors, setErrors, validate } = useValidation(\n    initialFormState,\n    validators\n  );\n  // API CALL\n  const SkillData = async () => {\n    try {\n      let SkillDetails = await EmployeeSkillDetails(props.employeeId);\n      try {\n        let SkillList = await GetFilter();\n        setSkillList(SkillList.data.data.Skill);\n      }\n      catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n      if (SkillDetails.data.skill.length === 0) {\n        SetSkillData([]);\n      } else {\n        SetSkillData(SkillDetails.data.skill);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  /*Render method to get the skill data */\n  useEffect(() => {\n    if (props.employeeId !== undefined) {\n      SkillData();\n    }\n    if (apiCall === true) {\n      setApiCall(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props, apiCall]);\n\n  /*Function to set data to the search job by country */\n  const onSelectChange = (option) => {\n    setState({ ...state, skill: option.value });\n  };\n\n  /*Function to redender the data in the option of the select box*/\n  useEffect(() => {\n    const options = (SkillList || []).map((option) => ({\n      value: option.value,\n      label: option.value,\n    }));\n\n    setSkillOption({ ...state, skill: options });\n  }, [SkillList]);\n\n  // console.log(\"Option =>\" ,state.skill)\n  // USER SKILLS SUBMIT BUTTON\n  const onUserSkillsClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        let responseData = await AddEmployeeSkill(state, props.employeeId);\n        if (responseData.message === \"Employee data updated successfully\") {\n          toast.success(\"Skill Updated successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setState({ ...state, skill: \"\" });\n          setSkillOption({ ...state, skill: \"\" });\n          setErrors(\"\");\n          setLoading(false);\n          props.setApiCall(true);\n          setApiCall(true)\n        }\n        else if (responseData.message === \"already exist !\") {\n          toast.error(\"Skill Already added\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setState({ ...state, skill: \"\" });\n          setSkillOption({ ...state, skill: \"\" });\n          setErrors(\"\");\n          setLoading(false);\n          props.setApiCall(true);\n          setApiCall(true)\n        }\n      } catch (err) {\n       console.log(err) {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false)\n      }\n    }\n  };\n\n  // END USER PERSONAL DETAIL VALIDATION\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.skill_id);\n    setDeleteName(e.skill);\n    setDeleteAlert(true);\n  };\n\n  /*To cancel the delete alert box */\n  const CancelDelete = () => {\n    setDeleteAlert(false);\n  };\n\n  /*To call Api to delete Skill */\n  async function deleteSkill(e) {\n    try {\n      const responseData = await DeleteEmployeeSkill(e);\n      if (responseData.message === \"skill has been deleted\") {\n        toast.error(\"Skill deleted Successfully\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        props.setApiCall(true);\n        setApiCall(true);\n        setDeleteAlert(false);\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  return (\n    <>\n      <Modal\n        show={props.show}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <button\n          type=\"button\"\n          className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n          data-dismiss=\"modal\"\n          onClick={close}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n        {/* <div className=\"modal-dialog max-width-px-540 position-relative\"> */}\n        <div className=\"bg-white rounded h-100 p-7\">\n          <form onSubmit={onUserSkillsClick}>\n            <h5 className=\"text-center mb-7\">Add It Skills </h5>{\" \"}\n            <div className=\"form-group d-flex mb-3 p-0\">\n              <label\n                htmlFor=\"skill\"\n                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n              >\n                Skill<span className=\"text-danger\">*</span> :\n              </label>\n              {/* <input\n                maxLength={30}\n                type=\"text\"\n                placeholder=\"Skill / Software Name\"\n                className={\n                  errors.skill\n                    ? \"form-control border border-danger\"\n                    : \"form-control\"\n                }\n                id=\"skill\"\n                name=\"skill\"\n                value={state.skill}\n                onChange={onInputChange}\n              />{\" \"} */}\n              <Select\n                options={\"\" || SkillOption.skill}\n                name=\"skill\"\n                id=\"skill\"\n                onChange={onSelectChange}\n                className={\n                  errors.skill ? \"border border-danger w-100 text-capitalize\" : \"text-capitalize w-100\"\n                }\n                isClearable={\"\"}\n              />\n              {loading === true ? (\n                <button\n                  className=\" btn-primary btn-small mx-2 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  className=\" btn-primary px-5  mx-2  rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  +\n                </button>\n              )}\n            </div>{\" \"}\n            {/*----ERROR MESSAGE FOR SKILLS----*/}\n            {errors.skill && (\n              <span key={errors.skill} className=\"text-danger font-size-3 mx-5\">\n                {errors.skill}\n              </span>\n            )}\n            <div className=\"form-group\">\n              <ul className=\"list-unstyled d-flex align-items-center flex-wrap\">\n                {(skillData || []).map((skill) => (\n                  <li\n                    className=\"bg-polar text-black-2 mr-3 px-4 mt-2 mb-2 font-size-3 rounded-3 min-height-32 d-flex align-items-center\"\n                    key={skill.skill_id}\n                  >\n                    {skill.skill}\n                    <Link\n                      className=\"p-0 ms-1\"\n                      onClick={() => ShowDeleteAlert(skill)}\n                    >\n                      <i\n                        className=\"px-3 fa fa-times-circle\"\n                        aria-hidden=\"true\"\n                      ></i>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"form-group text-center mb-0\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary ml-auto mr-auto\"\n                data-dismiss=\"modal\"\n                onClick={close}\n              >\n                Close\n              </button>\n            </div>\n          </form>\n          {/* </div> */}\n        </div>\n        <SAlert\n          show={deleteAlert}\n          title={deleteName}\n          text=\"Are you Sure you want to delete !\"\n          onConfirm={() => deleteSkill(deleteId)}\n          showCancelButton={true}\n          onCancel={CancelDelete}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default Skills;\n"
        }
    ]
}