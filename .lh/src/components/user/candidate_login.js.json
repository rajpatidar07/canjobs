{
    "sourceFile": "src/components/user/candidate_login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710580269862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710580269862,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport {\n  EmployeeLogin,\n  EmployeeForgotPassword,\n  LinkedInLogin,\n  SocialLogin,\n} from \"../../api/api\";\nimport useValidation from \"../common/useValidation\";\nimport { toast } from \"react-toastify\";\nimport ForgotPasswordForm from \"../forms/admin/ForgotPasswordForm\";\n// import { useGoogleLogin } from \"@react-oauth/google\";\n// import axios from \"axios\";\n// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nexport default function CandidateLoginForm(props) {\n  let [showForgotPassword, setShowForgotPassword] = useState(false);\n  let [loading, setLoading] = useState(false);\n  let navigate = useNavigate();\n  // let [facebook, setFacebook] = useState(false);\n  let i = 0;\n  const [searchParams] = useSearchParams();\n  let code = searchParams.get(\"code\");\n  if (props.show === true) {\n    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n  }\n  /*Function to close the modal */\n  const Close = () => {\n    setShowForgotPassword(false);\n    setLoading(false);\n    setErrors(\"\");\n    // props.close();\n  };\n  const type = localStorage.getItem(\"linkedin\");\n  // let code = dataa[1].split(\"&\")[0]\n  /*----USER LOGIN VALIDATION----*/\n  const initialFormState = {\n    email: \"\",\n    password: \"\",\n    forget_email: \"\",\n  };\n  /*----VALIDATION CONTENT----*/\n  const validators = {\n    email: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n    forget_email: [\n      (value) =>\n        state.email\n          ? \"\"\n          : value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n  };\n  /*----LOGIN ONCHANGE FUNCTION----*/\n  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n    initialFormState,\n    validators\n  );\n\n  /*----LOGIN SUBMIT FUNCTION----*/\n  const onUserLoginClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      // handle form submission\n      setLoading(true);\n      try {\n        const updatedTodo = await EmployeeLogin(state);\n        if (updatedTodo.message === \"Successfully Logged In\") {\n          localStorage.setItem(\"token\", updatedTodo.token);\n          localStorage.setItem(\"email\", updatedTodo.email);\n          localStorage.setItem(\"userType\", \"user\");\n          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n          localStorage.setItem(\"name\", updatedTodo.name);\n          localStorage.setItem(\"skill\", updatedTodo.skill);\n          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n          toast.success(\"Logged In Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setLoading(false);\n          Close();\n          navigate(`/${updatedTodo.employee_id}`);\n          window.location.reload();\n        }\n        if (updatedTodo.message === \"Invalid credentials !\") {\n          setLoading(false);\n          setErrors({ ...errors, email: \"Invalid credentials !\" });\n        }\n      } catch (err) {\n        setLoading(false);\n        setErrors({ ...errors, email: [\"Please try again later.\"] });\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    }\n  };\n  // END USER LOGIN VALIDATION\n  const onForgoteClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      // setLoading(true)\n      setLoading(true);\n      try {\n        const Response = await EmployeeForgotPassword(state);\n        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n          toast.success(\"Email sent Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setLoading(false);\n          Close();\n        } else if (Response.message === \"No user found\") {\n          setLoading(false);\n          setErrors({ ...errors, Credentials: [\"No user found\"] });\n          //   handle form submission\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    }\n  };\n  /*Function to login with google */\n  // const GoogleLogin = useGoogleLogin({\n  //   onSuccess: async (tokenResponse) => {\n  //     try {\n  //       let data = await axios(\n  //         \"https://www.googleapis.com/oauth2/v3/userinfo\",\n  //         {\n  //           headers: {\n  //             Authorization: `Bearer ${tokenResponse.access_token}`,\n  //           },\n  //         }\n  //       );\n  //       try {\n  //         if (data.data.email_verified === true) {\n  //           let res = await SocialLogin(\n  //             data.data.sub,\n  //             data.data.email,\n  //             data.data.name,\n  //             data.data.picture,\n  //             \"Google\"\n  //           );\n  //           localStorage.setItem(\"token\", res.token);\n  //           localStorage.setItem(\"email\", res.email);\n  //           localStorage.setItem(\"userType\", \"user\");\n  //           localStorage.setItem(\"employee_id\", res.employee_id);\n  //           localStorage.setItem(\"profile_photo\", res.profile_photo);\n  //           localStorage.setItem(\"skill\", res.skill);\n  //           toast.success(\"Logged In Successfully\", {\n  //             position: toast.POSITION.TOP_RIGHT,\n  //             autoClose: 1000,\n  //           });\n  //           Close();\n  //           navigate(`/${}`);\n  //           window.location.reload();\n  //         }\n  //       } catch (err) {\n  //         setLoading(false);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   },\n  // });\n\n  /*Function to login in with Linked in */\n  /*Code to get access token */\n  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n  // .then(response => {\n  // })\n  // .catch(error => {\n  //   console.error('Error:', error.message);\n  // });\n  const handleLinkedInLogin = () => {\n    const clientId = \"78mhwjaumkvtbm\";\n    const redirectUri = \"http://3.6.36.125:3000/\";\n    const scope =\n      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n\n    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n      redirectUri\n    )}&scope=${encodeURIComponent(scope)}`;\n  };\n  useEffect(() => {\n    i = i + 1;\n    if (\n      (code !== \"\" ||\n        code !== undefined ||\n        code !== \"undefined\" ||\n        code !== null) &&\n      i === 1 &&\n      type === \"employeeLogin\"\n    ) {\n      const response = LinkedInLogin(code, type);\n      response\n        .then((res) => {\n          let decode = JSON.parse(res.data);\n          if (res.data.email_verified === true) {\n            let data = SocialLogin(\n              res.data.sub,\n              res.data.email,\n              res.data.name,\n              res.data.picture,\n              \"Linkedin\"\n            );\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"email\", data.email);\n            localStorage.setItem(\"userType\", \"user\");\n            localStorage.setItem(\"employee_id\", data.employee_id);\n            localStorage.setItem(\"profile_photo\", data.profile_photo);\n            localStorage.setItem(\"skill\", data.skill);\n            toast.success(\"Logged In Successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            Close();\n            navigate(`/${data.employee_id}`);\n            window.location.reload();\n          }\n          if (\n            res.data.message ===\n              \"The token used in the request has been revoked by the user\" ||\n            decode.error_description ===\n              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n          ) {\n            toast.error(\"Token Expired\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            navigate(`/`);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoading(false);\n        });\n    }\n  }, []);\n\n  /*Functiom to login with facebook */\n  // const responseFacebook = async (response) => {\n  //   if (response.graphDomain === \"facebook\") {\n  //     try {\n  //       let data = await SocialLogin(\n  //         response.userID,\n  //         response.email,\n  //         response.name,\n  //         response.picture.data.url,\n  //         \"Facebook\"\n  //       );\n  //       localStorage.setItem(\"token\", data.token);\n  //       localStorage.setItem(\"email\", data.email);\n  //       localStorage.setItem(\"userType\", \"user\");\n  //       localStorage.setItem(\"employee_id\", data.employee_id);\n  //       localStorage.setItem(\"profile_photo\", data.profile_photo);\n  //       localStorage.setItem(\"skill\", data.skill);\n  //       toast.success(\"Logged In Successfully\", {\n  //         position: toast.POSITION.TOP_RIGHT,\n  //         autoClose: 1000,\n  //       });\n  //       Close();\n  //       navigate(`/${}`);\n  //       window.location.reload();\n  //     } catch (err) {\n  //       setLoading(false);\n  //     }\n  //   }\n  // };\n  return (\n    <div\n      className=\"row no-gutters justify-content-center\"\n      style={{ overflow: \"auto\", margin: \"7% auto\" }}\n    >\n      <div className=\"col-lg-4 col-md-6 card\">\n        <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n          <div\n            className={showForgotPassword === false ? \"row d-none\" : \"d-none\"}\n          >\n            <div className=\"col-4 col-xs-12\">\n              <button\n                onClick={handleLinkedInLogin}\n                className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n              >\n                <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                <span className=\"d-none d-xs-block mx-5 px-3\">\n                  Import from LinkedIn\n                </span>\n              </button>\n            </div>\n            {/* <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\"\n                        onClick={GoogleLogin}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Google\n                        </span>\n                      </Link>\n                    </div>\n                    <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\"\n                        onClick={() => setFacebook(true)}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Facebook\n                        </span>\n                      </Link>\n                      {facebook ? (\n                        <FacebookLogin\n                          appId=\"2170088543184291\"\n                          autoLoad\n                          callback={responseFacebook}\n                          fields=\"name,email,picture\"\n                          scope=\"public_profile,user_friends,email,user_actions.books\"\n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                          render={(renderProps) => (\n                            <button\n                              onClick={renderProps.onClick}\n                              className=\"d-none\"\n                            ></button>\n                          )}\n                        />\n                      ) : null}\n                    </div> */}\n          </div>\n          <div className=\"brand-logo mb-10 text-center\">\n            <Link to=\"/\">\n              <img\n                src=\"image/00logo-main-black.png\"\n                alt=\"\"\n                className=\"light-version-logo default-logo\"\n                style={{ maxWidth: \"250px\", maxHeight: \"80px\" }}\n              />\n            </Link>\n          </div>\n          <div\n            className={\n              showForgotPassword === false ? \"or-devider d-none\" : \"d-none\"\n            }\n          >\n            <span className=\"font-size-3 line-height-reset \">Or</span>\n          </div>\n          {/* user login form */}\n          <form\n            onSubmit={onUserLoginClick}\n            className={showForgotPassword === false ? \"\" : \"d-none\"}\n          >\n            <div className=\"form-group p-0\">\n              <label\n                htmlFor=\"useremail\"\n                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n              >\n                E-mail\n              </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={state.useremail}\n                onChange={onInputChange}\n                className={\n                  errors.useremail\n                    ? \"form-control border border-danger\"\n                    : \"form-control\"\n                }\n                placeholder=\"example@gmail.com\"\n                id=\"useremail\"\n              />\n              {/*----ERROR MESSAGE FOR EMAIL----*/}\n              {errors.useremail && (\n                <span>\n                  {errors.useremail.map((error) => (\n                    <span key={error} className=\"text-danger font-size-3\">\n                      {error}\n                    </span>\n                  ))}\n                </span>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"userpassword\"\n                className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n              >\n                Password\n              </label>\n              <div className=\"position-relative\">\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  value={state.userpassword}\n                  onChange={onInputChange}\n                  className={\n                    errors.userpassword\n                      ? \"form-control border border-danger\"\n                      : \"form-control\"\n                  }\n                  placeholder=\"Enter password\"\n                  id=\"userpassword\"\n                />\n                {/*----ERROR MESSAGE FOR PASSWORD----*/}\n                {errors.userpassword && (\n                  <span>\n                    {errors.userpassword.map((error) => (\n                      <span key={error} className=\"text-danger font-size-3\">\n                        {error}\n                      </span>\n                    ))}\n                  </span>\n                )}\n                {/* <a\n                          href=\"http://localhost:3000/\"\n                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n                          data-show-pass=\"password\"\n                        ></a> */}\n              </div>\n              <small className=\"text-danger\">{errors.email}</small>\n            </div>\n            <div className=\"d-flex flex-wrap justify-content-between  mx-6\">\n              <label\n                htmlFor=\"terms-check\"\n                className=\"gr-check-input d-flex  mr-3\"\n              >\n                <input\n                  type=\"checkbox\"\n                  id=\"tandr\"\n                  name=\"tandr\"\n                  onChange={onInputChange}\n                  className=\"text-black-2 pt-5 mr-5\"\n                />\n                <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n                  Remember password\n                </span>\n              </label>\n\n              <Link\n                to={\"\"}\n                className=\"font-size-3 text-dodger line-height-reset mb-3\"\n                onClick={() => {\n                  setShowForgotPassword(true);\n                  setErrors(\"\");\n                }}\n              >\n                Forget Password\n              </Link>\n              {/*----ERROR MESSAGE FOR terms----*/}\n              {errors.tandr && (\n                <span key={errors.tandr} className=\"text-danger font-size-3\">\n                  {errors.tandr}\n                </span>\n              )}\n            </div>\n\n            <div className=\"form-group mb-8\">\n              {loading === true ? (\n                <button\n                  className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                  type=\"button\"\n                  disabled\n                >\n                  <span\n                    className=\"spinner-border spinner-border-sm \"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  <span className=\"sr-only\">Loading...</span>\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                  type=\"submit\"\n                >\n                  Log in\n                </button>\n              )}\n            </div>\n            <p className=\"font-size-4 text-center heading-default-color\">\n              Don’t have an account?\n              <Link className=\"text-primary ml-2\" to={\"/candidate_signup\"}>\n                Create a free account\n              </Link>\n            </p>\n          </form>\n          <ForgotPasswordForm\n            setShowForgotPassword={setShowForgotPassword}\n            showForgotPassword={showForgotPassword}\n            onForgoteClick={onForgoteClick}\n            state={state}\n            onInputChange={onInputChange}\n            errors={errors}\n            loading={loading}\n            setErrors={setErrors}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"
        }
    ]
}