{
    "sourceFile": "src/components/user/login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1693486956903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693487294364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,12 @@\n         localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n         localStorage.setItem(\"name\", updatedTodo.name);\n         localStorage.setItem(\"skill\", updatedTodo.skill);\n         localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-        toast.success(\"Logged In Successfully\", \n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n         setLoading(false);\n         props.close();\n         navigate(\"/\");\n         window.location.reload();\n"
                },
                {
                    "date": 1693487306236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,18 +100,20 @@\n       // setLoading(true)\n       setLoading(true);\n      try{ const Response = await EmployeeForgotPassword(state);\n       if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-        toast.success(\"Email sent Successfully\", \n+        toast.success(\"Email sent Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n         setLoading(false);\n         props.close();\n       } else if (Response.message === \"No user found\") {\n         setLoading(false);\n         setErrors({ ...errors, Credentials: [\"No user found\"] });\n         //   handle form submission\n       }}catch(err){\n-        toast.success(\"Something went wrong\", \n-        setLoading(false);\n+console.log(err)        setLoading(false);\n       }\n     }\n   };\n     /*Function to login with google */\n"
                },
                {
                    "date": 1693487322562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,10 @@\n         setLoading(false);\n         setErrors({ ...errors, Credentials: [\"No user found\"] });\n         //   handle form submission\n       }}catch(err){\n-console.log(err)        setLoading(false);\n+console.log(err)        \n+setLoading(false);\n       }\n     }\n   };\n     /*Function to login with google */\n"
                },
                {
                    "date": 1693820064214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n                   >\n                     <div className=\"col-4 col-xs-12\">\n                        <button onClick={handleLinkedInLogin}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n-                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n+                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                             <span className=\"d-none d-xs-block mx-5 px-3\">\n                               Import from LinkedIn\n                             </span></button>\n                     </div>\n@@ -310,9 +310,9 @@\n                       <Link\n                         to=\"\" onClick={GoogleLogin}\n                         className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                       >\n-                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n+                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                         <span className=\"d-none d-xs-block mx-5 px-3\">\n                           Import from Google\n                         </span>\n                       </Link>\n@@ -321,9 +321,9 @@\n                       <Link\n                         to=\"\" onClick={()=>setFacebook(true)}\n                         className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                       >\n-                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n+                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                         <span className=\"d-none d-xs-block mx-5 px-3\">\n                           Import from Facebook\n                         </span>\n                       </Link>\n@@ -408,9 +408,9 @@\n                               : \"form-control\"\n                           }\n                           placeholder=\"Enter password\"\n                           id=\"userpassword\"\n-                        />{\" \"}\n+                        />\n                         {/*----ERROR MESSAGE FOR PASSWORD----*/}\n                         {errors.userpassword && (\n                           <span>\n                             {errors.userpassword.map((error) => (\n@@ -484,14 +484,14 @@\n                         <button\n                           className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                           type=\"submit\"\n                         >\n-                          Log in{\" \"}\n+                          Log in\n                         </button>\n                       )}\n                     </div>\n                     <p className=\"font-size-4 text-center heading-default-color\">\n-                      Don’t have an account?{\" \"}\n+                      Don’t have an account?\n                       <Link\n                         className=\"text-primary\"\n                         to={\"\"}\n                         onClick={props.signUpClick}\n@@ -557,9 +557,9 @@\n                         </button>\n                       )}\n                     </div>\n                     <p className=\"font-size-4 text-center heading-default-color\">\n-                      Already have an account?{\" \"}\n+                      Already have an account?\n                       <Link\n                         to=\"\"\n                         className=\"text-primary\"\n                         onClick={() => setShowForgotPassword(false)}\n"
                },
                {
                    "date": 1693832605813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,14 @@\n   let code = searchParams.get(\"code\")\n  if(props.show === true){\n   localStorage.setItem(\"linkedin\", \"employeeLogin\");\n  }\n+ /*Function to close the modal */\n+ const Close =() =>{\n+  setShowForgotPassword(false)\n+  setLoading(false)\n+  props.close()\n+ }\n  const type = localStorage.getItem(\"linkedin\");\n     // let code = dataa[1].split(\"&\")[0]\n   /*----USER LOGIN VALIDATION----*/\n   const initialFormState = {\n"
                },
                {
                    "date": 1693832658673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,39 @@\n import React, { useEffect, useState } from \"react\";\n import { Modal } from \"react-bootstrap\";\n import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n-import { EmployeeLogin, EmployeeForgotPassword , LinkedInLogin , SocialLogin} from \"../../api/api\";\n+import {\n+  EmployeeLogin,\n+  EmployeeForgotPassword,\n+  LinkedInLogin,\n+  SocialLogin,\n+} from \"../../api/api\";\n import useValidation from \"../common/useValidation\";\n import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from '@react-oauth/google';\n+import { useGoogleLogin } from \"@react-oauth/google\";\n import axios from \"axios\";\n // import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n // import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n-export default  function EmployeeLoginModal(props) {\n+import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n+export default function EmployeeLoginModal(props) {\n   let [showForgotPassword, setShowForgotPassword] = useState(false);\n   let [loading, setLoading] = useState(false);\n   let navigate = useNavigate();\n   let [facebook, setFacebook] = useState(false);\n   let i = 0;\n-  const [searchParams] = useSearchParams()\n-  let code = searchParams.get(\"code\")\n- if(props.show === true){\n-  localStorage.setItem(\"linkedin\", \"employeeLogin\");\n- }\n- /*Function to close the modal */\n- const Close =() =>{\n-  setShowForgotPassword(false)\n-  setLoading(false)\n-  props.close()\n- }\n- const type = localStorage.getItem(\"linkedin\");\n-    // let code = dataa[1].split(\"&\")[0]\n+  const [searchParams] = useSearchParams();\n+  let code = searchParams.get(\"code\");\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n+  }\n+  /*Function to close the modal */\n+  const Close = () => {\n+    setShowForgotPassword(false);\n+    setLoading(false);\n+    props.close();\n+  };\n+  const type = localStorage.getItem(\"linkedin\");\n+  // let code = dataa[1].split(\"&\")[0]\n   /*----USER LOGIN VALIDATION----*/\n   const initialFormState = {\n     email: \"\",\n     password: \"\",\n@@ -67,185 +72,232 @@\n     event.preventDefault();\n     if (validate()) {\n       // handle form submission\n       setLoading(true);\n-      try{const updatedTodo = await EmployeeLogin(state);\n-      console.log(updatedTodo)\n-      if (updatedTodo.status) {\n-        localStorage.setItem(\"token\", updatedTodo.token);\n-        localStorage.setItem(\"email\",updatedTodo.email)\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n-        localStorage.setItem(\"name\", updatedTodo.name);\n-        localStorage.setItem(\"skill\", updatedTodo.skill);\n-        localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-        toast.success(\"Logged In Successfully\", {\n+      try {\n+        const updatedTodo = await EmployeeLogin(state);\n+        console.log(updatedTodo);\n+        if (updatedTodo.status) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"email\", updatedTodo.email);\n+          localStorage.setItem(\"userType\", \"user\");\n+          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n+          localStorage.setItem(\"name\", updatedTodo.name);\n+          localStorage.setItem(\"skill\", updatedTodo.skill);\n+          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+          navigate(\"/\");\n+          window.location.reload();\n+        }\n+        if (updatedTodo.message === \"Invalid credentials !\") {\n+          setLoading(false);\n+          setErrors({ ...errors, email: \"Invalid credentials !\" });\n+        }\n+      } catch (err) {\n+        toast.success(\"Something went wrong\", {\n           position: toast.POSITION.TOP_RIGHT,\n           autoClose: 1000,\n         });\n         setLoading(false);\n-        props.close();\n-        navigate(\"/\");\n-        window.location.reload();\n       }\n-      if (updatedTodo.message === \"Invalid credentials !\") {\n-        setLoading(false);\n-        setErrors({ ...errors, email: \"Invalid credentials !\" });\n-      }\n-    }catch(err){\n-      toast.success(\"Something went wrong\", {\n-        position: toast.POSITION.TOP_RIGHT,\n-        autoClose: 1000,\n-      });\n-      setLoading(false);\n-    }}\n+    }\n   };\n   // END USER LOGIN VALIDATION\n   const onForgoteClick = async (event) => {\n     event.preventDefault();\n     if (validate()) {\n       // setLoading(true)\n       setLoading(true);\n-     try{ const Response = await EmployeeForgotPassword(state);\n-      if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-        toast.success(\"Email sent Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n+      try {\n+        const Response = await EmployeeForgotPassword(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n         setLoading(false);\n-        props.close();\n-      } else if (Response.message === \"No user found\") {\n-        setLoading(false);\n-        setErrors({ ...errors, Credentials: [\"No user found\"] });\n-        //   handle form submission\n-      }}catch(err){\n-console.log(err)        \n-setLoading(false);\n       }\n     }\n   };\n-    /*Function to login with google */\n-    const GoogleLogin = useGoogleLogin({\n-      onSuccess: async (tokenResponse) => {\n+  /*Function to login with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\n+          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+          {\n+            headers: {\n+              Authorization: `Bearer ${tokenResponse.access_token}`,\n+            },\n+          }\n+        );\n         try {\n-          let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n-            headers: {  \n-              \"Authorization\": `Bearer ${tokenResponse.access_token}`\n-            }\n-          });\n-         try{if(data.data.email_verified === true){\n-          let res = await SocialLogin(data.data.sub,data.data.email,data.data.name,data.data.picture,\"Google\");\n-          console.log(res,);\n-          localStorage.setItem(\"token\", res.token);\n-          localStorage.setItem(\"email\",res.email)\n-          localStorage.setItem(\"userType\", \"user\");\n-          localStorage.setItem(\"employee_id\", res.employee_id);\n-          localStorage.setItem(\"profile_photo\", res.profile_photo);\n-          localStorage.setItem(\"skill\", res.skill);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          props.close();\n-          navigate(\"/\");\n-          window.location.reload();\n-        }}catch(err){\n+          if (data.data.email_verified === true) {\n+            let res = await SocialLogin(\n+              data.data.sub,\n+              data.data.email,\n+              data.data.name,\n+              data.data.picture,\n+              \"Google\"\n+            );\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"email\", res.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", res.employee_id);\n+            localStorage.setItem(\"profile_photo\", res.profile_photo);\n+            localStorage.setItem(\"skill\", res.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+        } catch (err) {\n           toast.success(\"Something went wrong\", {\n             position: toast.POSITION.TOP_RIGHT,\n             autoClose: 1000,\n           });\n           setLoading(false);\n         }\n-        } catch (err) {\n-          console.log(err);\n-        }\n+      } catch (err) {\n+        console.log(err);\n       }\n-    });\n+    },\n+  });\n \n-    /*Function to login in with Linked in */\n-    /*Code to get access token */\n-    // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-    // .then(response => {\n-    //   console.log('data', response.data);\n-    // })\n-    // .catch(error => {\n-    //   console.error('Error:', error.message);\n-    // });\n-    // console.log(i , \"code =>\" , code);\n-    const handleLinkedInLogin = () => {\n-      const clientId = '78mhwjaumkvtbm';\n-      const redirectUri = 'http://localhost:3000/';\n-      const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n+  /*Function to login in with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = \"78mhwjaumkvtbm\";\n+    const redirectUri = \"http://localhost:3000/\";\n+    const scope =\n+      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n \n-      window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n-    };\n-    // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n-    // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n-    useEffect(() => {\n-      i = i + 1\n-      if((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 1 && type === \"employeeLogin\" ){\n-        const response =  LinkedInLogin(code , type);\n-          response.then((res) =>{\n-            let decode = JSON.parse(res.data)\n-          if(res.data.email_verified === true){\n-            let data =  SocialLogin(res.data.sub,res.data.email,res.data.name,res.data.picture,\"Linkedin\");\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n+      redirectUri\n+    )}&scope=${encodeURIComponent(scope)}`;\n+  };\n+  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n+  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n+  useEffect(() => {\n+    i = i + 1;\n+    if (\n+      (code !== \"\" ||\n+        code !== undefined ||\n+        code !== \"undefined\" ||\n+        code !== null) &&\n+      i === 1 &&\n+      type === \"employeeLogin\"\n+    ) {\n+      const response = LinkedInLogin(code, type);\n+      response\n+        .then((res) => {\n+          let decode = JSON.parse(res.data);\n+          if (res.data.email_verified === true) {\n+            let data = SocialLogin(\n+              res.data.sub,\n+              res.data.email,\n+              res.data.name,\n+              res.data.picture,\n+              \"Linkedin\"\n+            );\n             console.log(data);\n             localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\",data.email)\n+            localStorage.setItem(\"email\", data.email);\n             localStorage.setItem(\"userType\", \"user\");\n             localStorage.setItem(\"employee_id\", data.employee_id);\n             localStorage.setItem(\"profile_photo\", data.profile_photo);\n             localStorage.setItem(\"skill\", data.skill);\n             toast.success(\"Logged In Successfully\", {\n               position: toast.POSITION.TOP_RIGHT,\n               autoClose: 1000,\n             });\n-            props.close();\n+            Close();\n             navigate(\"/\");\n             window.location.reload();\n-          }if(res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"){\n+          }\n+          if (\n+            res.data.message ===\n+              \"The token used in the request has been revoked by the user\" ||\n+            decode.error_description ===\n+              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n+          ) {\n             toast.error(\"Token Expired\", {\n               position: toast.POSITION.TOP_RIGHT,\n               autoClose: 1000,\n             });\n-            navigate(\"/\");}\n-          }).catch((err) => {\n-            console.log(err.data);\n-              toast.success(\"Something went wrong\", {\n-                position: toast.POSITION.TOP_RIGHT,\n-                autoClose: 1000,\n-              });\n-              setLoading(false);\n-          })\n-          } \n-        },[])\n-\n-      /*Functiom to login with facebook */\n-      const responseFacebook = async (response) => {\n-        if(response.graphDomain === \"facebook\"){\n-         try{ let data = await SocialLogin(response.userID,response.email,response.name,response.picture.data.url,\"Facebook\");\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\",data.email)\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", data.employee_id);\n-            localStorage.setItem(\"profile_photo\", data.profile_photo);\n-            localStorage.setItem(\"skill\", data.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            props.close();\n             navigate(\"/\");\n-            window.location.reload();}\n-            catch(err){\n-              toast.success(\"Something went Wrong\", {\n-                position: toast.POSITION.TOP_RIGHT,\n-                autoClose: 1000,\n-              });\n-              setLoading(false);\n-            }\n           }\n+        })\n+        .catch((err) => {\n+          console.log(err.data);\n+          toast.success(\"Something went wrong\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+        });\n+    }\n+  }, []);\n+\n+  /*Functiom to login with facebook */\n+  const responseFacebook = async (response) => {\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialLogin(\n+          response.userID,\n+          response.email,\n+          response.name,\n+          response.picture.data.url,\n+          \"Facebook\"\n+        );\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"email\", data.email);\n+        localStorage.setItem(\"userType\", \"user\");\n+        localStorage.setItem(\"employee_id\", data.employee_id);\n+        localStorage.setItem(\"profile_photo\", data.profile_photo);\n+        localStorage.setItem(\"skill\", data.skill);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        Close();\n+        navigate(\"/\");\n+        window.location.reload();\n+      } catch (err) {\n+        toast.success(\"Something went Wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n       }\n+    }\n+  };\n   return (\n     <>\n       {/* <!-- Login Modal --> */}\n       <Modal\n@@ -258,9 +310,9 @@\n           <button\n             type=\"button\"\n             className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n             data-dismiss=\"modal\"\n-            onClick={props.close}\n+            onClick={Close}\n           >\n             <i className=\"fas fa-times\"></i>\n           </button>\n           <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n@@ -304,18 +356,22 @@\n                   <div\n                     className={showForgotPassword === false ? \"row\" : \"d-none\"}\n                   >\n                     <div className=\"col-4 col-xs-12\">\n-                       <button onClick={handleLinkedInLogin}\n-                       className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n+                      <button\n+                        onClick={handleLinkedInLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                      >\n                         <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                            <span className=\"d-none d-xs-block mx-5 px-3\">\n-                              Import from LinkedIn\n-                            </span></button>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from LinkedIn\n+                        </span>\n+                      </button>\n                     </div>\n                     <div className=\"col-4 col-xs-12\">\n                       <Link\n-                        to=\"\" onClick={GoogleLogin}\n+                        to=\"\"\n+                        onClick={GoogleLogin}\n                         className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                       >\n                         <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                         <span className=\"d-none d-xs-block mx-5 px-3\">\n@@ -324,30 +380,33 @@\n                       </Link>\n                     </div>\n                     <div className=\"col-4 col-xs-12\">\n                       <Link\n-                        to=\"\" onClick={()=>setFacebook(true)}\n+                        to=\"\"\n+                        onClick={() => setFacebook(true)}\n                         className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                       >\n                         <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n                         <span className=\"d-none d-xs-block mx-5 px-3\">\n                           Import from Facebook\n                         </span>\n                       </Link>\n-                      {facebook ? \n-                      <FacebookLogin\n+                      {facebook ? (\n+                        <FacebookLogin\n                           appId=\"2170088543184291\"\n                           autoLoad\n                           callback={responseFacebook}\n                           fields=\"name,email,picture\"\n-                          scope=\"public_profile,user_friends,email,user_actions.books\"         \n+                          scope=\"public_profile,user_friends,email,user_actions.books\"\n                           className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                          render={renderProps => (\n-                            <button onClick={renderProps.onClick} className=\"d-none\">\n-                              </button>\n+                          render={(renderProps) => (\n+                            <button\n+                              onClick={renderProps.onClick}\n+                              className=\"d-none\"\n+                            ></button>\n                           )}\n                         />\n-                        :null}\n+                      ) : null}\n                     </div>\n                   </div>\n                   <div\n                     className={\n"
                },
                {
                    "date": 1693915358169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n   // });\n   // console.log(i , \"code =>\" , code);\n   const handleLinkedInLogin = () => {\n     const clientId = \"78mhwjaumkvtbm\";\n-    const redirectUri = \"http://localhost:3000/\";\n+    const redirectUri = \"http://3.6.36.125:3000/\";\n     const scope =\n       \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n \n     window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n"
                },
                {
                    "date": 1693915472454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,13 +253,9 @@\n             navigate(\"/\");\n           }\n         })\n         .catch((err) => {\n-          console.log(err.data);\n-          toast.success(\"Something went wrong\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n+          console.log(err.data)\n           setLoading(false);\n         });\n     }\n   }, []);\n"
                },
                {
                    "date": 1693915478296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,13 @@\n             navigate(\"/\");\n           }\n         })\n         .catch((err) => {\n-          console.log(err.data)\n+          console.log(err.data);\n+          toast.success(\"Something went wrong\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n           setLoading(false);\n         });\n     }\n   }, []);\n"
                },
                {
                    "date": 1693915487878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,636 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n+import {\n+  EmployeeLogin,\n+  EmployeeForgotPassword,\n+  LinkedInLogin,\n+  SocialLogin,\n+} from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from \"@react-oauth/google\";\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n+export default function EmployeeLoginModal(props) {\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+  let [loading, setLoading] = useState(false);\n+  let navigate = useNavigate();\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  const [searchParams] = useSearchParams();\n+  let code = searchParams.get(\"code\");\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n+  }\n+  /*Function to close the modal */\n+  const Close = () => {\n+    setShowForgotPassword(false);\n+    setLoading(false);\n+    props.close();\n+  };\n+  const type = localStorage.getItem(\"linkedin\");\n+  // let code = dataa[1].split(\"&\")[0]\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // handle form submission\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await EmployeeLogin(state);\n+        console.log(updatedTodo);\n+        if (updatedTodo.status) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"email\", updatedTodo.email);\n+          localStorage.setItem(\"userType\", \"user\");\n+          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n+          localStorage.setItem(\"name\", updatedTodo.name);\n+          localStorage.setItem(\"skill\", updatedTodo.skill);\n+          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+          navigate(\"/\");\n+          window.location.reload();\n+        }\n+        if (updatedTodo.message === \"Invalid credentials !\") {\n+          setLoading(false);\n+          setErrors({ ...errors, email: \"Invalid credentials !\" });\n+        }\n+      } catch (err) {\n+        toast.success(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER LOGIN VALIDATION\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // setLoading(true)\n+      setLoading(true);\n+      try {\n+        const Response = await EmployeeForgotPassword(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  /*Function to login with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\n+          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+          {\n+            headers: {\n+              Authorization: `Bearer ${tokenResponse.access_token}`,\n+            },\n+          }\n+        );\n+        try {\n+          if (data.data.email_verified === true) {\n+            let res = await SocialLogin(\n+              data.data.sub,\n+              data.data.email,\n+              data.data.name,\n+              data.data.picture,\n+              \"Google\"\n+            );\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"email\", res.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", res.employee_id);\n+            localStorage.setItem(\"profile_photo\", res.profile_photo);\n+            localStorage.setItem(\"skill\", res.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+        } catch (err) {\n+          toast.success(\"Something went wrong\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    },\n+  });\n+\n+  /*Function to login in with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = \"78mhwjaumkvtbm\";\n+    const redirectUri = \"http://3.6.36.125:3000/\";\n+    const scope =\n+      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n+      redirectUri\n+    )}&scope=${encodeURIComponent(scope)}`;\n+  };\n+  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n+  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n+  useEffect(() => {\n+    i = i + 1;\n+    if (\n+      (code !== \"\" ||\n+        code !== undefined ||\n+        code !== \"undefined\" ||\n+        code !== null) &&\n+      i === 1 &&\n+      type === \"employeeLogin\"\n+    ) {\n+      const response = LinkedInLogin(code, type);\n+      response\n+        .then((res) => {\n+          let decode = JSON.parse(res.data);\n+          if (res.data.email_verified === true) {\n+            let data = SocialLogin(\n+              res.data.sub,\n+              res.data.email,\n+              res.data.name,\n+              res.data.picture,\n+              \"Linkedin\"\n+            );\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"email\", data.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", data.employee_id);\n+            localStorage.setItem(\"profile_photo\", data.profile_photo);\n+            localStorage.setItem(\"skill\", data.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+          if (\n+            res.data.message ===\n+              \"The token used in the request has been revoked by the user\" ||\n+            decode.error_description ===\n+              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n+          ) {\n+            toast.error(\"Token Expired\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            navigate(\"/\");\n+          }\n+        })\n+        .catch((err) => {\n+          console.log(err.data)\n+          setLoading(false);\n+        });\n+    }\n+  }, []);\n+\n+  /*Functiom to login with facebook */\n+  const responseFacebook = async (response) => {\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialLogin(\n+          response.userID,\n+          response.email,\n+          response.name,\n+          response.picture.data.url,\n+          \"Facebook\"\n+        );\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"email\", data.email);\n+        localStorage.setItem(\"userType\", \"user\");\n+        localStorage.setItem(\"employee_id\", data.employee_id);\n+        localStorage.setItem(\"profile_photo\", data.profile_photo);\n+        localStorage.setItem(\"skill\", data.skill);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        Close();\n+        navigate(\"/\");\n+        window.location.reload();\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={Close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Welcome Back\n+                    </h3>\n+                    {showForgotPassword === false ? (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Log in to continue your account and explore new jobs.\n+                      </p>\n+                    ) : (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Enter the email to continue.\n+                      </p>\n+                    )}\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n+                  <div\n+                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n+                  >\n+                    <div className=\"col-4 col-xs-12\">\n+                      <button\n+                        onClick={handleLinkedInLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                      >\n+                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from LinkedIn\n+                        </span>\n+                      </button>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={GoogleLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Google\n+                        </span>\n+                      </Link>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={() => setFacebook(true)}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Facebook\n+                        </span>\n+                      </Link>\n+                      {facebook ? (\n+                        <FacebookLogin\n+                          appId=\"2170088543184291\"\n+                          autoLoad\n+                          callback={responseFacebook}\n+                          fields=\"name,email,picture\"\n+                          scope=\"public_profile,user_friends,email,user_actions.books\"\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                          render={(renderProps) => (\n+                            <button\n+                              onClick={renderProps.onClick}\n+                              className=\"d-none\"\n+                            ></button>\n+                          )}\n+                        />\n+                      ) : null}\n+                    </div>\n+                  </div>\n+                  <div\n+                    className={\n+                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n+                    }\n+                  >\n+                    <span className=\"font-size-3 line-height-reset \">Or</span>\n+                  </div>\n+                  {/* user login form */}\n+                  <form\n+                    onSubmit={onUserLoginClick}\n+                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n+                  >\n+                    <div className=\"form-group p-0\">\n+                      <label\n+                        htmlFor=\"useremail\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        name=\"email\"\n+                        value={state.useremail}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.useremail\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"useremail\"\n+                      />\n+                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                      {errors.useremail && (\n+                        <span>\n+                          {errors.useremail.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"userpassword\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Password\n+                      </label>\n+                      <div className=\"position-relative\">\n+                        <input\n+                          name=\"password\"\n+                          type=\"password\"\n+                          value={state.userpassword}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.userpassword\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Enter password\"\n+                          id=\"userpassword\"\n+                        />\n+                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                        {errors.userpassword && (\n+                          <span>\n+                            {errors.userpassword.map((error) => (\n+                              <span\n+                                key={error}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {error}\n+                              </span>\n+                            ))}\n+                          </span>\n+                        )}\n+                        {/* <a\n+                          href=\"http://localhost:3000/\"\n+                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n+                          data-show-pass=\"password\"\n+                        ></a> */}\n+                      </div>\n+                      <small className=\"text-danger\">{errors.email}</small>\n+                    </div>\n+                    <div className=\"d-flex flex-wrap justify-content-between\">\n+                      <label\n+                        htmlFor=\"terms-check\"\n+                        className=\"gr-check-input d-flex  mr-3\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"tandr\"\n+                          name=\"tandr\"\n+                          onChange={onInputChange}\n+                          className=\"text-black-2 pt-5 mr-5\"\n+                        />\n+                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                          Remember password\n+                        </span>\n+                      </label>\n+\n+                      <Link\n+                        to={\"\"}\n+                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n+                        onClick={() => setShowForgotPassword(true)}\n+                      >\n+                        Forget Password\n+                      </Link>\n+                      {/*----ERROR MESSAGE FOR terms----*/}\n+                      {errors.tandr && (\n+                        <span\n+                          key={errors.tandr}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.tandr}\n+                        </span>\n+                      )}\n+                    </div>\n+\n+                    <div className=\"form-group mb-8\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          Log in\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Don’t have an account?\n+                      <Link\n+                        className=\"text-primary\"\n+                        to={\"\"}\n+                        onClick={props.signUpClick}\n+                      >\n+                        Create a free account\n+                      </Link>\n+                    </p>\n+                  </form>\n+\n+                  <form\n+                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n+                    onSubmit={onForgoteClick}\n+                  >\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"forget_email\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        value={state.forget_email}\n+                        onChange={onInputChange}\n+                        className=\"form-control\"\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"forget_email\"\n+                        name=\"forget_email\"\n+                      />\n+                      {errors.forget_email && (\n+                        <span>\n+                          {errors.forget_email.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group text-center\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          send email\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Already have an account?\n+                      <Link\n+                        to=\"\"\n+                        className=\"text-primary\"\n+                        onClick={() => setShowForgotPassword(false)}\n+                      >\n+                        Login\n+                      </Link>\n+                    </p>\n+                  </form>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693915496217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,632 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n+import {\n+  EmployeeLogin,\n+  EmployeeForgotPassword,\n+  LinkedInLogin,\n+  SocialLogin,\n+} from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from \"@react-oauth/google\";\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n+export default function EmployeeLoginModal(props) {\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+  let [loading, setLoading] = useState(false);\n+  let navigate = useNavigate();\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  const [searchParams] = useSearchParams();\n+  let code = searchParams.get(\"code\");\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n+  }\n+  /*Function to close the modal */\n+  const Close = () => {\n+    setShowForgotPassword(false);\n+    setLoading(false);\n+    props.close();\n+  };\n+  const type = localStorage.getItem(\"linkedin\");\n+  // let code = dataa[1].split(\"&\")[0]\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // handle form submission\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await EmployeeLogin(state);\n+        console.log(updatedTodo);\n+        if (updatedTodo.status) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"email\", updatedTodo.email);\n+          localStorage.setItem(\"userType\", \"user\");\n+          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n+          localStorage.setItem(\"name\", updatedTodo.name);\n+          localStorage.setItem(\"skill\", updatedTodo.skill);\n+          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+          navigate(\"/\");\n+          window.location.reload();\n+        }\n+        if (updatedTodo.message === \"Invalid credentials !\") {\n+          setLoading(false);\n+          setErrors({ ...errors, email: \"Invalid credentials !\" });\n+        }\n+      } catch (err) {\n+        toast.success(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER LOGIN VALIDATION\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // setLoading(true)\n+      setLoading(true);\n+      try {\n+        const Response = await EmployeeForgotPassword(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  /*Function to login with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\n+          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+          {\n+            headers: {\n+              Authorization: `Bearer ${tokenResponse.access_token}`,\n+            },\n+          }\n+        );\n+        try {\n+          if (data.data.email_verified === true) {\n+            let res = await SocialLogin(\n+              data.data.sub,\n+              data.data.email,\n+              data.data.name,\n+              data.data.picture,\n+              \"Google\"\n+            );\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"email\", res.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", res.employee_id);\n+            localStorage.setItem(\"profile_photo\", res.profile_photo);\n+            localStorage.setItem(\"skill\", res.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+        } catch (err) {\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    },\n+  });\n+\n+  /*Function to login in with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = \"78mhwjaumkvtbm\";\n+    const redirectUri = \"http://3.6.36.125:3000/\";\n+    const scope =\n+      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n+      redirectUri\n+    )}&scope=${encodeURIComponent(scope)}`;\n+  };\n+  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n+  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n+  useEffect(() => {\n+    i = i + 1;\n+    if (\n+      (code !== \"\" ||\n+        code !== undefined ||\n+        code !== \"undefined\" ||\n+        code !== null) &&\n+      i === 1 &&\n+      type === \"employeeLogin\"\n+    ) {\n+      const response = LinkedInLogin(code, type);\n+      response\n+        .then((res) => {\n+          let decode = JSON.parse(res.data);\n+          if (res.data.email_verified === true) {\n+            let data = SocialLogin(\n+              res.data.sub,\n+              res.data.email,\n+              res.data.name,\n+              res.data.picture,\n+              \"Linkedin\"\n+            );\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"email\", data.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", data.employee_id);\n+            localStorage.setItem(\"profile_photo\", data.profile_photo);\n+            localStorage.setItem(\"skill\", data.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+          if (\n+            res.data.message ===\n+              \"The token used in the request has been revoked by the user\" ||\n+            decode.error_description ===\n+              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n+          ) {\n+            toast.error(\"Token Expired\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            navigate(\"/\");\n+          }\n+        })\n+        .catch((err) => {\n+          console.log(err.data)\n+          setLoading(false);\n+        });\n+    }\n+  }, []);\n+\n+  /*Functiom to login with facebook */\n+  const responseFacebook = async (response) => {\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialLogin(\n+          response.userID,\n+          response.email,\n+          response.name,\n+          response.picture.data.url,\n+          \"Facebook\"\n+        );\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"email\", data.email);\n+        localStorage.setItem(\"userType\", \"user\");\n+        localStorage.setItem(\"employee_id\", data.employee_id);\n+        localStorage.setItem(\"profile_photo\", data.profile_photo);\n+        localStorage.setItem(\"skill\", data.skill);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        Close();\n+        navigate(\"/\");\n+        window.location.reload();\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={Close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Welcome Back\n+                    </h3>\n+                    {showForgotPassword === false ? (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Log in to continue your account and explore new jobs.\n+                      </p>\n+                    ) : (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Enter the email to continue.\n+                      </p>\n+                    )}\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n+                  <div\n+                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n+                  >\n+                    <div className=\"col-4 col-xs-12\">\n+                      <button\n+                        onClick={handleLinkedInLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                      >\n+                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from LinkedIn\n+                        </span>\n+                      </button>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={GoogleLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Google\n+                        </span>\n+                      </Link>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={() => setFacebook(true)}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Facebook\n+                        </span>\n+                      </Link>\n+                      {facebook ? (\n+                        <FacebookLogin\n+                          appId=\"2170088543184291\"\n+                          autoLoad\n+                          callback={responseFacebook}\n+                          fields=\"name,email,picture\"\n+                          scope=\"public_profile,user_friends,email,user_actions.books\"\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                          render={(renderProps) => (\n+                            <button\n+                              onClick={renderProps.onClick}\n+                              className=\"d-none\"\n+                            ></button>\n+                          )}\n+                        />\n+                      ) : null}\n+                    </div>\n+                  </div>\n+                  <div\n+                    className={\n+                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n+                    }\n+                  >\n+                    <span className=\"font-size-3 line-height-reset \">Or</span>\n+                  </div>\n+                  {/* user login form */}\n+                  <form\n+                    onSubmit={onUserLoginClick}\n+                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n+                  >\n+                    <div className=\"form-group p-0\">\n+                      <label\n+                        htmlFor=\"useremail\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        name=\"email\"\n+                        value={state.useremail}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.useremail\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"useremail\"\n+                      />\n+                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                      {errors.useremail && (\n+                        <span>\n+                          {errors.useremail.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"userpassword\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Password\n+                      </label>\n+                      <div className=\"position-relative\">\n+                        <input\n+                          name=\"password\"\n+                          type=\"password\"\n+                          value={state.userpassword}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.userpassword\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Enter password\"\n+                          id=\"userpassword\"\n+                        />\n+                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                        {errors.userpassword && (\n+                          <span>\n+                            {errors.userpassword.map((error) => (\n+                              <span\n+                                key={error}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {error}\n+                              </span>\n+                            ))}\n+                          </span>\n+                        )}\n+                        {/* <a\n+                          href=\"http://localhost:3000/\"\n+                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n+                          data-show-pass=\"password\"\n+                        ></a> */}\n+                      </div>\n+                      <small className=\"text-danger\">{errors.email}</small>\n+                    </div>\n+                    <div className=\"d-flex flex-wrap justify-content-between\">\n+                      <label\n+                        htmlFor=\"terms-check\"\n+                        className=\"gr-check-input d-flex  mr-3\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"tandr\"\n+                          name=\"tandr\"\n+                          onChange={onInputChange}\n+                          className=\"text-black-2 pt-5 mr-5\"\n+                        />\n+                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                          Remember password\n+                        </span>\n+                      </label>\n+\n+                      <Link\n+                        to={\"\"}\n+                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n+                        onClick={() => setShowForgotPassword(true)}\n+                      >\n+                        Forget Password\n+                      </Link>\n+                      {/*----ERROR MESSAGE FOR terms----*/}\n+                      {errors.tandr && (\n+                        <span\n+                          key={errors.tandr}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.tandr}\n+                        </span>\n+                      )}\n+                    </div>\n+\n+                    <div className=\"form-group mb-8\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          Log in\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Don’t have an account?\n+                      <Link\n+                        className=\"text-primary\"\n+                        to={\"\"}\n+                        onClick={props.signUpClick}\n+                      >\n+                        Create a free account\n+                      </Link>\n+                    </p>\n+                  </form>\n+\n+                  <form\n+                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n+                    onSubmit={onForgoteClick}\n+                  >\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"forget_email\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        value={state.forget_email}\n+                        onChange={onInputChange}\n+                        className=\"form-control\"\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"forget_email\"\n+                        name=\"forget_email\"\n+                      />\n+                      {errors.forget_email && (\n+                        <span>\n+                          {errors.forget_email.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group text-center\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          send email\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Already have an account?\n+                      <Link\n+                        to=\"\"\n+                        className=\"text-primary\"\n+                        onClick={() => setShowForgotPassword(false)}\n+                      >\n+                        Login\n+                      </Link>\n+                    </p>\n+                  </form>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693915510522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,12 +97,8 @@\n           setLoading(false);\n           setErrors({ ...errors, email: \"Invalid credentials !\" });\n         }\n       } catch (err) {\n-        toast.success(\"Something went wrong\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n         setLoading(false);\n       }\n     }\n   };\n"
                },
                {
                    "date": 1693915816719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,628 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n+import {\n+  EmployeeLogin,\n+  EmployeeForgotPassword,\n+  LinkedInLogin,\n+  SocialLogin,\n+} from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from \"@react-oauth/google\";\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n+export default function EmployeeLoginModal(props) {\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+  let [loading, setLoading] = useState(false);\n+  let navigate = useNavigate();\n+  let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  const [searchParams] = useSearchParams();\n+  let code = searchParams.get(\"code\");\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n+  }\n+  /*Function to close the modal */\n+  const Close = () => {\n+    setShowForgotPassword(false);\n+    setLoading(false);\n+    props.close();\n+  };\n+  const type = localStorage.getItem(\"linkedin\");\n+  // let code = dataa[1].split(\"&\")[0]\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // handle form submission\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await EmployeeLogin(state);\n+        console.log(updatedTodo);\n+        if (updatedTodo.status) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"email\", updatedTodo.email);\n+          localStorage.setItem(\"userType\", \"user\");\n+          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n+          localStorage.setItem(\"name\", updatedTodo.name);\n+          localStorage.setItem(\"skill\", updatedTodo.skill);\n+          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+          navigate(\"/\");\n+          window.location.reload();\n+        }\n+        if (updatedTodo.message === \"Invalid credentials !\") {\n+          setLoading(false);\n+          setErrors({ ...errors, email: \"Invalid credentials !\" });\n+        }\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER LOGIN VALIDATION\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // setLoading(true)\n+      setLoading(true);\n+      try {\n+        const Response = await EmployeeForgotPassword(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  /*Function to login with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\n+          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+          {\n+            headers: {\n+              Authorization: `Bearer ${tokenResponse.access_token}`,\n+            },\n+          }\n+        );\n+        try {\n+          if (data.data.email_verified === true) {\n+            let res = await SocialLogin(\n+              data.data.sub,\n+              data.data.email,\n+              data.data.name,\n+              data.data.picture,\n+              \"Google\"\n+            );\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"email\", res.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", res.employee_id);\n+            localStorage.setItem(\"profile_photo\", res.profile_photo);\n+            localStorage.setItem(\"skill\", res.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+        } catch (err) {\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    },\n+  });\n+\n+  /*Function to login in with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = \"78mhwjaumkvtbm\";\n+    const redirectUri = \"http://3.6.36.125:3000/\";\n+    const scope =\n+      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n+      redirectUri\n+    )}&scope=${encodeURIComponent(scope)}`;\n+  };\n+  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n+  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n+  useEffect(() => {\n+    i = i + 1;\n+    if (\n+      (code !== \"\" ||\n+        code !== undefined ||\n+        code !== \"undefined\" ||\n+        code !== null) &&\n+      i === 1 &&\n+      type === \"employeeLogin\"\n+    ) {\n+      const response = LinkedInLogin(code, type);\n+      response\n+        .then((res) => {\n+          let decode = JSON.parse(res.data);\n+          if (res.data.email_verified === true) {\n+            let data = SocialLogin(\n+              res.data.sub,\n+              res.data.email,\n+              res.data.name,\n+              res.data.picture,\n+              \"Linkedin\"\n+            );\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"email\", data.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", data.employee_id);\n+            localStorage.setItem(\"profile_photo\", data.profile_photo);\n+            localStorage.setItem(\"skill\", data.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+          if (\n+            res.data.message ===\n+              \"The token used in the request has been revoked by the user\" ||\n+            decode.error_description ===\n+              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n+          ) {\n+            toast.error(\"Token Expired\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            navigate(\"/\");\n+          }\n+        })\n+        .catch((err) => {\n+          console.log(err.data)\n+          setLoading(false);\n+        });\n+    }\n+  }, []);\n+\n+  /*Functiom to login with facebook */\n+  const responseFacebook = async (response) => {\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialLogin(\n+          response.userID,\n+          response.email,\n+          response.name,\n+          response.picture.data.url,\n+          \"Facebook\"\n+        );\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"email\", data.email);\n+        localStorage.setItem(\"userType\", \"user\");\n+        localStorage.setItem(\"employee_id\", data.employee_id);\n+        localStorage.setItem(\"profile_photo\", data.profile_photo);\n+        localStorage.setItem(\"skill\", data.skill);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        Close();\n+        navigate(\"/\");\n+        window.location.reload();\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={Close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Welcome Back\n+                    </h3>\n+                    {showForgotPassword === false ? (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Log in to continue your account and explore new jobs.\n+                      </p>\n+                    ) : (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Enter the email to continue.\n+                      </p>\n+                    )}\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n+                  <div\n+                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n+                  >\n+                    <div className=\"col-4 col-xs-12\">\n+                      <button\n+                        onClick={handleLinkedInLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                      >\n+                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from LinkedIn\n+                        </span>\n+                      </button>\n+                    </div>\n+                    {/* <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={GoogleLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Google\n+                        </span>\n+                      </Link>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={() => setFacebook(true)}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Facebook\n+                        </span>\n+                      </Link>\n+                      {facebook ? (\n+                        <FacebookLogin\n+                          appId=\"2170088543184291\"\n+                          autoLoad\n+                          callback={responseFacebook}\n+                          fields=\"name,email,picture\"\n+                          scope=\"public_profile,user_friends,email,user_actions.books\"\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                          render={(renderProps) => (\n+                            <button\n+                              onClick={renderProps.onClick}\n+                              className=\"d-none\"\n+                            ></button>\n+                          )}\n+                        />\n+                      ) : null}\n+                    </div> */}\n+                  </div>\n+                  <div\n+                    className={\n+                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n+                    }\n+                  >\n+                    <span className=\"font-size-3 line-height-reset \">Or</span>\n+                  </div>\n+                  {/* user login form */}\n+                  <form\n+                    onSubmit={onUserLoginClick}\n+                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n+                  >\n+                    <div className=\"form-group p-0\">\n+                      <label\n+                        htmlFor=\"useremail\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        name=\"email\"\n+                        value={state.useremail}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.useremail\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"useremail\"\n+                      />\n+                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                      {errors.useremail && (\n+                        <span>\n+                          {errors.useremail.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"userpassword\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Password\n+                      </label>\n+                      <div className=\"position-relative\">\n+                        <input\n+                          name=\"password\"\n+                          type=\"password\"\n+                          value={state.userpassword}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.userpassword\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Enter password\"\n+                          id=\"userpassword\"\n+                        />\n+                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                        {errors.userpassword && (\n+                          <span>\n+                            {errors.userpassword.map((error) => (\n+                              <span\n+                                key={error}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {error}\n+                              </span>\n+                            ))}\n+                          </span>\n+                        )}\n+                        {/* <a\n+                          href=\"http://localhost:3000/\"\n+                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n+                          data-show-pass=\"password\"\n+                        ></a> */}\n+                      </div>\n+                      <small className=\"text-danger\">{errors.email}</small>\n+                    </div>\n+                    <div className=\"d-flex flex-wrap justify-content-between\">\n+                      <label\n+                        htmlFor=\"terms-check\"\n+                        className=\"gr-check-input d-flex  mr-3\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"tandr\"\n+                          name=\"tandr\"\n+                          onChange={onInputChange}\n+                          className=\"text-black-2 pt-5 mr-5\"\n+                        />\n+                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                          Remember password\n+                        </span>\n+                      </label>\n+\n+                      <Link\n+                        to={\"\"}\n+                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n+                        onClick={() => setShowForgotPassword(true)}\n+                      >\n+                        Forget Password\n+                      </Link>\n+                      {/*----ERROR MESSAGE FOR terms----*/}\n+                      {errors.tandr && (\n+                        <span\n+                          key={errors.tandr}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.tandr}\n+                        </span>\n+                      )}\n+                    </div>\n+\n+                    <div className=\"form-group mb-8\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          Log in\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Don’t have an account?\n+                      <Link\n+                        className=\"text-primary\"\n+                        to={\"\"}\n+                        onClick={props.signUpClick}\n+                      >\n+                        Create a free account\n+                      </Link>\n+                    </p>\n+                  </form>\n+\n+                  <form\n+                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n+                    onSubmit={onForgoteClick}\n+                  >\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"forget_email\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        value={state.forget_email}\n+                        onChange={onInputChange}\n+                        className=\"form-control\"\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"forget_email\"\n+                        name=\"forget_email\"\n+                      />\n+                      {errors.forget_email && (\n+                        <span>\n+                          {errors.forget_email.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group text-center\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          send email\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Already have an account?\n+                      <Link\n+                        to=\"\"\n+                        className=\"text-primary\"\n+                        onClick={() => setShowForgotPassword(false)}\n+                      >\n+                        Login\n+                      </Link>\n+                    </p>\n+                  </form>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693915868453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,628 @@\n+import React, { useEffect, useState } from \"react\";\n+import { Modal } from \"react-bootstrap\";\n+import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n+import {\n+  EmployeeLogin,\n+  EmployeeForgotPassword,\n+  LinkedInLogin,\n+  SocialLogin,\n+} from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { toast } from \"react-toastify\";\n+import { useGoogleLogin } from \"@react-oauth/google\";\n+import axios from \"axios\";\n+// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n+// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n+// import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n+export default function EmployeeLoginModal(props) {\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+  let [loading, setLoading] = useState(false);\n+  let navigate = useNavigate();\n+  // let [facebook, setFacebook] = useState(false);\n+  let i = 0;\n+  const [searchParams] = useSearchParams();\n+  let code = searchParams.get(\"code\");\n+  if (props.show === true) {\n+    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n+  }\n+  /*Function to close the modal */\n+  const Close = () => {\n+    setShowForgotPassword(false);\n+    setLoading(false);\n+    props.close();\n+  };\n+  const type = localStorage.getItem(\"linkedin\");\n+  // let code = dataa[1].split(\"&\")[0]\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // handle form submission\n+      setLoading(true);\n+      try {\n+        const updatedTodo = await EmployeeLogin(state);\n+        console.log(updatedTodo);\n+        if (updatedTodo.status) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"email\", updatedTodo.email);\n+          localStorage.setItem(\"userType\", \"user\");\n+          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n+          localStorage.setItem(\"name\", updatedTodo.name);\n+          localStorage.setItem(\"skill\", updatedTodo.skill);\n+          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+          navigate(\"/\");\n+          window.location.reload();\n+        }\n+        if (updatedTodo.message === \"Invalid credentials !\") {\n+          setLoading(false);\n+          setErrors({ ...errors, email: \"Invalid credentials !\" });\n+        }\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  // END USER LOGIN VALIDATION\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      // setLoading(true)\n+      setLoading(true);\n+      try {\n+        const Response = await EmployeeForgotPassword(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          Close();\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  /*Function to login with google */\n+  const GoogleLogin = useGoogleLogin({\n+    onSuccess: async (tokenResponse) => {\n+      try {\n+        let data = await axios(\n+          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+          {\n+            headers: {\n+              Authorization: `Bearer ${tokenResponse.access_token}`,\n+            },\n+          }\n+        );\n+        try {\n+          if (data.data.email_verified === true) {\n+            let res = await SocialLogin(\n+              data.data.sub,\n+              data.data.email,\n+              data.data.name,\n+              data.data.picture,\n+              \"Google\"\n+            );\n+            console.log(res);\n+            localStorage.setItem(\"token\", res.token);\n+            localStorage.setItem(\"email\", res.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", res.employee_id);\n+            localStorage.setItem(\"profile_photo\", res.profile_photo);\n+            localStorage.setItem(\"skill\", res.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+        } catch (err) {\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+      }\n+    },\n+  });\n+\n+  /*Function to login in with Linked in */\n+  /*Code to get access token */\n+  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n+  // .then(response => {\n+  //   console.log('data', response.data);\n+  // })\n+  // .catch(error => {\n+  //   console.error('Error:', error.message);\n+  // });\n+  // console.log(i , \"code =>\" , code);\n+  const handleLinkedInLogin = () => {\n+    const clientId = \"78mhwjaumkvtbm\";\n+    const redirectUri = \"http://3.6.36.125:3000/\";\n+    const scope =\n+      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n+\n+    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n+      redirectUri\n+    )}&scope=${encodeURIComponent(scope)}`;\n+  };\n+  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n+  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n+  useEffect(() => {\n+    i = i + 1;\n+    if (\n+      (code !== \"\" ||\n+        code !== undefined ||\n+        code !== \"undefined\" ||\n+        code !== null) &&\n+      i === 1 &&\n+      type === \"employeeLogin\"\n+    ) {\n+      const response = LinkedInLogin(code, type);\n+      response\n+        .then((res) => {\n+          let decode = JSON.parse(res.data);\n+          if (res.data.email_verified === true) {\n+            let data = SocialLogin(\n+              res.data.sub,\n+              res.data.email,\n+              res.data.name,\n+              res.data.picture,\n+              \"Linkedin\"\n+            );\n+            console.log(data);\n+            localStorage.setItem(\"token\", data.token);\n+            localStorage.setItem(\"email\", data.email);\n+            localStorage.setItem(\"userType\", \"user\");\n+            localStorage.setItem(\"employee_id\", data.employee_id);\n+            localStorage.setItem(\"profile_photo\", data.profile_photo);\n+            localStorage.setItem(\"skill\", data.skill);\n+            toast.success(\"Logged In Successfully\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            Close();\n+            navigate(\"/\");\n+            window.location.reload();\n+          }\n+          if (\n+            res.data.message ===\n+              \"The token used in the request has been revoked by the user\" ||\n+            decode.error_description ===\n+              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n+          ) {\n+            toast.error(\"Token Expired\", {\n+              position: toast.POSITION.TOP_RIGHT,\n+              autoClose: 1000,\n+            });\n+            navigate(\"/\");\n+          }\n+        })\n+        .catch((err) => {\n+          console.log(err.data)\n+          setLoading(false);\n+        });\n+    }\n+  }, []);\n+\n+  /*Functiom to login with facebook */\n+  const responseFacebook = async (response) => {\n+    if (response.graphDomain === \"facebook\") {\n+      try {\n+        let data = await SocialLogin(\n+          response.userID,\n+          response.email,\n+          response.name,\n+          response.picture.data.url,\n+          \"Facebook\"\n+        );\n+        localStorage.setItem(\"token\", data.token);\n+        localStorage.setItem(\"email\", data.email);\n+        localStorage.setItem(\"userType\", \"user\");\n+        localStorage.setItem(\"employee_id\", data.employee_id);\n+        localStorage.setItem(\"profile_photo\", data.profile_photo);\n+        localStorage.setItem(\"skill\", data.skill);\n+        toast.success(\"Logged In Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        Close();\n+        navigate(\"/\");\n+        window.location.reload();\n+      } catch (err) {\n+        setLoading(false);\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login Modal --> */}\n+      <Modal\n+        show={props.show}\n+        size=\"lg\"\n+        aria-labelledby=\"contained-modal-title-vcenter\"\n+        centered\n+      >\n+        <div className=\"modal-dialog max-width-px-840 position-relative\">\n+          <button\n+            type=\"button\"\n+            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n+            data-dismiss=\"modal\"\n+            onClick={Close}\n+          >\n+            <i className=\"fas fa-times\"></i>\n+          </button>\n+          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n+            <div className=\"row no-gutters\">\n+              <div className=\"col-lg-5 col-md-6\">\n+                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n+                  <div className=\"pb-9\">\n+                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n+                      Welcome Back\n+                    </h3>\n+                    {showForgotPassword === false ? (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Log in to continue your account and explore new jobs.\n+                      </p>\n+                    ) : (\n+                      <p className=\"mb-0 font-size-4 text-white\">\n+                        Enter the email to continue.\n+                      </p>\n+                    )}\n+                  </div>\n+                  <div className=\"border-top border-default-color-2 mt-auto\">\n+                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">295</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New jobs posted today\n+                        </p>\n+                      </div>\n+                      <div className=\"pt-5 px-9\">\n+                        <h3 className=\"font-size-7 text-white\">14</h3>\n+                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n+                          New companies registered\n+                        </p>\n+                      </div>\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+              <div className=\"col-lg-7 col-md-6\">\n+                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n+                  <div\n+                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n+                  >\n+                    <div className=\"col-4 col-xs-12\">\n+                      <button\n+                        onClick={handleLinkedInLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n+                      >\n+                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from LinkedIn\n+                        </span>\n+                      </button>\n+                    </div>\n+                    {/* <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={GoogleLogin}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Google\n+                        </span>\n+                      </Link>\n+                    </div>\n+                    <div className=\"col-4 col-xs-12\">\n+                      <Link\n+                        to=\"\"\n+                        onClick={() => setFacebook(true)}\n+                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                      >\n+                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n+                        <span className=\"d-none d-xs-block mx-5 px-3\">\n+                          Import from Facebook\n+                        </span>\n+                      </Link>\n+                      {facebook ? (\n+                        <FacebookLogin\n+                          appId=\"2170088543184291\"\n+                          autoLoad\n+                          callback={responseFacebook}\n+                          fields=\"name,email,picture\"\n+                          scope=\"public_profile,user_friends,email,user_actions.books\"\n+                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n+                          render={(renderProps) => (\n+                            <button\n+                              onClick={renderProps.onClick}\n+                              className=\"d-none\"\n+                            ></button>\n+                          )}\n+                        />\n+                      ) : null}\n+                    </div> */}\n+                  </div>\n+                  <div\n+                    className={\n+                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n+                    }\n+                  >\n+                    <span className=\"font-size-3 line-height-reset \">Or</span>\n+                  </div>\n+                  {/* user login form */}\n+                  <form\n+                    onSubmit={onUserLoginClick}\n+                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n+                  >\n+                    <div className=\"form-group p-0\">\n+                      <label\n+                        htmlFor=\"useremail\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        name=\"email\"\n+                        value={state.useremail}\n+                        onChange={onInputChange}\n+                        className={\n+                          errors.useremail\n+                            ? \"form-control border border-danger\"\n+                            : \"form-control\"\n+                        }\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"useremail\"\n+                      />\n+                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                      {errors.useremail && (\n+                        <span>\n+                          {errors.useremail.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"userpassword\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        Password\n+                      </label>\n+                      <div className=\"position-relative\">\n+                        <input\n+                          name=\"password\"\n+                          type=\"password\"\n+                          value={state.userpassword}\n+                          onChange={onInputChange}\n+                          className={\n+                            errors.userpassword\n+                              ? \"form-control border border-danger\"\n+                              : \"form-control\"\n+                          }\n+                          placeholder=\"Enter password\"\n+                          id=\"userpassword\"\n+                        />\n+                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                        {errors.userpassword && (\n+                          <span>\n+                            {errors.userpassword.map((error) => (\n+                              <span\n+                                key={error}\n+                                className=\"text-danger font-size-3\"\n+                              >\n+                                {error}\n+                              </span>\n+                            ))}\n+                          </span>\n+                        )}\n+                        {/* <a\n+                          href=\"http://localhost:3000/\"\n+                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n+                          data-show-pass=\"password\"\n+                        ></a> */}\n+                      </div>\n+                      <small className=\"text-danger\">{errors.email}</small>\n+                    </div>\n+                    <div className=\"d-flex flex-wrap justify-content-between\">\n+                      <label\n+                        htmlFor=\"terms-check\"\n+                        className=\"gr-check-input d-flex  mr-3\"\n+                      >\n+                        <input\n+                          type=\"checkbox\"\n+                          id=\"tandr\"\n+                          name=\"tandr\"\n+                          onChange={onInputChange}\n+                          className=\"text-black-2 pt-5 mr-5\"\n+                        />\n+                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                          Remember password\n+                        </span>\n+                      </label>\n+\n+                      <Link\n+                        to={\"\"}\n+                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n+                        onClick={() => setShowForgotPassword(true)}\n+                      >\n+                        Forget Password\n+                      </Link>\n+                      {/*----ERROR MESSAGE FOR terms----*/}\n+                      {errors.tandr && (\n+                        <span\n+                          key={errors.tandr}\n+                          className=\"text-danger font-size-3\"\n+                        >\n+                          {errors.tandr}\n+                        </span>\n+                      )}\n+                    </div>\n+\n+                    <div className=\"form-group mb-8\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          Log in\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Don’t have an account?\n+                      <Link\n+                        className=\"text-primary\"\n+                        to={\"\"}\n+                        onClick={props.signUpClick}\n+                      >\n+                        Create a free account\n+                      </Link>\n+                    </p>\n+                  </form>\n+\n+                  <form\n+                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n+                    onSubmit={onForgoteClick}\n+                  >\n+                    <div className=\"form-group\">\n+                      <label\n+                        htmlFor=\"forget_email\"\n+                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                      >\n+                        E-mail\n+                      </label>\n+                      <input\n+                        type=\"email\"\n+                        value={state.forget_email}\n+                        onChange={onInputChange}\n+                        className=\"form-control\"\n+                        placeholder=\"example@gmail.com\"\n+                        id=\"forget_email\"\n+                        name=\"forget_email\"\n+                      />\n+                      {errors.forget_email && (\n+                        <span>\n+                          {errors.forget_email.map((error) => (\n+                            <span\n+                              key={error}\n+                              className=\"text-danger font-size-3\"\n+                            >\n+                              {error}\n+                            </span>\n+                          ))}\n+                        </span>\n+                      )}\n+                    </div>\n+                    <div className=\"form-group text-center\">\n+                      {loading === true ? (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"button\"\n+                          disabled\n+                        >\n+                          <span\n+                            className=\"spinner-border spinner-border-sm \"\n+                            role=\"status\"\n+                            aria-hidden=\"true\"\n+                          ></span>\n+                          <span className=\"sr-only\">Loading...</span>\n+                        </button>\n+                      ) : (\n+                        <button\n+                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n+                          type=\"submit\"\n+                        >\n+                          send email\n+                        </button>\n+                      )}\n+                    </div>\n+                    <p className=\"font-size-4 text-center heading-default-color\">\n+                      Already have an account?\n+                      <Link\n+                        to=\"\"\n+                        className=\"text-primary\"\n+                        onClick={() => setShowForgotPassword(false)}\n+                      >\n+                        Login\n+                      </Link>\n+                    </p>\n+                  </form>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </Modal>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1693915877229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,680 +128,52 @@\n       }\n     }\n   };\n   /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\n-          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n-          {\n-            headers: {\n-              Authorization: `Bearer ${tokenResponse.access_token}`,\n-            },\n-          }\n-        );\n-        try {\n-          if (data.data.email_verified === true) {\n-            let res = await SocialLogin(\n-              data.data.sub,\n-              data.data.email,\n-              data.data.name,\n-              data.data.picture,\n-              \"Google\"\n-            );\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"email\", res.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", res.employee_id);\n-            localStorage.setItem(\"profile_photo\", res.profile_photo);\n-            localStorage.setItem(\"skill\", res.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-        } catch (err) {\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    },\n-  });\n-\n-  /*Function to login in with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n+  // const GoogleLogin = useGoogleLogin({\n+  //   onSuccess: async (tokenResponse) => {\n+  //     try {\n+  //       let data = await axios(\n+  //         \"https://www.googleapis.com/oauth2/v3/userinfo\",\n+  //         {\n+  //           headers: {\n+  //             Authorization: `Bearer ${tokenResponse.access_token}`,\n+  //           },\n+  //         }\n+  //       );\n+  //       try {\n+  //         if (data.data.email_verified === true) {\n+  //           let res = await SocialLogin(\n+  //             data.data.sub,\n+  //             data.data.email,\n+  //             data.data.name,\n+  //             data.data.picture,\n+  //             \"Google\"\n+  //           );\n+  //           console.log(res);\n+  //           localStorage.setItem(\"token\", res.token);\n+  //           localStorage.setItem(\"email\", res.email);\n+  //           localStorage.setItem(\"userType\", \"user\");\n+  //           localStorage.setItem(\"employee_id\", res.employee_id);\n+  //           localStorage.setItem(\"profile_photo\", res.profile_photo);\n+  //           localStorage.setItem(\"skill\", res.skill);\n+  //           toast.success(\"Logged In Successfully\", {\n+  //             position: toast.POSITION.TOP_RIGHT,\n+  //             autoClose: 1000,\n+  //           });\n+  //           Close();\n+  //           navigate(\"/\");\n+  //           window.location.reload();\n+  //         }\n+  //       } catch (err) {\n+  //         setLoading(false);\n+  //       }\n+  //     } catch (err) {\n+  //       console.log(err);\n+  //     }\n+  //   },\n   // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = \"78mhwjaumkvtbm\";\n-    const redirectUri = \"http://3.6.36.125:3000/\";\n-    const scope =\n-      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n \n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n-      redirectUri\n-    )}&scope=${encodeURIComponent(scope)}`;\n-  };\n-  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n-  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n-  useEffect(() => {\n-    i = i + 1;\n-    if (\n-      (code !== \"\" ||\n-        code !== undefined ||\n-        code !== \"undefined\" ||\n-        code !== null) &&\n-      i === 1 &&\n-      type === \"employeeLogin\"\n-    ) {\n-      const response = LinkedInLogin(code, type);\n-      response\n-        .then((res) => {\n-          let decode = JSON.parse(res.data);\n-          if (res.data.email_verified === true) {\n-            let data = SocialLogin(\n-              res.data.sub,\n-              res.data.email,\n-              res.data.name,\n-              res.data.picture,\n-              \"Linkedin\"\n-            );\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\", data.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", data.employee_id);\n-            localStorage.setItem(\"profile_photo\", data.profile_photo);\n-            localStorage.setItem(\"skill\", data.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-          if (\n-            res.data.message ===\n-              \"The token used in the request has been revoked by the user\" ||\n-            decode.error_description ===\n-              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n-          ) {\n-            toast.error(\"Token Expired\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            navigate(\"/\");\n-          }\n-        })\n-        .catch((err) => {\n-          console.log(err.data)\n-          setLoading(false);\n-        });\n-    }\n-  }, []);\n-\n-  /*Functiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialLogin(\n-          response.userID,\n-          response.email,\n-          response.name,\n-          response.picture.data.url,\n-          \"Facebook\"\n-        );\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"email\", data.email);\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", data.employee_id);\n-        localStorage.setItem(\"profile_photo\", data.profile_photo);\n-        localStorage.setItem(\"skill\", data.skill);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        Close();\n-        navigate(\"/\");\n-        window.location.reload();\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  return (\n-    <>\n-      {/* <!-- Login Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={Close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Welcome Back\n-                    </h3>\n-                    {showForgotPassword === false ? (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Log in to continue your account and explore new jobs.\n-                      </p>\n-                    ) : (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Enter the email to continue.\n-                      </p>\n-                    )}\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n-                  <div\n-                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n-                  >\n-                    <div className=\"col-4 col-xs-12\">\n-                      <button\n-                        onClick={handleLinkedInLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                      >\n-                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from LinkedIn\n-                        </span>\n-                      </button>\n-                    </div>\n-                    {/* <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={GoogleLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Google\n-                        </span>\n-                      </Link>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={() => setFacebook(true)}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Facebook\n-                        </span>\n-                      </Link>\n-                      {facebook ? (\n-                        <FacebookLogin\n-                          appId=\"2170088543184291\"\n-                          autoLoad\n-                          callback={responseFacebook}\n-                          fields=\"name,email,picture\"\n-                          scope=\"public_profile,user_friends,email,user_actions.books\"\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                          render={(renderProps) => (\n-                            <button\n-                              onClick={renderProps.onClick}\n-                              className=\"d-none\"\n-                            ></button>\n-                          )}\n-                        />\n-                      ) : null}\n-                    </div> */}\n-                  </div>\n-                  <div\n-                    className={\n-                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n-                    }\n-                  >\n-                    <span className=\"font-size-3 line-height-reset \">Or</span>\n-                  </div>\n-                  {/* user login form */}\n-                  <form\n-                    onSubmit={onUserLoginClick}\n-                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n-                  >\n-                    <div className=\"form-group p-0\">\n-                      <label\n-                        htmlFor=\"useremail\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        name=\"email\"\n-                        value={state.useremail}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.useremail\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"useremail\"\n-                      />\n-                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                      {errors.useremail && (\n-                        <span>\n-                          {errors.useremail.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"userpassword\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Password\n-                      </label>\n-                      <div className=\"position-relative\">\n-                        <input\n-                          name=\"password\"\n-                          type=\"password\"\n-                          value={state.userpassword}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.userpassword\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Enter password\"\n-                          id=\"userpassword\"\n-                        />\n-                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n-                        {errors.userpassword && (\n-                          <span>\n-                            {errors.userpassword.map((error) => (\n-                              <span\n-                                key={error}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {error}\n-                              </span>\n-                            ))}\n-                          </span>\n-                        )}\n-                        {/* <a\n-                          href=\"http://localhost:3000/\"\n-                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n-                          data-show-pass=\"password\"\n-                        ></a> */}\n-                      </div>\n-                      <small className=\"text-danger\">{errors.email}</small>\n-                    </div>\n-                    <div className=\"d-flex flex-wrap justify-content-between\">\n-                      <label\n-                        htmlFor=\"terms-check\"\n-                        className=\"gr-check-input d-flex  mr-3\"\n-                      >\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"tandr\"\n-                          name=\"tandr\"\n-                          onChange={onInputChange}\n-                          className=\"text-black-2 pt-5 mr-5\"\n-                        />\n-                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n-                          Remember password\n-                        </span>\n-                      </label>\n-\n-                      <Link\n-                        to={\"\"}\n-                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n-                        onClick={() => setShowForgotPassword(true)}\n-                      >\n-                        Forget Password\n-                      </Link>\n-                      {/*----ERROR MESSAGE FOR terms----*/}\n-                      {errors.tandr && (\n-                        <span\n-                          key={errors.tandr}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.tandr}\n-                        </span>\n-                      )}\n-                    </div>\n-\n-                    <div className=\"form-group mb-8\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          Log in\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Don’t have an account?\n-                      <Link\n-                        className=\"text-primary\"\n-                        to={\"\"}\n-                        onClick={props.signUpClick}\n-                      >\n-                        Create a free account\n-                      </Link>\n-                    </p>\n-                  </form>\n-\n-                  <form\n-                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n-                    onSubmit={onForgoteClick}\n-                  >\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"forget_email\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        value={state.forget_email}\n-                        onChange={onInputChange}\n-                        className=\"form-control\"\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"forget_email\"\n-                        name=\"forget_email\"\n-                      />\n-                      {errors.forget_email && (\n-                        <span>\n-                          {errors.forget_email.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group text-center\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          send email\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Already have an account?\n-                      <Link\n-                        to=\"\"\n-                        className=\"text-primary\"\n-                        onClick={() => setShowForgotPassword(false)}\n-                      >\n-                        Login\n-                      </Link>\n-                    </p>\n-                  </form>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n-import {\n-  EmployeeLogin,\n-  EmployeeForgotPassword,\n-  LinkedInLogin,\n-  SocialLogin,\n-} from \"../../api/api\";\n-import useValidation from \"../common/useValidation\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from \"@react-oauth/google\";\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n-export default function EmployeeLoginModal(props) {\n-  let [showForgotPassword, setShowForgotPassword] = useState(false);\n-  let [loading, setLoading] = useState(false);\n-  let navigate = useNavigate();\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  const [searchParams] = useSearchParams();\n-  let code = searchParams.get(\"code\");\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n-  }\n-  /*Function to close the modal */\n-  const Close = () => {\n-    setShowForgotPassword(false);\n-    setLoading(false);\n-    props.close();\n-  };\n-  const type = localStorage.getItem(\"linkedin\");\n-  // let code = dataa[1].split(\"&\")[0]\n-  /*----USER LOGIN VALIDATION----*/\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    forget_email: \"\",\n-  };\n-  /*----VALIDATION CONTENT----*/\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n-    forget_email: [\n-      (value) =>\n-        state.email\n-          ? \"\"\n-          : value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-  };\n-  /*----LOGIN ONCHANGE FUNCTION----*/\n-  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n-    initialFormState,\n-    validators\n-  );\n-\n-  /*----LOGIN SUBMIT FUNCTION----*/\n-  const onUserLoginClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // handle form submission\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await EmployeeLogin(state);\n-        console.log(updatedTodo);\n-        if (updatedTodo.status) {\n-          localStorage.setItem(\"token\", updatedTodo.token);\n-          localStorage.setItem(\"email\", updatedTodo.email);\n-          localStorage.setItem(\"userType\", \"user\");\n-          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n-          localStorage.setItem(\"name\", updatedTodo.name);\n-          localStorage.setItem(\"skill\", updatedTodo.skill);\n-          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-          navigate(\"/\");\n-          window.location.reload();\n-        }\n-        if (updatedTodo.message === \"Invalid credentials !\") {\n-          setLoading(false);\n-          setErrors({ ...errors, email: \"Invalid credentials !\" });\n-        }\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER LOGIN VALIDATION\n-  const onForgoteClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // setLoading(true)\n-      setLoading(true);\n-      try {\n-        const Response = await EmployeeForgotPassword(state);\n-        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-          toast.success(\"Email sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-        } else if (Response.message === \"No user found\") {\n-          setLoading(false);\n-          setErrors({ ...errors, Credentials: [\"No user found\"] });\n-          //   handle form submission\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\n-          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n-          {\n-            headers: {\n-              Authorization: `Bearer ${tokenResponse.access_token}`,\n-            },\n-          }\n-        );\n-        try {\n-          if (data.data.email_verified === true) {\n-            let res = await SocialLogin(\n-              data.data.sub,\n-              data.data.email,\n-              data.data.name,\n-              data.data.picture,\n-              \"Google\"\n-            );\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"email\", res.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", res.employee_id);\n-            localStorage.setItem(\"profile_photo\", res.profile_photo);\n-            localStorage.setItem(\"skill\", res.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-        } catch (err) {\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    },\n-  });\n-\n   /*Function to login in with Linked in */\n   /*Code to get access token */\n   // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n   // .then(response => {\n@@ -1253,1912 +625,4 @@\n       </Modal>\n     </>\n   );\n }\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n-import {\n-  EmployeeLogin,\n-  EmployeeForgotPassword,\n-  LinkedInLogin,\n-  SocialLogin,\n-} from \"../../api/api\";\n-import useValidation from \"../common/useValidation\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from \"@react-oauth/google\";\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n-export default function EmployeeLoginModal(props) {\n-  let [showForgotPassword, setShowForgotPassword] = useState(false);\n-  let [loading, setLoading] = useState(false);\n-  let navigate = useNavigate();\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  const [searchParams] = useSearchParams();\n-  let code = searchParams.get(\"code\");\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n-  }\n-  /*Function to close the modal */\n-  const Close = () => {\n-    setShowForgotPassword(false);\n-    setLoading(false);\n-    props.close();\n-  };\n-  const type = localStorage.getItem(\"linkedin\");\n-  // let code = dataa[1].split(\"&\")[0]\n-  /*----USER LOGIN VALIDATION----*/\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    forget_email: \"\",\n-  };\n-  /*----VALIDATION CONTENT----*/\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n-    forget_email: [\n-      (value) =>\n-        state.email\n-          ? \"\"\n-          : value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-  };\n-  /*----LOGIN ONCHANGE FUNCTION----*/\n-  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n-    initialFormState,\n-    validators\n-  );\n-\n-  /*----LOGIN SUBMIT FUNCTION----*/\n-  const onUserLoginClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // handle form submission\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await EmployeeLogin(state);\n-        console.log(updatedTodo);\n-        if (updatedTodo.status) {\n-          localStorage.setItem(\"token\", updatedTodo.token);\n-          localStorage.setItem(\"email\", updatedTodo.email);\n-          localStorage.setItem(\"userType\", \"user\");\n-          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n-          localStorage.setItem(\"name\", updatedTodo.name);\n-          localStorage.setItem(\"skill\", updatedTodo.skill);\n-          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-          navigate(\"/\");\n-          window.location.reload();\n-        }\n-        if (updatedTodo.message === \"Invalid credentials !\") {\n-          setLoading(false);\n-          setErrors({ ...errors, email: \"Invalid credentials !\" });\n-        }\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER LOGIN VALIDATION\n-  const onForgoteClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // setLoading(true)\n-      setLoading(true);\n-      try {\n-        const Response = await EmployeeForgotPassword(state);\n-        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-          toast.success(\"Email sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-        } else if (Response.message === \"No user found\") {\n-          setLoading(false);\n-          setErrors({ ...errors, Credentials: [\"No user found\"] });\n-          //   handle form submission\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\n-          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n-          {\n-            headers: {\n-              Authorization: `Bearer ${tokenResponse.access_token}`,\n-            },\n-          }\n-        );\n-        try {\n-          if (data.data.email_verified === true) {\n-            let res = await SocialLogin(\n-              data.data.sub,\n-              data.data.email,\n-              data.data.name,\n-              data.data.picture,\n-              \"Google\"\n-            );\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"email\", res.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", res.employee_id);\n-            localStorage.setItem(\"profile_photo\", res.profile_photo);\n-            localStorage.setItem(\"skill\", res.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-        } catch (err) {\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    },\n-  });\n-\n-  /*Function to login in with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n-  // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = \"78mhwjaumkvtbm\";\n-    const redirectUri = \"http://3.6.36.125:3000/\";\n-    const scope =\n-      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n-\n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n-      redirectUri\n-    )}&scope=${encodeURIComponent(scope)}`;\n-  };\n-  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n-  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n-  useEffect(() => {\n-    i = i + 1;\n-    if (\n-      (code !== \"\" ||\n-        code !== undefined ||\n-        code !== \"undefined\" ||\n-        code !== null) &&\n-      i === 1 &&\n-      type === \"employeeLogin\"\n-    ) {\n-      const response = LinkedInLogin(code, type);\n-      response\n-        .then((res) => {\n-          let decode = JSON.parse(res.data);\n-          if (res.data.email_verified === true) {\n-            let data = SocialLogin(\n-              res.data.sub,\n-              res.data.email,\n-              res.data.name,\n-              res.data.picture,\n-              \"Linkedin\"\n-            );\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\", data.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", data.employee_id);\n-            localStorage.setItem(\"profile_photo\", data.profile_photo);\n-            localStorage.setItem(\"skill\", data.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-          if (\n-            res.data.message ===\n-              \"The token used in the request has been revoked by the user\" ||\n-            decode.error_description ===\n-              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n-          ) {\n-            toast.error(\"Token Expired\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            navigate(\"/\");\n-          }\n-        })\n-        .catch((err) => {\n-          console.log(err.data)\n-          setLoading(false);\n-        });\n-    }\n-  }, []);\n-\n-  /*Functiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialLogin(\n-          response.userID,\n-          response.email,\n-          response.name,\n-          response.picture.data.url,\n-          \"Facebook\"\n-        );\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"email\", data.email);\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", data.employee_id);\n-        localStorage.setItem(\"profile_photo\", data.profile_photo);\n-        localStorage.setItem(\"skill\", data.skill);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        Close();\n-        navigate(\"/\");\n-        window.location.reload();\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  return (\n-    <>\n-      {/* <!-- Login Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={Close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Welcome Back\n-                    </h3>\n-                    {showForgotPassword === false ? (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Log in to continue your account and explore new jobs.\n-                      </p>\n-                    ) : (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Enter the email to continue.\n-                      </p>\n-                    )}\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n-                  <div\n-                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n-                  >\n-                    <div className=\"col-4 col-xs-12\">\n-                      <button\n-                        onClick={handleLinkedInLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                      >\n-                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from LinkedIn\n-                        </span>\n-                      </button>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={GoogleLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Google\n-                        </span>\n-                      </Link>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={() => setFacebook(true)}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Facebook\n-                        </span>\n-                      </Link>\n-                      {facebook ? (\n-                        <FacebookLogin\n-                          appId=\"2170088543184291\"\n-                          autoLoad\n-                          callback={responseFacebook}\n-                          fields=\"name,email,picture\"\n-                          scope=\"public_profile,user_friends,email,user_actions.books\"\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                          render={(renderProps) => (\n-                            <button\n-                              onClick={renderProps.onClick}\n-                              className=\"d-none\"\n-                            ></button>\n-                          )}\n-                        />\n-                      ) : null}\n-                    </div>\n-                  </div>\n-                  <div\n-                    className={\n-                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n-                    }\n-                  >\n-                    <span className=\"font-size-3 line-height-reset \">Or</span>\n-                  </div>\n-                  {/* user login form */}\n-                  <form\n-                    onSubmit={onUserLoginClick}\n-                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n-                  >\n-                    <div className=\"form-group p-0\">\n-                      <label\n-                        htmlFor=\"useremail\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        name=\"email\"\n-                        value={state.useremail}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.useremail\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"useremail\"\n-                      />\n-                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                      {errors.useremail && (\n-                        <span>\n-                          {errors.useremail.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"userpassword\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Password\n-                      </label>\n-                      <div className=\"position-relative\">\n-                        <input\n-                          name=\"password\"\n-                          type=\"password\"\n-                          value={state.userpassword}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.userpassword\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Enter password\"\n-                          id=\"userpassword\"\n-                        />\n-                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n-                        {errors.userpassword && (\n-                          <span>\n-                            {errors.userpassword.map((error) => (\n-                              <span\n-                                key={error}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {error}\n-                              </span>\n-                            ))}\n-                          </span>\n-                        )}\n-                        {/* <a\n-                          href=\"http://localhost:3000/\"\n-                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n-                          data-show-pass=\"password\"\n-                        ></a> */}\n-                      </div>\n-                      <small className=\"text-danger\">{errors.email}</small>\n-                    </div>\n-                    <div className=\"d-flex flex-wrap justify-content-between\">\n-                      <label\n-                        htmlFor=\"terms-check\"\n-                        className=\"gr-check-input d-flex  mr-3\"\n-                      >\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"tandr\"\n-                          name=\"tandr\"\n-                          onChange={onInputChange}\n-                          className=\"text-black-2 pt-5 mr-5\"\n-                        />\n-                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n-                          Remember password\n-                        </span>\n-                      </label>\n-\n-                      <Link\n-                        to={\"\"}\n-                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n-                        onClick={() => setShowForgotPassword(true)}\n-                      >\n-                        Forget Password\n-                      </Link>\n-                      {/*----ERROR MESSAGE FOR terms----*/}\n-                      {errors.tandr && (\n-                        <span\n-                          key={errors.tandr}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.tandr}\n-                        </span>\n-                      )}\n-                    </div>\n-\n-                    <div className=\"form-group mb-8\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          Log in\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Don’t have an account?\n-                      <Link\n-                        className=\"text-primary\"\n-                        to={\"\"}\n-                        onClick={props.signUpClick}\n-                      >\n-                        Create a free account\n-                      </Link>\n-                    </p>\n-                  </form>\n-\n-                  <form\n-                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n-                    onSubmit={onForgoteClick}\n-                  >\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"forget_email\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        value={state.forget_email}\n-                        onChange={onInputChange}\n-                        className=\"form-control\"\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"forget_email\"\n-                        name=\"forget_email\"\n-                      />\n-                      {errors.forget_email && (\n-                        <span>\n-                          {errors.forget_email.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group text-center\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          send email\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Already have an account?\n-                      <Link\n-                        to=\"\"\n-                        className=\"text-primary\"\n-                        onClick={() => setShowForgotPassword(false)}\n-                      >\n-                        Login\n-                      </Link>\n-                    </p>\n-                  </form>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n-import {\n-  EmployeeLogin,\n-  EmployeeForgotPassword,\n-  LinkedInLogin,\n-  SocialLogin,\n-} from \"../../api/api\";\n-import useValidation from \"../common/useValidation\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from \"@react-oauth/google\";\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n-export default function EmployeeLoginModal(props) {\n-  let [showForgotPassword, setShowForgotPassword] = useState(false);\n-  let [loading, setLoading] = useState(false);\n-  let navigate = useNavigate();\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  const [searchParams] = useSearchParams();\n-  let code = searchParams.get(\"code\");\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n-  }\n-  /*Function to close the modal */\n-  const Close = () => {\n-    setShowForgotPassword(false);\n-    setLoading(false);\n-    props.close();\n-  };\n-  const type = localStorage.getItem(\"linkedin\");\n-  // let code = dataa[1].split(\"&\")[0]\n-  /*----USER LOGIN VALIDATION----*/\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    forget_email: \"\",\n-  };\n-  /*----VALIDATION CONTENT----*/\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n-    forget_email: [\n-      (value) =>\n-        state.email\n-          ? \"\"\n-          : value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-  };\n-  /*----LOGIN ONCHANGE FUNCTION----*/\n-  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n-    initialFormState,\n-    validators\n-  );\n-\n-  /*----LOGIN SUBMIT FUNCTION----*/\n-  const onUserLoginClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // handle form submission\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await EmployeeLogin(state);\n-        console.log(updatedTodo);\n-        if (updatedTodo.status) {\n-          localStorage.setItem(\"token\", updatedTodo.token);\n-          localStorage.setItem(\"email\", updatedTodo.email);\n-          localStorage.setItem(\"userType\", \"user\");\n-          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n-          localStorage.setItem(\"name\", updatedTodo.name);\n-          localStorage.setItem(\"skill\", updatedTodo.skill);\n-          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-          navigate(\"/\");\n-          window.location.reload();\n-        }\n-        if (updatedTodo.message === \"Invalid credentials !\") {\n-          setLoading(false);\n-          setErrors({ ...errors, email: \"Invalid credentials !\" });\n-        }\n-      } catch (err) {\n-        toast.success(\"Something went wrong\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER LOGIN VALIDATION\n-  const onForgoteClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // setLoading(true)\n-      setLoading(true);\n-      try {\n-        const Response = await EmployeeForgotPassword(state);\n-        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-          toast.success(\"Email sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-        } else if (Response.message === \"No user found\") {\n-          setLoading(false);\n-          setErrors({ ...errors, Credentials: [\"No user found\"] });\n-          //   handle form submission\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\n-          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n-          {\n-            headers: {\n-              Authorization: `Bearer ${tokenResponse.access_token}`,\n-            },\n-          }\n-        );\n-        try {\n-          if (data.data.email_verified === true) {\n-            let res = await SocialLogin(\n-              data.data.sub,\n-              data.data.email,\n-              data.data.name,\n-              data.data.picture,\n-              \"Google\"\n-            );\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"email\", res.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", res.employee_id);\n-            localStorage.setItem(\"profile_photo\", res.profile_photo);\n-            localStorage.setItem(\"skill\", res.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-        } catch (err) {\n-          toast.success(\"Something went wrong\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    },\n-  });\n-\n-  /*Function to login in with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n-  // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = \"78mhwjaumkvtbm\";\n-    const redirectUri = \"http://3.6.36.125:3000/\";\n-    const scope =\n-      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n-\n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n-      redirectUri\n-    )}&scope=${encodeURIComponent(scope)}`;\n-  };\n-  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n-  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n-  useEffect(() => {\n-    i = i + 1;\n-    if (\n-      (code !== \"\" ||\n-        code !== undefined ||\n-        code !== \"undefined\" ||\n-        code !== null) &&\n-      i === 1 &&\n-      type === \"employeeLogin\"\n-    ) {\n-      const response = LinkedInLogin(code, type);\n-      response\n-        .then((res) => {\n-          let decode = JSON.parse(res.data);\n-          if (res.data.email_verified === true) {\n-            let data = SocialLogin(\n-              res.data.sub,\n-              res.data.email,\n-              res.data.name,\n-              res.data.picture,\n-              \"Linkedin\"\n-            );\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\", data.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", data.employee_id);\n-            localStorage.setItem(\"profile_photo\", data.profile_photo);\n-            localStorage.setItem(\"skill\", data.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-          if (\n-            res.data.message ===\n-              \"The token used in the request has been revoked by the user\" ||\n-            decode.error_description ===\n-              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n-          ) {\n-            toast.error(\"Token Expired\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            navigate(\"/\");\n-          }\n-        })\n-        .catch((err) => {\n-          console.log(err.data)\n-          setLoading(false);\n-        });\n-    }\n-  }, []);\n-\n-  /*Functiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialLogin(\n-          response.userID,\n-          response.email,\n-          response.name,\n-          response.picture.data.url,\n-          \"Facebook\"\n-        );\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"email\", data.email);\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", data.employee_id);\n-        localStorage.setItem(\"profile_photo\", data.profile_photo);\n-        localStorage.setItem(\"skill\", data.skill);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        Close();\n-        navigate(\"/\");\n-        window.location.reload();\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  return (\n-    <>\n-      {/* <!-- Login Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={Close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Welcome Back\n-                    </h3>\n-                    {showForgotPassword === false ? (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Log in to continue your account and explore new jobs.\n-                      </p>\n-                    ) : (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Enter the email to continue.\n-                      </p>\n-                    )}\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n-                  <div\n-                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n-                  >\n-                    <div className=\"col-4 col-xs-12\">\n-                      <button\n-                        onClick={handleLinkedInLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                      >\n-                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from LinkedIn\n-                        </span>\n-                      </button>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={GoogleLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Google\n-                        </span>\n-                      </Link>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={() => setFacebook(true)}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Facebook\n-                        </span>\n-                      </Link>\n-                      {facebook ? (\n-                        <FacebookLogin\n-                          appId=\"2170088543184291\"\n-                          autoLoad\n-                          callback={responseFacebook}\n-                          fields=\"name,email,picture\"\n-                          scope=\"public_profile,user_friends,email,user_actions.books\"\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                          render={(renderProps) => (\n-                            <button\n-                              onClick={renderProps.onClick}\n-                              className=\"d-none\"\n-                            ></button>\n-                          )}\n-                        />\n-                      ) : null}\n-                    </div>\n-                  </div>\n-                  <div\n-                    className={\n-                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n-                    }\n-                  >\n-                    <span className=\"font-size-3 line-height-reset \">Or</span>\n-                  </div>\n-                  {/* user login form */}\n-                  <form\n-                    onSubmit={onUserLoginClick}\n-                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n-                  >\n-                    <div className=\"form-group p-0\">\n-                      <label\n-                        htmlFor=\"useremail\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        name=\"email\"\n-                        value={state.useremail}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.useremail\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"useremail\"\n-                      />\n-                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                      {errors.useremail && (\n-                        <span>\n-                          {errors.useremail.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"userpassword\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Password\n-                      </label>\n-                      <div className=\"position-relative\">\n-                        <input\n-                          name=\"password\"\n-                          type=\"password\"\n-                          value={state.userpassword}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.userpassword\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Enter password\"\n-                          id=\"userpassword\"\n-                        />\n-                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n-                        {errors.userpassword && (\n-                          <span>\n-                            {errors.userpassword.map((error) => (\n-                              <span\n-                                key={error}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {error}\n-                              </span>\n-                            ))}\n-                          </span>\n-                        )}\n-                        {/* <a\n-                          href=\"http://localhost:3000/\"\n-                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n-                          data-show-pass=\"password\"\n-                        ></a> */}\n-                      </div>\n-                      <small className=\"text-danger\">{errors.email}</small>\n-                    </div>\n-                    <div className=\"d-flex flex-wrap justify-content-between\">\n-                      <label\n-                        htmlFor=\"terms-check\"\n-                        className=\"gr-check-input d-flex  mr-3\"\n-                      >\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"tandr\"\n-                          name=\"tandr\"\n-                          onChange={onInputChange}\n-                          className=\"text-black-2 pt-5 mr-5\"\n-                        />\n-                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n-                          Remember password\n-                        </span>\n-                      </label>\n-\n-                      <Link\n-                        to={\"\"}\n-                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n-                        onClick={() => setShowForgotPassword(true)}\n-                      >\n-                        Forget Password\n-                      </Link>\n-                      {/*----ERROR MESSAGE FOR terms----*/}\n-                      {errors.tandr && (\n-                        <span\n-                          key={errors.tandr}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.tandr}\n-                        </span>\n-                      )}\n-                    </div>\n-\n-                    <div className=\"form-group mb-8\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          Log in\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Don’t have an account?\n-                      <Link\n-                        className=\"text-primary\"\n-                        to={\"\"}\n-                        onClick={props.signUpClick}\n-                      >\n-                        Create a free account\n-                      </Link>\n-                    </p>\n-                  </form>\n-\n-                  <form\n-                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n-                    onSubmit={onForgoteClick}\n-                  >\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"forget_email\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        value={state.forget_email}\n-                        onChange={onInputChange}\n-                        className=\"form-control\"\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"forget_email\"\n-                        name=\"forget_email\"\n-                      />\n-                      {errors.forget_email && (\n-                        <span>\n-                          {errors.forget_email.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group text-center\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          send email\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Already have an account?\n-                      <Link\n-                        to=\"\"\n-                        className=\"text-primary\"\n-                        onClick={() => setShowForgotPassword(false)}\n-                      >\n-                        Login\n-                      </Link>\n-                    </p>\n-                  </form>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n-import React, { useEffect, useState } from \"react\";\n-import { Modal } from \"react-bootstrap\";\n-import { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n-import {\n-  EmployeeLogin,\n-  EmployeeForgotPassword,\n-  LinkedInLogin,\n-  SocialLogin,\n-} from \"../../api/api\";\n-import useValidation from \"../common/useValidation\";\n-import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from \"@react-oauth/google\";\n-import axios from \"axios\";\n-// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n-// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n-import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n-export default function EmployeeLoginModal(props) {\n-  let [showForgotPassword, setShowForgotPassword] = useState(false);\n-  let [loading, setLoading] = useState(false);\n-  let navigate = useNavigate();\n-  let [facebook, setFacebook] = useState(false);\n-  let i = 0;\n-  const [searchParams] = useSearchParams();\n-  let code = searchParams.get(\"code\");\n-  if (props.show === true) {\n-    localStorage.setItem(\"linkedin\", \"employeeLogin\");\n-  }\n-  /*Function to close the modal */\n-  const Close = () => {\n-    setShowForgotPassword(false);\n-    setLoading(false);\n-    props.close();\n-  };\n-  const type = localStorage.getItem(\"linkedin\");\n-  // let code = dataa[1].split(\"&\")[0]\n-  /*----USER LOGIN VALIDATION----*/\n-  const initialFormState = {\n-    email: \"\",\n-    password: \"\",\n-    forget_email: \"\",\n-  };\n-  /*----VALIDATION CONTENT----*/\n-  const validators = {\n-    email: [\n-      (value) =>\n-        value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n-    forget_email: [\n-      (value) =>\n-        state.email\n-          ? \"\"\n-          : value === null || value.trim() === \"\"\n-          ? \"Email is required\"\n-          : /\\S+@\\S+\\.\\S+/.test(value)\n-          ? null\n-          : \"Email is invalid\",\n-    ],\n-  };\n-  /*----LOGIN ONCHANGE FUNCTION----*/\n-  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n-    initialFormState,\n-    validators\n-  );\n-\n-  /*----LOGIN SUBMIT FUNCTION----*/\n-  const onUserLoginClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // handle form submission\n-      setLoading(true);\n-      try {\n-        const updatedTodo = await EmployeeLogin(state);\n-        console.log(updatedTodo);\n-        if (updatedTodo.status) {\n-          localStorage.setItem(\"token\", updatedTodo.token);\n-          localStorage.setItem(\"email\", updatedTodo.email);\n-          localStorage.setItem(\"userType\", \"user\");\n-          localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n-          localStorage.setItem(\"name\", updatedTodo.name);\n-          localStorage.setItem(\"skill\", updatedTodo.skill);\n-          localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n-          toast.success(\"Logged In Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-          navigate(\"/\");\n-          window.location.reload();\n-        }\n-        if (updatedTodo.message === \"Invalid credentials !\") {\n-          setLoading(false);\n-          setErrors({ ...errors, email: \"Invalid credentials !\" });\n-        }\n-      } catch (err) {\n-        toast.success(\"Something went wrong\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  // END USER LOGIN VALIDATION\n-  const onForgoteClick = async (event) => {\n-    event.preventDefault();\n-    if (validate()) {\n-      // setLoading(true)\n-      setLoading(true);\n-      try {\n-        const Response = await EmployeeForgotPassword(state);\n-        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n-          toast.success(\"Email sent Successfully\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-          Close();\n-        } else if (Response.message === \"No user found\") {\n-          setLoading(false);\n-          setErrors({ ...errors, Credentials: [\"No user found\"] });\n-          //   handle form submission\n-        }\n-      } catch (err) {\n-        console.log(err);\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  /*Function to login with google */\n-  const GoogleLogin = useGoogleLogin({\n-    onSuccess: async (tokenResponse) => {\n-      try {\n-        let data = await axios(\n-          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n-          {\n-            headers: {\n-              Authorization: `Bearer ${tokenResponse.access_token}`,\n-            },\n-          }\n-        );\n-        try {\n-          if (data.data.email_verified === true) {\n-            let res = await SocialLogin(\n-              data.data.sub,\n-              data.data.email,\n-              data.data.name,\n-              data.data.picture,\n-              \"Google\"\n-            );\n-            console.log(res);\n-            localStorage.setItem(\"token\", res.token);\n-            localStorage.setItem(\"email\", res.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", res.employee_id);\n-            localStorage.setItem(\"profile_photo\", res.profile_photo);\n-            localStorage.setItem(\"skill\", res.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-        } catch (err) {\n-          toast.success(\"Something went wrong\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-        }\n-      } catch (err) {\n-        console.log(err);\n-      }\n-    },\n-  });\n-\n-  /*Function to login in with Linked in */\n-  /*Code to get access token */\n-  // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n-  // .then(response => {\n-  //   console.log('data', response.data);\n-  // })\n-  // .catch(error => {\n-  //   console.error('Error:', error.message);\n-  // });\n-  // console.log(i , \"code =>\" , code);\n-  const handleLinkedInLogin = () => {\n-    const clientId = \"78mhwjaumkvtbm\";\n-    const redirectUri = \"http://3.6.36.125:3000/\";\n-    const scope =\n-      \"r_liteprofile r_emailaddress w_member_social profile email openid\";\n-\n-    window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(\n-      redirectUri\n-    )}&scope=${encodeURIComponent(scope)}`;\n-  };\n-  // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n-  // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n-  useEffect(() => {\n-    i = i + 1;\n-    if (\n-      (code !== \"\" ||\n-        code !== undefined ||\n-        code !== \"undefined\" ||\n-        code !== null) &&\n-      i === 1 &&\n-      type === \"employeeLogin\"\n-    ) {\n-      const response = LinkedInLogin(code, type);\n-      response\n-        .then((res) => {\n-          let decode = JSON.parse(res.data);\n-          if (res.data.email_verified === true) {\n-            let data = SocialLogin(\n-              res.data.sub,\n-              res.data.email,\n-              res.data.name,\n-              res.data.picture,\n-              \"Linkedin\"\n-            );\n-            console.log(data);\n-            localStorage.setItem(\"token\", data.token);\n-            localStorage.setItem(\"email\", data.email);\n-            localStorage.setItem(\"userType\", \"user\");\n-            localStorage.setItem(\"employee_id\", data.employee_id);\n-            localStorage.setItem(\"profile_photo\", data.profile_photo);\n-            localStorage.setItem(\"skill\", data.skill);\n-            toast.success(\"Logged In Successfully\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            Close();\n-            navigate(\"/\");\n-            window.location.reload();\n-          }\n-          if (\n-            res.data.message ===\n-              \"The token used in the request has been revoked by the user\" ||\n-            decode.error_description ===\n-              \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"\n-          ) {\n-            toast.error(\"Token Expired\", {\n-              position: toast.POSITION.TOP_RIGHT,\n-              autoClose: 1000,\n-            });\n-            navigate(\"/\");\n-          }\n-        })\n-        .catch((err) => {\n-          console.log(err.data);\n-          toast.success(\"Something went wrong\", {\n-            position: toast.POSITION.TOP_RIGHT,\n-            autoClose: 1000,\n-          });\n-          setLoading(false);\n-        });\n-    }\n-  }, []);\n-\n-  /*Functiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialLogin(\n-          response.userID,\n-          response.email,\n-          response.name,\n-          response.picture.data.url,\n-          \"Facebook\"\n-        );\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"email\", data.email);\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", data.employee_id);\n-        localStorage.setItem(\"profile_photo\", data.profile_photo);\n-        localStorage.setItem(\"skill\", data.skill);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        Close();\n-        navigate(\"/\");\n-        window.location.reload();\n-      } catch (err) {\n-        toast.success(\"Something went Wrong\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setLoading(false);\n-      }\n-    }\n-  };\n-  return (\n-    <>\n-      {/* <!-- Login Modal --> */}\n-      <Modal\n-        show={props.show}\n-        size=\"lg\"\n-        aria-labelledby=\"contained-modal-title-vcenter\"\n-        centered\n-      >\n-        <div className=\"modal-dialog max-width-px-840 position-relative\">\n-          <button\n-            type=\"button\"\n-            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n-            data-dismiss=\"modal\"\n-            onClick={Close}\n-          >\n-            <i className=\"fas fa-times\"></i>\n-          </button>\n-          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n-            <div className=\"row no-gutters\">\n-              <div className=\"col-lg-5 col-md-6\">\n-                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n-                  <div className=\"pb-9\">\n-                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n-                      Welcome Back\n-                    </h3>\n-                    {showForgotPassword === false ? (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Log in to continue your account and explore new jobs.\n-                      </p>\n-                    ) : (\n-                      <p className=\"mb-0 font-size-4 text-white\">\n-                        Enter the email to continue.\n-                      </p>\n-                    )}\n-                  </div>\n-                  <div className=\"border-top border-default-color-2 mt-auto\">\n-                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">295</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New jobs posted today\n-                        </p>\n-                      </div>\n-                      <div className=\"pt-5 px-9\">\n-                        <h3 className=\"font-size-7 text-white\">14</h3>\n-                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n-                          New companies registered\n-                        </p>\n-                      </div>\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-              <div className=\"col-lg-7 col-md-6\">\n-                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n-                  <div\n-                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n-                  >\n-                    <div className=\"col-4 col-xs-12\">\n-                      <button\n-                        onClick={handleLinkedInLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\"\n-                      >\n-                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from LinkedIn\n-                        </span>\n-                      </button>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={GoogleLogin}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Google\n-                        </span>\n-                      </Link>\n-                    </div>\n-                    <div className=\"col-4 col-xs-12\">\n-                      <Link\n-                        to=\"\"\n-                        onClick={() => setFacebook(true)}\n-                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                      >\n-                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>\n-                        <span className=\"d-none d-xs-block mx-5 px-3\">\n-                          Import from Facebook\n-                        </span>\n-                      </Link>\n-                      {facebook ? (\n-                        <FacebookLogin\n-                          appId=\"2170088543184291\"\n-                          autoLoad\n-                          callback={responseFacebook}\n-                          fields=\"name,email,picture\"\n-                          scope=\"public_profile,user_friends,email,user_actions.books\"\n-                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n-                          render={(renderProps) => (\n-                            <button\n-                              onClick={renderProps.onClick}\n-                              className=\"d-none\"\n-                            ></button>\n-                          )}\n-                        />\n-                      ) : null}\n-                    </div>\n-                  </div>\n-                  <div\n-                    className={\n-                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n-                    }\n-                  >\n-                    <span className=\"font-size-3 line-height-reset \">Or</span>\n-                  </div>\n-                  {/* user login form */}\n-                  <form\n-                    onSubmit={onUserLoginClick}\n-                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n-                  >\n-                    <div className=\"form-group p-0\">\n-                      <label\n-                        htmlFor=\"useremail\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        name=\"email\"\n-                        value={state.useremail}\n-                        onChange={onInputChange}\n-                        className={\n-                          errors.useremail\n-                            ? \"form-control border border-danger\"\n-                            : \"form-control\"\n-                        }\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"useremail\"\n-                      />\n-                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n-                      {errors.useremail && (\n-                        <span>\n-                          {errors.useremail.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"userpassword\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        Password\n-                      </label>\n-                      <div className=\"position-relative\">\n-                        <input\n-                          name=\"password\"\n-                          type=\"password\"\n-                          value={state.userpassword}\n-                          onChange={onInputChange}\n-                          className={\n-                            errors.userpassword\n-                              ? \"form-control border border-danger\"\n-                              : \"form-control\"\n-                          }\n-                          placeholder=\"Enter password\"\n-                          id=\"userpassword\"\n-                        />\n-                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n-                        {errors.userpassword && (\n-                          <span>\n-                            {errors.userpassword.map((error) => (\n-                              <span\n-                                key={error}\n-                                className=\"text-danger font-size-3\"\n-                              >\n-                                {error}\n-                              </span>\n-                            ))}\n-                          </span>\n-                        )}\n-                        {/* <a\n-                          href=\"http://localhost:3000/\"\n-                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n-                          data-show-pass=\"password\"\n-                        ></a> */}\n-                      </div>\n-                      <small className=\"text-danger\">{errors.email}</small>\n-                    </div>\n-                    <div className=\"d-flex flex-wrap justify-content-between\">\n-                      <label\n-                        htmlFor=\"terms-check\"\n-                        className=\"gr-check-input d-flex  mr-3\"\n-                      >\n-                        <input\n-                          type=\"checkbox\"\n-                          id=\"tandr\"\n-                          name=\"tandr\"\n-                          onChange={onInputChange}\n-                          className=\"text-black-2 pt-5 mr-5\"\n-                        />\n-                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n-                          Remember password\n-                        </span>\n-                      </label>\n-\n-                      <Link\n-                        to={\"\"}\n-                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n-                        onClick={() => setShowForgotPassword(true)}\n-                      >\n-                        Forget Password\n-                      </Link>\n-                      {/*----ERROR MESSAGE FOR terms----*/}\n-                      {errors.tandr && (\n-                        <span\n-                          key={errors.tandr}\n-                          className=\"text-danger font-size-3\"\n-                        >\n-                          {errors.tandr}\n-                        </span>\n-                      )}\n-                    </div>\n-\n-                    <div className=\"form-group mb-8\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          Log in\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Don’t have an account?\n-                      <Link\n-                        className=\"text-primary\"\n-                        to={\"\"}\n-                        onClick={props.signUpClick}\n-                      >\n-                        Create a free account\n-                      </Link>\n-                    </p>\n-                  </form>\n-\n-                  <form\n-                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n-                    onSubmit={onForgoteClick}\n-                  >\n-                    <div className=\"form-group\">\n-                      <label\n-                        htmlFor=\"forget_email\"\n-                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n-                      >\n-                        E-mail\n-                      </label>\n-                      <input\n-                        type=\"email\"\n-                        value={state.forget_email}\n-                        onChange={onInputChange}\n-                        className=\"form-control\"\n-                        placeholder=\"example@gmail.com\"\n-                        id=\"forget_email\"\n-                        name=\"forget_email\"\n-                      />\n-                      {errors.forget_email && (\n-                        <span>\n-                          {errors.forget_email.map((error) => (\n-                            <span\n-                              key={error}\n-                              className=\"text-danger font-size-3\"\n-                            >\n-                              {error}\n-                            </span>\n-                          ))}\n-                        </span>\n-                      )}\n-                    </div>\n-                    <div className=\"form-group text-center\">\n-                      {loading === true ? (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"button\"\n-                          disabled\n-                        >\n-                          <span\n-                            className=\"spinner-border spinner-border-sm \"\n-                            role=\"status\"\n-                            aria-hidden=\"true\"\n-                          ></span>\n-                          <span className=\"sr-only\">Loading...</span>\n-                        </button>\n-                      ) : (\n-                        <button\n-                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n-                          type=\"submit\"\n-                        >\n-                          send email\n-                        </button>\n-                      )}\n-                    </div>\n-                    <p className=\"font-size-4 text-center heading-default-color\">\n-                      Already have an account?\n-                      <Link\n-                        to=\"\"\n-                        className=\"text-primary\"\n-                        onClick={() => setShowForgotPassword(false)}\n-                      >\n-                        Login\n-                      </Link>\n-                    </p>\n-                  </form>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </Modal>\n-    </>\n-  );\n-}\n"
                },
                {
                    "date": 1693915885131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,10 @@\n   SocialLogin,\n } from \"../../api/api\";\n import useValidation from \"../common/useValidation\";\n import { toast } from \"react-toastify\";\n-import { useGoogleLogin } from \"@react-oauth/google\";\n-import axios from \"axios\";\n+// import { useGoogleLogin } from \"@react-oauth/google\";\n+// import axios from \"axios\";\n // import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n // import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\n // import FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n export default function EmployeeLoginModal(props) {\n"
                },
                {
                    "date": 1693915927324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,36 +252,36 @@\n     }\n   }, []);\n \n   /*Functiom to login with facebook */\n-  const responseFacebook = async (response) => {\n-    if (response.graphDomain === \"facebook\") {\n-      try {\n-        let data = await SocialLogin(\n-          response.userID,\n-          response.email,\n-          response.name,\n-          response.picture.data.url,\n-          \"Facebook\"\n-        );\n-        localStorage.setItem(\"token\", data.token);\n-        localStorage.setItem(\"email\", data.email);\n-        localStorage.setItem(\"userType\", \"user\");\n-        localStorage.setItem(\"employee_id\", data.employee_id);\n-        localStorage.setItem(\"profile_photo\", data.profile_photo);\n-        localStorage.setItem(\"skill\", data.skill);\n-        toast.success(\"Logged In Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        Close();\n-        navigate(\"/\");\n-        window.location.reload();\n-      } catch (err) {\n-        setLoading(false);\n-      }\n-    }\n-  };\n+  // const responseFacebook = async (response) => {\n+  //   if (response.graphDomain === \"facebook\") {\n+  //     try {\n+  //       let data = await SocialLogin(\n+  //         response.userID,\n+  //         response.email,\n+  //         response.name,\n+  //         response.picture.data.url,\n+  //         \"Facebook\"\n+  //       );\n+  //       localStorage.setItem(\"token\", data.token);\n+  //       localStorage.setItem(\"email\", data.email);\n+  //       localStorage.setItem(\"userType\", \"user\");\n+  //       localStorage.setItem(\"employee_id\", data.employee_id);\n+  //       localStorage.setItem(\"profile_photo\", data.profile_photo);\n+  //       localStorage.setItem(\"skill\", data.skill);\n+  //       toast.success(\"Logged In Successfully\", {\n+  //         position: toast.POSITION.TOP_RIGHT,\n+  //         autoClose: 1000,\n+  //       });\n+  //       Close();\n+  //       navigate(\"/\");\n+  //       window.location.reload();\n+  //     } catch (err) {\n+  //       setLoading(false);\n+  //     }\n+  //   }\n+  // };\n   return (\n     <>\n       {/* <!-- Login Modal --> */}\n       <Modal\n"
                }
            ],
            "date": 1693486956903,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { EmployeeLogin, EmployeeForgotPassword , LinkedInLogin , SocialLogin} from \"../../api/api\";\nimport useValidation from \"../common/useValidation\";\nimport { toast } from \"react-toastify\";\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from \"axios\";\n// import { useLinkedIn , LinkedIn} from \"react-linkedin-login-oauth2\";\n// import linkedin from 'react-linkedin-login-oauth2/assets/linkedin.png';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nexport default  function EmployeeLoginModal(props) {\n  let [showForgotPassword, setShowForgotPassword] = useState(false);\n  let [loading, setLoading] = useState(false);\n  let navigate = useNavigate();\n  let [facebook, setFacebook] = useState(false);\n  let i = 0;\n  const [searchParams] = useSearchParams()\n  let code = searchParams.get(\"code\")\n if(props.show === true){\n  localStorage.setItem(\"linkedin\", \"employeeLogin\");\n }\n const type = localStorage.getItem(\"linkedin\");\n    // let code = dataa[1].split(\"&\")[0]\n  /*----USER LOGIN VALIDATION----*/\n  const initialFormState = {\n    email: \"\",\n    password: \"\",\n    forget_email: \"\",\n  };\n  /*----VALIDATION CONTENT----*/\n  const validators = {\n    email: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n    forget_email: [\n      (value) =>\n        state.email\n          ? \"\"\n          : value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n  };\n  /*----LOGIN ONCHANGE FUNCTION----*/\n  const { state, onInputChange, setErrors, errors, validate } = useValidation(\n    initialFormState,\n    validators\n  );\n\n  /*----LOGIN SUBMIT FUNCTION----*/\n  const onUserLoginClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      // handle form submission\n      setLoading(true);\n      try{const updatedTodo = await EmployeeLogin(state);\n      console.log(updatedTodo)\n      if (updatedTodo.status) {\n        localStorage.setItem(\"token\", updatedTodo.token);\n        localStorage.setItem(\"email\",updatedTodo.email)\n        localStorage.setItem(\"userType\", \"user\");\n        localStorage.setItem(\"employee_id\", updatedTodo.employee_id);\n        localStorage.setItem(\"name\", updatedTodo.name);\n        localStorage.setItem(\"skill\", updatedTodo.skill);\n        localStorage.setItem(\"profile_photo\", updatedTodo.profile_photo);\n        toast.success(\"Logged In Successfully\", \n        setLoading(false);\n        props.close();\n        navigate(\"/\");\n        window.location.reload();\n      }\n      if (updatedTodo.message === \"Invalid credentials !\") {\n        setLoading(false);\n        setErrors({ ...errors, email: \"Invalid credentials !\" });\n      }\n    }catch(err){\n      toast.success(\"Something went wrong\", {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 1000,\n      });\n      setLoading(false);\n    }}\n  };\n  // END USER LOGIN VALIDATION\n  const onForgoteClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      // setLoading(true)\n      setLoading(true);\n     try{ const Response = await EmployeeForgotPassword(state);\n      if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n        toast.success(\"Email sent Successfully\", \n        setLoading(false);\n        props.close();\n      } else if (Response.message === \"No user found\") {\n        setLoading(false);\n        setErrors({ ...errors, Credentials: [\"No user found\"] });\n        //   handle form submission\n      }}catch(err){\n        toast.success(\"Something went wrong\", \n        setLoading(false);\n      }\n    }\n  };\n    /*Function to login with google */\n    const GoogleLogin = useGoogleLogin({\n      onSuccess: async (tokenResponse) => {\n        try {\n          let data = await axios(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n            headers: {  \n              \"Authorization\": `Bearer ${tokenResponse.access_token}`\n            }\n          });\n         try{if(data.data.email_verified === true){\n          let res = await SocialLogin(data.data.sub,data.data.email,data.data.name,data.data.picture,\"Google\");\n          console.log(res,);\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"email\",res.email)\n          localStorage.setItem(\"userType\", \"user\");\n          localStorage.setItem(\"employee_id\", res.employee_id);\n          localStorage.setItem(\"profile_photo\", res.profile_photo);\n          localStorage.setItem(\"skill\", res.skill);\n          toast.success(\"Logged In Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          props.close();\n          navigate(\"/\");\n          window.location.reload();\n        }}catch(err){\n          toast.success(\"Something went wrong\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setLoading(false);\n        }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n\n    /*Function to login in with Linked in */\n    /*Code to get access token */\n    // axios.post(`https://www.linkedin.com/oauth/v2/accessToken?code=${code}&grant_type=authorization_code&client_id=78mhwjaumkvtbm&client_secret=ZoZKbJgORl0vYJFr&redirect_uri=${window.location.origin}`)\n    // .then(response => {\n    //   console.log('data', response.data);\n    // })\n    // .catch(error => {\n    //   console.error('Error:', error.message);\n    // });\n    // console.log(i , \"code =>\" , code);\n    const handleLinkedInLogin = () => {\n      const clientId = '78mhwjaumkvtbm';\n      const redirectUri = 'http://localhost:3000/';\n      const scope = 'r_liteprofile r_emailaddress w_member_social profile email openid';\n\n      window.location.href = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scope)}`;\n    };\n    // console.log(\"sdfdgfdg.\",type,\"';;l;;;\",(code !== '' || code !== undefined || code !== \"undefined\" || code !== null) ,i, i === 1 , type === \"employeeLogin\");\n    // console.log((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 0 && type === \"employeeLogin\");\n    useEffect(() => {\n      i = i + 1\n      if((code !== '' || code !== undefined || code !== \"undefined\" || code !== null) && i === 1 && type === \"employeeLogin\" ){\n        const response =  LinkedInLogin(code , type);\n          response.then((res) =>{\n            let decode = JSON.parse(res.data)\n          if(res.data.email_verified === true){\n            let data =  SocialLogin(res.data.sub,res.data.email,res.data.name,res.data.picture,\"Linkedin\");\n            console.log(data);\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"email\",data.email)\n            localStorage.setItem(\"userType\", \"user\");\n            localStorage.setItem(\"employee_id\", data.employee_id);\n            localStorage.setItem(\"profile_photo\", data.profile_photo);\n            localStorage.setItem(\"skill\", data.skill);\n            toast.success(\"Logged In Successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.close();\n            navigate(\"/\");\n            window.location.reload();\n          }if(res.data.message === \"The token used in the request has been revoked by the user\" || decode.error_description === \"Unable to retrieve access token: appid/redirect uri/code verifier does not match authorization code. Or authorization code expired. Or external member binding exists\"){\n            toast.error(\"Token Expired\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            navigate(\"/\");}\n          }).catch((err) => {\n            console.log(err.data);\n              toast.success(\"Something went wrong\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 1000,\n              });\n              setLoading(false);\n          })\n          } \n        },[])\n\n      /*Functiom to login with facebook */\n      const responseFacebook = async (response) => {\n        if(response.graphDomain === \"facebook\"){\n         try{ let data = await SocialLogin(response.userID,response.email,response.name,response.picture.data.url,\"Facebook\");\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"email\",data.email)\n            localStorage.setItem(\"userType\", \"user\");\n            localStorage.setItem(\"employee_id\", data.employee_id);\n            localStorage.setItem(\"profile_photo\", data.profile_photo);\n            localStorage.setItem(\"skill\", data.skill);\n            toast.success(\"Logged In Successfully\", {\n              position: toast.POSITION.TOP_RIGHT,\n              autoClose: 1000,\n            });\n            props.close();\n            navigate(\"/\");\n            window.location.reload();}\n            catch(err){\n              toast.success(\"Something went Wrong\", {\n                position: toast.POSITION.TOP_RIGHT,\n                autoClose: 1000,\n              });\n              setLoading(false);\n            }\n          }\n      }\n  return (\n    <>\n      {/* <!-- Login Modal --> */}\n      <Modal\n        show={props.show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"modal-dialog max-width-px-840 position-relative\">\n          <button\n            type=\"button\"\n            className=\"circle-32 btn-reset bg-white pos-abs-tr mt-md-n6 mr-lg-n6 focus-reset z-index-supper\"\n            data-dismiss=\"modal\"\n            onClick={props.close}\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n          <div className=\"login-modal-main bg-white rounded-8 overflow-hidden\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-lg-5 col-md-6\">\n                <div className=\"pt-10 pb-6 pl-11 pr-12 bg-black-2 h-100 d-flex flex-column dark-mode-texts\">\n                  <div className=\"pb-9\">\n                    <h3 className=\"font-size-8 text-white line-height-reset pb-4 line-height-1p4\">\n                      Welcome Back\n                    </h3>\n                    {showForgotPassword === false ? (\n                      <p className=\"mb-0 font-size-4 text-white\">\n                        Log in to continue your account and explore new jobs.\n                      </p>\n                    ) : (\n                      <p className=\"mb-0 font-size-4 text-white\">\n                        Enter the email to continue.\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"border-top border-default-color-2 mt-auto\">\n                    <div className=\"d-flex mx-n9 pt-6 flex-xs-row flex-column\">\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">295</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New jobs posted today\n                        </p>\n                      </div>\n                      <div className=\"pt-5 px-9\">\n                        <h3 className=\"font-size-7 text-white\">14</h3>\n                        <p className=\"font-size-3 text-white gr-opacity-5 line-height-1p4\">\n                          New companies registered\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-7 col-md-6\">\n                <div className=\"bg-white-2 h-100 px-11 pt-11  pb-7 login_Modal_box\">\n                  <div\n                    className={showForgotPassword === false ? \"row\" : \"d-none\"}\n                  >\n                    <div className=\"col-4 col-xs-12\">\n                       <button onClick={handleLinkedInLogin}\n                       className=\"font-size-4 font-weight-semibold position-relative text-white bg-allports h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4 border-0\">\n                        <i className=\"fab fa-linkedin pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n                            <span className=\"d-none d-xs-block mx-5 px-3\">\n                              Import from LinkedIn\n                            </span></button>\n                    </div>\n                    <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\" onClick={GoogleLogin}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-poppy h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-google pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Google\n                        </span>\n                      </Link>\n                    </div>\n                    <div className=\"col-4 col-xs-12\">\n                      <Link\n                        to=\"\" onClick={()=>setFacebook(true)}\n                        className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                      >\n                        <i className=\"fab fa-facebook-square pos-xs-abs-cl font-size-7 ml-xs-4\"></i>{\" \"}\n                        <span className=\"d-none d-xs-block mx-5 px-3\">\n                          Import from Facebook\n                        </span>\n                      </Link>\n                      {facebook ? \n                      <FacebookLogin\n                          appId=\"2170088543184291\"\n                          autoLoad\n                          callback={responseFacebook}\n                          fields=\"name,email,picture\"\n                          scope=\"public_profile,user_friends,email,user_actions.books\"         \n                          className=\"font-size-4 font-weight-semibold position-relative text-white bg-marino h-px-48 flex-all-center w-100 px-6 rounded-5 mb-4\"\n                          render={renderProps => (\n                            <button onClick={renderProps.onClick} className=\"d-none\">\n                              </button>\n                          )}\n                        />\n                        :null}\n                    </div>\n                  </div>\n                  <div\n                    className={\n                      showForgotPassword === false ? \"or-devider\" : \"d-none\"\n                    }\n                  >\n                    <span className=\"font-size-3 line-height-reset \">Or</span>\n                  </div>\n                  {/* user login form */}\n                  <form\n                    onSubmit={onUserLoginClick}\n                    className={showForgotPassword === false ? \"\" : \"d-none\"}\n                  >\n                    <div className=\"form-group p-0\">\n                      <label\n                        htmlFor=\"useremail\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={state.useremail}\n                        onChange={onInputChange}\n                        className={\n                          errors.useremail\n                            ? \"form-control border border-danger\"\n                            : \"form-control\"\n                        }\n                        placeholder=\"example@gmail.com\"\n                        id=\"useremail\"\n                      />\n                      {/*----ERROR MESSAGE FOR EMAIL----*/}\n                      {errors.useremail && (\n                        <span>\n                          {errors.useremail.map((error) => (\n                            <span\n                              key={error}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {error}\n                            </span>\n                          ))}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"form-group\">\n                      <label\n                        htmlFor=\"userpassword\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        Password\n                      </label>\n                      <div className=\"position-relative\">\n                        <input\n                          name=\"password\"\n                          type=\"password\"\n                          value={state.userpassword}\n                          onChange={onInputChange}\n                          className={\n                            errors.userpassword\n                              ? \"form-control border border-danger\"\n                              : \"form-control\"\n                          }\n                          placeholder=\"Enter password\"\n                          id=\"userpassword\"\n                        />{\" \"}\n                        {/*----ERROR MESSAGE FOR PASSWORD----*/}\n                        {errors.userpassword && (\n                          <span>\n                            {errors.userpassword.map((error) => (\n                              <span\n                                key={error}\n                                className=\"text-danger font-size-3\"\n                              >\n                                {error}\n                              </span>\n                            ))}\n                          </span>\n                        )}\n                        {/* <a\n                          href=\"http://localhost:3000/\"\n                          className=\"show-password pos-abs-cr fas mr-6 text-black-2\"\n                          data-show-pass=\"password\"\n                        ></a> */}\n                      </div>\n                      <small className=\"text-danger\">{errors.email}</small>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between\">\n                      <label\n                        htmlFor=\"terms-check\"\n                        className=\"gr-check-input d-flex  mr-3\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          id=\"tandr\"\n                          name=\"tandr\"\n                          onChange={onInputChange}\n                          className=\"text-black-2 pt-5 mr-5\"\n                        />\n                        <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n                          Remember password\n                        </span>\n                      </label>\n\n                      <Link\n                        to={\"\"}\n                        className=\"font-size-3 text-dodger line-height-reset mb-3\"\n                        onClick={() => setShowForgotPassword(true)}\n                      >\n                        Forget Password\n                      </Link>\n                      {/*----ERROR MESSAGE FOR terms----*/}\n                      {errors.tandr && (\n                        <span\n                          key={errors.tandr}\n                          className=\"text-danger font-size-3\"\n                        >\n                          {errors.tandr}\n                        </span>\n                      )}\n                    </div>\n\n                    <div className=\"form-group mb-8\">\n                      {loading === true ? (\n                        <button\n                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            className=\"spinner-border spinner-border-sm \"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          <span className=\"sr-only\">Loading...</span>\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                          type=\"submit\"\n                        >\n                          Log in{\" \"}\n                        </button>\n                      )}\n                    </div>\n                    <p className=\"font-size-4 text-center heading-default-color\">\n                      Don’t have an account?{\" \"}\n                      <Link\n                        className=\"text-primary\"\n                        to={\"\"}\n                        onClick={props.signUpClick}\n                      >\n                        Create a free account\n                      </Link>\n                    </p>\n                  </form>\n\n                  <form\n                    className={showForgotPassword === true ? \"\" : \"d-none\"}\n                    onSubmit={onForgoteClick}\n                  >\n                    <div className=\"form-group\">\n                      <label\n                        htmlFor=\"forget_email\"\n                        className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        type=\"email\"\n                        value={state.forget_email}\n                        onChange={onInputChange}\n                        className=\"form-control\"\n                        placeholder=\"example@gmail.com\"\n                        id=\"forget_email\"\n                        name=\"forget_email\"\n                      />\n                      {errors.forget_email && (\n                        <span>\n                          {errors.forget_email.map((error) => (\n                            <span\n                              key={error}\n                              className=\"text-danger font-size-3\"\n                            >\n                              {error}\n                            </span>\n                          ))}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"form-group text-center\">\n                      {loading === true ? (\n                        <button\n                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            className=\"spinner-border spinner-border-sm \"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          <span className=\"sr-only\">Loading...</span>\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-primary btn-small w-25 rounded-5 text-uppercase\"\n                          type=\"submit\"\n                        >\n                          send email\n                        </button>\n                      )}\n                    </div>\n                    <p className=\"font-size-4 text-center heading-default-color\">\n                      Already have an account?{\" \"}\n                      <Link\n                        to=\"\"\n                        className=\"text-primary\"\n                        onClick={() => setShowForgotPassword(false)}\n                      >\n                        Login\n                      </Link>\n                    </p>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n"
        }
    ]
}