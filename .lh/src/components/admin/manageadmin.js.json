{
    "sourceFile": "src/components/admin/manageadmin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1693486956905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486979133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,12 @@\n   async function deleteAdmin(e) {\n     try {\n       const responseData = await DeleteAdmin(e);\n       if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", \n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n         setApiCall(true);\n         setDeleteAlert(false);\n       }\n     } catch (err) {\n"
                },
                {
                    "date": 1693905267767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,380 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        typeFilterValue || search || sortOrder ? 1 : currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                        setCurrentPage(1);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1693905302607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,380 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1)\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                }
            ],
            "date": 1693486956905,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport AdminHeader from \"./header\";\nimport AdminSidebar from \"./sidebar\";\nimport { Link } from \"react-router-dom\";\nimport CustomButton from \"../common/button\";\nimport Addadmin from \"../forms/admin/addadmin\";\nimport { getallAdminData, DeleteAdmin } from \"../../api/api\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SAlert from \"../common/sweetAlert\";\nimport Pagination from \"../common/pagination\";\nimport FilterJson from \"../json/filterjson\";\nimport Loader from \"../common/loader\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { LiaUserEditSolid } from \"react-icons/lia\";\nfunction ManageAdmin() {\n  /*data and id state */\n  let [apiCall, setApiCall] = useState(false);\n  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n  let [showAddAdminModal, setShowAdminModal] = useState(false);\n  let [adminData, setAdminData] = useState([]);\n  let [adminId, setAdminID] = useState();\n  let [isLoading, setIsLoading] = useState(true);\n  /*delete state */\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  /*Filter and search state */\n  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"admin_id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  /* Function to get the Amin data*/\n  const AdminData = async () => {\n    setIsLoading(true);\n    try {\n      const userData = await getallAdminData(\n        typeFilterValue,\n        search,\n        typeFilterValue || search || sortOrder ? 1 : currentPage,\n        recordsPerPage,\n        columnName,\n        sortOrder\n      );\n      if (userData.data.length === 0) {\n        setAdminData([]);\n        setIsLoading(false);\n      } else {\n        setAdminData(userData.data);\n        setTotalData(userData.total_rows);\n        if (apiCall === true) {\n          let Admin_name = userData.data.filter(\n            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n          );\n          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n            localStorage.setItem(\"admin\", Admin_name[0].name);\n          }\n        }\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n  /*Render function to get the Admin*/\n  useEffect(() => {\n    AdminData();\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    typeFilterValue,\n    search,\n    currentPage,\n    recordsPerPage,\n    columnName,\n    sortOrder,\n    apiCall,\n  ]);\n\n  /* Function to show the single data to update Admin*/\n  const editAdmin = (e) => {\n    // e.preventDefault();\n    setShowAdminModal(true);\n    setAdminID(e);\n  };\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.admin_id);\n    setDeleteName(e.name);\n    setDeleteAlert(true);\n  };\n  /*To cancel the delete alert box */\n  const CancelDelete = () => {\n    setDeleteAlert(false);\n  };\n  /*To call Api to delete category */\n  async function deleteAdmin(e) {\n    try {\n      const responseData = await DeleteAdmin(e);\n      if (responseData.message === \"admin has been deleted\") {\n        toast.error(\"Admin deleted Successfully\", \n        setApiCall(true);\n        setDeleteAlert(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /*Search Onchange function to filter the data */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Admin Name cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n  return (\n    <>\n      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n        {/* <!-- Header Area --> */}\n        <AdminHeader heading={\"Manage Admin\"} />\n        {/* <!-- navbar- --> */}\n        <AdminSidebar heading={\"Manage Admin\"} />\n        <ToastContainer />\n        {showAddAdminModal ? (\n          <Addadmin\n            show={showAddAdminModal}\n            adminId={adminId}\n            apiCall={apiCall}\n            setApiCall={setApiCall}\n            close={() => setShowAdminModal(false)}\n          />\n        ) : null}\n        <div\n          className={\n            showAminDetails === false\n              ? \"dashboard-main-container mt-16\"\n              : \"d-none\"\n          }\n          id=\"dashboard-body\"\n        >\n          <div className=\"container-fluid\">\n            <div className=\"mb-18\">\n              <div className=\"mb-4 align-items-center\">\n                <div className=\"page___heading\">\n                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n                </div>\n                <div className=\"row m-0 align-items-center\">\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Search:</p>\n                    <input\n                      required\n                      maxLength={30}\n                      type=\"text\"\n                      className=\"form-control \"\n                      placeholder={\"Admin Name\"}\n                      value={search}\n                      name={\"Admin_name\"}\n                      onChange={(e) => {\n                        onSearch(e);\n                        setCurrentPage(1);\n                      }}\n                    />\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Admin:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"type\"\n                        value={typeFilterValue}\n                        id=\"type\"\n                        onChange={(e) => {\n                          setTypeFilterValue(e.target.value);\n                          setCurrentPage(1);\n                        }}\n                        className=\" form-control\"\n                      >\n                        <option value=\"\">Admin type</option>\n                        {(FilterJson.admintype || []).map((type, i) => (\n                          <option value={type} key={i}>\n                            {type}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col px-1 form_group mt-4 text-right\">\n                    <CustomButton\n                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n                      onClick={() => editAdmin(\"0\")}\n                      title=\"Add Admin\"\n                    >\n                      Add Admin\n                    </CustomButton>\n                  </div>\n                </div>\n                <small className=\"text-danger\">{searcherror}</small>\n              </div>\n              {\n                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n                  <div className=\"table-responsive main_table_div\">\n                    {isLoading ? (\n                      <Loader />\n                    ) : (\n                      <table className=\"table table-striped main_data_table\">\n                        <thead>\n                          <tr>\n                            <th\n                              scope=\"col\"\n                              className=\"border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"name\")}\n                                title=\"Sort by Name\"\n                              >\n                                Admin Name\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"admin_type\")}\n                                title=\"Sort by Type\"\n                              >\n                                Admin Type\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"email\")}\n                                title=\"Sort by Email\"\n                              >\n                                Email\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              Action\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {totalData === 0 || adminData.length === 0 ? (\n                            <tr>\n                              <th className=\"bg-white\"></th>\n                              <th className=\"bg-white text-center\">\n                                No Data Found\n                              </th>\n                              <th className=\"bg-white\"></th>\n                              <th className=\"bg-white\"></th>\n                            </tr>\n                          ) : (\n                            (adminData || []).map((admin) => (\n                              <tr\n                                className=\"text-capitalize\"\n                                key={admin.admin_id}\n                              >\n                                <th className=\" py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n                                    {admin.name}\n                                  </h3>\n                                </th>\n                                <th className=\"py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n                                    {admin.admin_type}\n                                  </h3>\n                                </th>\n                                <th className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n                                    <Link\n                                      className=\"text-dark\"\n                                      to={`mailto:${admin.email}`}\n                                    >\n                                      {admin.email}\n                                    </Link>\n                                  </h3>\n                                </th>\n                                <th className=\"py-5 min-width-px-100\">\n                                  <div\n                                    className=\"btn-group button_group\"\n                                    role=\"group\"\n                                  >\n                                    <button\n                                      className=\"btn btn-outline-info action_btn\"\n                                      onClick={() => editAdmin(admin.admin_id)}\n                                      title=\"Edit Admin\"\n                                    >\n                                      <span className=\"text-gray\">\n                                        <LiaUserEditSolid />\n                                      </span>\n                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                    </button>\n                                    <button\n                                      className=\"btn btn-outline-info action_btn\"\n                                      onClick={() => ShowDeleteAlert(admin)}\n                                      title=\"Delete\"\n                                    >\n                                      <span className=\" text-danger\">\n                                        <RiDeleteBin5Line />\n                                        {/* <i className=\"fa fa-trash\"></i> */}\n                                      </span>\n                                    </button>\n                                  </div>\n                                </th>\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                      </table>\n                    )}\n                  </div>\n                  <div className=\"pt-2\">\n                    <Pagination\n                      nPages={nPages}\n                      currentPage={currentPage}\n                      setCurrentPage={setCurrentPage}\n                      total={totalData}\n                      count={adminData.length}\n                    />\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n        <SAlert\n          show={deleteAlert}\n          title={deleteName}\n          text=\"Are you Sure you want to delete !\"\n          onConfirm={() => deleteAdmin(deleteId)}\n          showCancelButton={true}\n          onCancel={CancelDelete}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default ManageAdmin;\n"
        }
    ]
}