{
    "sourceFile": "src/components/admin/manageadmin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 40,
            "patches": [
                {
                    "date": 1693486956905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693486979133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,12 @@\n   async function deleteAdmin(e) {\n     try {\n       const responseData = await DeleteAdmin(e);\n       if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", \n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n         setApiCall(true);\n         setDeleteAlert(false);\n       }\n     } catch (err) {\n"
                },
                {
                    "date": 1693905267767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,380 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        typeFilterValue || search || sortOrder ? 1 : currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                        setCurrentPage(1);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1693905302607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,380 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1)\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694068182225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,510 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(userData.data.filter((item)=>item.admin_type ===\"executive\"))\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1)\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                \n+                <div className=\"col-6 mb-18\">\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }</div>\n+              <div className=\"col-6 mb-18\">\n+              <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => addTeam()}\n+                                      title=\"Add team\"\n+                                    >\n+                                     Add Team\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694068236250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,8 +144,12 @@\n     setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n     setcolumnName(columnName);\n     setCurrentPage(1)\n   };\n+  /*Function to add teame to the manager */\n+const addTeam =async ()=>{\n+  console.log(\"add team to manager\")\n+}\n   return (\n     <>\n       <div className=\"site-wrapper overflow-hidden bg-default-2\">\n         {/* <!-- Header Area --> */}\n@@ -507,1143 +511,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1)\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1)\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              {\n-                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => editAdmin(admin.admin_id)}\n-                                      title=\"Edit Admin\"\n-                                    >\n-                                      <span className=\"text-gray\">\n-                                        <LiaUserEditSolid />\n-                                      </span>\n-                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => ShowDeleteAlert(admin)}\n-                                      title=\"Delete\"\n-                                    >\n-                                      <span className=\" text-danger\">\n-                                        <RiDeleteBin5Line />\n-                                        {/* <i className=\"fa fa-trash\"></i> */}\n-                                      </span>\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              }\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        typeFilterValue || search || sortOrder ? 1 : currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1)\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                        setCurrentPage(1);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              {\n-                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => editAdmin(admin.admin_id)}\n-                                      title=\"Edit Admin\"\n-                                    >\n-                                      <span className=\"text-gray\">\n-                                        <LiaUserEditSolid />\n-                                      </span>\n-                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => ShowDeleteAlert(admin)}\n-                                      title=\"Delete\"\n-                                    >\n-                                      <span className=\" text-danger\">\n-                                        <RiDeleteBin5Line />\n-                                        {/* <i className=\"fa fa-trash\"></i> */}\n-                                      </span>\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              }\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        typeFilterValue || search || sortOrder ? 1 : currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                        setCurrentPage(1);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              {\n-                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => editAdmin(admin.admin_id)}\n-                                      title=\"Edit Admin\"\n-                                    >\n-                                      <span className=\"text-gray\">\n-                                        <LiaUserEditSolid />\n-                                      </span>\n-                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => ShowDeleteAlert(admin)}\n-                                      title=\"Delete\"\n-                                    >\n-                                      <span className=\" text-danger\">\n-                                        <RiDeleteBin5Line />\n-                                        {/* <i className=\"fa fa-trash\"></i> */}\n-                                      </span>\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              }\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694068333031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,526 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(userData.data.filter((item)=>item.admin_type ===\"executive\"))\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1)\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1)\n+  };\n+  /*Function to add teame to the manager */\n+const addTeam =async ()=>{\n+  console.log(\"add team to manager\")\n+}\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                \n+                <div className=\"col-6 mb-18\">\n+              {\n+                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <table className=\"table table-striped main_data_table\">\n+                        <thead>\n+                          <tr>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"name\")}\n+                                title=\"Sort by Name\"\n+                              >\n+                                Admin Name\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"admin_type\")}\n+                                title=\"Sort by Type\"\n+                              >\n+                                Admin Type\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              <Link\n+                                className=\"text-gray\"\n+                                to={\"\"}\n+                                onClick={() => handleSort(\"email\")}\n+                                title=\"Sort by Email\"\n+                              >\n+                                Email\n+                              </Link>\n+                            </th>\n+                            <th\n+                              scope=\"col\"\n+                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                            >\n+                              Action\n+                            </th>\n+                          </tr>\n+                        </thead>\n+                        <tbody>\n+                          {totalData === 0 || adminData.length === 0 ? (\n+                            <tr>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white text-center\">\n+                                No Data Found\n+                              </th>\n+                              <th className=\"bg-white\"></th>\n+                              <th className=\"bg-white\"></th>\n+                            </tr>\n+                          ) : (\n+                            (adminData || []).map((admin) => (\n+                              <tr\n+                                className=\"text-capitalize\"\n+                                key={admin.admin_id}\n+                              >\n+                                <th className=\" py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.name}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5\">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                    {admin.admin_type}\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 \">\n+                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                    <Link\n+                                      className=\"text-dark\"\n+                                      to={`mailto:${admin.email}`}\n+                                    >\n+                                      {admin.email}\n+                                    </Link>\n+                                  </h3>\n+                                </th>\n+                                <th className=\"py-5 min-width-px-100\">\n+                                  <div\n+                                    className=\"btn-group button_group\"\n+                                    role=\"group\"\n+                                  >\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => editAdmin(admin.admin_id)}\n+                                      title=\"Edit Admin\"\n+                                    >\n+                                      <span className=\"text-gray\">\n+                                        <LiaUserEditSolid />\n+                                      </span>\n+                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn btn-outline-info action_btn\"\n+                                      onClick={() => ShowDeleteAlert(admin)}\n+                                      title=\"Delete\"\n+                                    >\n+                                      <span className=\" text-danger\">\n+                                        <RiDeleteBin5Line />\n+                                        {/* <i className=\"fa fa-trash\"></i> */}\n+                                      </span>\n+                                    </button>\n+                                  </div>\n+                                </th>\n+                              </tr>\n+                            ))\n+                          )}\n+                        </tbody>\n+                      </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              }</div>\n+              <div className=\"col-6 mb-18\">\n+              <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                  <div className=\"table-responsive main_table_div\">\n+                    {isLoading ? (\n+                      <Loader />\n+                    ) : (\n+                      <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+  <div className=\"accordion-item\">\n+    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n+      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n+        Accordion Item #1\n+      </button>\n+    </h2>\n+    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n+      <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the first item's accordion body.</div>\n+    </div>\n+  </div>\n+</div>\n+                      // <table className=\"table table-striped main_data_table\">\n+                      //   <thead>\n+                      //     <tr>\n+                      //       <th\n+                      //         scope=\"col\"\n+                      //         className=\"border-0 font-size-4 font-weight-normal\"\n+                      //       >\n+                      //         <Link\n+                      //           className=\"text-gray\"\n+                      //           to={\"\"}\n+                      //           onClick={() => handleSort(\"name\")}\n+                      //           title=\"Sort by Name\"\n+                      //         >\n+                      //           Admin Name\n+                      //         </Link>\n+                      //       </th>\n+                      //       <th\n+                      //         scope=\"col\"\n+                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                      //       >\n+                      //         <Link\n+                      //           className=\"text-gray\"\n+                      //           to={\"\"}\n+                      //           onClick={() => handleSort(\"admin_type\")}\n+                      //           title=\"Sort by Type\"\n+                      //         >\n+                      //           Admin Type\n+                      //         </Link>\n+                      //       </th>\n+                      //       <th\n+                      //         scope=\"col\"\n+                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                      //       >\n+                      //         <Link\n+                      //           className=\"text-gray\"\n+                      //           to={\"\"}\n+                      //           onClick={() => handleSort(\"email\")}\n+                      //           title=\"Sort by Email\"\n+                      //         >\n+                      //           Email\n+                      //         </Link>\n+                      //       </th>\n+                      //       <th\n+                      //         scope=\"col\"\n+                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                      //       >\n+                      //         Action\n+                      //       </th>\n+                      //     </tr>\n+                      //   </thead>\n+                      //   <tbody>\n+                      //     {totalData === 0 || executiveData.length === 0 ? (\n+                      //       <tr>\n+                      //         <th className=\"bg-white\"></th>\n+                      //         <th className=\"bg-white text-center\">\n+                      //           No Data Found\n+                      //         </th>\n+                      //         <th className=\"bg-white\"></th>\n+                      //         <th className=\"bg-white\"></th>\n+                      //       </tr>\n+                      //     ) : (\n+                      //       (executiveData || []).map((admin) => (\n+                      //         <tr\n+                      //           className=\"text-capitalize\"\n+                      //           key={admin.admin_id}\n+                      //         >\n+                      //           <th className=\" py-5\">\n+                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                      //               {admin.name}\n+                      //             </h3>\n+                      //           </th>\n+                      //           <th className=\"py-5\">\n+                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                      //               {admin.admin_type}\n+                      //             </h3>\n+                      //           </th>\n+                      //           <th className=\"py-5 \">\n+                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                      //               <Link\n+                      //                 className=\"text-dark\"\n+                      //                 to={`mailto:${admin.email}`}\n+                      //               >\n+                      //                 {admin.email}\n+                      //               </Link>\n+                      //             </h3>\n+                      //           </th>\n+                      //           <th className=\"py-5 min-width-px-100\">\n+                      //             <div\n+                      //               className=\"btn-group button_group\"\n+                      //               role=\"group\"\n+                      //             >\n+                      //               <button\n+                      //                 className=\"btn btn-outline-info action_btn\"\n+                      //                 onClick={() => addTeam()}\n+                      //                 title=\"Add team\"\n+                      //               >\n+                      //                Add Team\n+                      //               </button>\n+                      //             </div>\n+                      //           </th>\n+                      //         </tr>\n+                      //       ))\n+                      //     )}\n+                      //   </tbody>\n+                      // </table>\n+                    )}\n+                  </div>\n+                  <div className=\"pt-2\">\n+                    <Pagination\n+                      nPages={nPages}\n+                      currentPage={currentPage}\n+                      setCurrentPage={setCurrentPage}\n+                      total={totalData}\n+                      count={adminData.length}\n+                    />\n+                  </div>\n+                </div>\n+              </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694068424088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,556 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div\n+                          className=\"accordion accordion-flush\"\n+                          id=\"accordionFlushExample\"\n+                        >\n+                          {(executiveData||[]).map((item,index)=>{return(\n+                            <div className=\"accordion-item\"\n+                            key={index}>\n+                            <h2\n+                              className=\"accordion-header\"\n+                              id=\"flush-headingOne\"\n+                            >\n+                              <button\n+                                className=\"accordion-button collapsed\"\n+                                type=\"button\"\n+                                data-bs-toggle=\"collapse\"\n+                                data-bs-target=\"#flush-collapseOne\"\n+                                aria-expanded=\"false\"\n+                                aria-controls=\"flush-collapseOne\"\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id=\"flush-collapseOne\"\n+                              className=\"accordion-collapse collapse\"\n+                              aria-labelledby=\"flush-headingOne\"\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is\n+                                intended to demonstrate the{\" \"}\n+                                <code>.accordion-flush</code> className. This is\n+                                the first item's accordion body.\n+                              </div>\n+                            </div>\n+                          </div>\n+                          )})}\n+                        </div>\n+                        // <table className=\"table table-striped main_data_table\">\n+                        //   <thead>\n+                        //     <tr>\n+                        //       <th\n+                        //         scope=\"col\"\n+                        //         className=\"border-0 font-size-4 font-weight-normal\"\n+                        //       >\n+                        //         <Link\n+                        //           className=\"text-gray\"\n+                        //           to={\"\"}\n+                        //           onClick={() => handleSort(\"name\")}\n+                        //           title=\"Sort by Name\"\n+                        //         >\n+                        //           Admin Name\n+                        //         </Link>\n+                        //       </th>\n+                        //       <th\n+                        //         scope=\"col\"\n+                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                        //       >\n+                        //         <Link\n+                        //           className=\"text-gray\"\n+                        //           to={\"\"}\n+                        //           onClick={() => handleSort(\"admin_type\")}\n+                        //           title=\"Sort by Type\"\n+                        //         >\n+                        //           Admin Type\n+                        //         </Link>\n+                        //       </th>\n+                        //       <th\n+                        //         scope=\"col\"\n+                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                        //       >\n+                        //         <Link\n+                        //           className=\"text-gray\"\n+                        //           to={\"\"}\n+                        //           onClick={() => handleSort(\"email\")}\n+                        //           title=\"Sort by Email\"\n+                        //         >\n+                        //           Email\n+                        //         </Link>\n+                        //       </th>\n+                        //       <th\n+                        //         scope=\"col\"\n+                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                        //       >\n+                        //         Action\n+                        //       </th>\n+                        //     </tr>\n+                        //   </thead>\n+                        //   <tbody>\n+                        //     {totalData === 0 || executiveData.length === 0 ? (\n+                        //       <tr>\n+                        //         <th className=\"bg-white\"></th>\n+                        //         <th className=\"bg-white text-center\">\n+                        //           No Data Found\n+                        //         </th>\n+                        //         <th className=\"bg-white\"></th>\n+                        //         <th className=\"bg-white\"></th>\n+                        //       </tr>\n+                        //     ) : (\n+                        //       (executiveData || []).map((admin) => (\n+                        //         <tr\n+                        //           className=\"text-capitalize\"\n+                        //           key={admin.admin_id}\n+                        //         >\n+                        //           <th className=\" py-5\">\n+                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                        //               {admin.name}\n+                        //             </h3>\n+                        //           </th>\n+                        //           <th className=\"py-5\">\n+                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                        //               {admin.admin_type}\n+                        //             </h3>\n+                        //           </th>\n+                        //           <th className=\"py-5 \">\n+                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                        //               <Link\n+                        //                 className=\"text-dark\"\n+                        //                 to={`mailto:${admin.email}`}\n+                        //               >\n+                        //                 {admin.email}\n+                        //               </Link>\n+                        //             </h3>\n+                        //           </th>\n+                        //           <th className=\"py-5 min-width-px-100\">\n+                        //             <div\n+                        //               className=\"btn-group button_group\"\n+                        //               role=\"group\"\n+                        //             >\n+                        //               <button\n+                        //                 className=\"btn btn-outline-info action_btn\"\n+                        //                 onClick={() => addTeam()}\n+                        //                 title=\"Add team\"\n+                        //               >\n+                        //                Add Team\n+                        //               </button>\n+                        //             </div>\n+                        //           </th>\n+                        //         </tr>\n+                        //       ))\n+                        //     )}\n+                        //   </tbody>\n+                        // </table>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694068974329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,13 @@\n   /*Function to add teame to the manager */\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n   return (\n     <>\n       <div className=\"site-wrapper overflow-hidden bg-default-2\">\n         {/* <!-- Header Area --> */}\n@@ -379,151 +384,34 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <div\n-                          className=\"accordion accordion-flush\"\n-                          id=\"accordionFlushExample\"\n-                        >\n-                          {(executiveData||[]).map((item,index)=>{return(\n-                            <div className=\"accordion-item\"\n-                            key={index}>\n-                            <h2\n-                              className=\"accordion-header\"\n-                              id=\"flush-headingOne\"\n-                            >\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion-item\" key={index}>\n+                            <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n-                                className=\"accordion-button collapsed\"\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n                                 type=\"button\"\n-                                data-bs-toggle=\"collapse\"\n-                                data-bs-target=\"#flush-collapseOne\"\n-                                aria-expanded=\"false\"\n-                                aria-controls=\"flush-collapseOne\"\n+                                onClick={() => handleToggle(index)}\n                               >\n                                 {item.name}\n                               </button>\n                             </h2>\n                             <div\n-                              id=\"flush-collapseOne\"\n-                              className=\"accordion-collapse collapse\"\n-                              aria-labelledby=\"flush-headingOne\"\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n                               data-bs-parent=\"#accordionFlushExample\"\n                             >\n                               <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is\n-                                intended to demonstrate the{\" \"}\n-                                <code>.accordion-flush</code> className. This is\n-                                the first item's accordion body.\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n                               </div>\n                             </div>\n                           </div>\n-                          )})}\n-                        </div>\n-                        // <table className=\"table table-striped main_data_table\">\n-                        //   <thead>\n-                        //     <tr>\n-                        //       <th\n-                        //         scope=\"col\"\n-                        //         className=\"border-0 font-size-4 font-weight-normal\"\n-                        //       >\n-                        //         <Link\n-                        //           className=\"text-gray\"\n-                        //           to={\"\"}\n-                        //           onClick={() => handleSort(\"name\")}\n-                        //           title=\"Sort by Name\"\n-                        //         >\n-                        //           Admin Name\n-                        //         </Link>\n-                        //       </th>\n-                        //       <th\n-                        //         scope=\"col\"\n-                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                        //       >\n-                        //         <Link\n-                        //           className=\"text-gray\"\n-                        //           to={\"\"}\n-                        //           onClick={() => handleSort(\"admin_type\")}\n-                        //           title=\"Sort by Type\"\n-                        //         >\n-                        //           Admin Type\n-                        //         </Link>\n-                        //       </th>\n-                        //       <th\n-                        //         scope=\"col\"\n-                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                        //       >\n-                        //         <Link\n-                        //           className=\"text-gray\"\n-                        //           to={\"\"}\n-                        //           onClick={() => handleSort(\"email\")}\n-                        //           title=\"Sort by Email\"\n-                        //         >\n-                        //           Email\n-                        //         </Link>\n-                        //       </th>\n-                        //       <th\n-                        //         scope=\"col\"\n-                        //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                        //       >\n-                        //         Action\n-                        //       </th>\n-                        //     </tr>\n-                        //   </thead>\n-                        //   <tbody>\n-                        //     {totalData === 0 || executiveData.length === 0 ? (\n-                        //       <tr>\n-                        //         <th className=\"bg-white\"></th>\n-                        //         <th className=\"bg-white text-center\">\n-                        //           No Data Found\n-                        //         </th>\n-                        //         <th className=\"bg-white\"></th>\n-                        //         <th className=\"bg-white\"></th>\n-                        //       </tr>\n-                        //     ) : (\n-                        //       (executiveData || []).map((admin) => (\n-                        //         <tr\n-                        //           className=\"text-capitalize\"\n-                        //           key={admin.admin_id}\n-                        //         >\n-                        //           <th className=\" py-5\">\n-                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                        //               {admin.name}\n-                        //             </h3>\n-                        //           </th>\n-                        //           <th className=\"py-5\">\n-                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                        //               {admin.admin_type}\n-                        //             </h3>\n-                        //           </th>\n-                        //           <th className=\"py-5 \">\n-                        //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                        //               <Link\n-                        //                 className=\"text-dark\"\n-                        //                 to={`mailto:${admin.email}`}\n-                        //               >\n-                        //                 {admin.email}\n-                        //               </Link>\n-                        //             </h3>\n-                        //           </th>\n-                        //           <th className=\"py-5 min-width-px-100\">\n-                        //             <div\n-                        //               className=\"btn-group button_group\"\n-                        //               role=\"group\"\n-                        //             >\n-                        //               <button\n-                        //                 className=\"btn btn-outline-info action_btn\"\n-                        //                 onClick={() => addTeam()}\n-                        //                 title=\"Add team\"\n-                        //               >\n-                        //                Add Team\n-                        //               </button>\n-                        //             </div>\n-                        //           </th>\n-                        //         </tr>\n-                        //       ))\n-                        //     )}\n-                        //   </tbody>\n-                        // </table>\n+                        ))}\n+                      </div>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n"
                },
                {
                    "date": 1694069075368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n+import { Accordion, Card, Button } from 'react-bootstrap';\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -150,13 +151,8 @@\n   /*Function to add teame to the manager */\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n   return (\n     <>\n       <div className=\"site-wrapper overflow-hidden bg-default-2\">\n         {/* <!-- Header Area --> */}\n@@ -384,34 +380,25 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion-item\" key={index}>\n-                            <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div>\n-                          </div>\n-                        ))}\n-                      </div>\n+                        <Accordion>\n+      {(executiveData || []).map((item, index) => (\n+        <Card key={index}>\n+          <Card.Header>\n+            <Accordion.Toggle as={Button} variant=\"link\" eventKey={index.toString()}>\n+              {item.name}\n+            </Accordion.Toggle>\n+          </Card.Header>\n+          <Accordion.Collapse eventKey={index.toString()}>\n+            <Card.Body>\n+              Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+              <code>.accordion-flush</code> className. This is the first item's accordion body.\n+            </Card.Body>\n+          </Accordion.Collapse>\n+        </Card>\n+      ))}\n+    </Accordion>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n@@ -441,1044 +428,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(userData.data.filter((item)=>item.admin_type ===\"executive\"))\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1)\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1)\n-  };\n-  /*Function to add teame to the manager */\n-const addTeam =async ()=>{\n-  console.log(\"add team to manager\")\n-}\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                \n-                <div className=\"col-6 mb-18\">\n-              {\n-                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => editAdmin(admin.admin_id)}\n-                                      title=\"Edit Admin\"\n-                                    >\n-                                      <span className=\"text-gray\">\n-                                        <LiaUserEditSolid />\n-                                      </span>\n-                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => ShowDeleteAlert(admin)}\n-                                      title=\"Delete\"\n-                                    >\n-                                      <span className=\" text-danger\">\n-                                        <RiDeleteBin5Line />\n-                                        {/* <i className=\"fa fa-trash\"></i> */}\n-                                      </span>\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              }</div>\n-              <div className=\"col-6 mb-18\">\n-              <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-  <div className=\"accordion-item\">\n-    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n-      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n-        Accordion Item #1\n-      </button>\n-    </h2>\n-    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n-      <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> className. This is the first item's accordion body.</div>\n-    </div>\n-  </div>\n-</div>\n-                      // <table className=\"table table-striped main_data_table\">\n-                      //   <thead>\n-                      //     <tr>\n-                      //       <th\n-                      //         scope=\"col\"\n-                      //         className=\"border-0 font-size-4 font-weight-normal\"\n-                      //       >\n-                      //         <Link\n-                      //           className=\"text-gray\"\n-                      //           to={\"\"}\n-                      //           onClick={() => handleSort(\"name\")}\n-                      //           title=\"Sort by Name\"\n-                      //         >\n-                      //           Admin Name\n-                      //         </Link>\n-                      //       </th>\n-                      //       <th\n-                      //         scope=\"col\"\n-                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                      //       >\n-                      //         <Link\n-                      //           className=\"text-gray\"\n-                      //           to={\"\"}\n-                      //           onClick={() => handleSort(\"admin_type\")}\n-                      //           title=\"Sort by Type\"\n-                      //         >\n-                      //           Admin Type\n-                      //         </Link>\n-                      //       </th>\n-                      //       <th\n-                      //         scope=\"col\"\n-                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                      //       >\n-                      //         <Link\n-                      //           className=\"text-gray\"\n-                      //           to={\"\"}\n-                      //           onClick={() => handleSort(\"email\")}\n-                      //           title=\"Sort by Email\"\n-                      //         >\n-                      //           Email\n-                      //         </Link>\n-                      //       </th>\n-                      //       <th\n-                      //         scope=\"col\"\n-                      //         className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                      //       >\n-                      //         Action\n-                      //       </th>\n-                      //     </tr>\n-                      //   </thead>\n-                      //   <tbody>\n-                      //     {totalData === 0 || executiveData.length === 0 ? (\n-                      //       <tr>\n-                      //         <th className=\"bg-white\"></th>\n-                      //         <th className=\"bg-white text-center\">\n-                      //           No Data Found\n-                      //         </th>\n-                      //         <th className=\"bg-white\"></th>\n-                      //         <th className=\"bg-white\"></th>\n-                      //       </tr>\n-                      //     ) : (\n-                      //       (executiveData || []).map((admin) => (\n-                      //         <tr\n-                      //           className=\"text-capitalize\"\n-                      //           key={admin.admin_id}\n-                      //         >\n-                      //           <th className=\" py-5\">\n-                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                      //               {admin.name}\n-                      //             </h3>\n-                      //           </th>\n-                      //           <th className=\"py-5\">\n-                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                      //               {admin.admin_type}\n-                      //             </h3>\n-                      //           </th>\n-                      //           <th className=\"py-5 \">\n-                      //             <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                      //               <Link\n-                      //                 className=\"text-dark\"\n-                      //                 to={`mailto:${admin.email}`}\n-                      //               >\n-                      //                 {admin.email}\n-                      //               </Link>\n-                      //             </h3>\n-                      //           </th>\n-                      //           <th className=\"py-5 min-width-px-100\">\n-                      //             <div\n-                      //               className=\"btn-group button_group\"\n-                      //               role=\"group\"\n-                      //             >\n-                      //               <button\n-                      //                 className=\"btn btn-outline-info action_btn\"\n-                      //                 onClick={() => addTeam()}\n-                      //                 title=\"Add team\"\n-                      //               >\n-                      //                Add Team\n-                      //               </button>\n-                      //             </div>\n-                      //           </th>\n-                      //         </tr>\n-                      //       ))\n-                      //     )}\n-                      //   </tbody>\n-                      // </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(userData.data.filter((item)=>item.admin_type ===\"executive\"))\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1)\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1)\n-  };\n-  /*Function to add teame to the manager */\n-const addTeam =async ()=>{\n-  console.log(\"add team to manager\")\n-}\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                \n-                <div className=\"col-6 mb-18\">\n-              {\n-                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => editAdmin(admin.admin_id)}\n-                                      title=\"Edit Admin\"\n-                                    >\n-                                      <span className=\"text-gray\">\n-                                        <LiaUserEditSolid />\n-                                      </span>\n-                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => ShowDeleteAlert(admin)}\n-                                      title=\"Delete\"\n-                                    >\n-                                      <span className=\" text-danger\">\n-                                        <RiDeleteBin5Line />\n-                                        {/* <i className=\"fa fa-trash\"></i> */}\n-                                      </span>\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              }</div>\n-              <div className=\"col-6 mb-18\">\n-              <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                  <div className=\"table-responsive main_table_div\">\n-                    {isLoading ? (\n-                      <Loader />\n-                    ) : (\n-                      <table className=\"table table-striped main_data_table\">\n-                        <thead>\n-                          <tr>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"name\")}\n-                                title=\"Sort by Name\"\n-                              >\n-                                Admin Name\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"admin_type\")}\n-                                title=\"Sort by Type\"\n-                              >\n-                                Admin Type\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              <Link\n-                                className=\"text-gray\"\n-                                to={\"\"}\n-                                onClick={() => handleSort(\"email\")}\n-                                title=\"Sort by Email\"\n-                              >\n-                                Email\n-                              </Link>\n-                            </th>\n-                            <th\n-                              scope=\"col\"\n-                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                            >\n-                              Action\n-                            </th>\n-                          </tr>\n-                        </thead>\n-                        <tbody>\n-                          {totalData === 0 || adminData.length === 0 ? (\n-                            <tr>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white text-center\">\n-                                No Data Found\n-                              </th>\n-                              <th className=\"bg-white\"></th>\n-                              <th className=\"bg-white\"></th>\n-                            </tr>\n-                          ) : (\n-                            (adminData || []).map((admin) => (\n-                              <tr\n-                                className=\"text-capitalize\"\n-                                key={admin.admin_id}\n-                              >\n-                                <th className=\" py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.name}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5\">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                    {admin.admin_type}\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 \">\n-                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                    <Link\n-                                      className=\"text-dark\"\n-                                      to={`mailto:${admin.email}`}\n-                                    >\n-                                      {admin.email}\n-                                    </Link>\n-                                  </h3>\n-                                </th>\n-                                <th className=\"py-5 min-width-px-100\">\n-                                  <div\n-                                    className=\"btn-group button_group\"\n-                                    role=\"group\"\n-                                  >\n-                                    <button\n-                                      className=\"btn btn-outline-info action_btn\"\n-                                      onClick={() => addTeam()}\n-                                      title=\"Add team\"\n-                                    >\n-                                     Add Team\n-                                    </button>\n-                                  </div>\n-                                </th>\n-                              </tr>\n-                            ))\n-                          )}\n-                        </tbody>\n-                      </table>\n-                    )}\n-                  </div>\n-                  <div className=\"pt-2\">\n-                    <Pagination\n-                      nPages={nPages}\n-                      currentPage={currentPage}\n-                      setCurrentPage={setCurrentPage}\n-                      total={totalData}\n-                      count={adminData.length}\n-                    />\n-                  </div>\n-                </div>\n-              </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694069120403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n import { Accordion, Card, Button } from 'react-bootstrap';\n+import 'bootstrap/dist/css/bootstrap.min.css';\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n"
                },
                {
                    "date": 1694069189326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,8 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n-import { Accordion, Card, Button } from 'react-bootstrap';\n-import 'bootstrap/dist/css/bootstrap.min.css';\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -152,8 +150,13 @@\n   /*Function to add teame to the manager */\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n   return (\n     <>\n       <div className=\"site-wrapper overflow-hidden bg-default-2\">\n         {/* <!-- Header Area --> */}\n@@ -381,25 +384,34 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <Accordion>\n-      {(executiveData || []).map((item, index) => (\n-        <Card key={index}>\n-          <Card.Header>\n-            <Accordion.Toggle as={Button} variant=\"link\" eventKey={index.toString()}>\n-              {item.name}\n-            </Accordion.Toggle>\n-          </Card.Header>\n-          <Accordion.Collapse eventKey={index.toString()}>\n-            <Card.Body>\n-              Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-              <code>.accordion-flush</code> className. This is the first item's accordion body.\n-            </Card.Body>\n-          </Accordion.Collapse>\n-        </Card>\n-      ))}\n-    </Accordion>\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion-item\" key={index}>\n+                            <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div>\n+                          </div>\n+                        ))}\n+                      </div>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n"
                },
                {
                    "date": 1694069308321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,459 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\">\n+                             <div class=\"card\">\n+    <div class=\"card-header\" id=\"headingOne\">\n+      <h5 class=\"mb-0\">\n+        <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n+          Collapsible Group Item #1\n+        </button>\n+      </h5>\n+    </div>\n+\n+    <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n+      <div class=\"card-body\">\n+        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694069663682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,460 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? '' : 'show'}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body\">\n+        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694069710225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,9 +390,9 @@\n                           <div className=\"accordion\"key={index}>\n                              <div className=\"card\">\n     <div className=\"card-header\" id={`headingOne${index}`}>\n       <h5 className=\"mb-0\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+        <button className={`${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n          onClick={() => handleToggle(index)}>\n             {item.name}\n         </button>\n       </h5>\n"
                },
                {
                    "date": 1694069728879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -397,9 +397,9 @@\n         </button>\n       </h5>\n     </div>\n \n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? '' : 'show'}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body\">\n         Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n       </div>\n     </div>\n@@ -457,907 +457,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\">\n-                             <div class=\"card\">\n-    <div class=\"card-header\" id=\"headingOne\">\n-      <h5 class=\"mb-0\">\n-        <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n-          Collapsible Group Item #1\n-        </button>\n-      </h5>\n-    </div>\n-\n-    <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n-      <div class=\"card-body\">\n-        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion-item\" key={index}>\n-                            <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div>\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694069737982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,9 +390,9 @@\n                           <div className=\"accordion\"key={index}>\n                              <div className=\"card\">\n     <div className=\"card-header\" id={`headingOne${index}`}>\n       <h5 className=\"mb-0\">\n-        <button className={`${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n          onClick={() => handleToggle(index)}>\n             {item.name}\n         </button>\n       </h5>\n"
                },
                {
                    "date": 1694069801905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,461 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body\">\n+        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694069814805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -394,9 +394,9 @@\n         <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n          onClick={() => handleToggle(index)}>\n             {item.name}\n         </button>\n-        <button className=\"btn btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n       </h5>\n     </div>\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n@@ -458,464 +458,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body\">\n-        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694070317076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,461 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body\">\n+        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694071162400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,462 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body\">\n+      {item.name} <Link to=\"\">{item.contact_no}</Link>\n+      <Link to={\"\"}>{item.email}</Link>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694071186294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -400,10 +400,10 @@\n     </div>\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body\">\n-      {item.name} <Link to=\"\">{item.contact_no}</Link>\n-      <Link to={\"\"}>{item.email}</Link>\n+      {item.name} <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n     </div>\n   </div>\n                             {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n"
                },
                {
                    "date": 1694071357041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,469 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text\">\n+      {item.name} \n+      <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n+      </div>\n+      <div>\n+        <button className=\"btn-sm btn-primary\">Remove Asign</button>\n+        <button className=\"btn-sm btn-primary\">Asign Task</button>\n+      </div>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694071475748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -405,474 +405,35 @@\n       {item.name} \n       <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n-      <div>\n-        <button className=\"btn-sm btn-primary\">Remove Asign</button>\n-        <button className=\"btn-sm btn-primary\">Asign Task</button>\n-      </div>\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n+      <div\n                                         className=\"btn-group button_group\"\n                                         role=\"group\"\n                                       >\n                                         <button\n                                           className=\"btn btn-outline-info action_btn\"\n                                           onClick={() =>\n-                                            editAdmin(admin.admin_id)\n+                                            AddTask()\n                                           }\n-                                          title=\"Edit Admin\"\n+                                          title=\"Add task\"\n                                         >\n                                           <span className=\"text-gray\">\n                                             <LiaUserEditSolid />\n                                           </span>\n                                           {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                         </button>\n                                         <button\n                                           className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n+                                          onClick={() => RemoveAssined()}\n+                                          title=\"Remove Assigned\"\n                                         >\n                                           <span className=\" text-danger\">\n                                             <RiDeleteBin5Line />\n                                             {/* <i className=\"fa fa-trash\"></i> */}\n                                           </span>\n                                         </button>\n                                       </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body\">\n-      {item.name} <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n     </div>\n   </div>\n                             {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n@@ -928,926 +489,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body\">\n-        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body\">\n-        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694071602144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,501 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  /*Function o add task to the executive */\n+  const AddTask =async()=>[\n+    console.log(\"add task to executive\")\n+  ]\n+\n+  /*Functo to remove assigned executive */\n+  const RemoveAssined =async() =>{\n+    console.log(\"remove assigned executive\")\n+  }\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text\">\n+      {item.name} \n+      <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n+      </div>\n+      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            AddTask()\n+                                          }\n+                                          title=\"Add task\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => RemoveAssined()}\n+                                          title=\"Remove Assigned\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694071673340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n+import {MdOutlineAddTask} from \"react-icons/md\"\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -426,9 +427,9 @@\n                                           }\n                                           title=\"Add task\"\n                                         >\n                                           <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n+                                            <MdOutlineAddTask />\n                                           </span>\n                                           {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                         </button>\n                                         <button\n@@ -498,496 +499,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text\">\n-      {item.name} \n-      <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n-      </div>\n-      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            AddTask()\n-                                          }\n-                                          title=\"Add task\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => RemoveAssined()}\n-                                          title=\"Remove Assigned\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694071713856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n-import {MdOutlineAddTask} from \"react-icons/md\"\n+import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -429,18 +429,16 @@\n                                         >\n                                           <span className=\"text-gray\">\n                                             <MdOutlineAddTask />\n                                           </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                         </button>\n                                         <button\n                                           className=\"btn btn-outline-info action_btn\"\n                                           onClick={() => RemoveAssined()}\n                                           title=\"Remove Assigned\"\n                                         >\n                                           <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                            <MdPersonRemove />\n                                           </span>\n                                         </button>\n                                       </div>\n       </div>\n"
                },
                {
                    "date": 1694071768121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,9 @@\n     </div>\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text\">\n+        <div className=\"card-text col\">\n       {item.name} \n       <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n"
                },
                {
                    "date": 1694071781379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,9 @@\n     </div>\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text col\">\n+        <div className=\"card-text row\">\n       {item.name} \n       <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n"
                },
                {
                    "date": 1694071928388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,9 @@\n     </div>\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text row\">\n+        <div className=\"card-text\">\n       {item.name} \n       <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n"
                },
                {
                    "date": 1694071941513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,9 +411,9 @@\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n         <div className=\"card-text\">\n-      {item.name} \n+      <span>{item.name} </span>\n       <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n       <div\n"
                },
                {
                    "date": 1694072015836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -412,9 +412,9 @@\n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n         <div className=\"card-text\">\n       <span>{item.name} </span>\n-      <Link to=\"\" className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n       <div\n                                         className=\"btn-group button_group\"\n"
                },
                {
                    "date": 1694074865434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n-import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n+import { MdOutlineAddTask, MdPersonRemove } from \"react-icons/md\";\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -152,16 +152,14 @@\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n   /*Function o add task to the executive */\n-  const AddTask =async()=>[\n-    console.log(\"add task to executive\")\n-  ]\n+  const AddTask = async () => [console.log(\"add task to executive\")];\n \n   /*Functo to remove assigned executive */\n-  const RemoveAssined =async() =>{\n-    console.log(\"remove assigned executive\")\n-  }\n+  const RemoveAssined = async () => {\n+    console.log(\"remove assigned executive\");\n+  };\n   const [activeIndex, setActiveIndex] = useState(null);\n \n   const handleToggle = (index) => {\n     setActiveIndex(index === activeIndex ? null : index);\n@@ -394,58 +392,86 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n+                        <div\n+                          className=\"accordion accordion-flush\"\n+                          id=\"accordionFlushExample\"\n+                        >\n+                          {(executiveData || []).map((item, index) => (\n+                            <div className=\"accordion\" key={index}>\n+                              <div className=\"card\">\n+                                <div\n+                                  className=\"card-header\"\n+                                  id={`headingOne${index}`}\n+                                >\n+                                  <h5 className=\"mb-0 d-flex justify-content-between\">\n+                                    <button\n+                                      className={`btn btn-link${\n+                                        index === activeIndex ? \"\" : \"collapsed\"\n+                                      }`}\n+                                      data-toggle=\"collapse\"\n+                                      data-target=\"#collapseOne\"\n+                                      aria-expanded=\"true\"\n+                                      aria-controls=\"collapseOne\"\n+                                      onClick={() => handleToggle(index)}\n+                                    >\n+                                      {item.name}\n+                                    </button>\n+                                    <button\n+                                      className=\"btn-sm btn-primary\"\n+                                      onClick={() => addTeam()}\n+                                    >\n+                                      Add Team\n+                                    </button>\n+                                  </h5>\n+                                </div>\n \n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text\">\n-      <span>{item.name} </span>\n-      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n-      </div>\n-      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n+                                <div\n+                                  id={`collapseOne${index}`}\n+                                  className={`collapse  ${\n+                                    index === activeIndex ? \"show\" : \"\"\n+                                  }`}\n+                                  aria-labelledby={`headingOne${index}`}\n+                                  data-parent=\"#accordion\"\n+                                >\n+                                  <div className=\"card-body d-flex justify-content-between\">\n+                                    <div className=\"card-text col\">\n+                                      <span>{item.name} </span>\n+                                      <Link to={\"\"} className=\"text-dark\">\n+                                        {item.contact_no}\n+                                      </Link>\n+                                      <Link to={\"\"} className=\"text-dark\">\n+                                        {item.email}\n+                                      </Link>\n+                                    </div>\n+                                    <div\n+                                      className=\"btn-group button_group\"\n+                                      role=\"group\"\n+                                    >\n+                                      <button\n+                                        className=\"btn btn-outline-info action_btn\"\n+                                        onClick={() => AddTask()}\n+                                        title=\"Add task\"\n                                       >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            AddTask()\n-                                          }\n-                                          title=\"Add task\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <MdOutlineAddTask />\n-                                          </span>\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => RemoveAssined()}\n-                                          title=\"Remove Assigned\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <MdPersonRemove />\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                                        <span className=\"text-gray\">\n+                                          <MdOutlineAddTask />\n+                                        </span>\n+                                      </button>\n+                                      <button\n+                                        className=\"btn btn-outline-info action_btn\"\n+                                        onClick={() => RemoveAssined()}\n+                                        title=\"Remove Assigned\"\n+                                      >\n+                                        <span className=\" text-danger\">\n+                                          <MdPersonRemove />\n+                                        </span>\n+                                      </button>\n+                                    </div>\n+                                  </div>\n+                                </div>\n+                              </div>\n+                              {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n                                 className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n                                 type=\"button\"\n                                 onClick={() => handleToggle(index)}\n@@ -463,11 +489,11 @@\n                                 Placeholder content for this accordion, which is intended to demonstrate the{' '}\n                                 <code>.accordion-flush</code> className. This is the first item's accordion body.\n                               </div>\n                             </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n+                            </div>\n+                          ))}\n+                        </div>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n"
                },
                {
                    "date": 1694075202391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n-import { MdOutlineAddTask, MdPersonRemove } from \"react-icons/md\";\n+import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -152,14 +152,16 @@\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n   /*Function o add task to the executive */\n-  const AddTask = async () => [console.log(\"add task to executive\")];\n+  const AddTask =async()=>[\n+    console.log(\"add task to executive\")\n+  ]\n \n   /*Functo to remove assigned executive */\n-  const RemoveAssined = async () => {\n-    console.log(\"remove assigned executive\");\n-  };\n+  const RemoveAssined =async() =>{\n+    console.log(\"remove assigned executive\")\n+  }\n   const [activeIndex, setActiveIndex] = useState(null);\n \n   const handleToggle = (index) => {\n     setActiveIndex(index === activeIndex ? null : index);\n@@ -392,86 +394,58 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <div\n-                          className=\"accordion accordion-flush\"\n-                          id=\"accordionFlushExample\"\n-                        >\n-                          {(executiveData || []).map((item, index) => (\n-                            <div className=\"accordion\" key={index}>\n-                              <div className=\"card\">\n-                                <div\n-                                  className=\"card-header\"\n-                                  id={`headingOne${index}`}\n-                                >\n-                                  <h5 className=\"mb-0 d-flex justify-content-between\">\n-                                    <button\n-                                      className={`btn btn-link${\n-                                        index === activeIndex ? \"\" : \"collapsed\"\n-                                      }`}\n-                                      data-toggle=\"collapse\"\n-                                      data-target=\"#collapseOne\"\n-                                      aria-expanded=\"true\"\n-                                      aria-controls=\"collapseOne\"\n-                                      onClick={() => handleToggle(index)}\n-                                    >\n-                                      {item.name}\n-                                    </button>\n-                                    <button\n-                                      className=\"btn-sm btn-primary\"\n-                                      onClick={() => addTeam()}\n-                                    >\n-                                      Add Team\n-                                    </button>\n-                                  </h5>\n-                                </div>\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+            {item.name}\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n \n-                                <div\n-                                  id={`collapseOne${index}`}\n-                                  className={`collapse  ${\n-                                    index === activeIndex ? \"show\" : \"\"\n-                                  }`}\n-                                  aria-labelledby={`headingOne${index}`}\n-                                  data-parent=\"#accordion\"\n-                                >\n-                                  <div className=\"card-body d-flex justify-content-between\">\n-                                    <div className=\"card-text col\">\n-                                      <span>{item.name} </span>\n-                                      <Link to={\"\"} className=\"text-dark\">\n-                                        {item.contact_no}\n-                                      </Link>\n-                                      <Link to={\"\"} className=\"text-dark\">\n-                                        {item.email}\n-                                      </Link>\n-                                    </div>\n-                                    <div\n-                                      className=\"btn-group button_group\"\n-                                      role=\"group\"\n-                                    >\n-                                      <button\n-                                        className=\"btn btn-outline-info action_btn\"\n-                                        onClick={() => AddTask()}\n-                                        title=\"Add task\"\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+      <span>{item.name} </span>\n+      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n+      </div>\n+      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n                                       >\n-                                        <span className=\"text-gray\">\n-                                          <MdOutlineAddTask />\n-                                        </span>\n-                                      </button>\n-                                      <button\n-                                        className=\"btn btn-outline-info action_btn\"\n-                                        onClick={() => RemoveAssined()}\n-                                        title=\"Remove Assigned\"\n-                                      >\n-                                        <span className=\" text-danger\">\n-                                          <MdPersonRemove />\n-                                        </span>\n-                                      </button>\n-                                    </div>\n-                                  </div>\n-                                </div>\n-                              </div>\n-                              {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            AddTask()\n+                                          }\n+                                          title=\"Add task\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <MdOutlineAddTask />\n+                                          </span>\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => RemoveAssined()}\n+                                          title=\"Remove Assigned\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <MdPersonRemove />\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n                                 className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n                                 type=\"button\"\n                                 onClick={() => handleToggle(index)}\n@@ -489,11 +463,11 @@\n                                 Placeholder content for this accordion, which is intended to demonstrate the{' '}\n                                 <code>.accordion-flush</code> className. This is the first item's accordion body.\n                               </div>\n                             </div> */}\n-                            </div>\n-                          ))}\n-                        </div>\n+                          </div>\n+                        ))}\n+                      </div>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n"
                },
                {
                    "date": 1694076580735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -402,16 +402,9 @@\n     <div className=\"card-header\" id={`headingOne${index}`}>\n       <h5 className=\"mb-0 d-flex justify-content-between\">\n         <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n          onClick={() => handleToggle(index)}>\n-            {item.name}\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n+             <div className=\"card-body d-flex justify-content-between\">\n         <div className=\"card-text d-flex flex-column\">\n       <span>{item.name} </span>\n       <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n       <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n@@ -441,9 +434,38 @@\n                                           </span>\n                                         </button>\n                                       </div>\n       </div>\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n     </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n+      {(FilterJson.visa_sub_stages[expandedStatus] || []).map((subStage, j) => (\n+        <div\n+          key={j}\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n+            className=\"mx-2\"\n+            checked={(selectedStatus || []).some(\n+              (item) => item.substage === subStage\n+            )}\n+            readOnly\n+          />\n+          {subStage}\n+        </div>\n+      ))}\n+    </div>\n+      </div>\n+      </div>\n+    </div>\n   </div>\n                             {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n                                 className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n"
                },
                {
                    "date": 1694076642960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,561 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  /*Function o add task to the executive */\n+  const AddTask =async()=>[\n+    console.log(\"add task to executive\")\n+  ]\n+\n+  /*Functo to remove assigned executive */\n+  const RemoveAssined =async() =>{\n+    console.log(\"remove assigned executive\")\n+  }\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+             <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+      <span>{item.name} </span>\n+      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n+      </div>\n+      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            AddTask()\n+                                          }\n+                                          title=\"Add task\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <MdOutlineAddTask />\n+                                          </span>\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => RemoveAssined()}\n+                                          title=\"Remove Assigned\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <MdPersonRemove />\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+      </div>\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Lmia\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Visa\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Job\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Interview\n+        </div>\n+    </div>\n+      </div>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694076702932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,561 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  /*Function o add task to the executive */\n+  const AddTask =async()=>[\n+    console.log(\"add task to executive\")\n+  ]\n+\n+  /*Functo to remove assigned executive */\n+  const RemoveAssined =async() =>{\n+    console.log(\"remove assigned executive\")\n+  }\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+            <div className=\"mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+              <div className=\"row\">\n+                <div className=\"col-6 mb-18\">\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n+                        {(executiveData || []).map((item, index) => (\n+                          <div className=\"accordion\"key={index}>\n+                             <div className=\"card\">\n+    <div className=\"card-header\" id={`headingOne${index}`}>\n+      <h5 className=\"mb-0 d-flex justify-content-between\">\n+        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n+         onClick={() => handleToggle(index)}>\n+             <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+      <span>{item.name} </span>\n+      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n+      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n+      </div>\n+      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            AddTask()\n+                                          }\n+                                          title=\"Add task\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <MdOutlineAddTask />\n+                                          </span>\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => RemoveAssined()}\n+                                          title=\"Remove Assigned\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <MdPersonRemove />\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+      </div>\n+        </button>\n+        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n+      </h5>\n+    </div>\n+\n+    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n+      <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n+        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type=\"checkbox\"\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Lmia\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type=\"checkbox\"\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Visa\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type=\"checkbox\"\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Job\n+        </div>\n+        <div\n+          className={`sub-stage text-capitalize `}\n+          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+        >\n+          <input\n+            type=\"checkbox\"\n+            className=\"mx-2\"\n+            // checked={(selectedStatus || []).some(\n+            //   (item) => item.substage === subStage\n+            // )}\n+            // readOnly\n+          />\n+          Interview\n+        </div>\n+    </div>\n+      </div>\n+      </div>\n+    </div>\n+  </div>\n+                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                          </div>\n+                        ))}\n+                      </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                },
                {
                    "date": 1694076838522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,8 +442,10 @@\n \n     <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n       <div className=\"card-body d-flex justify-content-between\">\n         <div className=\"card-text d-flex flex-column\">\n+        <div className=\"card-body d-flex justify-content-between\">\n+        <div className=\"card-text d-flex flex-column\">\n         <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n         <div\n           className={`sub-stage text-capitalize `}\n           // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n@@ -502,570 +504,11 @@\n         </div>\n     </div>\n       </div>\n       </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n       </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  /*Function o add task to the executive */\n-  const AddTask =async()=>[\n-    console.log(\"add task to executive\")\n-  ]\n-\n-  /*Functo to remove assigned executive */\n-  const RemoveAssined =async() =>{\n-    console.log(\"remove assigned executive\")\n-  }\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-             <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-      <span>{item.name} </span>\n-      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n       </div>\n-      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            AddTask()\n-                                          }\n-                                          title=\"Add task\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <MdOutlineAddTask />\n-                                          </span>\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => RemoveAssined()}\n-                                          title=\"Remove Assigned\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <MdPersonRemove />\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-      </div>\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n     </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Lmia\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Visa\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Job\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Interview\n-        </div>\n-    </div>\n-      </div>\n-      </div>\n-    </div>\n   </div>\n                             {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n                                 className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n@@ -1119,526 +562,4 @@\n   );\n }\n \n export default ManageAdmin;\n-import React, { useState, useEffect } from \"react\";\n-import AdminHeader from \"./header\";\n-import AdminSidebar from \"./sidebar\";\n-import { Link } from \"react-router-dom\";\n-import CustomButton from \"../common/button\";\n-import Addadmin from \"../forms/admin/addadmin\";\n-import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n-import { ToastContainer, toast } from \"react-toastify\";\n-import SAlert from \"../common/sweetAlert\";\n-import Pagination from \"../common/pagination\";\n-import FilterJson from \"../json/filterjson\";\n-import Loader from \"../common/loader\";\n-import { RiDeleteBin5Line } from \"react-icons/ri\";\n-import { LiaUserEditSolid } from \"react-icons/lia\";\n-import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n-function ManageAdmin() {\n-  /*data and id state */\n-  let [apiCall, setApiCall] = useState(false);\n-  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n-  let [showAddAdminModal, setShowAdminModal] = useState(false);\n-  let [adminData, setAdminData] = useState([]);\n-  let [executiveData, setexecutiveData] = useState([]);\n-  let [adminId, setAdminID] = useState();\n-  let [isLoading, setIsLoading] = useState(true);\n-  /*delete state */\n-  const [deleteAlert, setDeleteAlert] = useState(false);\n-  const [deleteId, setDeleteID] = useState();\n-  const [deleteName, setDeleteName] = useState(\"\");\n-  /*Filter and search state */\n-  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n-  const [search, setSearch] = useState(\"\");\n-  const [searcherror, setSearchError] = useState(\"\");\n-  /*Pagination states */\n-  const [totalData, setTotalData] = useState(\"\");\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [recordsPerPage] = useState(10);\n-  /*Shorting states */\n-  const [columnName, setcolumnName] = useState(\"admin_id\");\n-  const [sortOrder, setSortOrder] = useState(\"DESC\");\n-  /* Function to get the Amin data*/\n-  const AdminData = async () => {\n-    setIsLoading(true);\n-    try {\n-      const userData = await getallAdminData(\n-        typeFilterValue,\n-        search,\n-        currentPage,\n-        recordsPerPage,\n-        columnName,\n-        sortOrder\n-      );\n-      if (userData.data.length === 0) {\n-        setAdminData([]);\n-        setIsLoading(false);\n-      } else {\n-        setAdminData(userData.data);\n-        setexecutiveData(\n-          userData.data.filter((item) => item.admin_type === \"executive\")\n-        );\n-        setTotalData(userData.total_rows);\n-        if (apiCall === true) {\n-          let Admin_name = userData.data.filter(\n-            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n-          );\n-          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n-            localStorage.setItem(\"admin\", Admin_name[0].name);\n-          }\n-        }\n-        setIsLoading(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-      setIsLoading(false);\n-    }\n-  };\n-  /*Render function to get the Admin*/\n-  useEffect(() => {\n-    AdminData();\n-    if (apiCall === true) {\n-      setApiCall(false);\n-    }\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\n-  }, [\n-    typeFilterValue,\n-    search,\n-    currentPage,\n-    recordsPerPage,\n-    columnName,\n-    sortOrder,\n-    apiCall,\n-  ]);\n-\n-  /* Function to show the single data to update Admin*/\n-  const editAdmin = (e) => {\n-    // e.preventDefault();\n-    setShowAdminModal(true);\n-    setAdminID(e);\n-  };\n-  /*To Show the delete alert box */\n-  const ShowDeleteAlert = (e) => {\n-    setDeleteID(e.admin_id);\n-    setDeleteName(e.name);\n-    setDeleteAlert(true);\n-  };\n-  /*To cancel the delete alert box */\n-  const CancelDelete = () => {\n-    setDeleteAlert(false);\n-  };\n-  /*To call Api to delete category */\n-  async function deleteAdmin(e) {\n-    try {\n-      const responseData = await DeleteAdmin(e);\n-      if (responseData.message === \"admin has been deleted\") {\n-        toast.error(\"Admin deleted Successfully\", {\n-          position: toast.POSITION.TOP_RIGHT,\n-          autoClose: 1000,\n-        });\n-        setApiCall(true);\n-        setDeleteAlert(false);\n-      }\n-    } catch (err) {\n-      console.log(err);\n-    }\n-  }\n-  /*Search Onchange function to filter the data */\n-  const onSearch = (e) => {\n-    const inputValue = e.target.value;\n-    setSearch(inputValue);\n-    setCurrentPage(1);\n-    if (inputValue.length > 0) {\n-      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n-        setSearchError(\"Admin Name cannot start with a number.\");\n-      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n-        setSearchError(\"Cannot use special characters.\");\n-      } else {\n-        setSearchError(\"\");\n-      }\n-    } else {\n-      setSearchError(\"\");\n-    }\n-  };\n-  /*Pagination Calculation */\n-  const nPages = Math.ceil(totalData / recordsPerPage);\n-\n-  /*Sorting Function */\n-  const handleSort = (columnName) => {\n-    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n-    setcolumnName(columnName);\n-    setCurrentPage(1);\n-  };\n-  /*Function to add teame to the manager */\n-  const addTeam = async () => {\n-    console.log(\"add team to manager\");\n-  };\n-  /*Function o add task to the executive */\n-  const AddTask =async()=>[\n-    console.log(\"add task to executive\")\n-  ]\n-\n-  /*Functo to remove assigned executive */\n-  const RemoveAssined =async() =>{\n-    console.log(\"remove assigned executive\")\n-  }\n-  const [activeIndex, setActiveIndex] = useState(null);\n-\n-  const handleToggle = (index) => {\n-    setActiveIndex(index === activeIndex ? null : index);\n-  };\n-  return (\n-    <>\n-      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n-        {/* <!-- Header Area --> */}\n-        <AdminHeader heading={\"Manage Admin\"} />\n-        {/* <!-- navbar- --> */}\n-        <AdminSidebar heading={\"Manage Admin\"} />\n-        <ToastContainer />\n-        {showAddAdminModal ? (\n-          <Addadmin\n-            show={showAddAdminModal}\n-            adminId={adminId}\n-            apiCall={apiCall}\n-            setApiCall={setApiCall}\n-            close={() => setShowAdminModal(false)}\n-          />\n-        ) : null}\n-        <div\n-          className={\n-            showAminDetails === false\n-              ? \"dashboard-main-container mt-16\"\n-              : \"d-none\"\n-          }\n-          id=\"dashboard-body\"\n-        >\n-          <div className=\"container-fluid\">\n-            <div className=\"mb-18\">\n-              <div className=\"mb-4 align-items-center\">\n-                <div className=\"page___heading\">\n-                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n-                </div>\n-                <div className=\"row m-0 align-items-center\">\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Search:</p>\n-                    <input\n-                      required\n-                      maxLength={30}\n-                      type=\"text\"\n-                      className=\"form-control \"\n-                      placeholder={\"Admin Name\"}\n-                      value={search}\n-                      name={\"Admin_name\"}\n-                      onChange={(e) => {\n-                        onSearch(e);\n-                      }}\n-                    />\n-                  </div>\n-                  <div className=\"col p-1 form_group mb-3\">\n-                    <p className=\"input_label\">Filter by Admin:</p>\n-                    <div className=\"select_div\">\n-                      <select\n-                        name=\"type\"\n-                        value={typeFilterValue}\n-                        id=\"type\"\n-                        onChange={(e) => {\n-                          setTypeFilterValue(e.target.value);\n-                          setCurrentPage(1);\n-                        }}\n-                        className=\" form-control\"\n-                      >\n-                        <option value=\"\">Admin type</option>\n-                        {(FilterJson.admintype || []).map((type, i) => (\n-                          <option value={type} key={i}>\n-                            {type}\n-                          </option>\n-                        ))}\n-                      </select>\n-                    </div>\n-                  </div>\n-                  <div className=\"col px-1 form_group mt-4 text-right\">\n-                    <CustomButton\n-                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n-                      onClick={() => editAdmin(\"0\")}\n-                      title=\"Add Admin\"\n-                    >\n-                      Add Admin\n-                    </CustomButton>\n-                  </div>\n-                </div>\n-                <small className=\"text-danger\">{searcherror}</small>\n-              </div>\n-              <div className=\"row\">\n-                <div className=\"col-6 mb-18\">\n-                  {\n-                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                      <div className=\"table-responsive main_table_div\">\n-                        {isLoading ? (\n-                          <Loader />\n-                        ) : (\n-                          <table className=\"table table-striped main_data_table\">\n-                            <thead>\n-                              <tr>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"name\")}\n-                                    title=\"Sort by Name\"\n-                                  >\n-                                    Admin Name\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"admin_type\")}\n-                                    title=\"Sort by Type\"\n-                                  >\n-                                    Admin Type\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  <Link\n-                                    className=\"text-gray\"\n-                                    to={\"\"}\n-                                    onClick={() => handleSort(\"email\")}\n-                                    title=\"Sort by Email\"\n-                                  >\n-                                    Email\n-                                  </Link>\n-                                </th>\n-                                <th\n-                                  scope=\"col\"\n-                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n-                                >\n-                                  Action\n-                                </th>\n-                              </tr>\n-                            </thead>\n-                            <tbody>\n-                              {totalData === 0 || adminData.length === 0 ? (\n-                                <tr>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white text-center\">\n-                                    No Data Found\n-                                  </th>\n-                                  <th className=\"bg-white\"></th>\n-                                  <th className=\"bg-white\"></th>\n-                                </tr>\n-                              ) : (\n-                                (adminData || []).map((admin) => (\n-                                  <tr\n-                                    className=\"text-capitalize\"\n-                                    key={admin.admin_id}\n-                                  >\n-                                    <th className=\" py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.name}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5\">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n-                                        {admin.admin_type}\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 \">\n-                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n-                                        <Link\n-                                          className=\"text-dark\"\n-                                          to={`mailto:${admin.email}`}\n-                                        >\n-                                          {admin.email}\n-                                        </Link>\n-                                      </h3>\n-                                    </th>\n-                                    <th className=\"py-5 min-width-px-100\">\n-                                      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            editAdmin(admin.admin_id)\n-                                          }\n-                                          title=\"Edit Admin\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <LiaUserEditSolid />\n-                                          </span>\n-                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => ShowDeleteAlert(admin)}\n-                                          title=\"Delete\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <RiDeleteBin5Line />\n-                                            {/* <i className=\"fa fa-trash\"></i> */}\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-                                    </th>\n-                                  </tr>\n-                                ))\n-                              )}\n-                            </tbody>\n-                          </table>\n-                        )}\n-                      </div>\n-                      <div className=\"pt-2\">\n-                        <Pagination\n-                          nPages={nPages}\n-                          currentPage={currentPage}\n-                          setCurrentPage={setCurrentPage}\n-                          total={totalData}\n-                          count={adminData.length}\n-                        />\n-                      </div>\n-                    </div>\n-                  }\n-                </div>\n-                <div className=\"col-6 mb-18\">\n-                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n-                    <div className=\"table-responsive main_table_div\">\n-                      {isLoading ? (\n-                        <Loader />\n-                      ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-             <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-      <span>{item.name} </span>\n-      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n-      </div>\n-      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            AddTask()\n-                                          }\n-                                          title=\"Add task\"\n-                                        >\n-                                          <span className=\"text-gray\">\n-                                            <MdOutlineAddTask />\n-                                          </span>\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => RemoveAssined()}\n-                                          title=\"Remove Assigned\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <MdPersonRemove />\n-                                          </span>\n-                                        </button>\n-                                      </div>\n-      </div>\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n-\n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n-      {(FilterJson.visa_sub_stages[expandedStatus] || []).map((subStage, j) => (\n-        <div\n-          key={j}\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type={expandedStatus === \"file decision\" ? \"radio\" : \"checkbox\"}\n-            className=\"mx-2\"\n-            checked={(selectedStatus || []).some(\n-              (item) => item.substage === subStage\n-            )}\n-            readOnly\n-          />\n-          {subStage}\n-        </div>\n-      ))}\n-    </div>\n-      </div>\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n-                              <button\n-                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n-                                type=\"button\"\n-                                onClick={() => handleToggle(index)}\n-                              >\n-                                {item.name}\n-                              </button>\n-                            </h2>\n-                            <div\n-                              id={`flush-collapse${index}`}\n-                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n-                              aria-labelledby={`flush-heading${index}`}\n-                              data-bs-parent=\"#accordionFlushExample\"\n-                            >\n-                              <div className=\"accordion-body\">\n-                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n-                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n-                              </div>\n-                            </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n-                      )}\n-                    </div>\n-                    <div className=\"pt-2\">\n-                      <Pagination\n-                        nPages={nPages}\n-                        currentPage={currentPage}\n-                        setCurrentPage={setCurrentPage}\n-                        total={totalData}\n-                        count={adminData.length}\n-                      />\n-                    </div>\n-                  </div>\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <SAlert\n-          show={deleteAlert}\n-          title={deleteName}\n-          text=\"Are you Sure you want to delete !\"\n-          onConfirm={() => deleteAdmin(deleteId)}\n-          showCancelButton={true}\n-          onCancel={CancelDelete}\n-        />\n-      </div>\n-    </>\n-  );\n-}\n-\n-export default ManageAdmin;\n"
                },
                {
                    "date": 1694076864267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import FilterJson from \"../json/filterjson\";\n import Loader from \"../common/loader\";\n import { RiDeleteBin5Line } from \"react-icons/ri\";\n import { LiaUserEditSolid } from \"react-icons/lia\";\n-import {MdOutlineAddTask ,MdPersonRemove} from \"react-icons/md\"\n+import { MdOutlineAddTask, MdPersonRemove } from \"react-icons/md\";\n function ManageAdmin() {\n   /*data and id state */\n   let [apiCall, setApiCall] = useState(false);\n   let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n@@ -152,16 +152,14 @@\n   const addTeam = async () => {\n     console.log(\"add team to manager\");\n   };\n   /*Function o add task to the executive */\n-  const AddTask =async()=>[\n-    console.log(\"add task to executive\")\n-  ]\n+  const AddTask = async () => [console.log(\"add task to executive\")];\n \n   /*Functo to remove assigned executive */\n-  const RemoveAssined =async() =>{\n-    console.log(\"remove assigned executive\")\n-  }\n+  const RemoveAssined = async () => {\n+    console.log(\"remove assigned executive\");\n+  };\n   const [activeIndex, setActiveIndex] = useState(null);\n \n   const handleToggle = (index) => {\n     setActiveIndex(index === activeIndex ? null : index);\n@@ -394,123 +392,151 @@\n                     <div className=\"table-responsive main_table_div\">\n                       {isLoading ? (\n                         <Loader />\n                       ) : (\n-                        <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n-                        {(executiveData || []).map((item, index) => (\n-                          <div className=\"accordion\"key={index}>\n-                             <div className=\"card\">\n-    <div className=\"card-header\" id={`headingOne${index}`}>\n-      <h5 className=\"mb-0 d-flex justify-content-between\">\n-        <button className={`btn btn-link${index === activeIndex ? '' : 'collapsed'}`} data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"\n-         onClick={() => handleToggle(index)}>\n-             <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-      <span>{item.name} </span>\n-      <Link to={\"\"} className=\"text-dark\">{item.contact_no}</Link>\n-      <Link to={\"\"} className=\"text-dark\">{item.email}</Link>\n-      </div>\n-      <div\n-                                        className=\"btn-group button_group\"\n-                                        role=\"group\"\n-                                      >\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() =>\n-                                            AddTask()\n-                                          }\n-                                          title=\"Add task\"\n+                        <div\n+                          className=\"accordion accordion-flush\"\n+                          id=\"accordionFlushExample\"\n+                        >\n+                          {(executiveData || []).map((item, index) => (\n+                            <div className=\"accordion\" key={index}>\n+                              <div className=\"card\">\n+                                <div\n+                                  className=\"card-header\"\n+                                  id={`headingOne${index}`}\n+                                >\n+                                  <h5 className=\"mb-0 d-flex justify-content-between\">\n+                                    <button\n+                                      className={`btn btn-link${\n+                                        index === activeIndex ? \"\" : \"collapsed\"\n+                                      }`}\n+                                      data-toggle=\"collapse\"\n+                                      data-target=\"#collapseOne\"\n+                                      aria-expanded=\"true\"\n+                                      aria-controls=\"collapseOne\"\n+                                      onClick={() => handleToggle(index)}\n+                                    >\n+                                      <div className=\"card-body d-flex justify-content-between\">\n+                                        <div className=\"card-text d-flex flex-column\">\n+                                          <span>{item.name} </span>\n+                                          <Link to={\"\"} className=\"text-dark\">\n+                                            {item.contact_no}\n+                                          </Link>\n+                                          <Link to={\"\"} className=\"text-dark\">\n+                                            {item.email}\n+                                          </Link>\n+                                        </div>\n+                                        <div\n+                                          className=\"btn-group button_group\"\n+                                          role=\"group\"\n                                         >\n-                                          <span className=\"text-gray\">\n-                                            <MdOutlineAddTask />\n-                                          </span>\n-                                        </button>\n-                                        <button\n-                                          className=\"btn btn-outline-info action_btn\"\n-                                          onClick={() => RemoveAssined()}\n-                                          title=\"Remove Assigned\"\n-                                        >\n-                                          <span className=\" text-danger\">\n-                                            <MdPersonRemove />\n-                                          </span>\n-                                        </button>\n+                                          <button\n+                                            className=\"btn btn-outline-info action_btn\"\n+                                            onClick={() => AddTask()}\n+                                            title=\"Add task\"\n+                                          >\n+                                            <span className=\"text-gray\">\n+                                              <MdOutlineAddTask />\n+                                            </span>\n+                                          </button>\n+                                          <button\n+                                            className=\"btn btn-outline-info action_btn\"\n+                                            onClick={() => RemoveAssined()}\n+                                            title=\"Remove Assigned\"\n+                                          >\n+                                            <span className=\" text-danger\">\n+                                              <MdPersonRemove />\n+                                            </span>\n+                                          </button>\n+                                        </div>\n                                       </div>\n-      </div>\n-        </button>\n-        <button className=\"btn-sm btn-primary\"onClick={()=>addTeam()}>Add Team</button>\n-      </h5>\n-    </div>\n+                                    </button>\n+                                    <button\n+                                      className=\"btn-sm btn-primary\"\n+                                      onClick={() => addTeam()}\n+                                    >\n+                                      Add Team\n+                                    </button>\n+                                  </h5>\n+                                </div>\n \n-    <div id={`collapseOne${index}`} className={`collapse  ${index === activeIndex ? 'show' : ''}`} aria-labelledby={`headingOne${index}`} data-parent=\"#accordion\">\n-      <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-        <div className=\"card-body d-flex justify-content-between\">\n-        <div className=\"card-text d-flex flex-column\">\n-        <div className=\"bg-white text-dark p-2 sub-stages-container row\">\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type=\"checkbox\"\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Lmia\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type=\"checkbox\"\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Visa\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type=\"checkbox\"\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Job\n-        </div>\n-        <div\n-          className={`sub-stage text-capitalize `}\n-          // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n-        >\n-          <input\n-            type=\"checkbox\"\n-            className=\"mx-2\"\n-            // checked={(selectedStatus || []).some(\n-            //   (item) => item.substage === subStage\n-            // )}\n-            // readOnly\n-          />\n-          Interview\n-        </div>\n-    </div>\n-      </div>\n-      </div>\n-      </div>\n-      </div>\n-    </div>\n-  </div>\n-                            {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                                <div\n+                                  id={`collapseOne${index}`}\n+                                  className={`collapse  ${\n+                                    index === activeIndex ? \"show\" : \"\"\n+                                  }`}\n+                                  aria-labelledby={`headingOne${index}`}\n+                                  data-parent=\"#accordion\"\n+                                >\n+                                  <div className=\"card-body d-flex justify-content-between\">\n+                                    <div className=\"card-text d-flex flex-column\">\n+                                      <div className=\"card-body d-flex justify-content-between\">\n+                                        <div className=\"card-text d-flex flex-column\">\n+                                          <div className=\"bg-white text-dark  row\">\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Lmia\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Visa\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Job\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Interview\n+                                            </div>\n+                                          </div>\n+                                        </div>\n+                                      </div>\n+                                    </div>\n+                                  </div>\n+                                </div>\n+                              </div>\n+                              {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n                               <button\n                                 className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n                                 type=\"button\"\n                                 onClick={() => handleToggle(index)}\n@@ -528,11 +554,11 @@\n                                 Placeholder content for this accordion, which is intended to demonstrate the{' '}\n                                 <code>.accordion-flush</code> className. This is the first item's accordion body.\n                               </div>\n                             </div> */}\n-                          </div>\n-                        ))}\n-                      </div>\n+                            </div>\n+                          ))}\n+                        </div>\n                       )}\n                     </div>\n                     <div className=\"pt-2\">\n                       <Pagination\n"
                },
                {
                    "date": 1694076881873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -470,9 +470,8 @@\n                                   <div className=\"card-body d-flex justify-content-between\">\n                                     <div className=\"card-text d-flex flex-column\">\n                                       <div className=\"card-body d-flex justify-content-between\">\n                                         <div className=\"card-text d-flex flex-column\">\n-                                          <div className=\"bg-white text-dark \">\n                                             <div\n                                               className={`sub-stage text-capitalize `}\n                                               // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n                                             >\n@@ -527,9 +526,8 @@\n                                                 // readOnly\n                                               />\n                                               Interview\n                                             </div>\n-                                          </div>\n                                         </div>\n                                       </div>\n                                     </div>\n                                   </div>\n"
                },
                {
                    "date": 1694077274653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,614 @@\n+import React, { useState, useEffect } from \"react\";\n+import AdminHeader from \"./header\";\n+import AdminSidebar from \"./sidebar\";\n+import { Link } from \"react-router-dom\";\n+import CustomButton from \"../common/button\";\n+import Addadmin from \"../forms/admin/addadmin\";\n+import { getallAdminData, DeleteAdmin } from \"../../api/api\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import SAlert from \"../common/sweetAlert\";\n+import Pagination from \"../common/pagination\";\n+import FilterJson from \"../json/filterjson\";\n+import Loader from \"../common/loader\";\n+import { RiDeleteBin5Line } from \"react-icons/ri\";\n+import { LiaUserEditSolid } from \"react-icons/lia\";\n+import { MdOutlineAddTask, MdPersonRemove } from \"react-icons/md\";\n+function ManageAdmin() {\n+  /*data and id state */\n+  let [apiCall, setApiCall] = useState(false);\n+  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n+  let [showAddAdminModal, setShowAdminModal] = useState(false);\n+  let [adminData, setAdminData] = useState([]);\n+  let [executiveData, setexecutiveData] = useState([]);\n+  let [adminId, setAdminID] = useState();\n+  let [isLoading, setIsLoading] = useState(true);\n+  /*delete state */\n+  const [deleteAlert, setDeleteAlert] = useState(false);\n+  const [deleteId, setDeleteID] = useState();\n+  const [deleteName, setDeleteName] = useState(\"\");\n+  /*Filter and search state */\n+  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n+  const [search, setSearch] = useState(\"\");\n+  const [searcherror, setSearchError] = useState(\"\");\n+  /*Pagination states */\n+  const [totalData, setTotalData] = useState(\"\");\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [recordsPerPage] = useState(10);\n+  /*Shorting states */\n+  const [columnName, setcolumnName] = useState(\"admin_id\");\n+  const [sortOrder, setSortOrder] = useState(\"DESC\");\n+  /* Function to get the Amin data*/\n+  const AdminData = async () => {\n+    setIsLoading(true);\n+    try {\n+      const userData = await getallAdminData(\n+        typeFilterValue,\n+        search,\n+        currentPage,\n+        recordsPerPage,\n+        columnName,\n+        sortOrder\n+      );\n+      if (userData.data.length === 0) {\n+        setAdminData([]);\n+        setIsLoading(false);\n+      } else {\n+        setAdminData(userData.data);\n+        setexecutiveData(\n+          userData.data.filter((item) => item.admin_type === \"executive\")\n+        );\n+        setTotalData(userData.total_rows);\n+        if (apiCall === true) {\n+          let Admin_name = userData.data.filter(\n+            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n+          );\n+          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n+            localStorage.setItem(\"admin\", Admin_name[0].name);\n+          }\n+        }\n+        setIsLoading(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+      setIsLoading(false);\n+    }\n+  };\n+  /*Render function to get the Admin*/\n+  useEffect(() => {\n+    AdminData();\n+    if (apiCall === true) {\n+      setApiCall(false);\n+    }\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\n+  }, [\n+    typeFilterValue,\n+    search,\n+    currentPage,\n+    recordsPerPage,\n+    columnName,\n+    sortOrder,\n+    apiCall,\n+  ]);\n+\n+  /* Function to show the single data to update Admin*/\n+  const editAdmin = (e) => {\n+    // e.preventDefault();\n+    setShowAdminModal(true);\n+    setAdminID(e);\n+  };\n+  /*To Show the delete alert box */\n+  const ShowDeleteAlert = (e) => {\n+    setDeleteID(e.admin_id);\n+    setDeleteName(e.name);\n+    setDeleteAlert(true);\n+  };\n+  /*To cancel the delete alert box */\n+  const CancelDelete = () => {\n+    setDeleteAlert(false);\n+  };\n+  /*To call Api to delete category */\n+  async function deleteAdmin(e) {\n+    try {\n+      const responseData = await DeleteAdmin(e);\n+      if (responseData.message === \"admin has been deleted\") {\n+        toast.error(\"Admin deleted Successfully\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setApiCall(true);\n+        setDeleteAlert(false);\n+      }\n+    } catch (err) {\n+      console.log(err);\n+    }\n+  }\n+  /*Search Onchange function to filter the data */\n+  const onSearch = (e) => {\n+    const inputValue = e.target.value;\n+    setSearch(inputValue);\n+    setCurrentPage(1);\n+    if (inputValue.length > 0) {\n+      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n+        setSearchError(\"Admin Name cannot start with a number.\");\n+      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n+        setSearchError(\"Cannot use special characters.\");\n+      } else {\n+        setSearchError(\"\");\n+      }\n+    } else {\n+      setSearchError(\"\");\n+    }\n+  };\n+  /*Pagination Calculation */\n+  const nPages = Math.ceil(totalData / recordsPerPage);\n+\n+  /*Sorting Function */\n+  const handleSort = (columnName) => {\n+    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n+    setcolumnName(columnName);\n+    setCurrentPage(1);\n+  };\n+  /*Function to add teame to the manager */\n+  const addTeam = async () => {\n+    console.log(\"add team to manager\");\n+  };\n+  /*Function o add task to the executive */\n+  const AddTask = async () => [console.log(\"add task to executive\")];\n+\n+  /*Functo to remove assigned executive */\n+  const RemoveAssined = async () => {\n+    console.log(\"remove assigned executive\");\n+  };\n+  const [activeIndex, setActiveIndex] = useState(null);\n+\n+  const handleToggle = (index) => {\n+    setActiveIndex(index === activeIndex ? null : index);\n+  };\n+  return (\n+    <>\n+      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n+        {/* <!-- Header Area --> */}\n+        <AdminHeader heading={\"Manage Admin\"} />\n+        {/* <!-- navbar- --> */}\n+        <AdminSidebar heading={\"Manage Admin\"} />\n+        <ToastContainer />\n+        {showAddAdminModal ? (\n+          <Addadmin\n+            show={showAddAdminModal}\n+            adminId={adminId}\n+            apiCall={apiCall}\n+            setApiCall={setApiCall}\n+            close={() => setShowAdminModal(false)}\n+          />\n+        ) : null}\n+        <div\n+          className={\n+            showAminDetails === false\n+              ? \"dashboard-main-container mt-16\"\n+              : \"d-none\"\n+          }\n+          id=\"dashboard-body\"\n+        >\n+          <div className=\"container-fluid\">\n+          <div className=\"row\">\n+            <div className=\"col-6 mb-18\">\n+              <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Filter by Admin:</p>\n+                    <div className=\"select_div\">\n+                      <select\n+                        name=\"type\"\n+                        value={typeFilterValue}\n+                        id=\"type\"\n+                        onChange={(e) => {\n+                          setTypeFilterValue(e.target.value);\n+                          setCurrentPage(1);\n+                        }}\n+                        className=\" form-control\"\n+                      >\n+                        <option value=\"\">Admin type</option>\n+                        {(FilterJson.admintype || []).map((type, i) => (\n+                          <option value={type} key={i}>\n+                            {type}\n+                          </option>\n+                        ))}\n+                      </select>\n+                    </div>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => editAdmin(\"0\")}\n+                      title=\"Add Admin\"\n+                    >\n+                      Add Admin\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+                  {\n+                    <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                      <div className=\"table-responsive main_table_div\">\n+                        {isLoading ? (\n+                          <Loader />\n+                        ) : (\n+                          <table className=\"table table-striped main_data_table\">\n+                            <thead>\n+                              <tr>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"name\")}\n+                                    title=\"Sort by Name\"\n+                                  >\n+                                    Admin Name\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"admin_type\")}\n+                                    title=\"Sort by Type\"\n+                                  >\n+                                    Admin Type\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  <Link\n+                                    className=\"text-gray\"\n+                                    to={\"\"}\n+                                    onClick={() => handleSort(\"email\")}\n+                                    title=\"Sort by Email\"\n+                                  >\n+                                    Email\n+                                  </Link>\n+                                </th>\n+                                <th\n+                                  scope=\"col\"\n+                                  className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n+                                >\n+                                  Action\n+                                </th>\n+                              </tr>\n+                            </thead>\n+                            <tbody>\n+                              {totalData === 0 || adminData.length === 0 ? (\n+                                <tr>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white text-center\">\n+                                    No Data Found\n+                                  </th>\n+                                  <th className=\"bg-white\"></th>\n+                                  <th className=\"bg-white\"></th>\n+                                </tr>\n+                              ) : (\n+                                (adminData || []).map((admin) => (\n+                                  <tr\n+                                    className=\"text-capitalize\"\n+                                    key={admin.admin_id}\n+                                  >\n+                                    <th className=\" py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.name}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5\">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n+                                        {admin.admin_type}\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 \">\n+                                      <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n+                                        <Link\n+                                          className=\"text-dark\"\n+                                          to={`mailto:${admin.email}`}\n+                                        >\n+                                          {admin.email}\n+                                        </Link>\n+                                      </h3>\n+                                    </th>\n+                                    <th className=\"py-5 min-width-px-100\">\n+                                      <div\n+                                        className=\"btn-group button_group\"\n+                                        role=\"group\"\n+                                      >\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() =>\n+                                            editAdmin(admin.admin_id)\n+                                          }\n+                                          title=\"Edit Admin\"\n+                                        >\n+                                          <span className=\"text-gray\">\n+                                            <LiaUserEditSolid />\n+                                          </span>\n+                                          {/* <span className=\" fas fa-edit text-gray\"></span> */}\n+                                        </button>\n+                                        <button\n+                                          className=\"btn btn-outline-info action_btn\"\n+                                          onClick={() => ShowDeleteAlert(admin)}\n+                                          title=\"Delete\"\n+                                        >\n+                                          <span className=\" text-danger\">\n+                                            <RiDeleteBin5Line />\n+                                            {/* <i className=\"fa fa-trash\"></i> */}\n+                                          </span>\n+                                        </button>\n+                                      </div>\n+                                    </th>\n+                                  </tr>\n+                                ))\n+                              )}\n+                            </tbody>\n+                          </table>\n+                        )}\n+                      </div>\n+                      <div className=\"pt-2\">\n+                        <Pagination\n+                          nPages={nPages}\n+                          currentPage={currentPage}\n+                          setCurrentPage={setCurrentPage}\n+                          total={totalData}\n+                          count={adminData.length}\n+                        />\n+                      </div>\n+                    </div>\n+                  }\n+                </div>\n+                <div className=\"col-6 mb-18\">\n+                <div className=\"mb-4 align-items-center\">\n+                <div className=\"page___heading\">\n+                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n+                </div>\n+                <div className=\"row m-0 align-items-center\">\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Search:</p>\n+                    <input\n+                      required\n+                      maxLength={30}\n+                      type=\"text\"\n+                      className=\"form-control \"\n+                      placeholder={\"Admin Name\"}\n+                      value={search}\n+                      name={\"Admin_name\"}\n+                      onChange={(e) => {\n+                        onSearch(e);\n+                      }}\n+                    />\n+                  </div>\n+                  <div className=\"col p-1 form_group mb-3\">\n+                    <p className=\"input_label\">Ram</p>\n+                  </div>\n+                  <div className=\"col px-1 form_group mt-4 text-right\">\n+                    <CustomButton\n+                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n+                      onClick={() => addTeam()}\n+                      title=\"Add Team\"\n+                    >\n+                      Add Team\n+                    </CustomButton>\n+                  </div>\n+                </div>\n+                <small className=\"text-danger\">{searcherror}</small>\n+              </div>\n+                  <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n+                    <div className=\"table-responsive main_table_div\">\n+                      {isLoading ? (\n+                        <Loader />\n+                      ) : (\n+                        <div\n+                          className=\"accordion accordion-flush\"\n+                          id=\"accordionFlushExample\"\n+                        >\n+                          {(executiveData || []).map((item, index) => (\n+                            <div className=\"accordion\" key={index}>\n+                              <div className=\"card\">\n+                                <div\n+                                  className=\"card-header\"\n+                                  id={`headingOne${index}`}\n+                                >\n+                                  <h5 className=\"mb-0 d-flex justify-content-between\">\n+                                    <button\n+                                      className={`btn btn-link${\n+                                        index === activeIndex ? \"\" : \"collapsed\"\n+                                      }`}\n+                                      data-toggle=\"collapse\"\n+                                      data-target=\"#collapseOne\"\n+                                      aria-expanded=\"true\"\n+                                      aria-controls=\"collapseOne\"\n+                                      onClick={() => handleToggle(index)}\n+                                    >\n+                                      <div className=\"card-body d-flex justify-content-between\">\n+                                        <div className=\"card-text d-flex flex-column\">\n+                                          <span>{item.name} </span>\n+                                          <Link to={\"\"} className=\"text-dark\">\n+                                            {item.contact_no}\n+                                          </Link>\n+                                          <Link to={\"\"} className=\"text-dark\">\n+                                            {item.email}\n+                                          </Link>\n+                                        </div>\n+                                        <div\n+                                          className=\"btn-group button_group\"\n+                                          role=\"group\"\n+                                        >\n+                                          <button\n+                                            className=\"btn btn-outline-info action_btn\"\n+                                            onClick={() => AddTask()}\n+                                            title=\"Add task\"\n+                                          >\n+                                            <span className=\"text-gray\">\n+                                              <MdOutlineAddTask />\n+                                            </span>\n+                                          </button>\n+                                          <button\n+                                            className=\"btn btn-outline-info action_btn\"\n+                                            onClick={() => RemoveAssined()}\n+                                            title=\"Remove Assigned\"\n+                                          >\n+                                            <span className=\" text-danger\">\n+                                              <MdPersonRemove />\n+                                            </span>\n+                                          </button>\n+                                        </div>\n+                                      </div>\n+                                    </button>\n+                                  </h5>\n+                                </div>\n+\n+                                <div\n+                                  id={`collapseOne${index}`}\n+                                  className={`collapse  ${\n+                                    index === activeIndex ? \"show\" : \"\"\n+                                  }`}\n+                                  aria-labelledby={`headingOne${index}`}\n+                                  data-parent=\"#accordion\"\n+                                >\n+                                  <div className=\"card-body d-flex justify-content-between\">\n+                                    <div className=\"card-text d-flex flex-column\">\n+                                        <div className=\"card-text d-flex flex-column\">\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Lmia\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Visa\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Job\n+                                            </div>\n+                                            <div\n+                                              className={`sub-stage text-capitalize `}\n+                                              // onClick={() => handleSubStageSelection(expandedStatus, subStage)}\n+                                            >\n+                                              <input\n+                                                type=\"checkbox\"\n+                                                className=\"mx-2\"\n+                                                // checked={(selectedStatus || []).some(\n+                                                //   (item) => item.substage === subStage\n+                                                // )}\n+                                                // readOnly\n+                                              />\n+                                              Interview\n+                                            </div>\n+                                        </div>\n+                                      </div>\n+                                  </div>\n+                                </div>\n+                              </div>\n+                              {/* <h2 className=\"accordion-header\" id={`flush-heading${index}`}>\n+                              <button\n+                                className={`accordion-button ${index === activeIndex ? '' : 'collapsed'}`}\n+                                type=\"button\"\n+                                onClick={() => handleToggle(index)}\n+                              >\n+                                {item.name}\n+                              </button>\n+                            </h2>\n+                            <div\n+                              id={`flush-collapse${index}`}\n+                              className={`accordion-collapse collapse ${index === activeIndex ? 'show' : ''}`}\n+                              aria-labelledby={`flush-heading${index}`}\n+                              data-bs-parent=\"#accordionFlushExample\"\n+                            >\n+                              <div className=\"accordion-body\">\n+                                Placeholder content for this accordion, which is intended to demonstrate the{' '}\n+                                <code>.accordion-flush</code> className. This is the first item's accordion body.\n+                              </div>\n+                            </div> */}\n+                            </div>\n+                          ))}\n+                        </div>\n+                      )}\n+                    </div>\n+                    <div className=\"pt-2\">\n+                      <Pagination\n+                        nPages={nPages}\n+                        currentPage={currentPage}\n+                        setCurrentPage={setCurrentPage}\n+                        total={totalData}\n+                        count={adminData.length}\n+                      />\n+                    </div>\n+                  </div>\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        <SAlert\n+          show={deleteAlert}\n+          title={deleteName}\n+          text=\"Are you Sure you want to delete !\"\n+          onConfirm={() => deleteAdmin(deleteId)}\n+          showCancelButton={true}\n+          onCancel={CancelDelete}\n+        />\n+      </div>\n+    </>\n+  );\n+}\n+\n+export default ManageAdmin;\n"
                }
            ],
            "date": 1693486956905,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport AdminHeader from \"./header\";\nimport AdminSidebar from \"./sidebar\";\nimport { Link } from \"react-router-dom\";\nimport CustomButton from \"../common/button\";\nimport Addadmin from \"../forms/admin/addadmin\";\nimport { getallAdminData, DeleteAdmin } from \"../../api/api\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SAlert from \"../common/sweetAlert\";\nimport Pagination from \"../common/pagination\";\nimport FilterJson from \"../json/filterjson\";\nimport Loader from \"../common/loader\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { LiaUserEditSolid } from \"react-icons/lia\";\nfunction ManageAdmin() {\n  /*data and id state */\n  let [apiCall, setApiCall] = useState(false);\n  let [showAminDetails /*, setShowAminDetails*/] = useState(false);\n  let [showAddAdminModal, setShowAdminModal] = useState(false);\n  let [adminData, setAdminData] = useState([]);\n  let [adminId, setAdminID] = useState();\n  let [isLoading, setIsLoading] = useState(true);\n  /*delete state */\n  const [deleteAlert, setDeleteAlert] = useState(false);\n  const [deleteId, setDeleteID] = useState();\n  const [deleteName, setDeleteName] = useState(\"\");\n  /*Filter and search state */\n  const [typeFilterValue, setTypeFilterValue] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"admin_id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  /* Function to get the Amin data*/\n  const AdminData = async () => {\n    setIsLoading(true);\n    try {\n      const userData = await getallAdminData(\n        typeFilterValue,\n        search,\n        typeFilterValue || search || sortOrder ? 1 : currentPage,\n        recordsPerPage,\n        columnName,\n        sortOrder\n      );\n      if (userData.data.length === 0) {\n        setAdminData([]);\n        setIsLoading(false);\n      } else {\n        setAdminData(userData.data);\n        setTotalData(userData.total_rows);\n        if (apiCall === true) {\n          let Admin_name = userData.data.filter(\n            (data) => data.admin_id === localStorage.getItem(\"admin_id\")\n          );\n          if (Admin_name[0].admin_id === localStorage.getItem(\"admin_id\")) {\n            localStorage.setItem(\"admin\", Admin_name[0].name);\n          }\n        }\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n  /*Render function to get the Admin*/\n  useEffect(() => {\n    AdminData();\n    if (apiCall === true) {\n      setApiCall(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    typeFilterValue,\n    search,\n    currentPage,\n    recordsPerPage,\n    columnName,\n    sortOrder,\n    apiCall,\n  ]);\n\n  /* Function to show the single data to update Admin*/\n  const editAdmin = (e) => {\n    // e.preventDefault();\n    setShowAdminModal(true);\n    setAdminID(e);\n  };\n  /*To Show the delete alert box */\n  const ShowDeleteAlert = (e) => {\n    setDeleteID(e.admin_id);\n    setDeleteName(e.name);\n    setDeleteAlert(true);\n  };\n  /*To cancel the delete alert box */\n  const CancelDelete = () => {\n    setDeleteAlert(false);\n  };\n  /*To call Api to delete category */\n  async function deleteAdmin(e) {\n    try {\n      const responseData = await DeleteAdmin(e);\n      if (responseData.message === \"admin has been deleted\") {\n        toast.error(\"Admin deleted Successfully\", \n        setApiCall(true);\n        setDeleteAlert(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  /*Search Onchange function to filter the data */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Admin Name cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n  return (\n    <>\n      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n        {/* <!-- Header Area --> */}\n        <AdminHeader heading={\"Manage Admin\"} />\n        {/* <!-- navbar- --> */}\n        <AdminSidebar heading={\"Manage Admin\"} />\n        <ToastContainer />\n        {showAddAdminModal ? (\n          <Addadmin\n            show={showAddAdminModal}\n            adminId={adminId}\n            apiCall={apiCall}\n            setApiCall={setApiCall}\n            close={() => setShowAdminModal(false)}\n          />\n        ) : null}\n        <div\n          className={\n            showAminDetails === false\n              ? \"dashboard-main-container mt-16\"\n              : \"d-none\"\n          }\n          id=\"dashboard-body\"\n        >\n          <div className=\"container-fluid\">\n            <div className=\"mb-18\">\n              <div className=\"mb-4 align-items-center\">\n                <div className=\"page___heading\">\n                  <h3 className=\"font-size-6 mb-0\">Admin</h3>\n                </div>\n                <div className=\"row m-0 align-items-center\">\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Search:</p>\n                    <input\n                      required\n                      maxLength={30}\n                      type=\"text\"\n                      className=\"form-control \"\n                      placeholder={\"Admin Name\"}\n                      value={search}\n                      name={\"Admin_name\"}\n                      onChange={(e) => {\n                        onSearch(e);\n                        setCurrentPage(1);\n                      }}\n                    />\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Admin:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"type\"\n                        value={typeFilterValue}\n                        id=\"type\"\n                        onChange={(e) => {\n                          setTypeFilterValue(e.target.value);\n                          setCurrentPage(1);\n                        }}\n                        className=\" form-control\"\n                      >\n                        <option value=\"\">Admin type</option>\n                        {(FilterJson.admintype || []).map((type, i) => (\n                          <option value={type} key={i}>\n                            {type}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col px-1 form_group mt-4 text-right\">\n                    <CustomButton\n                      className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n                      onClick={() => editAdmin(\"0\")}\n                      title=\"Add Admin\"\n                    >\n                      Add Admin\n                    </CustomButton>\n                  </div>\n                </div>\n                <small className=\"text-danger\">{searcherror}</small>\n              </div>\n              {\n                <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n                  <div className=\"table-responsive main_table_div\">\n                    {isLoading ? (\n                      <Loader />\n                    ) : (\n                      <table className=\"table table-striped main_data_table\">\n                        <thead>\n                          <tr>\n                            <th\n                              scope=\"col\"\n                              className=\"border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"name\")}\n                                title=\"Sort by Name\"\n                              >\n                                Admin Name\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"admin_type\")}\n                                title=\"Sort by Type\"\n                              >\n                                Admin Type\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              <Link\n                                className=\"text-gray\"\n                                to={\"\"}\n                                onClick={() => handleSort(\"email\")}\n                                title=\"Sort by Email\"\n                              >\n                                Email\n                              </Link>\n                            </th>\n                            <th\n                              scope=\"col\"\n                              className=\"pl-4 border-0 font-size-4 font-weight-normal\"\n                            >\n                              Action\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {totalData === 0 || adminData.length === 0 ? (\n                            <tr>\n                              <th className=\"bg-white\"></th>\n                              <th className=\"bg-white text-center\">\n                                No Data Found\n                              </th>\n                              <th className=\"bg-white\"></th>\n                              <th className=\"bg-white\"></th>\n                            </tr>\n                          ) : (\n                            (adminData || []).map((admin) => (\n                              <tr\n                                className=\"text-capitalize\"\n                                key={admin.admin_id}\n                              >\n                                <th className=\" py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n                                    {admin.name}\n                                  </h3>\n                                </th>\n                                <th className=\"py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-capitalize\">\n                                    {admin.admin_type}\n                                  </h3>\n                                </th>\n                                <th className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-lowercase\">\n                                    <Link\n                                      className=\"text-dark\"\n                                      to={`mailto:${admin.email}`}\n                                    >\n                                      {admin.email}\n                                    </Link>\n                                  </h3>\n                                </th>\n                                <th className=\"py-5 min-width-px-100\">\n                                  <div\n                                    className=\"btn-group button_group\"\n                                    role=\"group\"\n                                  >\n                                    <button\n                                      className=\"btn btn-outline-info action_btn\"\n                                      onClick={() => editAdmin(admin.admin_id)}\n                                      title=\"Edit Admin\"\n                                    >\n                                      <span className=\"text-gray\">\n                                        <LiaUserEditSolid />\n                                      </span>\n                                      {/* <span className=\" fas fa-edit text-gray\"></span> */}\n                                    </button>\n                                    <button\n                                      className=\"btn btn-outline-info action_btn\"\n                                      onClick={() => ShowDeleteAlert(admin)}\n                                      title=\"Delete\"\n                                    >\n                                      <span className=\" text-danger\">\n                                        <RiDeleteBin5Line />\n                                        {/* <i className=\"fa fa-trash\"></i> */}\n                                      </span>\n                                    </button>\n                                  </div>\n                                </th>\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                      </table>\n                    )}\n                  </div>\n                  <div className=\"pt-2\">\n                    <Pagination\n                      nPages={nPages}\n                      currentPage={currentPage}\n                      setCurrentPage={setCurrentPage}\n                      total={totalData}\n                      count={adminData.length}\n                    />\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n        <SAlert\n          show={deleteAlert}\n          title={deleteName}\n          text=\"Are you Sure you want to delete !\"\n          onConfirm={() => deleteAdmin(deleteId)}\n          showCancelButton={true}\n          onCancel={CancelDelete}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default ManageAdmin;\n"
        }
    ]
}