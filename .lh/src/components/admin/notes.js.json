{
    "sourceFile": "src/components/admin/notes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710133324638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710133324638,
            "name": "Commit-0",
            "content": "import React, { useState /*, useEffect */ } from \"react\";\n// import CustomButton from \"../common/button\";\nimport AdminHeader from \"./header\";\nimport AdminSidebar from \"./sidebar\";\n// import {\n//   GetFilter,\n// } from \"../../api/api\";\nimport { ToastContainer /*, toast*/ } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport EmployeeNotesTable from \"../common/employeeNotesTable\";\nimport EmployerNotesTable from \"../common/employerNotesTable\";\n// import SAlert from \"../common/sweetAlert\";\n// import Pagination from \"../common/pagination\";\n// import Loader from \"../common/loader\";\n// import { RiDeleteBin5Line } from \"react-icons/ri\";\n// import { LiaEdit } from \"react-icons/lia\";\nfunction Notes() {\n  /*Modal and Data states */\n  //   let [isLoading, setIsLoading] = useState(true);\n  //   let [isLoading2, setIsLoading2] = useState(true);\n  //   let [apiCall, setApiCall] = useState(false);\n  //   let [showAddCategoryModal, setShowAddCategoryModal] = useState(false);\n  //   let [showAddCategoryTypeModal, setShowAddCategoryTypeModal] = useState(false);\n  //   const [categoryData, setCategoryData] = useState([]);\n  //   const [categoryTypeData, setCategoryTypeData] = useState([]);\n  //   const [CategoryId, setCategoryId] = useState([]);\n  //   const [CateType, setCateType] = useState([]);\n  /*Delete Category states */\n  //   const [deleteAlert, setDeleteAlert] = useState(false);\n  //   const [deleteId, setDeleteID] = useState();\n  //   const [deleteName, setDeleteName] = useState(\"\");\n  /*Filter and search state */\n  //   const [categoryTypeFilterValue, setCategoryTypeFilterValue] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [Companysearch, setCompanySearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  const [companySearcherror, setCompanySearchError] = useState(\"\");\n  /*Pagination states */\n  //   const [totalData, setTotalData] = useState(\"\");\n  //   const [currentPage, setCurrentPage] = useState(1);\n  //   const [recordsPerPage] = useState(10);\n  //   const [TypetotalData, setTypeTotalData] = useState(\"\");\n  //   const [TypecurrentPage, setTypeCurrentPage] = useState(1);\n  //   const [TyperecordsPerPage] = useState(10);\n  /*Shorting states */\n  //   const [columnName, setcolumnName] = useState(\"id\");\n  //   const [sortOrder, setSortOrder] = useState(\"DESC\");\n\n  /*Function to get thejSon */\n  //   const JsonData = async () => {\n  //     try {\n  //       let Json = await GetFilter();\n  //       if (Json.data.message === \"No data found\") {\n  //         setCateType([]);\n  //       } else {\n  //         setCateType(Json.data.data.Category_type);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  /* Function to get the job category data*/\n  //   const CategoryData = async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const userData = await getAllJobsCategory(\n  //         1,\n  //         categoryTypeFilterValue,\n  //         search,\n  //         currentPage,\n  //         recordsPerPage,\n  //         columnName,\n  //         sortOrder\n  //       );\n  //       if (userData.data.length === 0) {\n  //         setCategoryData([]);\n  //         setIsLoading(false);\n  //       } else {\n  //         setCategoryData(userData.data);\n  //         const filteredData = userData.data.filter(\n  //           (data) => data.parent_id !== \"0\"\n  //         );\n  //         if (filteredData.length === 0) {\n  //           setTotalData();\n  //         } else {\n  //           setTotalData(userData.total_rows);\n  //         }\n  //         setIsLoading(false);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //       setIsLoading(false);\n  //     }\n  //   };\n  /* Function to get the job category Type data*/\n  //   const CategoryTypeData = async () => {\n  //     try {\n  //       const userData = await getAllJobsCategory(\n  //         0,\n  //         \"\",\n  //         \"\",\n  //         TypecurrentPage,\n  //         TyperecordsPerPage,\n  //         \"job_category_id\",\n  //         \"DESC\"\n  //       );\n  //       if (userData.data.length === 0) {\n  //         setCategoryTypeData([]);\n  //         setIsLoading2(false);\n  //       } else {\n  //         setCategoryTypeData(userData.data);\n  //         const FilterByType = userData.data\n  //           ? userData.data.filter(\n  //               (thing, index, self) =>\n  //                 index === self.findIndex((t) => t.value === thing.value)\n  //             )\n  //           : [];\n  //         setTypeTotalData(FilterByType.length);\n  //         setIsLoading2(false);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  /*Render function to get the job category*/\n  //   useEffect(() => {\n  //     JsonData();\n  //     CategoryData();\n  //     if (apiCall === true) {\n  //       setApiCall(false);\n  //     }\n  //     if ((search === \"\") === true) {\n  //       setSearchError(\"\");\n  //     }\n  //   }, [\n  //     categoryTypeFilterValue,\n  //     search,\n  //     currentPage,\n  //     apiCall,\n  //     columnName,\n  //     sortOrder,\n  //   ]);\n  /*Render function to get the job category Type*/\n  //   useEffect(() => {\n  //     CategoryTypeData();\n  //     if (apiCall === true) {\n  //       setApiCall(false);\n  //     }\n  //     if ((search === \"\") === true) {\n  //       setSearchError(\"\");\n  //     }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, [currentPage, apiCall, columnName, sortOrder]);\n\n  /* Function to show the single data to update job category*/\n  //   const editJobCategory = (e) => {\n  //     setShowAddCategoryModal(true);\n  //     setCategoryId(e);\n  //   };\n\n  /* Function to show the single data to update job category*/\n  //   const addJobCategoryType = (e) => {\n  //     setShowAddCategoryTypeModal(true);\n  //     setCategoryId(e);\n  //   };\n\n  /* Function to show the single data to update job category Type*/\n  //   const editJobCategoryType = (e) => {\n  //     setShowAddCategoryTypeModal(true);\n  //     setCategoryId(e);\n  //   };\n  /*To Show the delete alert box */\n  //   const ShowDeleteAlert = (e) => {\n  //     setDeleteID(e.job_category_id);\n  //     setDeleteName(e.category_name);\n  //     setDeleteAlert(true);\n  //     setSearch(\"\");\n  //   };\n  /*To cancel the delete alert box */\n  //   const CancelDelete = () => {\n  //     setDeleteAlert(false);\n  //   };\n  /*To call Api to delete category */\n  //   async function deleteCategory(e) {\n  //     try {\n  //       const responseData = await DeleteJobCategory(e);\n  //       if (responseData.message === \"job category has been deleted\") {\n  //         toast.error(\"Category deleted Successfully\", {\n  //           position: toast.POSITION.TOP_RIGHT,\n  //           autoClose: 1000,\n  //         });\n  //         setDeleteAlert(false);\n  //         setApiCall(true);\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }\n  /*Search Onchange function to Search Category data */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Category Name cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  /*Search Onchange function to Search Category data */\n  const onCompanySearch = (e) => {\n    const inputValue = e.target.value;\n    setCompanySearch(inputValue);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setCompanySearchError(\"Category Name cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setCompanySearchError(\"Cannot use special characters.\");\n      } else {\n        setCompanySearchError(\"\");\n      }\n    } else {\n      setCompanySearchError(\"\");\n    }\n  };\n  /*Pagination Calculation */\n  //   const nPages = Math.ceil(totalData / recordsPerPage);\n  //   const TypenPages = Math.ceil(TypetotalData / TyperecordsPerPage);\n  /*Sorting Function */\n  //   const handleSort = (columnName) => {\n  //     setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n  //     setcolumnName(columnName);\n  //   };\n\n  return (\n    <>\n      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n        {/* <!-- Header Area --> */}\n        <AdminHeader heading={\"Manage Notes\"} />\n        {/* <!-- navbar- --> */}\n        <AdminSidebar heading={\"Manage Notes\"} />\n        <div>\n          <ToastContainer />\n          {/* <!-- Modal- --> */}\n          {/* {showAddCategoryModal ? (\n            <AddCategory\n              show={showAddCategoryModal}\n              jobCategoryData={CategoryId}\n              apiCall={apiCall}\n              setApiCall={setApiCall}\n              close={() => setShowAddCategoryModal(false)}\n            />\n          ) : null} */}\n          {/* {showAddCategoryTypeModal ? (\n            <AddCategoryType\n              show={showAddCategoryTypeModal}\n              jobCategoryData={CategoryId}\n              apiCall={apiCall}\n              setApiCall={setApiCall}\n              close={() => setShowAddCategoryTypeModal(false)}\n            />\n          ) : null} */}\n        </div>\n        <div className=\"dashboard-main-container mt-16\" id=\"dashboard-body\">\n          <div className=\"container-fluid \">\n            {/* \n            <div className=\"row align-items-center m-0\">\n              <div className=\"col p-1 form_group mb-3\">\n                <p className=\"input_label\">Filter by Type:</p>\n                <div className=\"select_div\">\n                  <select\n                    name=\"category\"\n                    value={categoryTypeFilterValue}\n                    id=\"category\"\n                    onChange={(e) => {\n                      setCategoryTypeFilterValue(e.target.value);\n                      setCurrentPage(1);\n                    }}\n                    className=\"text-capitalize form-control nice-select pl-7 h-100 arrow-3 arrow-3-black w-100 text-black-2\"\n                  >\n                    <option value={\"\"}>Select category type</option>\n                    {(CateType || []).map((data, i) => {\n                      return (\n                        <option value={data.value} key={data.id}>\n                          {data.value}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n              <div className=\"col px-1 form_group mt-4 text-right\">\n                <div className=\"float-md-right\">\n                  <CustomButton\n                    className=\"font-size-3 rounded-3 btn btn-primary border-0 mr-3\"\n                    onClick={() => editJobCategory(\"0\")}\n                    title=\"Add Category\"\n                  >\n                    Add Category\n                  </CustomButton>\n                  <CustomButton\n                    className=\"font-size-3 rounded-3 btn btn-primary border-0\"\n                    onClick={() => addJobCategoryType(\"0\")}\n                    title=\"Add Category\"\n                  >\n                    Add Category Type\n                  </CustomButton>\n                </div>\n              </div>\n            </div> */}\n\n            <div className=\"row\">\n              <div className=\"col-6 mb-18\">\n                <div className=\" p-1 form_group mb-3\">\n                  <p className=\"input_label\">Search by Canidate:</p>\n                  <input\n                    required\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={\"Search Canidate\"}\n                    value={search}\n                    name={\"Employee_name\"}\n                    onChange={(e) => {\n                      onSearch(e);\n                      // setCurrentPage(1);\n                    }}\n                  />\n                  <small className=\"text-danger\">{searcherror}</small>\n                </div>\n                <h3 className=\"font-size-5 mb-0\">Candidate's Notes</h3>\n                <EmployeeNotesTable search={search} />\n              </div>\n              <div className=\"col-6 mb-18\">\n                <div className=\"col p-1 form_group mb-3\">\n                  <p className=\"input_label\">Search by Client:</p>\n                  <input\n                    required\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder={\"Search Client\"}\n                    value={Companysearch}\n                    name={\"company_name\"}\n                    onChange={(e) => {\n                      onCompanySearch(e);\n                      // setCurrentPage(1);\n                    }}\n                  />\n                  <small className=\"text-danger\">{companySearcherror}</small>\n                </div>\n                <h3 className=\"font-size-5 mb-0\">Client's Notes</h3>\n                <EmployerNotesTable search={Companysearch} />\n              </div>\n            </div>\n          </div>\n          {/* <!-- Delete Sweet Alert- --> */}\n          {/* <SAlert\n            show={deleteAlert}\n            title={deleteName}\n            text=\"Are you Sure you want to delete !\"\n            onConfirm={() => deleteCategory(deleteId)}\n            showCancelButton={true}\n            onCancel={CancelDelete}\n          /> */}\n        </div>\n      </div>\n      ;\n    </>\n  );\n}\n\nexport default Notes;\n"
        }
    ]
}