{
    "sourceFile": "src/components/admin/Resume.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1713876314712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1713876314712,
            "name": "Commit-0",
            "content": "import {\n  PDFViewer,\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image,\n} from \"@react-pdf/renderer\";\nimport React, { useEffect, useState } from \"react\";\nimport { EmployeeDetails } from \"../../api/api\";\nimport moment from \"moment\";\nimport { useParams } from \"react-router-dom\";\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#fff\",\n    padding: 10,\n    fontSize: \"10px\",\n    lineHeight: 1.5,\n  },\n  section_right: {\n    padding: \"0 0 10px 10px\",\n    width: \"70%\",\n    flexGrow: 1,\n    color: \"#333\",\n  },\n  section_left: {\n    width: \"40%\",\n    padding: 10,\n    backgroundColor: \"#253846\",\n    color: \"#fff\",\n  },\n  pagesetup: {\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  profile: {\n    maxWidth: \"60%\",\n    margin: \"15px auto\",\n    border: \"5px\",\n    borderColor: \"#fff\",\n  },\n  contact: {\n    padding: \"15px 5px\",\n    marginTop: \"15px\",\n    // borderTop: \"1px solid #fff\",\n    textAlign: \"left\",\n  },\n  divBox: {\n    padding: \"15px 0\",\n    // marginTop: \"15px\",\n    // borderTop: \"1px solid #fff\",\n    textAlign: \"left\",\n  },\n  contactRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: \"5px\",\n    lineHeight: 2,\n    textTransform: \"capitalize\",\n  },\n  icon: {\n    fontWeight: \"600\",\n    color: \"#ccc\",\n  },\n  subHeading: {\n    fontSize: 16,\n    marginBottom: 10,\n    textTransform: \"uppercase\",\n    borderBottom: \"1px solid #ccc\",\n    width: \"auto\",\n    paddingBottom: 0,\n  },\n  subHeadingRight: {\n    fontSize: 16,\n    marginBottom: 10,\n    textTransform: \"uppercase\",\n    borderBottom: \"1px solid #ccc\",\n    width: \"auto\",\n    paddingBottom: \"5px\",\n  },\n  skillDiv: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    gap: \"5px\",\n  },\n  Skill: {\n    backgroundColor: \"#fff\",\n    color: \"#333\",\n    padding: \"3px 5px\",\n    textTransform: \"uppercase\",\n    borderRadius: \"3px\",\n    margin: 0,\n    lineHeight: 1,\n  },\n  userName: {\n    padding: \"30px 15px\",\n    backgroundColor: \"#fafafa\",\n    name: {\n      fontSize: 24,\n      textTransform: \"uppercase\",\n    },\n  },\n  eduInner: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"5px 10px\",\n    marginBottom: 5,\n    backgroundColor: \"#fafafa\",\n    alignItems: \"center\",\n    textTransform: \"capitalize\",\n  },\n  eduLeft: {\n    width: \"70%\",\n  },\n  eduRight: {\n    width: \"30%\",\n    textAlign: \"right\",\n  },\n  quaUni: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  qualification: {\n    fontSize: 14,\n    textTransform: \"capitalize\",\n    marginRight: 5,\n  },\n});\n\n// Create Document Component\nfunction ResumeGrerator(props) {\n  const { id } = useParams();\n  const [User, setUser] = useState([]);\n  const [Skills, setSkills] = useState([]);\n  const [Education, setEducation] = useState([]);\n  const [userCareer, setuserCareer] = useState([]);\n  const UserData = async () => {\n    try {\n      const userData = await EmployeeDetails(id);\n      if (userData.data.length === 0) {\n        setUser([]);\n        setSkills([]);\n        setuserCareer([]);\n        setEducation([]);\n      } else {\n        setUser(userData.data.employee[0]);\n        setSkills(userData.data.skill);\n        setuserCareer(userData.data.career);\n        setEducation(userData.data.education);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    UserData();\n    // eslint-disable-next-line\n  }, [props]);\n\n  /*Function to calculate the time duration of two dates */\n  const calculateDuration = (startDate, endDate) => {\n    const start = moment(startDate);\n    const end = moment(endDate);\n    const duration = moment.duration(end.diff(start));\n    const years = duration.years();\n    const months = duration.months();\n    const days = duration.days();\n\n    return `${\n      years === 1 ? years + \" year ,\" : years > 1 ? years + \" years ,\" : \"\"\n    } ${\n      months === 1 ? months + \" month \" : months > 1 ? months + \" months ,\" : \"\"\n    } ${days === 1 ? days + \" day\" : days !== 1 ? days + \" days\" : \"\"}`;\n  };\n  // function getText(html) {\n  //   var divContainer = document.createElement(\"div\");\n  //   divContainer.innerHTML = html;\n  //   return divContainer.textContent || divContainer.innerText || \"\";\n  // }\n  function getText(html) {\n    var divContainer = document.createElement(\"div\");\n    divContainer.innerHTML = html;\n  \n    // Convert list items to text with proper indentation\n    divContainer.querySelectorAll('ul, ol').forEach(list => {\n      Array.from(list.children).forEach((li, index) => {\n        li.textContent = `${list.tagName === 'OL' ? `${index + 1}.` : 'â€¢'} ${li.textContent}`;\n      });\n    });\n  \n    // Preserve bold and italic formatting\n    divContainer.querySelectorAll('b').forEach(element => {\n      element.textContent = `**${element.textContent}**`;\n    });\n  \n    divContainer.querySelectorAll('i').forEach(element => {\n      element.textContent = `*${element.textContent}*`;\n    });\n      return divContainer.textContent;\n  }\n  \n  return (\n    <PDFViewer style={styles.pagesetup}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section_left}>\n            <View style={styles.profile}>\n              <Image\n                src={\n                  User.profile_photo === undefined ||\n                  User.profile_photo === \"undefined\" ||\n                  User.profile_photo === null ||\n                  User.profile_photo === \"null\" ||\n                  User.profile_photo === \"\"\n                    ? \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSeOWS60zE0_pk40_4fF40IWkb7nyLRRml0mzMgeY2GcSNXT32ZMhqyLhWEkWpXfggrLcI&usqp=CAU\"\n                    : User.profile_photo\n                }\n              />\n            </View>\n            <View style={styles.contact}>\n              <Text style={styles.subHeading}>Personal</Text>\n              <View style={styles.contactRow}>\n                {User.contact_no ? (\n                  <>\n                    <Text style={styles.icon}>Phone:</Text>\n                    <Text style={styles.conValue}>{User.contact_no}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.email ? (\n                  <>\n                    <Text style={styles.icon}>Email:</Text>\n                    <Text style={styles.conValue}>{User.email}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.date_of_birth ? (\n                  <>\n                    <Text style={styles.icon}>DOB:</Text>\n                    <Text style={styles.conValue}>{User.date_of_birth}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.gender ? (\n                  <>\n                    <Text style={styles.icon}>Gender:</Text>\n                    <Text style={styles.conValue}>{User.gender}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.marital_status ? (\n                  <>\n                    <Text style={styles.icon}>Marital Status:</Text>\n                    <Text style={styles.conValue}>{User.marital_status}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              {/* <View style={styles.contactRow}>\n                {User.nationality ? (\n                  <>\n                   \n                    <Text style={styles.icon}>Nationality:</Text>\n                    <Text style={styles.conValue}>{User.nationality}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View> */}\n              <View style={styles.contactRow}>\n                {User.current_location ? (\n                  <>\n                    <Text style={styles.icon}>Current Location:</Text>\n                    <Text style={styles.conValue}>{User.current_location}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.language ? (\n                  <>\n                    <Text style={styles.icon}>Language:</Text>\n                    <Text style={styles.conValue}>{User.language}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.religion ? (\n                  <>\n                    <Text style={styles.icon}>Religion:</Text>\n                    <Text style={styles.conValue}>{User.religion}</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.experience ? (\n                  <>\n                    <Text style={styles.icon}>Expert:</Text>\n                    <Text style={styles.conValue}>{User.experience} Year</Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.work_permit_canada ? (\n                  <>\n                    <Text style={styles.icon}>Canada Work Permit:</Text>\n                    <Text style={styles.conValue}>\n                      {User.work_permit_canada}\n                    </Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n              <View style={styles.contactRow}>\n                {User.work_permit_other_country ? (\n                  <>\n                    <Text style={styles.icon}>Other Country Work Permit:</Text>\n                    <Text style={styles.conValue}>\n                      {User.work_permit_other_country}\n                    </Text>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </View>\n            </View>\n            {Skills.length === 0 ? null : (\n              <View style={styles.contact}>\n                <Text style={styles.subHeading}>SKILLS</Text>\n                <View style={styles.skillDiv}>\n                  {(Skills || []).map((skill) => (\n                    <Text key={skill.skill_id} style={styles.Skill}>\n                      {skill.skill}\n                    </Text>\n                  ))}\n                </View>\n              </View>\n            )}\n          </View>\n          <View style={styles.section_right}>\n            <View style={styles.userName}>\n              <Text style={styles.userName.name}>{User.name}</Text>\n            </View>\n            {User.description && (\n              <View style={styles.divBox}>\n                <Text style={styles.subHeadingRight}>About</Text>\n                <View style={styles.AboutDiv}>\n                  <Text style={styles.aboutText}>\n                    {getText(User.description)}\n                  </Text>\n                </View>\n              </View>\n            )}\n            {Education.length === 0 ? null : (\n              <View style={styles.divBox}>\n                <Text style={styles.subHeadingRight}>Education</Text>\n                <View style={styles.eduDiv}>\n                  {(Education || []).map((edu) => (\n                    <View key={edu.education_id} style={styles.eduInner}>\n                      <View style={styles.eduLeft}>\n                        <View style={styles.quaUni}>\n                          <Text style={styles.qualification}>\n                            {edu.qualification}\n                          </Text>\n                          <Text style={styles.university}>\n                            ({edu.university_institute})\n                          </Text>\n                        </View>\n                        <View style={styles.couSpec}>\n                          <Text style={styles.course}>\n                            {edu.course}\n                            {edu.specialization && ` - (${edu.specialization})`}\n                          </Text>\n                        </View>\n                      </View>\n                      <View style={styles.eduRight}>\n                        <Text style={styles.year}>{edu.passing_year}</Text>\n                        <Text style={styles.location}>\n                          {edu.institute_location}\n                        </Text>\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n            )}\n            {userCareer.length === 0 ? null : (\n              <View style={styles.divBox}>\n                <Text style={styles.subHeadingRight}>Experience</Text>\n                <View style={styles.expDiv}>\n                  {(userCareer || []).map((car) => (\n                    <View key={car.career_id} style={styles.eduInner}>\n                      <View style={styles.eduLeft}>\n                        <View style={styles.quaUni}>\n                          <Text style={styles.qualification}>\n                            {car.designation}\n                          </Text>\n                          <Text style={styles.university}>\n                            {car.functional_area && `(${car.functional_area})`}\n                          </Text>\n                        </View>\n                        <View style={styles.couSpec}>\n                          <Text style={styles.course}>\n                            {car.company}\n                            {car.industry && ` - (${car.industry})`}\n                          </Text>\n                        </View>\n                      </View>\n                      <View style={styles.eduRight}>\n                        {/* {\n                        let a = moment([2015, 11, 29]);\n                        let b = moment([2007, 06, 27]);\n                        \n                        let years = ((moment([2015, 11, 29])).diff(moment([2015, 11, 29]), 'year').add(years, 'years'));\n                        \n                        let months = a.diff(b, 'months');\n                        b.add(months, 'months');\n                      } */}\n                        <Text style={styles.year}>\n                          {/* {car.currently_work_here != null\n                            ? moment(car.end_date).diff(\n                                moment(car.start_date),\n                                \"year\"\n                              ) !== 0\n                              ? moment(car.end_date).diff(\n                                  moment(car.start_date),\n                                  \"year\"\n                                ) + \"Y, \"\n                              : null +\n                                  moment(car.end_date).diff(\n                                    moment(car.start_date),\n                                    \"month\"\n                                  ) !==\n                                0\n                              ? moment(car.end_date).diff(\n                                  moment(car.start_date),\n                                  \"month\"\n                                ) + \"M\"\n                              : null\n                            : car.start_date + \"- Now\"} */}\n                          {/* {car.start_date}-\n                        {car.end_date || car.currently_work_here} */}\n                          {car.currently_work_here === (\"1\" || 1)\n                            ? \"Currently working\"\n                            : calculateDuration(car.start_date, car.end_date)}\n                        </Text>\n                        <Text style={styles.location}>\n                          {car.company_location}\n                        </Text>\n                      </View>\n                    </View>\n                  ))}\n                </View>\n              </View>\n            )}\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n}\nexport default ResumeGrerator;\n"
        }
    ]
}