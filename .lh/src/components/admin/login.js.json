{
    "sourceFile": "src/components/admin/login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1709549438012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709549503502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,310 @@\n+import React, { useState } from \"react\";\n+import { AdminForgotPasswordApi, AdminLogin } from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { useNavigate, Link } from \"react-router-dom\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import Loader from \"../common/loader\";\n+import ForgotPasswordForm from \"../forms/admin/ForgotPasswordForm\";\n+export default function AdminLoginFrom({ setAdminLoggedIn }) {\n+  let navigate = useNavigate();\n+  let [loading, setLoading] = useState(false);\n+  let [isLoading, setIsLoading] = useState(false);\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    Credentials: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, errors, setErrors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+\n+    if (validate()) {\n+      setLoading(true);\n+      setIsLoading(true);\n+      // handle form submission\n+      try {\n+        const updatedTodo = await AdminLogin(state);\n+        console.log(updatedTodo)\n+        if (\n+          updatedTodo.status === true ||\n+          updatedTodo.message === \"Successfully Logged \"\n+        ) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"userType\", \"admin\");\n+          localStorage.setItem(\"admin\", updatedTodo.name);\n+          localStorage.setItem(\"admin_id\", updatedTodo.admin_id);\n+          localStorage.setItem(\"admin_type\", updatedTodo.user_type);\n+          localStorage.setItem(\"admin_email\", updatedTodo.email);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          setIsLoading(false);\n+          navigate(\"/dashboard\");\n+          // console.log(updatedTodo);\n+          window.location.reload();\n+        } else if (updatedTodo.message === \"Invalid Credentials\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"Invalid Credentials\"] });\n+        }else{\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n+        toast.error(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+\n+  // END USER LOGIN VALIDATION\n+  //Function to forgot password\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const Response = await AdminForgotPasswordApi(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          setShowForgotPassword(false);\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n+        toast.error(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login --> */}\n+\n+      <div className=\"d-flex justify-content-center admin_login_page hv-100 overflow-auto align-items-center\">\n+        <ToastContainer />\n+        <div\n+          className=\"bg-white rounded\"\n+          style={{ maxWidth: \"500px\", width: \"100%\" }}\n+        >\n+          {isLoading ? (\n+            <Loader />\n+          ) : (\n+            <div className=\"bg-white-2 h-100 p-9 login_Modal_box border shadow\">\n+              <Link className=\"pb-5  text-center w-100\" to={\"/\"}>\n+                <img\n+                  src=\"image/00logo-main-black.png\"\n+                  className=\"img-fluid \"\n+                  // height={200}\n+                  width={200}\n+                  alt=\"logo\"\n+                />\n+              </Link>\n+              {/* user login form */}\n+              <h5 className=\"text-center mb-7 font-size-4\">\n+                {showForgotPassword === true ? \"Fogot Password\" : \"Admin Login\"}\n+              </h5>\n+              <form\n+                onSubmit={onUserLoginClick}\n+                className={showForgotPassword === true ? \"d-none\" : \"\"}\n+              >\n+                <div className=\"form-group\">\n+                  <label\n+                    htmlFor=\"email\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    E-mail\n+                  </label>\n+                  <input\n+                    type=\"email\"\n+                    name=\"email\"\n+                    value={state.email}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.email\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"example@gmail.com\"\n+                    id=\"email\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                  {errors.email && (\n+                    <span>\n+                      {errors.email.map((error) => (\n+                        <span key={error} className=\"text-danger font-size-3\">\n+                          {error}\n+                        </span>\n+                      ))}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group\">\n+                  <label\n+                    htmlFor=\"password\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Password\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      name=\"password\"\n+                      type=\"password\"\n+                      value={state.password}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.password\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"Enter password\"\n+                      id=\"password\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                    {errors.password && (\n+                      <span>\n+                        {errors.password.map((error) => (\n+                          <span key={error} className=\"text-danger font-size-3\">\n+                            {error}\n+                          </span>\n+                        ))}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {errors.Credentials && (\n+                    <span>\n+                      {errors.Credentials.map((error) => (\n+                        <span key={error} className=\"text-danger font-size-3\">\n+                          {error}\n+                        </span>\n+                      ))}\n+                    </span>\n+                  )}\n+                </div>\n+\n+                {/* <div className=\"d-flex flex-wrap justify-content-between\">\n+                <label\n+                  htmlFor=\"terms-check\"\n+                  className=\"gr-check-input d-flex  mr-3\"\n+                >\n+                  <input\n+                    type=\"checkbox\"\n+                    id=\"tandr\"\n+                    name=\"tandr\"\n+                    onChange={onInputChange}\n+                    className=\"text-black-2 pt-5 mr-5\"\n+                  />\n+                  <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                    Remember password\n+                  </span>\n+                </label> */}\n+\n+                {/* <Link\n+                  to={\"\"}\n+                  className=\"font-size-3 text-dodger line-height-reset mb-3 mx-3\"\n+                  onClick={() => setShowForgotPassword(true)}\n+                >\n+                  Forget Password\n+                </Link> */}\n+                {/*----ERROR MESSAGE FOR terms----*/}\n+                {/* {errors.tandr && (\n+                  <span key={errors.tandr} className=\"text-danger font-size-3\">\n+                    {errors.tandr}\n+                  </span>\n+                )} */}\n+                {/* </div> */}\n+\n+                <div className=\"form-group mb-1\">\n+                  {loading === true ? (\n+                    <button className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\">\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                      type=\"submit\"\n+                    >\n+                      Log in\n+                    </button>\n+                  )}\n+                  {/* <p className=\"text-center mt-7 font-size-4 mb-1\">\n+                    Are you a partner?\n+                  </p>\n+                  <Link\n+                    to={\"/partnerlogin\"}\n+                    className=\"font-size-4 text-anger line-height-reset mb-3 text-center w-100\"\n+                  >\n+                    Partner Login\n+                  </Link> */}\n+                </div>\n+              </form>\n+              <ForgotPasswordForm\n+                setShowForgotPassword={setShowForgotPassword}\n+                showForgotPassword={showForgotPassword}\n+                onForgoteClick={onForgoteClick}\n+                state={state}\n+                onInputChange={onInputChange}\n+                errors={errors}\n+                loading={loading}\n+                setErrors={setErrors}\n+              />\n+            </div>\n+          )}\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1709549542401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,5 +302,9 @@\n                 setErrors={setErrors}\n               />\n             </div>\n           )}\n-        <\n\\ No newline at end of file\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n"
                },
                {
                    "date": 1709549556717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,311 @@\n+import React, { useState } from \"react\";\n+import { AdminForgotPasswordApi, AdminLogin } from \"../../api/api\";\n+import useValidation from \"../common/useValidation\";\n+import { useNavigate, Link } from \"react-router-dom\";\n+import { ToastContainer, toast } from \"react-toastify\";\n+import Loader from \"../common/loader\";\n+import ForgotPasswordForm from \"../forms/admin/ForgotPasswordForm\";\n+export default function AdminLoginFrom({ setAdminLoggedIn }) {\n+  let navigate = useNavigate();\n+  let [loading, setLoading] = useState(false);\n+  let [isLoading, setIsLoading] = useState(false);\n+  let [showForgotPassword, setShowForgotPassword] = useState(false);\n+\n+  /*----USER LOGIN VALIDATION----*/\n+  const initialFormState = {\n+    email: \"\",\n+    password: \"\",\n+    Credentials: \"\",\n+    forget_email: \"\",\n+  };\n+  /*----VALIDATION CONTENT----*/\n+  const validators = {\n+    email: [\n+      (value) =>\n+        value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n+    forget_email: [\n+      (value) =>\n+        state.email\n+          ? \"\"\n+          : value === null || value.trim() === \"\"\n+          ? \"Email is required\"\n+          : /\\S+@\\S+\\.\\S+/.test(value)\n+          ? null\n+          : \"Email is invalid\",\n+    ],\n+  };\n+  /*----LOGIN ONCHANGE FUNCTION----*/\n+  const { state, onInputChange, errors, setErrors, validate } = useValidation(\n+    initialFormState,\n+    validators\n+  );\n+\n+  /*----LOGIN SUBMIT FUNCTION----*/\n+  const onUserLoginClick = async (event) => {\n+    event.preventDefault();\n+\n+    if (validate()) {\n+      setLoading(true);\n+      setIsLoading(true);\n+      // handle form submission\n+      try {\n+        const updatedTodo = await AdminLogin(state);\n+        console.log(updatedTodo.message === \"Invalid Credentials\")\n+        if (\n+          updatedTodo.status === true ||\n+          updatedTodo.message === \"Successfully Logged \"\n+        ) {\n+          localStorage.setItem(\"token\", updatedTodo.token);\n+          localStorage.setItem(\"userType\", \"admin\");\n+          localStorage.setItem(\"admin\", updatedTodo.name);\n+          localStorage.setItem(\"admin_id\", updatedTodo.admin_id);\n+          localStorage.setItem(\"admin_type\", updatedTodo.user_type);\n+          localStorage.setItem(\"admin_email\", updatedTodo.email);\n+          toast.success(\"Logged In Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          setIsLoading(false);\n+          navigate(\"/dashboard\");\n+          // console.log(updatedTodo);\n+          window.location.reload();\n+        } \n+         if (updatedTodo.message === \"Invalid Credentials\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"Invalid Credentials\"] });\n+        }else{\n+          setLoading(false);\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n+        toast.error(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+        setLoading(false);\n+      }\n+    }\n+  };\n+\n+  // END USER LOGIN VALIDATION\n+  //Function to forgot password\n+  const onForgoteClick = async (event) => {\n+    event.preventDefault();\n+    if (validate()) {\n+      setLoading(true);\n+      try {\n+        const Response = await AdminForgotPasswordApi(state);\n+        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n+          toast.success(\"Email sent Successfully\", {\n+            position: toast.POSITION.TOP_RIGHT,\n+            autoClose: 1000,\n+          });\n+          setLoading(false);\n+          setShowForgotPassword(false);\n+        } else if (Response.message === \"No user found\") {\n+          setLoading(false);\n+          setErrors({ ...errors, Credentials: [\"No user found\"] });\n+          //   handle form submission\n+        }\n+      } catch (err) {\n+        console.log(err);\n+        setLoading(false);\n+        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n+        toast.error(\"Something went wrong\", {\n+          position: toast.POSITION.TOP_RIGHT,\n+          autoClose: 1000,\n+        });\n+      }\n+    }\n+  };\n+  return (\n+    <>\n+      {/* <!-- Login --> */}\n+\n+      <div className=\"d-flex justify-content-center admin_login_page hv-100 overflow-auto align-items-center\">\n+        <ToastContainer />\n+        <div\n+          className=\"bg-white rounded\"\n+          style={{ maxWidth: \"500px\", width: \"100%\" }}\n+        >\n+          {isLoading ? (\n+            <Loader />\n+          ) : (\n+            <div className=\"bg-white-2 h-100 p-9 login_Modal_box border shadow\">\n+              <Link className=\"pb-5  text-center w-100\" to={\"/\"}>\n+                <img\n+                  src=\"image/00logo-main-black.png\"\n+                  className=\"img-fluid \"\n+                  // height={200}\n+                  width={200}\n+                  alt=\"logo\"\n+                />\n+              </Link>\n+              {/* user login form */}\n+              <h5 className=\"text-center mb-7 font-size-4\">\n+                {showForgotPassword === true ? \"Fogot Password\" : \"Admin Login\"}\n+              </h5>\n+              <form\n+                onSubmit={onUserLoginClick}\n+                className={showForgotPassword === true ? \"d-none\" : \"\"}\n+              >\n+                <div className=\"form-group\">\n+                  <label\n+                    htmlFor=\"email\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    E-mail\n+                  </label>\n+                  <input\n+                    type=\"email\"\n+                    name=\"email\"\n+                    value={state.email}\n+                    onChange={onInputChange}\n+                    className={\n+                      errors.email\n+                        ? \"form-control border border-danger\"\n+                        : \"form-control\"\n+                    }\n+                    placeholder=\"example@gmail.com\"\n+                    id=\"email\"\n+                  />\n+                  {/*----ERROR MESSAGE FOR EMAIL----*/}\n+                  {errors.email && (\n+                    <span>\n+                      {errors.email.map((error) => (\n+                        <span key={error} className=\"text-danger font-size-3\">\n+                          {error}\n+                        </span>\n+                      ))}\n+                    </span>\n+                  )}\n+                </div>\n+                <div className=\"form-group\">\n+                  <label\n+                    htmlFor=\"password\"\n+                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n+                  >\n+                    Password\n+                  </label>\n+                  <div className=\"position-relative\">\n+                    <input\n+                      name=\"password\"\n+                      type=\"password\"\n+                      value={state.password}\n+                      onChange={onInputChange}\n+                      className={\n+                        errors.password\n+                          ? \"form-control border border-danger\"\n+                          : \"form-control\"\n+                      }\n+                      placeholder=\"Enter password\"\n+                      id=\"password\"\n+                    />\n+                    {/*----ERROR MESSAGE FOR PASSWORD----*/}\n+                    {errors.password && (\n+                      <span>\n+                        {errors.password.map((error) => (\n+                          <span key={error} className=\"text-danger font-size-3\">\n+                            {error}\n+                          </span>\n+                        ))}\n+                      </span>\n+                    )}\n+                  </div>\n+                  {errors.Credentials && (\n+                    <span>\n+                      {errors.Credentials.map((error) => (\n+                        <span key={error} className=\"text-danger font-size-3\">\n+                          {error}\n+                        </span>\n+                      ))}\n+                    </span>\n+                  )}\n+                </div>\n+\n+                {/* <div className=\"d-flex flex-wrap justify-content-between\">\n+                <label\n+                  htmlFor=\"terms-check\"\n+                  className=\"gr-check-input d-flex  mr-3\"\n+                >\n+                  <input\n+                    type=\"checkbox\"\n+                    id=\"tandr\"\n+                    name=\"tandr\"\n+                    onChange={onInputChange}\n+                    className=\"text-black-2 pt-5 mr-5\"\n+                  />\n+                  <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n+                    Remember password\n+                  </span>\n+                </label> */}\n+\n+                {/* <Link\n+                  to={\"\"}\n+                  className=\"font-size-3 text-dodger line-height-reset mb-3 mx-3\"\n+                  onClick={() => setShowForgotPassword(true)}\n+                >\n+                  Forget Password\n+                </Link> */}\n+                {/*----ERROR MESSAGE FOR terms----*/}\n+                {/* {errors.tandr && (\n+                  <span key={errors.tandr} className=\"text-danger font-size-3\">\n+                    {errors.tandr}\n+                  </span>\n+                )} */}\n+                {/* </div> */}\n+\n+                <div className=\"form-group mb-1\">\n+                  {loading === true ? (\n+                    <button className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\">\n+                      <span\n+                        className=\"spinner-border spinner-border-sm \"\n+                        role=\"status\"\n+                        aria-hidden=\"true\"\n+                      ></span>\n+                      <span className=\"sr-only\">Loading...</span>\n+                    </button>\n+                  ) : (\n+                    <button\n+                      className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n+                      type=\"submit\"\n+                    >\n+                      Log in\n+                    </button>\n+                  )}\n+                  {/* <p className=\"text-center mt-7 font-size-4 mb-1\">\n+                    Are you a partner?\n+                  </p>\n+                  <Link\n+                    to={\"/partnerlogin\"}\n+                    className=\"font-size-4 text-anger line-height-reset mb-3 text-center w-100\"\n+                  >\n+                    Partner Login\n+                  </Link> */}\n+                </div>\n+              </form>\n+              <ForgotPasswordForm\n+                setShowForgotPassword={setShowForgotPassword}\n+                showForgotPassword={showForgotPassword}\n+                onForgoteClick={onForgoteClick}\n+                state={state}\n+                onInputChange={onInputChange}\n+                errors={errors}\n+                loading={loading}\n+                setErrors={setErrors}\n+              />\n+            </div>\n+          )}\n+        </div>\n+      </div>\n+    </>\n+  );\n+}\n"
                }
            ],
            "date": 1709549438012,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport { AdminForgotPasswordApi, AdminLogin } from \"../../api/api\";\nimport useValidation from \"../common/useValidation\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Loader from \"../common/loader\";\nimport ForgotPasswordForm from \"../forms/admin/ForgotPasswordForm\";\nexport default function AdminLoginFrom({ setAdminLoggedIn }) {\n  let navigate = useNavigate();\n  let [loading, setLoading] = useState(false);\n  let [isLoading, setIsLoading] = useState(false);\n  let [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  /*----USER LOGIN VALIDATION----*/\n  const initialFormState = {\n    email: \"\",\n    password: \"\",\n    Credentials: \"\",\n    forget_email: \"\",\n  };\n  /*----VALIDATION CONTENT----*/\n  const validators = {\n    email: [\n      (value) =>\n        value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n    password: [(value) => (value === \"\" ? \"Password is required\" : null)],\n    forget_email: [\n      (value) =>\n        state.email\n          ? \"\"\n          : value === null || value.trim() === \"\"\n          ? \"Email is required\"\n          : /\\S+@\\S+\\.\\S+/.test(value)\n          ? null\n          : \"Email is invalid\",\n    ],\n  };\n  /*----LOGIN ONCHANGE FUNCTION----*/\n  const { state, onInputChange, errors, setErrors, validate } = useValidation(\n    initialFormState,\n    validators\n  );\n\n  /*----LOGIN SUBMIT FUNCTION----*/\n  const onUserLoginClick = async (event) => {\n    event.preventDefault();\n\n    if (validate()) {\n      setLoading(true);\n      setIsLoading(true);\n      // handle form submission\n      try {\n        const updatedTodo = await AdminLogin(state);\n        if (\n          updatedTodo.status === true ||\n          updatedTodo.message === \"Successfully Logged \"\n        ) {\n          localStorage.setItem(\"token\", updatedTodo.token);\n          localStorage.setItem(\"userType\", \"admin\");\n          localStorage.setItem(\"admin\", updatedTodo.name);\n          localStorage.setItem(\"admin_id\", updatedTodo.admin_id);\n          localStorage.setItem(\"admin_type\", updatedTodo.user_type);\n          localStorage.setItem(\"admin_email\", updatedTodo.email);\n          toast.success(\"Logged In Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setLoading(false);\n          setIsLoading(false);\n          navigate(\"/dashboard\");\n          // console.log(updatedTodo);\n          window.location.reload();\n        } else if (updatedTodo.message === \"Invalid Credentials\") {\n          setLoading(false);\n          setErrors({ ...errors, Credentials: [\"Invalid Credentials\"] });\n        }else{\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log(err);\n        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n        setLoading(false);\n      }\n    }\n  };\n\n  // END USER LOGIN VALIDATION\n  //Function to forgot password\n  const onForgoteClick = async (event) => {\n    event.preventDefault();\n    if (validate()) {\n      setLoading(true);\n      try {\n        const Response = await AdminForgotPasswordApi(state);\n        if (Response.status === 1 || Response.message === \"Sent you a mail\") {\n          toast.success(\"Email sent Successfully\", {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 1000,\n          });\n          setLoading(false);\n          setShowForgotPassword(false);\n        } else if (Response.message === \"No user found\") {\n          setLoading(false);\n          setErrors({ ...errors, Credentials: [\"No user found\"] });\n          //   handle form submission\n        }\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        setErrors({ ...errors, Credentials: [\"Please try again later.\"] });\n        toast.error(\"Something went wrong\", {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 1000,\n        });\n      }\n    }\n  };\n  return (\n    <>\n      {/* <!-- Login --> */}\n\n      <div className=\"d-flex justify-content-center admin_login_page hv-100 overflow-auto align-items-center\">\n        <ToastContainer />\n        <div\n          className=\"bg-white rounded\"\n          style={{ maxWidth: \"500px\", width: \"100%\" }}\n        >\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"bg-white-2 h-100 p-9 login_Modal_box border shadow\">\n              <Link className=\"pb-5  text-center w-100\" to={\"/\"}>\n                <img\n                  src=\"image/00logo-main-black.png\"\n                  className=\"img-fluid \"\n                  // height={200}\n                  width={200}\n                  alt=\"logo\"\n                />\n              </Link>\n              {/* user login form */}\n              <h5 className=\"text-center mb-7 font-size-4\">\n                {showForgotPassword === true ? \"Fogot Password\" : \"Admin Login\"}\n              </h5>\n              <form\n                onSubmit={onUserLoginClick}\n                className={showForgotPassword === true ? \"d-none\" : \"\"}\n              >\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"email\"\n                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                  >\n                    E-mail\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={state.email}\n                    onChange={onInputChange}\n                    className={\n                      errors.email\n                        ? \"form-control border border-danger\"\n                        : \"form-control\"\n                    }\n                    placeholder=\"example@gmail.com\"\n                    id=\"email\"\n                  />\n                  {/*----ERROR MESSAGE FOR EMAIL----*/}\n                  {errors.email && (\n                    <span>\n                      {errors.email.map((error) => (\n                        <span key={error} className=\"text-danger font-size-3\">\n                          {error}\n                        </span>\n                      ))}\n                    </span>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"password\"\n                    className=\"font-size-4 text-black-2 font-weight-semibold line-height-reset\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"position-relative\">\n                    <input\n                      name=\"password\"\n                      type=\"password\"\n                      value={state.password}\n                      onChange={onInputChange}\n                      className={\n                        errors.password\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Enter password\"\n                      id=\"password\"\n                    />\n                    {/*----ERROR MESSAGE FOR PASSWORD----*/}\n                    {errors.password && (\n                      <span>\n                        {errors.password.map((error) => (\n                          <span key={error} className=\"text-danger font-size-3\">\n                            {error}\n                          </span>\n                        ))}\n                      </span>\n                    )}\n                  </div>\n                  {errors.Credentials && (\n                    <span>\n                      {errors.Credentials.map((error) => (\n                        <span key={error} className=\"text-danger font-size-3\">\n                          {error}\n                        </span>\n                      ))}\n                    </span>\n                  )}\n                </div>\n\n                {/* <div className=\"d-flex flex-wrap justify-content-between\">\n                <label\n                  htmlFor=\"terms-check\"\n                  className=\"gr-check-input d-flex  mr-3\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    id=\"tandr\"\n                    name=\"tandr\"\n                    onChange={onInputChange}\n                    className=\"text-black-2 pt-5 mr-5\"\n                  />\n                  <span className=\"font-size-3 mb-1 line-height-reset d-block\">\n                    Remember password\n                  </span>\n                </label> */}\n\n                {/* <Link\n                  to={\"\"}\n                  className=\"font-size-3 text-dodger line-height-reset mb-3 mx-3\"\n                  onClick={() => setShowForgotPassword(true)}\n                >\n                  Forget Password\n                </Link> */}\n                {/*----ERROR MESSAGE FOR terms----*/}\n                {/* {errors.tandr && (\n                  <span key={errors.tandr} className=\"text-danger font-size-3\">\n                    {errors.tandr}\n                  </span>\n                )} */}\n                {/* </div> */}\n\n                <div className=\"form-group mb-1\">\n                  {loading === true ? (\n                    <button className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\">\n                      <span\n                        className=\"spinner-border spinner-border-sm \"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                      <span className=\"sr-only\">Loading...</span>\n                    </button>\n                  ) : (\n                    <button\n                      className=\"btn btn-primary btn-medium w-100 rounded-5 text-uppercase\"\n                      type=\"submit\"\n                    >\n                      Log in\n                    </button>\n                  )}\n                  {/* <p className=\"text-center mt-7 font-size-4 mb-1\">\n                    Are you a partner?\n                  </p>\n                  <Link\n                    to={\"/partnerlogin\"}\n                    className=\"font-size-4 text-anger line-height-reset mb-3 text-center w-100\"\n                  >\n                    Partner Login\n                  </Link> */}\n                </div>\n              </form>\n              <ForgotPasswordForm\n                setShowForgotPassword={setShowForgotPassword}\n                showForgotPassword={showForgotPassword}\n                onForgoteClick={onForgoteClick}\n                state={state}\n                onInputChange={onInputChange}\n                errors={errors}\n                loading={loading}\n                setErrors={setErrors}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"
        }
    ]
}