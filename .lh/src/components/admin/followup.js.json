{
    "sourceFile": "src/components/admin/followup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1694514932230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694582544301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   const [jobData, setjobData] = useState([]);\n   const [JobId, setJobId] = useState([]);\n   /*Filter and search state */\n   const [categoryFilterValue, setCategoryFilterValue] = useState(\"\");\n-  const [SkillFilterValue, setSkillFilterValue] = useState(\"\");\n+  const [SkillFilterValue, setSkillFilterValue] = useState(\"null\");\n   const [locationFilterValue, setLocationFilterValue] = useState(\"\");\n   const [jobSwapFilterValue, setJobSwapFilterValue] = useState(\"\");\n   const [search, setSearch] = useState(\"\");\n   const [searcherror, setSearchError] = useState(\"\");\n"
                },
                {
                    "date": 1694596424593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   const [jobData, setjobData] = useState([]);\n   const [JobId, setJobId] = useState([]);\n   /*Filter and search state */\n   const [categoryFilterValue, setCategoryFilterValue] = useState(\"\");\n-  const [SkillFilterValue, setSkillFilterValue] = useState(\"null\");\n+  const [SkillFilterValue, setSkillFilterValue] = useState(\"\");\n   const [locationFilterValue, setLocationFilterValue] = useState(\"\");\n   const [jobSwapFilterValue, setJobSwapFilterValue] = useState(\"\");\n   const [search, setSearch] = useState(\"\");\n   const [searcherror, setSearchError] = useState(\"\");\n"
                }
            ],
            "date": 1694514932230,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JobDetailsBox from \"../common/jobdetail\";\nimport AdminHeader from \"./header\";\nimport AdminSidebar from \"./sidebar\";\nimport { GetAllJobs, GetFilter } from \"../../api/api\";\nimport { ToastContainer } from \"react-toastify\";\nimport Pagination from \"../common/pagination\";\nimport FilterJson from \"../json/filterjson\";\nimport JobResponse from \"./response\";\nimport Loader from \"../common/loader\";\nfunction Followup() {\n  /*show Modal and props state */\n  let [isLoading, setIsLoading] = useState(true);\n  let [apiCall, setApiCall] = useState(false);\n  let [catapiCall, setCatApiCall] = useState(false);\n  let [showJobDetails, setShowJobDetails] = useState(false);\n  const [jobData, setjobData] = useState([]);\n  const [JobId, setJobId] = useState([]);\n  /*Filter and search state */\n  const [categoryFilterValue, setCategoryFilterValue] = useState(\"\");\n  const [SkillFilterValue, setSkillFilterValue] = useState(\"\");\n  const [locationFilterValue, setLocationFilterValue] = useState(\"\");\n  const [jobSwapFilterValue, setJobSwapFilterValue] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  let [Json, setJson] = useState([]);\n  /*Pagination states */\n  const [totalData, setTotalData] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage] = useState(10);\n  /*Shorting states */\n  const [columnName, setcolumnName] = useState(\"job_id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  const [responseId, setresponseId] = useState();\n  const [responseDropDown, setresponseDropDown] = useState(false);\n  /*Function to get the jSon */\n  const JsonData = async () => {\n    try {\n      let Json = await GetFilter();\n      if(Json.data.message ==='No data found'){\n        setJson([])\n      }else{\n        setJson(Json.data.data);\n      }\n      setJson(Json.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /* Function to get Job data*/\n  const JobData = async () => {\n    setIsLoading(true);\n    try {\n      const userData = await GetAllJobs(\n        search,\n        locationFilterValue,\n        categoryFilterValue,\n        SkillFilterValue,\n        jobSwapFilterValue,\n        currentPage,\n        recordsPerPage,\n        columnName,\n        sortOrder\n      );\n      if (userData.data.data.length === 0) {\n        setJobId([]);\n        setresponseId();\n        setIsLoading(false);\n        setjobData([]);\n      } else {\n        setjobData(userData.data.data);\n        setTotalData(userData.data.total_rows);\n        setresponseId(userData.data.data[0].job_id);\n        setIsLoading(false);\n      }\n    } catch (err) {\n      console.log(err);\n      setIsLoading(false);\n    }\n  };\n\n  /*Render function to get the job */\n  useEffect(() => {\n    JobData();\n    JsonData();\n    if (apiCall === true || catapiCall === true) {\n      setCatApiCall(false);\n      setApiCall(false);\n    }\n    if ((search === \"\") === true) {\n      setSearchError(\"\");\n    }\n  }, [\n    categoryFilterValue,\n    SkillFilterValue,\n    locationFilterValue,\n    jobSwapFilterValue,\n    search,\n    currentPage,\n    columnName,\n    sortOrder,\n    apiCall,\n    showJobDetails,\n    catapiCall,\n  ]);\n\n  /* Function to show the Job detail data */\n  // const JobDetail = (e) => {\n  //   // e.preventDefault();\n  //   setShowJobDetails(true);\n  //   setJobId(e);\n  // };\n  /*Pagination Calculation */\n  const nPages = Math.ceil(totalData / recordsPerPage);\n  /*Sorting Function */\n  const handleSort = (columnName) => {\n    setSortOrder(sortOrder === \"DESC\" ? \"ASC\" : \"DESC\");\n    setcolumnName(columnName);\n  };\n  /*Function to Search Follow up */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Job cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  return (\n    <>\n      <div className=\"site-wrapper overflow-hidden bg-default-2\">\n        {/* <!-- Header Area --> */}\n        <AdminHeader heading={\"Manage Follow-ups\"} />\n        {/* <!-- navbar- --> */}\n        <AdminSidebar heading={\"Manage Follow-ups\"} />\n        <ToastContainer />\n        <div\n          className={\n            showJobDetails === false\n              ? \"dashboard-main-container mt-16\"\n              : \"d-none\"\n          }\n          id=\"dashboard-body\"\n        >\n          <div className=\"container-fluid\">\n            <div className=\"mb-18\">\n              <div className=\"mb-4 align-items-center\">\n                <div className=\"page___heading\">\n                  <h3 className=\"font-size-6 mb-0\">Posted Jobs </h3>\n                </div>\n                {/* <!-- Follow up search and filter --> */}\n                <div className=\"row m-0 align-items-center\">\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Search by Job:</p>\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control w-100\"\n                      placeholder={\"Search Job\"}\n                      value={search}\n                      name={\"category_name\"}\n                      onChange={(e) => {\n                        onSearch(e);\n                        setCurrentPage(1);\n                      }}\n                      maxLength={30}\n                    />\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Category:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"country\"\n                        id=\"country\"\n                        value={categoryFilterValue}\n                        onChange={(e) => {\n                          setCategoryFilterValue(e.target.value);\n                          setCatApiCall(true);\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-capitalize form-control\"\n                      >\n                        <option value=\"\">Select Category</option>\n                        {(Json.Category || []).map((data) => {\n                          return (\n                            <option value={data.id} key={data.value}>\n                              {data.value}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Job SWEP:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"country\"\n                        id=\"country\"\n                        value={jobSwapFilterValue}\n                        onChange={(e) => {\n                          setJobSwapFilterValue(e.target.value);\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-capitalize form-control\"\n                      >\n                        <option value=\"\">Select Job Type</option>\n                        {(FilterJson.job_type || []).map((job, i) => (\n                          <option key={i} value={job}>\n                            {job}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Key Skill:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"country\"\n                        id=\"country\"\n                        value={SkillFilterValue}\n                        onChange={(e) => {\n                          setSkillFilterValue(e.target.value);\n                          setCurrentPage(1);\n                        }}\n                        className=\" form-control\"\n                      >\n                        <option value=\"\">Select Skill</option>\n                        {(Json.Skill || []).map((data) => {\n                          return (\n                            <option value={data.value} key={data.id}>\n                              {data.value}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col p-1 form_group mb-3\">\n                    <p className=\"input_label\">Filter by Location:</p>\n                    <div className=\"select_div\">\n                      <select\n                        name=\"country\"\n                        id=\"country\"\n                        value={locationFilterValue}\n                        onChange={(e) => {\n                          setLocationFilterValue(e.target.value);\n                          setCurrentPage(1);\n                        }}\n                        className=\"text-capitalize form-control\"\n                      >\n                        <option value=\"\">Select Location</option>\n                        {(FilterJson.location || []).map((data, i) => {\n                          return (\n                            <option value={data} key={i}>\n                              {data}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <small className=\"text-danger\">{searcherror}</small>\n              </div>\n              <div className=\"bg-white shadow-8 datatable_div  pt-7 rounded pb-9 px-5\">\n                <div className=\"table-responsive main_table_div\">\n                  {isLoading ? (\n                    <Loader />\n                  ) : (\n                    <table className=\"table table-striped main_data_table\">\n                      <thead>\n                        <tr>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              onClick={() => {\n                                handleSort(\"job_title\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Industry\"\n                            >\n                              Job title / Industry\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"job_type\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Job\"\n                            >\n                              Job Type\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"location\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Address\"\n                            >\n                              Address\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"education\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Education\"\n                            >\n                              Education\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"keyskill\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Skills\"\n                            >\n                              Skills\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"language\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Language\"\n                            >\n                              Language\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"salary\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Salary\"\n                            >\n                              Salary\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            <Link\n                              to=\"\"\n                              onClick={() => {\n                                handleSort(\"experience_required\");\n                                setCurrentPage(1);\n                              }}\n                              className=\"text-gray\"\n                              title=\"Sort by Experience\"\n                            >\n                              Experience\n                            </Link>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\"text-gray border-0 font-size-4 font-weight-normal\"\n                          >\n                            Total Responses\n                          </th>\n                          <th\n                            scope=\"col\"\n                            className=\" border-0 font-size-4 font-weight-normal\"\n                          >\n                            Action\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {/* Map function to show the data in the list*/}\n                        {totalData === 0 || jobData.length === 0 ? (\n                          <tr>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white text-center\">\n                              No Data Found\n                            </th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                            <th className=\"bg-white\"></th>\n                          </tr>\n                        ) : (\n                          (jobData || []).map((job) => (\n                            <React.Fragment key={job.job_id}>\n                              <tr\n                                className=\"text-capitalize aos-init aos-animate\"\n                                data-aos=\"fade-right\"\n                                data-aos-duration=\"800\"\n                                data-aos-once=\"true\"\n                              >\n                                <td className=\"py-5 \">\n                                  <div className=\"\">\n                                    <Link\n                                      to={`/jobdetailpage`}\n                                      onClick={() =>\n                                        localStorage.setItem(\n                                          \"job_id\",\n                                          job.job_id\n                                        )\n                                      }\n                                      className=\"font-size-3 mb-0 font-weight-semibold text-black-2\"\n                                    >\n                                      <p className=\"m-0 text-black-2 font-weight-bold text-capitalize\">\n                                        {job.job_title}\n                                      </p>\n                                      <p className=\"text-gray font-size-2 m-0 text-capitalize\">\n                                        {job.company_name} - {job.industry_type}\n                                      </p>\n                                    </Link>\n                                  </div>\n                                </td>\n                                <td className=\" py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {job.employement}\n                                  </h3>\n                                </td>\n                                <td className=\" py-5\">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {job.location}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3\n                                    className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\"\n                                    title={job.education}\n                                  >\n                                    {job.education}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3\n                                    className=\"font-size-3 font-weight-normal text-black-2 mb-0 text-truncate\"\n                                    title={job.keyskill}\n                                  >\n                                    {job.keyskill}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {job.language}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {job.salary}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-normal text-black-2 mb-0\">\n                                    {job.experience_required}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 \">\n                                  <h3 className=\"font-size-3 font-weight-bold text-black-2 mb-0\">\n                                    {job.total_applicants}\n                                  </h3>\n                                </td>\n                                <td className=\"py-5 min-width-px-100\">\n                                  {job.total_applicants > 0 ? (\n                                    <div\n                                      className=\"btn-group button_group\"\n                                      // role=\"group\"\n                                    >\n                                      <button\n                                        className=\"btn btn-outline-info action_btn\"\n                                        onClick={() => {\n                                          setresponseId(job.job_id);\n                                          setresponseDropDown(\n                                            responseDropDown === false\n                                              ? true\n                                              : false\n                                          );\n                                        }}\n                                        title=\"Job Response\"\n                                      >\n                                        Responses\n                                      </button>\n                                    </div>\n                                  ) : null}\n                                </td>\n                              </tr>\n                              {job.job_id === responseId &&\n                              job.total_applicants > 0 &&\n                              responseDropDown === true ? (\n                                <tr>\n                                  <td colSpan={10}>\n                                    {/* <!-- Job Responses --> */}\n                                    <JobResponse\n                                      responseId={responseId}\n                                      apiCall={apiCall}\n                                      setApiCall={setApiCall}\n                                      heading={\"Manage Follow-ups\"}\n                                    />\n                                  </td>\n                                </tr>\n                              ) : null}\n                            </React.Fragment>\n                          ))\n                        )}\n                      </tbody>\n                    </table>\n                  )}\n                </div>\n                {/* <!-- Follow up Pagination --> */}\n                <div className=\"pt-2\">\n                  <Pagination\n                    nPages={nPages}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}\n                    total={totalData}\n                    count={jobData.length}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <!-- Job Details --> */}\n        {showJobDetails === true ? (\n          <div className=\"dashboard-main-container mt-16 \">\n            <div className=\"container-fluid\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-12 dark-mode-texts\">\n                  <div className=\"mb-9\">\n                    <Link\n                      to={\"\"}\n                      onClick={() => setShowJobDetails(false)}\n                      className=\"d-flex align-items-center ml-4\"\n                    >\n                      <i className=\"icon icon-small-left bg-white circle-40 mr-5 font-size-7 text-black font-weight-bold shadow-8\"></i>\n                      <span className=\"text-uppercase font-size-3 font-weight-bold text-gray\">\n                        Back\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mb-18\">\n                <JobDetailsBox jobdata={JobId} />\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default Followup;\n"
        }
    ]
}