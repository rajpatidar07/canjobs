{
    "sourceFile": "src/components/admin/notifications.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1713876730960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1713876756075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n     }\n     // eslint-disable-next-line\n   }, [\n     apicall,\n+    // eslint-disable-next-line\n     localStorage.getItem(\"callNotification\"),\n     recordsPerPage /*notificationApiCall*/,\n   ]);\n   /*Function to set the color code to the background of the user name */\n"
                }
            ],
            "date": 1713876730960,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\n// import { Button, Form, InputGroup } from \"react-bootstrap\";\n// import NotificationsCard from \"./notificationsCard\";\nimport {\n  ReadNotification,\n  getAllMentionNotification /* getAllAdminNotification,*/,\n} from \"../../api/api\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { FaRegBell } from \"react-icons/fa\";\nfunction Notifications({\n  type,\n  // userId,\n  // setDocId,\n  // setNotificationDoc,\n  // setSelecttDocTypeName,\n  // notificationApiCall,\n  // setNotificationApiCall,\n  // user_type,\n}) {\n  const [show, setshow] = useState(false);\n  let [totalNotif, setTotalNotif] = useState();\n  let [notification, setNotiication] = useState([]);\n  const [apicall, setApicall] = useState(false);\n  const [recordsPerPage, setRecordsPerPage] = useState(10);\n  let user_type = localStorage.getItem(\"userType\");\n  let admin_type = localStorage.getItem(\"admin_type\");\n  let loginuserId =\n    user_type === \"admin\"\n      ? localStorage.getItem(\"admin_id\")\n      : user_type === \"user\"\n      ? localStorage.getItem(\"employee_id\")\n      : user_type === \"agent\"\n      ? localStorage.getItem(\"agent_id\")\n      : \"\";\n  /*notification API Call*/\n  const Notiication = async () => {\n    try {\n      let Response = await getAllMentionNotification(\n        type,\n        loginuserId,\n        user_type === \"admin\" ? admin_type : user_type,\n        \"\",\n        1,\n        recordsPerPage\n      ); //getAllAdminNotification(); //(new) getAllMentionNotification(loginuserId); //getAllAdminNotification();\n      if (Response.Data.data.length === 0) {\n        setNotiication([]);\n        setTotalNotif();\n      } else {\n        setNotiication(Response.Data.data);\n        setTotalNotif(\n          Response.Data.data.filter(\n            (item) => item.is_read === 0 || item.is_read === \"0\"\n          ).length\n        );\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setApicall(false);\n  };\n  useEffect(() => {\n    Notiication();\n    // if (notificationApiCall === true) {\n    //   setNotificationApiCall(false);\n    // }\n    if (localStorage.getItem(\"callNotification\") === true) {\n      localStorage.setItem(\"callNotification\", false);\n    }\n    // eslint-disable-next-line\n  }, [\n    apicall,\n    localStorage.getItem(\"callNotification\"),\n    recordsPerPage /*notificationApiCall*/,\n  ]);\n  /*Function to set the color code to the background of the user name */\n  const determineBackgroundColor = (commentItem) => {\n    const colorClasses = [\n      \"bg-primary-opacity-7\",\n      \"bg-warning-opacity-7\",\n      \"bg-orange-opacity-6\",\n      \"bg-info-opacity-7\",\n      \"bg-secondary-opacity-7\",\n      \"bg-danger-opacity-6\",\n      \"bg-info-opacity-visible\",\n    ];\n\n    const assignedUserId = commentItem.assigned_to_user_id;\n\n    // Create a mapping dynamically based on assignedUserId\n    const userColorMap = {};\n\n    // Check if assignedUserId is present in the mapping\n    if (assignedUserId && userColorMap.hasOwnProperty(assignedUserId)) {\n      return userColorMap[assignedUserId];\n    }\n\n    // If not found in the mapping, use the colorClasses logic\n    const id = commentItem.id;\n    const hashCode = (str) => {\n      let hash = 0;\n      for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n      }\n      return hash;\n    };\n\n    const hash = Math.abs(hashCode(id.toString()));\n    const index = hash % colorClasses.length;\n\n    return colorClasses[index];\n  };\n  /*Function to load more data while scrolling */\n  let handelScroll = (e) => {\n    if ((recordsPerPage === 10 || recordsPerPage + 10) <= notification.length) {\n      setRecordsPerPage(recordsPerPage + 10);\n    } else {\n      // setRecordsPerPage(emailData.length);\n    }\n  };\n  return (\n    <div className=\"global_search_box  position-relative\">\n      {/* <i\n        style={{ cursor: \"pointer\" }}\n        className=\"fas fa-regular fa-bell text-dark mx-5\"\n        onClick={() => setshow(true)}\n      ></i> */}\n      {type === \"\" ? (\n        <span title=\"Chat Notifications\">\n          <FaRegBell\n            style={{ cursor: \"pointer\" }}\n            className=\"text-white bold mx-5\"\n            onClick={() => {\n              setshow(true);\n              setApicall(true);\n            }}\n          />\n        </span>\n      ) : (\n        <span title=\"Document Notifications\">\n          <CgFileDocument\n            style={{ cursor: \"pointer\" }}\n            className=\"text-white  mx-5\"\n            onClick={() => {\n              setshow(true);\n              setApicall(true);\n            }}\n          />\n        </span>\n      )}\n      {totalNotif > 0 ? (\n        <div className=\"bg-primary text-white notification_count\">\n          {totalNotif}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div\n        className={\n          show\n            ? \" d-flex global_search_content notification_box position-fixed show\"\n            : \" d-flex global_search_content notification_box position-fixed\"\n        }\n      >\n        <div className=\"left_side\" onClick={() => setshow(false)}></div>\n        <div className=\"right_side bg-white\">\n          <div className=\"global_search d-flex align-items-center p-3 px-5 justify-content-between\">\n            <h4 className=\"font-size-5 font-weight-bold m-0 border-bottom text-uppercase px-5\">\n              Notifications\n            </h4>\n            <i\n              style={{ fontSize: \"22px\" }}\n              className=\"fas fa-times text-dark ml-4\"\n              onClick={() => setshow(false)}\n            ></i>\n          </div>\n          <div\n            className=\"row global_search_result notofications_list  px-5 \"\n            onScroll={handelScroll}\n            style={{ overflowY: \"scroll\", height: \"590px\" }}\n          >\n            {notification.length > 0 && (\n              <ul className=\"w-100 col p-0 \">\n                {notification.map((data) => (\n                  // <li\n                  //   key={data.id}\n                  //   title={data.message}\n                  //   className={\n                  //     data.is_read === \"1\"\n                  //       ? \" dropdown-item border-bottom  border-hit-gray font-size-3 text-wrap \"\n                  //       : \" font-weight-bold bg-light dropdown-item border-bottom  border-hit-gray font-size-3 text-wrap \"\n                  //   }\n                  // >\n                  //   <Link\n                  //     to={\n                  //       data.subject === \"added_new_job\"\n                  //         ? \"/job\"\n                  //         : data.subject === \"applied_on_job\"\n                  //           ? \"/responses\"\n                  //           : data.subject === \"interview_scheduled\"\n                  //             ? \"/interview\"\n                  //             : data.subject === \"mention_document\" ? `/${data.employee_id}?docId=${data.mention_id}` : type === \"mention_partner\"\n                  //               ? `/${data.from_id}?partner=${data.from_id}`\n                  //               : \"\"\n                  //     }\n                  //     onClick={() => {\n                  //       try {\n                  //         // setDocId(data.mention_id);\n                  //         setshow(false);\n                  //         ReadNotification(data.id);\n                  //         // localStorage.setItem(\n                  //         //   type === \"mention_document\" ? \"notificationUser\" : type === \"mention_partner\" ? \"notificationPartnerUser\" : \"\",\n                  //         //   data.employee_id\n                  //         // );\n                  //         // setNotificationDoc(1);\n                  //         // setSelecttDocTypeName(\"\");\n                  //       } catch (err) {\n                  //         console.log(err);\n                  //       }\n                  //       setApicall(true);\n                  //       // Notiication();\n                  //     }}\n                  //     className=\"text-truncate-2 text-dark\"\n                  //   >\n                  //     <div>\n                  //       <div className=\"d-flex profile_box gx-2 mb-1 \">\n                  //         <div className=\"col-8 flex-start text-start\">\n                  //           <div className=\"media  align-items-center\">\n                  //             <div\n                  //               className={`col circle-24 mx-auto overflow-hidden text-capitalize text-white ${determineBackgroundColor(\n                  //                 data\n                  //               )}`}\n                  //               style={{ fontSize: \"20px\" }}\n                  //             >\n                  //               {data.reciver_name\n                  //                 ? data.reciver_name.charAt(0)\n                  //                 : \"\"}\n                  //             </div>\n                  //             <div className=\"font-size-3 font-weight-bold text-capitalize col\">\n                  //               {data.reciver_name ? data.reciver_name : \"\"}\n                  //             </div>\n                  //           </div>\n                  //         </div>\n                  //         <div className=\"date flex-end text-end col-4\">\n                  //           {moment(data.created_at).format(\"HH:mm D MMM\")}\n                  //         </div>\n                  //       </div>\n                  //       <div className=\"message mt-3 mx-3\">\n                  //         {data.message.replace(\"a\", \"Hi\")}\n                  //       </div>\n                  //     </div>\n                  //     {/* {data.message.replace(\"a\", \"Hi\")} */}\n                  //   </Link>\n                  // </li>\n                  <li\n                    key={data.id}\n                    title={data.message}\n                    className={\n                      data.is_read === \"1\"\n                        ? \"dropdown-item border-bottom border-hit-gray font-size-3 text-wrap\"\n                        : \"font-weight-bold bg-light dropdown-item border-bottom border-hit-gray font-size-3 text-wrap\"\n                    }\n                    style={{ padding: \"10px\", borderBottom: \"1px solid #ddd\" }}\n                  >\n                    <Link\n                      to={\n                        data.subject === \"added_new_job\"\n                          ? \"/job\"\n                          : data.subject === \"applied_on_job\"\n                          ? \"/responses\"\n                          : data.subject === \"interview_scheduled\"\n                          ? \"/interview\"\n                          : data.subject === \"mention_document\"\n                          ? `/${data.employee_id}?docId=${\n                              data.mention_id\n                            }&docParentId=${\n                              data.notif_json\n                                ? JSON.parse(data.notif_json).doc_parent_id\n                                : \"\"\n                            }`\n                          : data.subject === \"mention_partner\"\n                          ? `/${data.employee_id}?partner=${data.from_id}`\n                          : data.subject === \"mention_partnerChat\"\n                          ? `/partner_profile?partner=${data.employee_id}`\n                          : \"\"\n                      }\n                      onClick={() => {\n                        try {\n                          setshow(false);\n                          ReadNotification(data.id);\n                          setApicall(true);\n                          window.history.replaceState({}, document.title, \"/\");\n                          if (data.subject === \"mention_partnerChat\") {\n                            localStorage.setItem(\"agent_id\", data.employee_id);\n                          }\n                        } catch (err) {\n                          console.log(err);\n                        }\n                        setApicall(true);\n                      }}\n                      className=\"text-dark text-decoration-none d-flex justify-content-between\"\n                    >\n                      <div className=\"d-flex align-items-center\">\n                        <div\n                          className={`circle-48 mx-2 text-center text-capitalize  text-white font-weight-bold  ${determineBackgroundColor(\n                            data\n                          )}`}\n                        >\n                          {data.reciver_name ? data.reciver_name.charAt(0) : \"\"}\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <div className=\"d-flex align-items-center justify-content-between\">\n                            <div className=\"font-weight-bold text-truncate w-60 intervire-msg\">\n                              {data.reciver_name ? data.reciver_name : \"\"}\n                            </div>\n                          </div>\n                          <div\n                            className=\"text-muted mw-80\"\n                            style={{ fontSize: \"14px\" }}\n                          >\n                            {data.message}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"text-muted font-size-2 line-height-1 ml-2\">\n                        {moment(data.created_at).format(\"HH:mm\")}\n                      </div>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Notifications;\n"
        }
    ]
}