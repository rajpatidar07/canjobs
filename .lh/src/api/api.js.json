{
    "sourceFile": "src/api/api.js",
    "activeCommit": 0,
    "commits": [
        {
<<<<<<< HEAD
            "activePatchIndex": 18,
=======
            "activePatchIndex": 20,
>>>>>>> 92b048694af6819e54728bb21572e0badcc169e0
            "patches": [
                {
                    "date": 1693483478850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693483547767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1034,9 +1034,9 @@\n };\n /*FUnction to Delete lmia sub stage of employee */\n export const deleteLmiaSubstageEmployee = async (id) => {\n   const response = await axios.post(\n-    `${API_URL}${user_type}/deleteLmiaSubstageEmployee`,\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n     {\n       id: id,\n     },\n     {\n"
                },
                {
                    "date": 1693483556456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1064,9 +1064,9 @@\n };\n /*FUction to delete lmiasub stage */\n export const deleteLmiaSubstageJob = async (id) => {\n   const response = await axios.post(\n-    `${API_URL}${user_type}/deleteLmiaSubstageJob`,\n+    `${API_URL}/deleteLmiaSubstageJob`,\n     {\n       id: id,\n     },\n     {\n"
                },
                {
                    "date": 1693568050262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1658 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Sen Otp to email api */\n+export const SendOtp = async (props) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  console.log(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state??state.status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id,type,id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      \"id\":id,\n+      \"filter_by_misc_id\":misc_id,\n+      \"filter_by_type\":type\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id :cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id:cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  console.log(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id:employee_id\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+}\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id : docId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject:props.subject\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    { /*job_id: job_id,*/ employee_id: employee_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (company_id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {  company_id: company_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+    {\n+     // \"admin_id\":\"2\",\n+     // \"job_id\":\"1\",\n+     \"company_id\":props.company_id,\n+     \"remark\":props.remark,\n+     \"next_date\":props.next_date,\n+     \"subject\":props.subject\n+      \n+      },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}/common/testEmail`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (id,/* skill*/\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company) => {\n+  console.log(search,\n+    location,\n+    category,\n+    skill,\n+    job,\n+    page,\n+    limit,\n+    column_name,\n+    sort_order,\n+    company)\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693568062107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1658 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Sen Otp to email api */\n+export const SendOtp = async (props) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  console.log(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id,type,id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      \"id\":id,\n+      \"filter_by_misc_id\":misc_id,\n+      \"filter_by_type\":type\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id :cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id:cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  console.log(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id:employee_id\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+}\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id : docId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject:props.subject\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    { /*job_id: job_id,*/ employee_id: employee_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (company_id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {  company_id: company_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+    {\n+     // \"admin_id\":\"2\",\n+     // \"job_id\":\"1\",\n+     \"company_id\":props.company_id,\n+     \"remark\":props.remark,\n+     \"next_date\":props.next_date,\n+     \"subject\":props.subject\n+      \n+      },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}/common/testEmail`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (id,/* skill*/\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company) => {\n+  console.log(search,\n+    location,\n+    category,\n+    skill,\n+    job,\n+    page,\n+    limit,\n+    column_name,\n+    sort_order,\n+    company)\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693568917652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,9 +413,9 @@\n };\n \n /*single job Detail api */\n export const GetJobDetail = async (props) => {\n-  // console.log(props);\n+  // // console.log(props);\n   const response = await axios.post(\n     `${API_URL}admin/jobDetail`,\n     { job_id: props },\n     {\n@@ -485,9 +485,9 @@\n };\n \n /*Api to Add update visa */\n export const AddUpdateVisa = async (employee_id, state, id) => {\n-  console.log(employee_id, state, id)\n+  // console.log(employee_id, state, id)\n   const response = await axios.put(\n     `${API_URL}addUpdateVisa `,\n     {\n       employee_id: employee_id,\n@@ -918,9 +918,9 @@\n };\n \n /*Add interview Shedual Api */\n export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  console.log(props.state, employee_id, job_id);\n+  // console.log(props.state, employee_id, job_id);\n   const response = await axios.post(\n     `${API_URL}admin/addUpdateInterview`,\n     {\n       job_id: job_id,\n@@ -1575,1668 +1575,10 @@\n   return response.data;\n };\n /*Api to Test email template */\n export const TestEmail = async (props) => {\n-  console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}/common/testEmail`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (id,/* skill*/\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company) => {\n-  console.log(search,\n-    location,\n-    category,\n-    skill,\n-    job,\n-    page,\n-    limit,\n-    column_name,\n-    sort_order,\n-    company)\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Sen Otp to email api */\n-export const SendOtp = async (props) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n   // console.log(props);\n   const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  console.log(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state??state.status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id,type,id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      \"id\":id,\n-      \"filter_by_misc_id\":misc_id,\n-      \"filter_by_type\":type\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id :cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id:cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  console.log(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id:employee_id\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-}\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id : docId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject:props.subject\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    { /*job_id: job_id,*/ employee_id: employee_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (company_id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {  company_id: company_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-    {\n-     // \"admin_id\":\"2\",\n-     // \"job_id\":\"1\",\n-     \"company_id\":props.company_id,\n-     \"remark\":props.remark,\n-     \"next_date\":props.next_date,\n-     \"subject\":props.subject\n-      \n-      },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  console.log(props);\n-  const response = await axios.post(\n     `${API_URL}/common/testEmail`,\n     {\n       email_id: props.email_id,\n       email_template_id: props.email_template_id,\n@@ -3262,18 +1604,18 @@\n   limit,\n   column_name,\n   sort_order,\n   company) => {\n-  console.log(search,\n-    location,\n-    category,\n-    skill,\n-    job,\n-    page,\n-    limit,\n-    column_name,\n-    sort_order,\n-    company)\n+  // console.log(search,\n+    // location,\n+    // category,\n+    // skill,\n+    // job,\n+    // page,\n+    // limit,\n+    // column_name,\n+    // sort_order,\n+    // company)\n   const response = await axios.post(\n     `${API_URL}admin/getAllJobsViewAdmin`,\n     {\n       employee_id: id,\n@@ -3312,1663 +1654,5 @@\n       },\n     }\n   );\n   return response.data;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Sen Otp to email api */\n-export const SendOtp = async (props) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  console.log(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id,type,id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      \"id\":id,\n-      \"filter_by_misc_id\":misc_id,\n-      \"filter_by_type\":type\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id :cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id:cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  console.log(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id:employee_id\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-}\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id : docId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject:props.subject\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    { /*job_id: job_id,*/ employee_id: employee_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (company_id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {  company_id: company_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-    {\n-     // \"admin_id\":\"2\",\n-     // \"job_id\":\"1\",\n-     \"company_id\":props.company_id,\n-     \"remark\":props.remark,\n-     \"next_date\":props.next_date,\n-     \"subject\":props.subject\n-      \n-      },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}/common/testEmail`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (id,/* skill*/\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company) => {\n-  console.log(search,\n-    location,\n-    category,\n-    skill,\n-    job,\n-    page,\n-    limit,\n-    column_name,\n-    sort_order,\n-    company)\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693804190958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1658 @@\n+import axios from \"axios\";\n+const API_URL = \"http://13.126.18.37/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Sen Otp to email api */\n+export const SendOtp = async (props) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // console.log(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id,type,id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      \"id\":id,\n+      \"filter_by_misc_id\":misc_id,\n+      \"filter_by_type\":type\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id :cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id:cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // console.log(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id:employee_id\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+}\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id : docId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject:props.subject\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    { /*job_id: job_id,*/ employee_id: employee_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (company_id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {  company_id: company_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+    {\n+     // \"admin_id\":\"2\",\n+     // \"job_id\":\"1\",\n+     \"company_id\":props.company_id,\n+     \"remark\":props.remark,\n+     \"next_date\":props.next_date,\n+     \"subject\":props.subject\n+      \n+      },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}/common/testEmail`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (id,/* skill*/\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company) => {\n+  // console.log(search,\n+    // location,\n+    // category,\n+    // skill,\n+    // job,\n+    // page,\n+    // limit,\n+    // column_name,\n+    // sort_order,\n+    // company)\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693804536326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1664 +1,6 @@\n import axios from \"axios\";\n-const API_URL = \"http://13.126.18.37/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Sen Otp to email api */\n-export const SendOtp = async (props) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // console.log(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id,type,id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      \"id\":id,\n-      \"filter_by_misc_id\":misc_id,\n-      \"filter_by_type\":type\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id :cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id:cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // console.log(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id:employee_id\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-}\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id : docId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject:props.subject\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    { /*job_id: job_id,*/ employee_id: employee_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (company_id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {  company_id: company_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-    {\n-     // \"admin_id\":\"2\",\n-     // \"job_id\":\"1\",\n-     \"company_id\":props.company_id,\n-     \"remark\":props.remark,\n-     \"next_date\":props.next_date,\n-     \"subject\":props.subject\n-      \n-      },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}/common/testEmail`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (id,/* skill*/\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company) => {\n-  // console.log(search,\n-    // location,\n-    // category,\n-    // skill,\n-    // job,\n-    // page,\n-    // limit,\n-    // column_name,\n-    // sort_order,\n-    // company)\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://13.126.18.37//canjobs/\";\n const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n"
                },
                {
                    "date": 1693808863411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1658 @@\n+import axios from \"axios\";\n+const API_URL = \"http://13.126.18.37/canjobs/index.php\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Sen Otp to email api */\n+export const SendOtp = async (props) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // console.log(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id,type,id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      \"id\":id,\n+      \"filter_by_misc_id\":misc_id,\n+      \"filter_by_type\":type\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id :cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id:cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // console.log(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id:employee_id\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+}\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id : docId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject:props.subject\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    { /*job_id: job_id,*/ employee_id: employee_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (company_id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {  company_id: company_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+    {\n+     // \"admin_id\":\"2\",\n+     // \"job_id\":\"1\",\n+     \"company_id\":props.company_id,\n+     \"remark\":props.remark,\n+     \"next_date\":props.next_date,\n+     \"subject\":props.subject\n+      \n+      },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}/common/testEmail`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (id,/* skill*/\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company) => {\n+  // console.log(search,\n+    // location,\n+    // category,\n+    // skill,\n+    // job,\n+    // page,\n+    // limit,\n+    // column_name,\n+    // sort_order,\n+    // company)\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693808912194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import axios from \"axios\";\n-const API_URL = \"http://13.126.18.37/canjobs/index.php\";\n+const API_URL = \"http://13.126.18.37/canjobs/index.php/\";\n // const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n"
                },
                {
                    "date": 1693808966841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import axios from \"axios\";\n-const API_URL = \"http://13.126.18.37/canjobs/index.php/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693887886708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n@@ -1654,1663 +1655,5 @@\n       },\n     }\n   );\n   return response.data;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"http://13.126.18.37//canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Sen Otp to email api */\n-export const SendOtp = async (props) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // console.log(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id,type,id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      \"id\":id,\n-      \"filter_by_misc_id\":misc_id,\n-      \"filter_by_type\":type\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id :cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id:cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // console.log(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id:employee_id\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-}\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id : docId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject:props.subject\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    { /*job_id: job_id,*/ employee_id: employee_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (company_id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {  company_id: company_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-    {\n-     // \"admin_id\":\"2\",\n-     // \"job_id\":\"1\",\n-     \"company_id\":props.company_id,\n-     \"remark\":props.remark,\n-     \"next_date\":props.next_date,\n-     \"subject\":props.subject\n-      \n-      },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}/common/testEmail`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (id,/* skill*/\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company) => {\n-  // console.log(search,\n-    // location,\n-    // category,\n-    // skill,\n-    // job,\n-    // page,\n-    // limit,\n-    // column_name,\n-    // sort_order,\n-    // company)\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693888791964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1659 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://13.126.18.37/canjobs/\"\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Sen Otp to email api */\n+export const SendOtp = async (props) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // console.log(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id,type,id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      \"id\":id,\n+      \"filter_by_misc_id\":misc_id,\n+      \"filter_by_type\":type\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id :cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id:cid\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // console.log(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id:employee_id\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+}\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id : docId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject:props.subject\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    { /*job_id: job_id,*/ employee_id: employee_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (company_id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {  company_id: company_id },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+    {\n+     // \"admin_id\":\"2\",\n+     // \"job_id\":\"1\",\n+     \"company_id\":props.company_id,\n+     \"remark\":props.remark,\n+     \"next_date\":props.next_date,\n+     \"subject\":props.subject\n+      \n+      },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // console.log(props);\n+  const response = await axios.post(\n+    `${API_URL}/common/testEmail`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (id,/* skill*/\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company) => {\n+  // console.log(search,\n+    // location,\n+    // category,\n+    // skill,\n+    // job,\n+    // page,\n+    // limit,\n+    // column_name,\n+    // sort_order,\n+    // company)\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693888829848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -942,9 +942,9 @@\n \n /*Get lmia list Api */\n export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n   const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n+    `${API_URL}company/getLmia`,\n     {\n       lmia_status: status,\n       search: search,\n       filter_by_job_id: id,\n@@ -1655,1664 +1655,5 @@\n       },\n     }\n   );\n   return response.data;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-const API_URL = \"http://13.126.18.37/canjobs/\"\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Sen Otp to email api */\n-export const SendOtp = async (props) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // console.log(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id,type,id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      \"id\":id,\n-      \"filter_by_misc_id\":misc_id,\n-      \"filter_by_type\":type\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id :cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id:cid\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // console.log(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id:employee_id\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-}\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id : docId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject:props.subject\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (employee_id /*, job_id*/) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    { /*job_id: job_id,*/ employee_id: employee_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (company_id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {  company_id: company_id },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-    {\n-     // \"admin_id\":\"2\",\n-     // \"job_id\":\"1\",\n-     \"company_id\":props.company_id,\n-     \"remark\":props.remark,\n-     \"next_date\":props.next_date,\n-     \"subject\":props.subject\n-      \n-      },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // console.log(props);\n-  const response = await axios.post(\n-    `${API_URL}/common/testEmail`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (id,/* skill*/\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company) => {\n-  // console.log(search,\n-    // location,\n-    // category,\n-    // skill,\n-    // job,\n-    // page,\n-    // limit,\n-    // column_name,\n-    // sort_order,\n-    // company)\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693888847968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://13.126.18.37/canjobs/\"\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693889277989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-const API_URL = \"http://13.126.18.37/canjobs/\"\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693893208467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://13.126.18.37/canjobs/\"\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693893618175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-const API_URL = \"http://13.126.18.37/canjobs/\"\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
<<<<<<< HEAD
                    "date": 1693893870678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://13.126.18.37/canjobs/\"\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
=======
                    "date": 1693910957420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://13.126.18.37/canjobs/\"\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693911062092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-const API_URL = \"http://13.126.18.37/canjobs/\"\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1693915043011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-const API_URL = \"http://13.126.18.37/canjobs/\"\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://13.126.18.37/canjobs/\"\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
>>>>>>> 92b048694af6819e54728bb21572e0badcc169e0
                }
            ],
            "date": 1693483478850,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\n// const API_URL = \"https://192.168.29.92/canjobs/\";\nconst API_URL = \"https://apnaorganicstore.in/canjobs/\";\nlet Token = localStorage.getItem(\"token\");\nconst view_as_token = localStorage.getItem(\"view_as_token\");\nconst user_id = localStorage.getItem(\"employee_id\");\nconst employer_id = localStorage.getItem(\"company_id\");\nconst admin_id = localStorage.getItem(\"admin_id\");\nconst user_type = localStorage.getItem(\"userType\");\n\nif (view_as_token) {\n  Token = view_as_token;\n}\n\n// Location Api\n/*Country*/\nexport const GetCountry = async () => {\n  const response = await axios.get(`${API_URL}getCountryList`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Chanage password Api */\nexport const ChangePasswordApi = async (props) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/changePassword`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Sen Otp to email api */\nexport const SendOtp = async (props) => {\n  const response = await axios.post(`${API_URL}common/generateOtp`, {\n    email: props.email,\n  });\n  return response.data;\n};\n\n/*Employee Reset password Api */\nexport const EmployeeResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*To get the filter list APi */\nexport const getJson = async () => {\n  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n  return response.data;\n};\n\n// EMPLOYEE'S API\n/*Employee sign */\nexport const EmployeeSignUp = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"otp\", props.otp);\n  formData.append(\"resume\", props.resume);\n  const response = await axios.post(`${API_URL}employee_signup`, formData);\n  return response.data;\n};\n\n/*Employee Login */\nexport const EmployeeLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  const response = await axios.post(`${API_URL}employee_login`, formData);\n  return response.data;\n};\n\n/*Api to login in with linked employee*/\nexport const LinkedInLogin = async (props, type) => {\n  if (type === \"employeeLogin\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with linked employee*/\nexport const LinkedSignup = async (props, type) => {\n  if (type === \"employeeSignup\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with Social linkes in employee login*/\nexport const SocialLogin = async (token, email, name, picture, type) => {\n  const response = await axios.post(\n    `${API_URL}user/signupLoginViaSocialMedia`,\n    {\n      token: token,\n      email: email,\n      name: name,\n      picture: picture,\n      type: type,\n    }\n  );\n  return response.data;\n};\n\n/*Employee Forgot passsword api */\nexport const EmployeeForgotPassword = async (props) => {\n  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n    forget_email: props.forget_email,\n  });\n  return response.data;\n};\n/*Employee detail api */\nexport const EmployeeDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", user_id);\n  const response = await axios.post(\n    `${API_URL}getEmployeeDetail`,\n    { employee_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n  // }\n};\n/*Employee detail api */\nexport const EmployeeAppliedJob = async (props) => {\n  const response = await axios.post(\n    `${API_URL}getJobsByEmployee`,\n    { employee_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee detail api */\nexport const AddEmployeeDetails = async (props) => {\n  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n/*Employee List Api */\nexport const getallEmployeeData = async (\n  search,\n  experience,\n  skill,\n  education,\n  page,\n  limit,\n  column,\n  sort,\n  time,\n  jobSkill,\n  status,\n  job_id,\n  categorye,\n  inserted,\n  candian\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getallEmployeeView`,\n    {\n      user_type: user_type,\n      filter_experience: experience,\n      filter_skill: skill,\n      filter_education: education,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n      filter_by_time: time,\n      job_keyskills: jobSkill,\n      filter_status: status,\n      job_id: job_id,\n      work_permit_canada: candian,\n      interested_in: inserted\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Detail Employee Education Api */\nexport const EmployeeEducationDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", props);\n  const response = await axios.get(\n    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Education Api */\nexport const AddEmployeeEducation = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}employeeEducation_detail`,\n    {\n      employee_id: id,\n      course: props.course,\n      institute_location: props.institute_location,\n      passing_year: props.passing_year,\n      qualification: props.qualification,\n      specialization: props.specialization,\n      university_institute: props.university_institute,\n      education_id: props.education_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Detail Employee Skill Api */\nexport const EmployeeSkillDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", props);\n  const response = await axios.get(\n    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Skill Api */\nexport const AddEmployeement = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}employeeCareer_detail`,\n    {\n      employee_id: id,\n      company: props.company,\n      designation: props.designation,\n      company_location: props.company_location,\n      industry: props.industry,\n      functional_area: props.functional_area,\n      work_level: props.work_level,\n      start_date: props.start_date,\n      end_date: props.end_date,\n      currently_work_here: props.currently_work_here,\n      career_id: props.career_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Skill Api */\nexport const AddEmployeeSkill = async (props, id) => {\n  const response = await axios.post(\n    `${API_URL}/employeeSkill`,\n    {\n      employee_id: id,\n      skill: props.skill,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Skill Api */\nexport const DeleteEmployeeSkill = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeSkill`,\n    { skill_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Education Api */\nexport const DeleteEmployeeEducation = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeEducation`,\n    { education_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Career Api */\nexport const DeleteEmployeeCareer = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeCareer`,\n    { career_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Employee Profile completion Api*/\nexport const getProfileCompletionPercent = async () => {\n  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data.data;\n};\n\n/*Apply job Api */\nexport const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n  const response = await axios.post(\n    `${API_URL}applyJob`,\n    {\n      apply_id: apply_id,\n      job_id: job_id,\n      employee_id: employee_id,\n      status: status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*single job data api */\nexport const GetJob = async (props) => {\n  const response = await axios.post(\n    `${API_URL}getJob`,\n    { job_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*single job Detail api */\nexport const GetJobDetail = async (props) => {\n  // console.log(props);\n  const response = await axios.post(\n    `${API_URL}admin/jobDetail`,\n    { job_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get list of the Document */\nexport const GetEmployeeDocumentList = async (id, type) => {\n  const response = await axios.post(\n    `${API_URL}user/getDocumentsUploaded`,\n    {\n      employee_id: id,\n      type: type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to upload document*/\nexport const UploadDocument = async (id, type, doc, docId) => {\n  const response = await axios.put(\n    `${API_URL}user/documentsUpload `,\n    {\n      employee_id: id,\n      type: type,\n      document_file: doc,\n      is_varify: \"0\",\n      id: docId,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to verify Applicants document */\nexport const VarifyDocument = async (id, verify) => {\n  const response = await axios.put(\n    `${API_URL}user/isVarify `,\n    {\n      is_varify: verify,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to Add update visa */\nexport const AddUpdateVisa = async (employee_id, state, id) => {\n  console.log(employee_id, state, id)\n  const response = await axios.put(\n    `${API_URL}addUpdateVisa `,\n    {\n      employee_id: employee_id,\n      id: id,\n      country: state.country,\n      status: state.status\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get Visa List */\nexport const GetEmployeeVisaList = async (search, status, country, interested, page, limit, column, sort, id) => {\n  const response = await axios.post(\n    `${API_URL}getVisa`,\n    {\n      search: search,\n      filter_by_interested_in: interested,\n      filter_by_visa_country: country,\n      filter_by_visa_status: status,\n      filter_by_employee_id: id,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get Visa Sub stage List */\nexport const GetVisaSubStages = async (misc_id,type,id) => {\n  const response = await axios.post(\n    `${API_URL}common/getMiscellaneousSubstage`,\n    {\n      \"id\":id,\n      \"filter_by_misc_id\":misc_id,\n      \"filter_by_type\":type\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to add update visa sub stage */\nexport const AddUpdateEmployeeVisaSubStage = async (json) => {\n  const response = await axios.put(\n    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n    json,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n// EMPLOYER'S API\n/*Employer sign up */\nexport const EmployerSignUp = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"contact_no\", props.contact_no);\n  formData.append(\"term_and_condition\", props.term_and_condition);\n  formData.append(\"otp\", props.otp);\n  const response = await axios.post(`${API_URL}employer_signup`, formData);\n  return response.data;\n};\n/*Employer Login */\nexport const EmployerLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"remember\", props.remember);\n  const response = await axios.post(`${API_URL}employer_login`, formData);\n  return response.data;\n};\n\n/*Api to login in with linked employer*/\nexport const LinkedInLoginEmployer = async (props, type) => {\n  if (type === \"employerLogin\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with linked  employer*/\nexport const LinkedInSignupEmployer = async (props, type) => {\n  if (type === \"employerSignup\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with Social linkes in employer login*/\nexport const SocialCompanyLogin = async (token, email, name, picture, type) => {\n  const response = await axios.post(\n    `${API_URL}company/signupLoginViaSocialMedia`,\n    {\n      token: token,\n      email: email,\n      name: name,\n      picture: picture,\n      type: type,\n    }\n  );\n  return response.data;\n};\n\n/*Employer Reset password Api */\nexport const EmployerResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Employer Forgot passsword api */\nexport const EmployerForgotPassword = async (props) => {\n  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n    forget_email: props.forget_email,\n  });\n  return response.data;\n};\n\n/*Response List Api */\nexport const GetAllResponse = async (\n  job_id,\n  filter_skill,\n  filter_experience,\n  search,\n  page,\n  limit,\n  column,\n  sort,\n  time,\n  lima,\n  status,\n  employee_id,\n  reserved_status\n) => {\n  const response = await axios.post(\n    `${API_URL}getJobResponse`,\n    {\n      job_id: job_id,\n      user_type: user_type,\n      page: page,\n      limit: limit,\n      filter_experience: filter_experience,\n      filter_skill: filter_skill,\n      column_name: column,\n      sort_order: sort,\n      search: search,\n      filter_by_time: time,\n      filter_lmia_status: lima,\n      filter_employee_status: status,\n      filter_employee_id: employee_id,\n      filter_is_reserve: reserved_status\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to get all job data */\nexport const GetAllJobs = async (\n  search,\n  location,\n  category,\n  skill,\n  job,\n  page,\n  limit,\n  column_name,\n  sort_order,\n  company,\n  time,\n  id,\n  selfValue,\n  adminValue,\n  reserved,\n  // employeeSkill,\n  cid\n) => {\n  const response = await axios.post(\n    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n    {\n      filter_category_id: category,\n      filter_job_swap: job,\n      filter_keyskill: skill,\n      filter_location: location,\n      page: page,\n      search: search ? search : company,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n      filter_by_time: time,\n      job_id: id,\n      // filter_company_name: company,\n      filter_applied_by_self: selfValue,\n      filter_applied_by_admin: adminValue,\n      filter_reserved_employee: reserved,\n      // employee_skills: employeeSkill,\n      filter_company_id :cid\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Add Job  Api */\nexport const AddJob = async (props) => {\n  const response = await axios.put(`${API_URL}addJobs`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Employer List Api */\nexport const getAllEmployer = async (\n  industry,\n  corporation,\n  search,\n  page,\n  limit,\n  column,\n  sort,\n  time\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllEmployer`,\n    {\n      filter_industry: industry,\n      filter_corporation: corporation,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n      filter_by_time: time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Employer Details Api */\nexport const EmployerDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n  const response = await axios.post(\n    `${API_URL}getEmployer`,\n    { company_id: user_type === \"company\" ? employer_id : props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employer / Company Api */\nexport const AddCompany = async (props) => {\n  const response = await axios.put(`${API_URL}company_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Add Employer Contact Api */\nexport const AddContact = async (props) => {\n  const response = await axios.put(`${API_URL}contact_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Add Employer KYC Api */\nexport const AddKyc = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}company_kyc_detail`,\n    {\n      company_id: id,\n      address: props.address,\n      city: props.city,\n      country: props.country,\n      document: props.document,\n      fax_number: props.fax_number,\n      gstin: props.gstin,\n      name: props.name,\n      pan_date: props.pan_date,\n      pan_no: props.pan_no,\n      pincode: props.pincode,\n      state: props.state,\n      tan_number: props.tan_number,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employer Api */\nexport const DeleteEmployer = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deleteEmployer/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Delete Job Api */\nexport const DeleteJob = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deletejob/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Get Interview list api */\nexport const getInterview = async (\n  job_id,\n  employee_id,\n  search,\n  page,\n  column,\n  limit,\n  sort,\n  time,\n  status,\n  cid\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getInterview`,\n    {\n      search: search,\n      column_name: column,\n      sort_order: sort,\n      page: page,\n      limit: limit,\n      job_id: job_id,\n      employee_id: employee_id,\n      filter_by_time: time,\n      filter_by_status: status,\n      filter_by_company_id:cid\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data.data;\n};\n\n/*Add interview Shedual Api */\nexport const AddInterviewSchedule = async (props, employee_id, job_id) => {\n  console.log(props.state, employee_id, job_id);\n  const response = await axios.post(\n    `${API_URL}admin/addUpdateInterview`,\n    {\n      job_id: job_id,\n      employee_id: employee_id,\n      interview_date: props.interview_date,\n      created_by_admin: admin_id,\n      interview_status: props.interview_status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get lmia list Api */\nexport const GetEmployeeByLima = async (id, search, status, page, limit, col, ord, time,employee_id) => {\n  const response = await axios.post(\n    `${API_URL}/company/getLmia`,\n    {\n      lmia_status: status,\n      search: search,\n      filter_by_job_id: id,\n      page: page,\n      limit: limit,\n      sort_order: ord,\n      column_name: col,\n      filter_by_time: time,\n      filter_employee_id:employee_id\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add LIMA Api */\nexport const AddLimia = async (props, employee_id, job_id) => {\n  const response = await axios.put(\n    `${API_URL}admin/addUpdateLmia`,\n    {\n      job_id: job_id,\n      employee_id: employee_id,\n      lmia_status: props.lmia_status,\n      // completion_time: props.completion_time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Function get lima substage of empolyee */\nexport const GetLimaSubStages = async (id) => {\n  const response = await axios.post(\n    `${API_URL}/getLmiaSubstagesEmployee`,\n    {\n      lmia_id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Function get lima substage of empolyee */\nexport const GetJobLimaSubStages = async (id, status) => {\n  const response = await axios.post(\n    `${API_URL}/getLmiaSubstagesjob`,\n    {\n      job_id: id,\n      lima_status: status\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*FUnction to add update lmia sub stage of employee */\nexport const AddUpdateEmployeeLmiaSubStage = async (props) => {\n  const response = await axios.put(\n    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*FUnction to Delete lmia sub stage of employee */\nexport const deleteLmiaSubstageEmployee = async (id) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteLmiaSubstageEmployee`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n}\n/*FUnction to add update lmia sub stage  of job*/\nexport const AddUpdateJobLmiaSubStage = async (props) => {\n  const response = await axios.put(\n    `${API_URL}addUpdateLmiaSubstagesJob`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*FUction to delete lmiasub stage */\nexport const deleteLmiaSubstageJob = async (id) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteLmiaSubstageJob`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get Interview list api */\nexport const getFollowupLastData = async (page, column, limit, sort, time) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllLastFollowup`,\n    {\n      column_name: column,\n      sort_order: sort,\n      page: page,\n      limit: limit,\n      filter_by_time: time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\nexport const getLMIAstatus = async (props) => {\n  const response = await axios.post(\n    `https://apnaorganicstore.in/canjobs/company/getLmia`,\n    { lmia_status: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get list of the Document */\nexport const GetEmployerDocumentList = async (id, type) => {\n  const response = await axios.post(\n    `${API_URL}company/getDocumentsUploaded`,\n    {\n      company_id: id,\n      type: type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to upload document*/\nexport const UploadEmployerDocument = async (id, type, doc, docId) => {\n  const response = await axios.put(\n    `${API_URL}company/documentsUpload `,\n    {\n      company_id: id,\n      type: type,\n      document_file: doc,\n      is_varify: \"0\",\n      id : docId\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to verify Applicants document */\nexport const VarifyEmployerDocument = async (id, verify) => {\n  const response = await axios.put(\n    `${API_URL}company/isVarify `,\n    {\n      is_varify: verify,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n// ADMIN'S API\n/*Get Summary Count Api */\nexport const getSummaryCount = async () => {\n  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data.data;\n};\n\n/*Admin login Api */\nexport const AdminLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  const response = await axios.post(`${API_URL}admin_login`, formData);\n  return response.data;\n};\n\n/*Admin Reset password Api */\nexport const AdminResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Admin Notification List Api */\nexport const getAllAdminNotification = async () => {\n  const response = await axios.get(`${API_URL}common/getNotifications`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Read Admin Notification Api */\nexport const ReadNotification = async (props) => {\n  const response = await axios.put(\n    `${API_URL}common/isReadNotification`,\n    { id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Admin List Api */\nexport const getallAdminData = async (\n  type,\n  search,\n  page,\n  limit,\n  column,\n  sort\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllAdmin`,\n    {\n      filter_admin_type: type,\n      page: page,\n      search: search,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Admin List Api */\nexport const getAllFollowUpData = async (\n  job,\n  company,\n  experience,\n  search,\n  page,\n  limit,\n  column,\n  sort\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getFollowupView`,\n    {\n      filter_job_type: job,\n      filter_company_name: company,\n      filter_experience: experience,\n      page: page,\n      search: search,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n\n/*Job Category List Api */\nexport const getAllJobsCategory = async (\n  level,\n  type,\n  search,\n  page,\n  limit,\n  column_name,\n  sort_order\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getAllJobsCategory`,\n    {\n      parent_id: level,\n      filter_category_type: type,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Job Employee Api */\nexport const DeleteJobEmployee = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deleteEmployee/${props}`,\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Add Job Category Api */\nexport const AddJobCategory = async (props) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/addCategory`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Job Category Api */\nexport const DeleteJobCategory = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deletejobCategory/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/* Admin Detail Api */\nexport const AdminDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"admin_id\", props);\n  const response = await axios.post(\n    `${API_URL}/${user_type}/getAdmin`,\n    { admin_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Admin Api */\nexport const AddAdmin = async (props) => {\n  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Get Filter Api */\nexport const GetFilter = async (props) => {\n  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response;\n};\n\n/*Add Filters Api */\nexport const AddFIlter = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/addUpdatefilterList`,\n    { id: id, json_item: props.json_item },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Filter Api */\nexport const DeleteFilter = async (pId, cId) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteFilterListItem`,\n    { id: pId, json_item_id: cId },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Admin Api */\nexport const DeleteAdmin = async (props) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteAdmin`,\n    { admin_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Aplicant's Followup Api */\nexport const AddFollowup = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/addFollowUpEmployee`,\n    {\n      admin_id: admin_id,\n      // job_id: props.jobId,\n      employee_id: props.employee_id,\n      remark: props.remark,\n      next_date: props.next_followup_date,\n      subject:props.subject\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*get Followup single data Api */\nexport const getSingleFollowup = async (employee_id /*, job_id*/) => {\n  const response = await axios.post(\n    `${API_URL}admin/getFollowUpEmployee`,\n    { /*job_id: job_id,*/ employee_id: employee_id },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n/*get Followup single data Api */\nexport const getSingleCompanyFollowup = async (company_id) => {\n  const response = await axios.post(\n    `${API_URL}admin/getFollowUpEmployer`,\n    {  company_id: company_id },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n\n/*Add Comapany's Followup Api */\nexport const AddCompanyFollowup = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/addFollowUpEmployer`,\n    {\n     // \"admin_id\":\"2\",\n     // \"job_id\":\"1\",\n     \"company_id\":props.company_id,\n     \"remark\":props.remark,\n     \"next_date\":props.next_date,\n     \"subject\":props.subject\n      \n      },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get Admin token to view ass other admin */\nexport const GetAdminToken = async (props) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getToken`,\n    {\n      admin_id: props,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get email template */\nexport const GetAllEmailTemplate = async (props) => {\n  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Api to update email template */\nexport const AddUpdateEmailTemplate = async (props) => {\n  const response = await axios.put(\n    `${API_URL}/common/addUpdateEmailTemplate`,\n    {\n      id: props.id,\n      email_type: props.email_type,\n      subject: props.subject,\n      message: props.message,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Test email template */\nexport const TestEmail = async (props) => {\n  console.log(props);\n  const response = await axios.post(\n    `${API_URL}/common/testEmail`,\n    {\n      email_id: props.email_id,\n      email_template_id: props.email_template_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get the job filterd by employee id if it is applied or not */\nexport const GetEmployeeFilterJob = async (id,/* skill*/\n  search,\n  location,\n  category,\n  skill,\n  job,\n  page,\n  limit,\n  column_name,\n  sort_order,\n  company) => {\n  console.log(search,\n    location,\n    category,\n    skill,\n    job,\n    page,\n    limit,\n    column_name,\n    sort_order,\n    company)\n  const response = await axios.post(\n    `${API_URL}admin/getAllJobsViewAdmin`,\n    {\n      employee_id: id,\n      filter_keyskill: skill,\n      filter_category_id: category,\n      filter_job_swap: job,\n      filter_location: location,\n      page: page,\n      search: search ? search : company,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to Reserved employee for a job */\nexport const ReservedEmployeeForJob = async (id, status) => {\n  const response = await axios.put(\n    `${API_URL}setEmployeeReserve`,\n    {\n      apply_id: id,\n      is_reserve: status\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};"
        }
    ]
}