{
    "sourceFile": "src/api/api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 65,
            "patches": [
                {
                    "date": 1708938099260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708938280254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,9 +613,9 @@\n       doc_id: id,\n       assined_to_user_id: userid,\n       status: status,\n       type: type,\n-      id:\"\",task_creator_user_id:\"\"\n+      // id:\"\",task_creator_user_id:\"\"\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1708938339249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2684 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjM0IiwiZW1haWwiOiJ0b2tlbkBnbWFpbC5jb20iLCJ1c2VyX3R5cGUiOiJzdXBlci1hZG1pbiIsIkFQSV9USU1FIjoxNjk3ODE5MjU3fQ.KMcaHwbumy5SQSOlhgTE5v7qsDD30NDeXjcl2LE6dKM\",\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"notes\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (loginuserid, id) => {\n+  console.log(loginuserid, id);\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      from_id: loginuserid,\n+      employee_id: id,\n+      type: \"mention_document\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  console.log(page, limit, search, email);\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1708938372001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,2692 +613,8 @@\n       doc_id: id,\n       assined_to_user_id: userid,\n       status: status,\n       type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (loginuserid, id) => {\n-  console.log(loginuserid, id);\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      from_id: loginuserid,\n-      employee_id: id,\n-      type: \"mention_document\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  console.log(page, limit, search, email);\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjM0IiwiZW1haWwiOiJ0b2tlbkBnbWFpbC5jb20iLCJ1c2VyX3R5cGUiOiJzdXBlci1hZG1pbiIsIkFQSV9USU1FIjoxNjk3ODE5MjU3fQ.KMcaHwbumy5SQSOlhgTE5v7qsDD30NDeXjcl2LE6dKM\",\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"notes\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n       // id:\"\",task_creator_user_id:\"\"\n     },\n     {\n       headers: {\n"
                },
                {
                    "date": 1708938483313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -558,8 +558,9 @@\n   DocUrl,\n   Senderemail,\n   employee_id\n ) => {\n+  console.log(DocUrl)\n   const response = await axios.post(\n     `${API_URL}admin/docTaskAdd`,\n     {\n       task_creator_user_id: id,\n"
                },
                {
                    "date": 1708938496921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -571,9 +571,9 @@\n       assined_to_user_id: assineduserid,\n       assigned_to: email,\n       assigned_to_name: assignName,\n       assigned_user_type: AssignUserType,\n-      document_url: type === \"notes\" ? DocUrl : \"\",\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n       next_followup_date: nextFollowupDate,\n       followup_status: satus,\n       subject: subject,\n       subject_description: comment,\n"
                },
                {
                    "date": 1708938502999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -558,9 +558,8 @@\n   DocUrl,\n   Senderemail,\n   employee_id\n ) => {\n-  console.log(DocUrl)\n   const response = await axios.post(\n     `${API_URL}admin/docTaskAdd`,\n     {\n       task_creator_user_id: id,\n"
                },
                {
                    "date": 1708939502688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1505,10 +1505,10 @@\n   return response.data;\n };\n \n /*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+export const getAllAdminNotification = async ({type}) => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`,{type:type} {\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token,\n     },\n"
                },
                {
                    "date": 1708939515257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1505,10 +1505,10 @@\n   return response.data;\n };\n \n /*Admin Notification List Api */\n-export const getAllAdminNotification = async ({type}) => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`,{type:type} {\n+export const getAllAdminNotification = async ({ type }) => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, { type: type } ,{\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token,\n     },\n"
                },
                {
                    "date": 1708939521705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1506,9 +1506,9 @@\n };\n \n /*Admin Notification List Api */\n export const getAllAdminNotification = async ({ type }) => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, { type: type } ,{\n+  const response = await axios.get(`${API_URL}common/getNotifications`, { type: type }, {\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token,\n     },\n"
                },
                {
                    "date": 1708939920880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1505,10 +1505,10 @@\n   return response.data;\n };\n \n /*Admin Notification List Api */\n-export const getAllAdminNotification = async ({ type }) => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, { type: type }, {\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token,\n     },\n"
                },
                {
                    "date": 1708940649134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1514,16 +1514,16 @@\n     },\n   });\n   return response.data;\n };\n-export const getAllMentionNotification = async (loginuserid, id) => {\n+export const getAllMentionNotification = async (type,loginuserid, id) => {\n   console.log(loginuserid, id);\n   const response = await axios.post(\n     `${API_URL}common/getMentionNotifications`,\n     {\n       from_id: loginuserid,\n       employee_id: id,\n-      type: \"mention_document\",\n+      type: type,\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1708940995847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1515,9 +1515,8 @@\n   });\n   return response.data;\n };\n export const getAllMentionNotification = async (type,loginuserid, id) => {\n-  console.log(loginuserid, id);\n   const response = await axios.post(\n     `${API_URL}common/getMentionNotifications`,\n     {\n       from_id: loginuserid,\n"
                },
                {
                    "date": 1708941235812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1518,11 +1518,17 @@\n export const getAllMentionNotification = async (type,loginuserid, id) => {\n   const response = await axios.post(\n     `${API_URL}common/getMentionNotifications`,\n     {\n-      from_id: loginuserid,\n-      employee_id: id,\n-      type: type,\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\":loginuserid,\n+      \"type\":\"\",\n+      \"subject\":type,\n+      \"action_id\":\"\",\n+      \"mention_id\":\"\",\n+      \"employee_id\":id\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1708941317250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1521,12 +1521,12 @@\n     {\n       // from_id: loginuserid,\n       // employee_id: id,\n       // type: type,\n-      \"from_id\":loginuserid,\n+      \"from_id\":\"\",\n       \"type\":\"\",\n       \"subject\":type,\n-      \"action_id\":\"\",\n+      \"action_id\":loginuserid,\n       \"mention_id\":\"\",\n       \"employee_id\":id\n     },\n     {\n"
                },
                {
                    "date": 1708943131219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1514,9 +1514,9 @@\n     },\n   });\n   return response.data;\n };\n-export const getAllMentionNotification = async (type,loginuserid, id) => {\n+export const getAllMentionNotification = async (type,loginuserid,userType, id) => {\n   const response = await axios.post(\n     `${API_URL}common/getMentionNotifications`,\n     {\n       // from_id: loginuserid,\n@@ -1526,9 +1526,10 @@\n       \"type\":\"\",\n       \"subject\":type,\n       \"action_id\":loginuserid,\n       \"mention_id\":\"\",\n-      \"employee_id\":id\n+      \"employee_id\":\"\",\n+      \"sender_type\":userType\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1708949738731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n   job_id,\n   categorye,\n   inserted,\n   candian,\n-  agentId\n+  agentId,assignedadminId\n   // agent_u_id\n ) => {\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n@@ -229,8 +229,9 @@\n       job_id: job_id,\n       work_permit_canada: candian,\n       interested_in: inserted,\n       agent_id: agentId,\n+      assigned_by:assignedadminId\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1709011337110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n@@ -207,9 +207,9 @@\n   job_id,\n   categorye,\n   inserted,\n   candian,\n-  agentId,assignedadminId\n+  agentId, assignedadminId\n   // agent_u_id\n ) => {\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n@@ -229,9 +229,9 @@\n       job_id: job_id,\n       work_permit_canada: candian,\n       interested_in: inserted,\n       agent_id: agentId,\n-      assigned_by:assignedadminId\n+      assigned_by: assignedadminId\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n@@ -1515,22 +1515,22 @@\n     },\n   });\n   return response.data;\n };\n-export const getAllMentionNotification = async (type,loginuserid,userType, id) => {\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n   const response = await axios.post(\n     `${API_URL}common/getMentionNotifications`,\n     {\n       // from_id: loginuserid,\n       // employee_id: id,\n       // type: type,\n-      \"from_id\":\"\",\n-      \"type\":\"\",\n-      \"subject\":type,\n-      \"action_id\":loginuserid,\n-      \"mention_id\":\"\",\n-      \"employee_id\":\"\",\n-      \"sender_type\":userType\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1709013401559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709028063253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,14 @@\n export const GetAllDataCount = async () => {\n   const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n   return response.data;\n };\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`);\n+  return response.data;\n+};\n /*Chanage password Api */\n export const ChangePasswordApi = async (props) => {\n   const response = await axios.put(\n     `${API_URL}${user_type}/changePassword`,\n"
                },
                {
                    "date": 1709028308803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,15 @@\n };\n \n //Api to get the graph data count of all data\n export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`);\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+  {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n   return response.data;\n };\n /*Chanage password Api */\n export const ChangePasswordApi = async (props) => {\n"
                },
                {
                    "date": 1709030475147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2039,9 +2039,8 @@\n };\n /*Api to read email */\n \n export const ReadEmail = async (page, limit, search, email) => {\n-  console.log(page, limit, search, email);\n   const response = await axios.post(\n     // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n     // `${API_URL}canjobs_latest/common/readEmail`,\n     `${API_URL}common/readOutlookEmail`,\n"
                },
                {
                    "date": 1709030540353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709030624997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709032877650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2082,9 +2082,32 @@\n     }\n   );\n   return response.data;\n };\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n \n+    `${API_URL}common/getSentAndInboxMails`,\n+\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+      \n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n /*Api to get the job filterd by employee id if it is applied or not */\n export const GetEmployeeFilterJob = async (\n   id /* skill*/,\n   search,\n"
                },
                {
                    "date": 1709032888918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,14 +36,14 @@\n \n //Api to get the graph data count of all data\n export const GetAllChartData = async () => {\n   const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-  {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n   return response.data;\n };\n /*Chanage password Api */\n export const ChangePasswordApi = async (props) => {\n@@ -2085,18 +2085,16 @@\n };\n /*Api to All Sent email */\n export const ReadAllEmail = async (page, limit, search, email) => {\n   const response = await axios.post(\n-\n     `${API_URL}common/getSentAndInboxMails`,\n-\n     {\n       // email_id: id,\n       // page: page,\n       count: limit,\n       // filter_by_email_id: email,\n       search: search,\n-      \n+\n     },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1709037201011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2724 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId, assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709104339595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n@@ -197,9 +197,11 @@\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token\n         ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+        : \n+        // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwOTQ2MDd9.wjxurlHixyGhUbsqRfRub1-B8tKskEtBIjECglngYYg\"// Canpathways token\n     },\n   });\n   return response.data;\n };\n@@ -2721,2728 +2723,4 @@\n     }\n   );\n   return response;\n };\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjM0IiwiZW1haWwiOiJ0b2tlbkBnbWFpbC5jb20iLCJ1c2VyX3R5cGUiOiJzdXBlci1hZG1pbiIsIkFQSV9USU1FIjoxNjk3ODE5MjU3fQ.KMcaHwbumy5SQSOlhgTE5v7qsDD30NDeXjcl2LE6dKM\",\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId, assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n"
                },
                {
                    "date": 1709104361578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n@@ -197,11 +197,9 @@\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token\n         ? Token\n-        : \n-        // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwOTQ2MDd9.wjxurlHixyGhUbsqRfRub1-B8tKskEtBIjECglngYYg\"// Canpathways token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n     },\n   });\n   return response.data;\n };\n"
                },
                {
                    "date": 1709105423329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709109874656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709115141024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n@@ -197,9 +197,11 @@\n     headers: {\n       \"Content-Type\": \"application/json\",\n       Authorization: Token\n         ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+        : \n+        // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwOTQ2MDd9.wjxurlHixyGhUbsqRfRub1-B8tKskEtBIjECglngYYg\"// Canpathways token\n     },\n   });\n   return response.data;\n };\n"
                },
                {
                    "date": 1709116171215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2724 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId, assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709117002469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,10 @@\n   job_id,\n   categorye,\n   inserted,\n   candian,\n-  agentId, assignedadminId\n+  agentId,\n+   assignedadminId\n   // agent_u_id\n ) => {\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n"
                },
                {
                    "date": 1709117013845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n   categorye,\n   inserted,\n   candian,\n   agentId,\n-   assignedadminId\n+  assignedadminId\n   // agent_u_id\n ) => {\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n@@ -2722,2730 +2722,4 @@\n     }\n   );\n   return response;\n };\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \n-        // \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-        \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwOTQ2MDd9.wjxurlHixyGhUbsqRfRub1-B8tKskEtBIjECglngYYg\"// Canpathways token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId, assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n"
                },
                {
                    "date": 1709122252981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709122673624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2725 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709124575538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2104,8 +2104,26 @@\n     }\n   );\n   return response.data;\n };\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n \n /*Api to get the job filterd by employee id if it is applied or not */\n export const GetEmployeeFilterJob = async (\n   id /* skill*/,\n"
                },
                {
                    "date": 1709125462385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709126001607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2743 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709126244369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2743 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709126444863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709204278548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,11 @@\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n const admin_id = localStorage.getItem(\"admin_id\");\n+const agent_id = localStorage.getItem(\"agent_id\");\n const user_type = localStorage.getItem(\"userType\");\n-\n+const admin_type =localStorage.getItem(\"admin_type\");\n if (view_as_token) {\n   Token = view_as_token;\n }\n \n@@ -35,9 +36,12 @@\n };\n \n //Api to get the graph data count of all data\n export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n+  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n+    \"id\":user_type === \"admin\"?admin_id:agent_id,\n+    \"type\":user_type === \"admin\"?admin_type:user_type\n+  },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n         Authorization: Token,\n"
                },
                {
                    "date": 1709206991468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,8 +227,9 @@\n   agentId,\n   assignedadminId\n   // agent_u_id\n ) => {\n+  console.log(inserted)\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n     {\n       user_type: user_type,\n"
                },
                {
                    "date": 1709207374457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,8 @@\n   agentId,\n   assignedadminId\n   // agent_u_id\n ) => {\n-  console.log(inserted)\n   const response = await axios.post(\n     `${API_URL}${user_type}/getallEmployeeView`,\n     {\n       user_type: user_type,\n@@ -2745,8215 +2744,4 @@\n     }\n   );\n   return response;\n };\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId,\n-  assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to reply email */\n-export const ReplyToMail = async (msgId, type, msg) => {\n-  const response = await axios.post(\n-    `${API_URL}common/replyToOutlookEmail`,\n-    {\n-      \"msg_id\": msgId,\n-      \"inbox_type\": type,\n-      \"replyMsg\":msg\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId,\n-  assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to reply email */\n-export const ReplyToMail = async (msgId, type, msg) => {\n-  const response = await axios.post(\n-    `${API_URL}common/replyToOutlookEmail`,\n-    {\n-      \"msg_id\": msgId,\n-      \"inbox_type\": type,\n-      \"replyMsg\":msg\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.get(`${API_URL}admin/getEmployeeStatusCount`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId,\n-  assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n"
                },
                {
                    "date": 1709281875591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709289168579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import axios from \"axios\";\n // const API_URL = \"https://192.168.29.92/canjobs/\";\n // const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // const API_URL = \"http://51.20.6.80/canjobs/\";\n // const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709291138735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2747 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://192.168.29.92/canjobs/\";\n+// const API_URL = \"http://65.0.20.158/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"http://51.20.6.80/canjobs/\";\n+// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n+// New AWS backend\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const agent_id = localStorage.getItem(\"agent_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+const admin_type =localStorage.getItem(\"admin_type\");\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n+    \"id\":user_type === \"admin\"?admin_id:agent_id,\n+    \"type\":user_type === \"admin\"?admin_type:user_type\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709352391943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2757 +1,6 @@\n import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n-// New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const agent_id = localStorage.getItem(\"agent_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-const admin_type =localStorage.getItem(\"admin_type\");\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n-    \"id\":user_type === \"admin\"?admin_id:agent_id,\n-    \"type\":user_type === \"admin\"?admin_type:user_type\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId,\n-  assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to reply email */\n-export const ReplyToMail = async (msgId, type, msg) => {\n-  const response = await axios.post(\n-    `${API_URL}common/replyToOutlookEmail`,\n-    {\n-      \"msg_id\": msgId,\n-      \"inbox_type\": type,\n-      \"replyMsg\":msg\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-import axios from \"axios\";\n-// const API_URL = \"https://192.168.29.92/canjobs/\";\n-// const API_URL = \"http://65.0.20.158/canjobs/\";\n const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// const API_URL = \"http://51.20.6.80/canjobs/\";\n-// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n // New AWS backend\n // const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n"
                },
                {
                    "date": 1709361040226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709361408125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2743 @@\n+import axios from \"axios\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// New AWS backend\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const agent_id = localStorage.getItem(\"agent_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+const admin_type =localStorage.getItem(\"admin_type\");\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async () => {\n+  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n+    \"id\":user_type === \"admin\"?admin_id:agent_id,\n+    \"type\":user_type === \"admin\"?admin_type:user_type\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                },
                {
                    "date": 1709361482867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2748 +1,5 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n-// New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n-let Token = localStorage.getItem(\"token\");\n-const view_as_token = localStorage.getItem(\"view_as_token\");\n-const user_id = localStorage.getItem(\"employee_id\");\n-const employer_id = localStorage.getItem(\"company_id\");\n-const admin_id = localStorage.getItem(\"admin_id\");\n-const agent_id = localStorage.getItem(\"agent_id\");\n-const user_type = localStorage.getItem(\"userType\");\n-const admin_type =localStorage.getItem(\"admin_type\");\n-if (view_as_token) {\n-  Token = view_as_token;\n-}\n-\n-// Location Api\n-/*Country*/\n-export const GetCountry = async () => {\n-  const response = await axios.get(`${API_URL}getCountryList`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-//Api to get the statistics count of all data\n-export const GetAllDataCount = async () => {\n-  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n-  return response.data;\n-};\n-\n-//Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n-  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n-    \"id\":user_type === \"admin\"?admin_id:agent_id,\n-    \"type\":user_type === \"admin\"?admin_type:user_type\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    });\n-  return response.data;\n-};\n-/*Chanage password Api */\n-export const ChangePasswordApi = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/changePassword`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Send Otp to email api */\n-export const SendOtp = async (props, type) => {\n-  const response = await axios.post(`${API_URL}common/generateOtp`, {\n-    email: props.email,\n-    type: type,\n-  });\n-  return response.data;\n-};\n-\n-/*Employee Reset password Api */\n-export const EmployeeResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*To get the filter list APi */\n-export const getJson = async () => {\n-  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n-  return response.data;\n-};\n-\n-// EMPLOYEE'S API\n-/*Employee sign */\n-export const EmployeeSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"resume\", props.resume);\n-  formData.append(\"reffer_by\", props.reffer_by);\n-  formData.append(\"name\", props.name);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employee_signup`, formData);\n-  return response.data;\n-};\n-\n-/*Employee Login */\n-export const EmployeeLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}employee_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedInLogin = async (props, type) => {\n-  if (type === \"employeeLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked employee*/\n-export const LinkedSignup = async (props, type) => {\n-  if (type === \"employeeSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employee login*/\n-export const SocialLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Forgot passsword api */\n-export const EmployeeForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Employee detail api */\n-export const EmployeeDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", user_id);\n-  const response = await axios.post(\n-    `${API_URL}getEmployeeDetail`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-  // }\n-};\n-/*Employee detail api */\n-export const EmployeeAppliedJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobsByEmployee`,\n-    { employee_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee detail api */\n-export const AddEmployeeDetails = async (props) => {\n-  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token\n-        ? Token\n-        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n-    },\n-  });\n-  return response.data;\n-};\n-/*Employee List Api */\n-export const getallEmployeeData = async (\n-  search,\n-  experience,\n-  skill,\n-  education,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  jobSkill,\n-  status,\n-  job_id,\n-  categorye,\n-  inserted,\n-  candian,\n-  agentId,\n-  assignedadminId\n-  // agent_u_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getallEmployeeView`,\n-    {\n-      user_type: user_type,\n-      filter_experience: experience,\n-      filter_skill: skill,\n-      filter_education: education,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-      job_keyskills: jobSkill,\n-      filter_status: status,\n-      job_id: job_id,\n-      work_permit_canada: candian,\n-      interested_in: inserted,\n-      agent_id: agentId,\n-      assigned_by: assignedadminId\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Education Api */\n-export const EmployeeEducationDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Education Api */\n-export const AddEmployeeEducation = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeEducation_detail`,\n-    {\n-      employee_id: id,\n-      course: props.course,\n-      institute_location: props.institute_location,\n-      passing_year: props.passing_year,\n-      qualification: props.qualification,\n-      specialization: props.specialization,\n-      university_institute: props.university_institute,\n-      education_id: props.education_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Detail Employee Skill Api */\n-export const EmployeeSkillDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"employee_id\", props);\n-  const response = await axios.get(\n-    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Career Api */\n-export const AddEmployeement = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}employeeCareer_detail`,\n-    {\n-      employee_id: id,\n-      company: props.company,\n-      designation: props.designation,\n-      company_location: props.company_location,\n-      industry: props.industry,\n-      functional_area: props.functional_area,\n-      work_level: props.work_level,\n-      start_date: props.start_date,\n-      end_date: props.end_date,\n-      currently_work_here: props.currently_work_here,\n-      career_id: props.career_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employee Skill Api */\n-export const AddEmployeeSkill = async (props, id) => {\n-  const response = await axios.post(\n-    `${API_URL}/employeeSkill`,\n-    {\n-      employee_id: id,\n-      skill: props.skill,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Skill Api */\n-export const DeleteEmployeeSkill = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeSkill`,\n-    { skill_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Education Api */\n-export const DeleteEmployeeEducation = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeEducation`,\n-    { education_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employee Career Api */\n-export const DeleteEmployeeCareer = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteEmployeeCareer`,\n-    { career_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employee Profile completion Api*/\n-export const getProfileCompletionPercent = async () => {\n-  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Apply job Api */\n-export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n-  const response = await axios.post(\n-    `${API_URL}applyJob`,\n-    {\n-      apply_id: apply_id,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*single job data api */\n-export const GetJob = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}getJob`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*single job Detail api */\n-export const GetJobDetail = async (props) => {\n-  // // (props);\n-  const response = await axios.post(\n-    `${API_URL}admin/jobDetail`,\n-    { job_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployeeDocumentList = async (id, empType, type) => {\n-  const response = await axios.post(\n-    `${API_URL}user/getDocumentsUploaded`,\n-    {\n-      employee_id: id,\n-      type: type,\n-      employee_type: empType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}user/documentsUpload `,\n-    {\n-      employee_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Upload bulk document */\n-export const UploadBulkDocument = async (id, data, docId, empType) => {\n-  const response = await axios.put(\n-    `${API_URL}user/bulkDocumentsUpload `,\n-    {\n-      employee_id: id,\n-      employee_type: empType,\n-      id: docId,\n-      data: data,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}user/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api function to delete document */\n-export const DeleteDocument = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocument`,\n-    { id: id, type: type },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api function to add annotation for the document */\n-export const ADocAnnotation = async (\n-  id,\n-  docId,\n-  assineduserid,\n-  email,\n-  subject,\n-  comment,\n-  x,\n-  y,\n-  type,\n-  adminType,\n-  senderName,\n-  assignName,\n-  satus,\n-  nextFollowupDate,\n-  AssignUserType,\n-  DocUrl,\n-  Senderemail,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/docTaskAdd`,\n-    {\n-      task_creator_user_id: id,\n-      task_creator_user_name: senderName,\n-      task_creator_user_email: Senderemail,\n-      task_creator_user_type: adminType,\n-      doc_id: docId,\n-      assined_to_user_id: assineduserid,\n-      assigned_to: email,\n-      assigned_to_name: assignName,\n-      assigned_user_type: AssignUserType,\n-      document_url: type === \"partner\" ? DocUrl : \"\",\n-      next_followup_date: nextFollowupDate,\n-      followup_status: satus,\n-      subject: subject,\n-      subject_description: comment,\n-      x_axis: x,\n-      y_axis: y,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get document comment list  */\n-export const GetCommentsAndAssign = async (\n-  id,\n-  userid,\n-  status,\n-  type,\n-  page,\n-  limit,\n-  sort,\n-  column,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/searchDocTask`,\n-    {\n-      page: page,\n-      limit: limit,\n-      sort_order: sort,\n-      column_name: column,\n-      filter_by_time: time,\n-      doc_id: id,\n-      assined_to_user_id: userid,\n-      status: status,\n-      type: type,\n-      // id:\"\",task_creator_user_id:\"\"\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to update Documentcomment assign */\n-export const UpdateDocuentcommentAssign = async (json) => {\n-  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to delete document comments */\n-export const DeleteCommentsAndAssign = async (DocId, id) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/deleteDocTask`,\n-    {\n-      doc_id: DocId,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Send Reply for document comments */\n-export const SendReplyCommit = async (\n-  data,\n-  email,\n-  msg,\n-  recid,\n-  adminType,\n-  SenderName,\n-  assignName,\n-  type,\n-  senderId,\n-  senderEmail,\n-  senderType,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/sendMsg`,\n-    {\n-      doc_id: data.doc_id,\n-      task_id: data.id,\n-      sender_id: senderId,\n-      sender_email: senderEmail,\n-      sender_name: SenderName,\n-      sender_type: senderType,\n-      receiver_id: recid,\n-      receiver_type: adminType,\n-      mention: email,\n-      receiver_name: assignName,\n-      document_url: \"\",\n-      next_followup_date: \"\",\n-      followup_status: \"\",\n-      subject: \"\",\n-      msg: msg,\n-      type: type,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to Get Reply for document comments */\n-export const GetReplyCommit = async (doc_id) => {\n-  const response = await axios.post(\n-    `${API_URL}/admin/get_messages`,\n-    {\n-      doc_id: doc_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Add update visa */\n-export const AddUpdateVisa = async (employee_id, state, id) => {\n-  // /job_detail(employee_id, state, id)\n-  const response = await axios.put(\n-    `${API_URL}addUpdateVisa `,\n-    {\n-      employee_id: employee_id,\n-      id: id,\n-      country: state.country,\n-      status: state.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to get Visa List */\n-export const GetEmployeeVisaList = async (\n-  search,\n-  status,\n-  country,\n-  interested,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getVisa`,\n-    {\n-      search: search,\n-      filter_by_interested_in: interested,\n-      filter_by_visa_country: country,\n-      filter_by_visa_status: status,\n-      filter_by_employee_id: id,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get Visa Sub stage List */\n-export const GetVisaSubStages = async (misc_id, type, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMiscellaneousSubstage`,\n-    {\n-      id: id,\n-      filter_by_misc_id: misc_id,\n-      filter_by_type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to add update visa sub stage */\n-export const AddUpdateEmployeeVisaSubStage = async (json) => {\n-  const response = await axios.put(\n-    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n-    json,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Visa api */\n-export const DeleteVisa = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteVisa`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-// EMPLOYER'S API\n-/*Employer sign up */\n-export const EmployerSignUp = async (props, permission) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"contact_no\", props.contact_no);\n-  formData.append(\"term_and_condition\", props.term_and_condition);\n-  formData.append(\"otp\", props.otp);\n-  formData.append(\"permission\", JSON.stringify(permission));\n-  const response = await axios.post(`${API_URL}employer_signup`, formData);\n-  return response.data;\n-};\n-/*Employer Login */\n-export const EmployerLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  formData.append(\"remember\", props.remember);\n-  const response = await axios.post(`${API_URL}employer_login`, formData);\n-  return response.data;\n-};\n-\n-/*Api to login in with linked employer*/\n-export const LinkedInLoginEmployer = async (props, type) => {\n-  if (type === \"employerLogin\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with linked  employer*/\n-export const LinkedInSignupEmployer = async (props, type) => {\n-  if (type === \"employerSignup\") {\n-    const formData = new FormData();\n-    formData.append(\"code\", props);\n-    const response = await axios.post(\n-      `${API_URL}api/Common_controller/linkedinLogin`,\n-      formData\n-    );\n-    return response.data;\n-  }\n-};\n-\n-/*Api to login in with Social linkes in employer login*/\n-export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/signupLoginViaSocialMedia`,\n-    {\n-      token: token,\n-      email: email,\n-      name: name,\n-      picture: picture,\n-      type: type,\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Reset password Api */\n-export const EmployerResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer Forgot passsword api */\n-export const EmployerForgotPassword = async (props) => {\n-  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-\n-/*Response List Api */\n-export const GetAllResponse = async (\n-  job_id,\n-  filter_skill,\n-  filter_experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time,\n-  lima,\n-  status,\n-  employee_id,\n-  reserved_status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}getJobResponse`,\n-    {\n-      job_id: job_id,\n-      user_type: user_type,\n-      page: page,\n-      limit: limit,\n-      filter_experience: filter_experience,\n-      filter_skill: filter_skill,\n-      column_name: column,\n-      sort_order: sort,\n-      search: search,\n-      filter_by_time: time,\n-      filter_lmia_status: lima,\n-      filter_employee_status: status,\n-      filter_employee_id: employee_id,\n-      filter_is_reserve: reserved_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Delete Response api */\n-export const DeletRespone = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}deleteApplyJob`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get all job data */\n-export const GetAllJobs = async (\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company,\n-  time,\n-  id,\n-  selfValue,\n-  adminValue,\n-  reserved,\n-  // employeeSkill,\n-  cid,\n-  manager_id\n-) => {\n-  const response = await axios.post(\n-    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n-    {\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_keyskill: skill,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      filter_by_time: time,\n-      job_id: id,\n-      // filter_company_name: company,\n-      filter_applied_by_self: selfValue,\n-      filter_applied_by_admin: adminValue,\n-      filter_reserved_employee: reserved,\n-      // employee_skills: employeeSkill,\n-      filter_company_id: cid,\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Add Job  Api */\n-export const AddJob = async (props) => {\n-  const response = await axios.put(`${API_URL}addJobs`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Employer List Api */\n-export const getAllEmployer = async (\n-  industry,\n-  corporation,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort,\n-  time\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllEmployer`,\n-    {\n-      filter_industry: industry,\n-      filter_corporation: corporation,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Employer Details Api */\n-export const EmployerDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n-  const response = await axios.post(\n-    `${API_URL}getEmployer`,\n-    { company_id: user_type === \"company\" ? employer_id : props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Employer / Company Api */\n-export const AddCompany = async (props) => {\n-  const response = await axios.put(`${API_URL}company_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer Contact Api */\n-export const AddContact = async (props) => {\n-  const response = await axios.put(`${API_URL}contact_detail`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Add Employer KYC Api */\n-export const AddKyc = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}company_kyc_detail`,\n-    {\n-      company_id: id,\n-      address: props.address,\n-      city: props.city,\n-      country: props.country,\n-      document: props.document,\n-      fax_number: props.fax_number,\n-      gstin: props.gstin,\n-      name: props.name,\n-      pan_date: props.pan_date,\n-      pan_no: props.pan_no,\n-      pincode: props.pincode,\n-      state: props.state,\n-      tan_number: props.tan_number,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Employer Api */\n-export const DeleteEmployer = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployer/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Api */\n-export const DeleteJob = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejob/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getInterview = async (\n-  job_id,\n-  employee_id,\n-  search,\n-  page,\n-  column,\n-  limit,\n-  sort,\n-  time,\n-  status,\n-  cid\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getInterview`,\n-    {\n-      search: search,\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      filter_by_time: time,\n-      filter_by_status: status,\n-      filter_by_company_id: cid,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data.data;\n-};\n-\n-/*Add interview Shedual Api */\n-export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n-  // /job_detail(props.state, employee_id, job_id);\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateInterview`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      interview_date: props.interview_date,\n-      created_by_admin: admin_id,\n-      interview_status: props.interview_status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get lmia list Api */\n-export const GetEmployeeByLima = async (\n-  id,\n-  search,\n-  status,\n-  page,\n-  limit,\n-  col,\n-  ord,\n-  time,\n-  employee_id\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    {\n-      lmia_status: status,\n-      search: search,\n-      filter_by_job_id: id,\n-      page: page,\n-      limit: limit,\n-      sort_order: ord,\n-      column_name: col,\n-      filter_by_time: time,\n-      filter_employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add LIMA Api */\n-export const AddLimia = async (props, employee_id, job_id) => {\n-  // (props);\n-  const response = await axios.put(\n-    `${API_URL}admin/addUpdateLmia`,\n-    {\n-      job_id: job_id,\n-      employee_id: employee_id,\n-      lmia_status: props.lmia_status,\n-      apply_id: props.apply_id,\n-      // completion_time: props.completion_time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Function get lima substage of empolyee */\n-export const GetLimaSubStages = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesEmployee`,\n-    {\n-      lmia_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Function get lima substage of empolyee */\n-export const GetJobLimaSubStages = async (id, status) => {\n-  const response = await axios.post(\n-    `${API_URL}/getLmiaSubstagesjob`,\n-    {\n-      job_id: id,\n-      lima_status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*FUnction to add update lmia sub stage of employee */\n-export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to Delete lmia sub stage of employee */\n-export const deleteLmiaSubstageEmployee = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageEmployee`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUnction to add update lmia sub stage  of job*/\n-export const AddUpdateJobLmiaSubStage = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}addUpdateLmiaSubstagesJob`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*FUction to delete lmiasub stage */\n-export const deleteLmiaSubstageJob = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}/deleteLmiaSubstageJob`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Interview list api */\n-export const getFollowupLastData = async (page, column, limit, sort, time) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllLastFollowup`,\n-    {\n-      column_name: column,\n-      sort_order: sort,\n-      page: page,\n-      limit: limit,\n-      filter_by_time: time,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-export const getLMIAstatus = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getLmia`,\n-    { lmia_status: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get list of the Document */\n-export const GetEmployerDocumentList = async (id, type) => {\n-  const response = await axios.post(\n-    `${API_URL}company/getDocumentsUploaded`,\n-    {\n-      company_id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to upload document*/\n-export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n-  const response = await axios.put(\n-    `${API_URL}company/documentsUpload `,\n-    {\n-      company_id: id,\n-      type: type,\n-      document_file: doc,\n-      is_varify: \"0\",\n-      id: docId,\n-      document_name: docName,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to verify Applicants document */\n-export const VarifyEmployerDocument = async (id, verify) => {\n-  const response = await axios.put(\n-    `${API_URL}company/isVarify `,\n-    {\n-      is_varify: verify,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-// ADMIN'S API\n-/*Get Summary Count Api */\n-export const getSummaryCount = async () => {\n-  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data.data;\n-};\n-\n-/*Admin login Api */\n-export const AdminLogin = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", props.email);\n-  formData.append(\"password\", props.password);\n-  const response = await axios.post(`${API_URL}admin_login`, formData);\n-  return response.data;\n-};\n-/*Admin Forgot password Api */\n-export const AdminForgotPasswordApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/forgetPassword`,\n-    { forget_email: props.forget_email },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Admin Reset password Api */\n-export const AdminResetPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Admin Notification List Api */\n-export const getAllAdminNotification = async () => {\n-  const response = await axios.get(`${API_URL}common/getNotifications`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getMentionNotifications`,\n-    {\n-      // from_id: loginuserid,\n-      // employee_id: id,\n-      // type: type,\n-      \"from_id\": \"\",\n-      \"type\": \"\",\n-      \"subject\": type,\n-      \"action_id\": loginuserid,\n-      \"mention_id\": \"\",\n-      \"employee_id\": \"\",\n-      \"sender_type\": userType\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Read Admin Notification Api */\n-export const ReadNotification = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}common/isReadNotification`,\n-    { id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getallAdminData = async (\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getAllAdmin`,\n-    {\n-      filter_admin_type: type,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Admin List Api */\n-export const getAllFollowUpData = async (\n-  job,\n-  company,\n-  experience,\n-  search,\n-  page,\n-  limit,\n-  column,\n-  sort\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getFollowupView`,\n-    {\n-      filter_job_type: job,\n-      filter_company_name: company,\n-      filter_experience: experience,\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: sort,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Job Category List Api */\n-export const getAllJobsCategory = async (\n-  level,\n-  type,\n-  search,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsCategory`,\n-    {\n-      parent_id: level,\n-      filter_category_type: type,\n-      search: search,\n-      page: page,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Employee Api */\n-export const DeleteJobEmployee = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deleteEmployee/${props}`,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/*Add Job Category Api */\n-export const AddJobCategory = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addCategory`,\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Job Category Api */\n-export const DeleteJobCategory = async (props) => {\n-  const response = await axios.delete(\n-    `${API_URL}deletejobCategory/${props}`,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    },\n-    props\n-  );\n-  return response.data;\n-};\n-\n-/* Admin Detail Api */\n-export const AdminDetails = async (props) => {\n-  const formData = new FormData();\n-  formData.append(\"admin_id\", props);\n-  const response = await axios.post(\n-    `${API_URL}/${user_type}/getAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Admin Api */\n-export const AddAdmin = async (props) => {\n-  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Get Filter Api */\n-export const GetFilter = async (props) => {\n-  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response;\n-};\n-\n-/*Add Filters Api */\n-export const AddFIlter = async (props, id) => {\n-  const response = await axios.put(\n-    `${API_URL}${user_type}/addUpdatefilterList`,\n-    { id: id, json_item: props.json_item },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Filter Api */\n-export const DeleteFilter = async (pId, cId) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteFilterListItem`,\n-    { id: pId, json_item_id: cId },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Delete Admin Api */\n-export const DeleteAdmin = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/deleteAdmin`,\n-    { admin_id: props },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Add Aplicant's Followup Api */\n-export const AddFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployee`,\n-    {\n-      admin_id: admin_id,\n-      // job_id: props.jobId,\n-      employee_id: props.employee_id,\n-      remark: props.remark,\n-      next_date: props.next_followup_date,\n-      subject: props.subject,\n-      status: props.status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*get Followup single data Api */\n-export const getSingleFollowup = async (\n-  employee_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search /*, job_id*/\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployee`,\n-    {\n-      /*job_id: job_id,*/ employee_id: employee_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-/*get Followup single data Api */\n-export const getSingleCompanyFollowup = async (\n-  company_id,\n-  column_name,\n-  sort_order,\n-  page,\n-  limit,\n-  status,\n-  search\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getFollowUpEmployer`,\n-    {\n-      company_id: company_id,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-      page: page,\n-      status: status,\n-      limit: limit,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-\n-  return response.data;\n-};\n-\n-/*Add Comapany's Followup Api */\n-export const AddCompanyFollowup = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addFollowUpEmployer`,\n-\n-    // // \"admin_id\":\"2\",\n-    // // \"job_id\":\"1\",\n-    // company_id: props.company_id,\n-    // remark: props.remark,\n-    // next_date: props.next_date,\n-    // subject: props.subject,\n-    props,\n-\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Get Admin token to view ass other admin */\n-export const GetAdminToken = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}${user_type}/getToken`,\n-    {\n-      admin_id: props,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get email template */\n-export const GetAllEmailTemplate = async (props) => {\n-  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get email Pagination */\n-export const GetAllEmailPagination = async (email, search) => {\n-  const response = await axios.post(\n-    `${API_URL}/common/paginationReadOutlookEmail`,\n-    {\n-      filter_by_email_id: email,\n-      search: \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to update email template */\n-export const AddUpdateEmailTemplate = async (props) => {\n-  const response = await axios.put(\n-    `${API_URL}/common/addUpdateEmailTemplate`,\n-    {\n-      id: props.id,\n-      email_type: props.email_type,\n-      subject: props.subject,\n-      message: props.message,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Test email template */\n-export const TestEmail = async (props) => {\n-  // (props);\n-  const response = await axios.post(\n-    `${API_URL}/common/emailTemplateTest`,\n-    {\n-      email_id: props.email_id,\n-      email_template_id: props.email_template_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/* Function to get get email authentication*/\n-export const GeEmailAuthenticationData = async () => {\n-  const response = await axios.get(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}common/outlookAuthUrl`,\n-    {\n-      // type: emailType,\n-      // email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw */\n-export const GetPreviewEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n-    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n-    `${API_URL}canjobs_latest/common/openSentEmail`,\n-    {\n-      type: emailType,\n-      email_id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get single  email preveiw Attchment */\n-export const GetPreviewAttchmentEmail = async (emailType, id) => {\n-  const response = await axios.post(\n-    `${API_URL}common/readOutlookEmailAttachment`,\n-    {\n-      msg_id: id,\n-      inbox_type: emailType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read email */\n-\n-export const ReadEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n-    // `${API_URL}canjobs_latest/common/readEmail`,\n-    `${API_URL}common/readOutlookEmail`,\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to read Sent email */\n-export const ReadSentEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n-    // `${API_URL}canjobs_latest/common/readSentEmail`,\n-    `${API_URL}common/readSentOutlookEmail`,\n-\n-    {\n-      // email_id: id,\n-      page: page,\n-      count: limit,\n-      filter_by_email_id: email,\n-      search: search,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to All Sent email */\n-export const ReadAllEmail = async (page, limit, search, email) => {\n-  const response = await axios.post(\n-    `${API_URL}common/getSentAndInboxMails`,\n-    {\n-      // email_id: id,\n-      // page: page,\n-      count: limit,\n-      // filter_by_email_id: email,\n-      search: search,\n-\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to reply email */\n-export const ReplyToMail = async (msgId, type, msg) => {\n-  const response = await axios.post(\n-    `${API_URL}common/replyToOutlookEmail`,\n-    {\n-      \"msg_id\": msgId,\n-      \"inbox_type\": type,\n-      \"replyMsg\":msg\n-  },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get the job filterd by employee id if it is applied or not */\n-export const GetEmployeeFilterJob = async (\n-  id /* skill*/,\n-  search,\n-  location,\n-  category,\n-  skill,\n-  job,\n-  page,\n-  limit,\n-  column_name,\n-  sort_order,\n-  company\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/getAllJobsViewAdmin`,\n-    {\n-      employee_id: id,\n-      filter_keyskill: skill,\n-      filter_category_id: category,\n-      filter_job_swap: job,\n-      filter_location: location,\n-      page: page,\n-      search: search ? search : company,\n-      limit: limit,\n-      column_name: column_name,\n-      sort_order: sort_order,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-\n-/*Api to Reserved employee for a job */\n-export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n-  const response = await axios.put(\n-    `${API_URL}setEmployeeReserve`,\n-    {\n-      apply_id: id,\n-      is_reserve: status,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove Reserved employee for a job */\n-export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n-  const response = await axios.post(\n-    `${API_URL}removeEmployeeReserve`,\n-    {\n-      apply_id: apply_id,\n-      employee_id: employee_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Send email to the user and company*/\n-export const SendEmail = async (data, FileList) => {\n-  console.log(FileList);\n-  const response = await axios.post(\n-    `${API_URL}sendEmailTest`,\n-    // {\n-    //   to: data.email,\n-    //   subject: data.subject,\n-    //   body: data.description,\n-    //   cc_email: data.adminemail,\n-    // }\n-    {\n-      to: data.email,\n-      subject: data.subject,\n-      body: data.description,\n-      cc_email: data.adminemail,\n-      attachments: FileList || \"\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get manager's team list*/\n-export const GetManagerTeam = async (manager_id) => {\n-  const response = await axios.post(\n-    `${API_URL}manager/getTeam`,\n-    {\n-      manager_id: manager_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add executive to the manager*/\n-export const AddExecutiveTeam = async (manager_id, executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/addUpadateTeam`,\n-    {\n-      manager_id: manager_id,\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Remove executive to the manager*/\n-export const RemoveExecutiveTeam = async (executive_id) => {\n-  const response = await axios.put(\n-    `${API_URL}manager/deleteTeamMember`,\n-    {\n-      executive_id: executive_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to Reasign job to manager*/\n-export const ReassignJobTOManager = async (manager_id, job_id) => {\n-  const response = await axios.put(\n-    `${API_URL}admin/assignJobToManager`,\n-    {\n-      manager_id: manager_id,\n-      job_id: job_id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employee setting */\n-export const GetEmployeeSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employee/getEmployeeSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get employer setting */\n-export const GetEmployerSetting = async () => {\n-  const response = await axios.post(\n-    `${API_URL}employer/getEmployerSetting`,\n-    {},\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to get Admin setting */\n-export const GetAdminrSetting = async () => {\n-  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to get Parent setting */\n-export const GetParentSetting = async (data) => {\n-  const response = await axios.post(\n-    `${API_URL}setting/getParentSetting`,\n-    { type: data },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employeE*/\n-export const AddEmployeePermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employee/updateEmployeeSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to employer*/\n-export const AddEmployerPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}employer/updateEmployerSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to Add permission to admin*/\n-export const AddAdminPermission = async (data) => {\n-  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-/*Api to Add permission by admin to employee and employer*/\n-export const AddChildPermission = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}setting/updateParentSetting`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-//Agent\n-/*Api to login agent*/\n-export const LoginAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  const response = await axios.post(`${API_URL}agent/login`, formData);\n-  return response.data;\n-};\n-/*Api to Signup agent*/\n-export const SignupAgent = async (state) => {\n-  const formData = new FormData();\n-  formData.append(\"email\", state.email);\n-  formData.append(\"password\", state.password);\n-  formData.append(\"name\", state.name);\n-  formData.append(\"otp\", state.otp);\n-  const response = await axios.post(`${API_URL}agent/signup`, formData);\n-  return response.data;\n-};\n-/*Api to Forgot password agent*/\n-export const ForgotAgentPasswordApi = async (props) => {\n-  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n-    forget_email: props.forget_email,\n-  });\n-  return response.data;\n-};\n-/*Api to Reset password agent*/\n-export const ResetAgentPasswordApi = async (props) => {\n-  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Add update agent*/\n-export const AddUpdateAgent = async (data) => {\n-  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Api to Get agent*/\n-export const GetAgent = async (id, search, page, limit, column, Order) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/getAgent`,\n-    {\n-      page: page,\n-      search: search,\n-      limit: limit,\n-      column_name: column,\n-      sort_order: Order,\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to delete agent */\n-export const DeleteAgent = async (id) => {\n-  const response = await axios.post(\n-    `${API_URL}agent/deleteAgent`,\n-    {\n-      id: id,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Api to get agent json list */\n-export const GetAgentJson = async () => {\n-  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n-    headers: {\n-      \"Content-Type\": \"application/json\",\n-      Authorization: Token,\n-    },\n-  });\n-  return response.data;\n-};\n-\n-/*Payment Api's */\n-export const CreateRazorpay = async (price, currency) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/creatRazorpayOrder`,\n-    {\n-      price: price,\n-      currency: currency,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Razor pay payment api */\n-export const AddRazorpay = async (amount, response, role) => {\n-  await axios.post(\n-    `${API_URL}payment/addRazorPayReciept`,\n-    {\n-      amount: amount,\n-      razorpayPaymentId: response.razorpay_payment_id,\n-      razorpay0rderId: response.razorpay_order_id,\n-      razorpaysighature: response.razorpay_signature,\n-      user_role: role,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Stripe payment api */\n-export const AddStripePalpay = async (amount) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/stripe-create-payment-intent`,\n-    {\n-      amount: amount,\n-      currency: \"usd\",\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Braintree payment api */\n-export const AddBrainTressPayment = async (amount, nonce, name) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/payWithBraintree`,\n-    {\n-      amount: amount,\n-      nonce: nonce,\n-      first_name: name.split(\" \").shift(),\n-      last_name: name.split(\" \").join(\" \"),\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Stripe payment api */\n-export const GetStripePaymentDetails = async (\n-  id,\n-  user_id,\n-  user,\n-  mode,\n-  status\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/get-stripe-payment-detaile`,\n-    {\n-      payment_intent_id: id,\n-      id: user_id,\n-      payment_mode: mode,\n-      user_type: user,\n-      status: status,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-\n-  return response;\n-};\n-/*Add payment to database api */\n-export const AddPaymentToDataBase = async (\n-  data,\n-  user_id,\n-  amount,\n-  mode,\n-  user\n-) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/capturePayment`,\n-    {\n-      id: user_id,\n-      order_id: data.orderID,\n-      user_type: user,\n-      payment_id: data.paymentID,\n-      amount: amount,\n-      status: \"success\",\n-      payment_mode: mode,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: localStorage.getItem(\"token\"),\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Api to get payment list */\n-export const GetPaymentList = async (id, user, payType) => {\n-  const response = await axios.post(\n-    `${API_URL}payment/getPaymentReciept`,\n-    {\n-      user_id: id,\n-      user_role: user,\n-      pay_by_admin: payType,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-/*Api to add cash paymet by admin  */\n-\n-export const AddCashpayment = async (data) => {\n-  const response = await axios.put(\n-    `${API_URL}payment/addPaymentReciept`,\n-    data,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response.data;\n-};\n-\n-/*Global Search API */\n-export const GlobalSearchResult = async (search) => {\n-  const response = await axios.post(\n-    `${API_URL}common/globalSearch`,\n-    { search },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-/*Global Search API */\n-export const getActivityLog = async (\n-  page,\n-  user_id,\n-  user_type,\n-  action_id,\n-  action_type,\n-  limit,\n-  stackHolder_id,\n-  stackHolder_type\n-) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}getActivityLog`,\n-    {\n-      page: page,\n-      user_id: user_id,\n-      user_type: user_type,\n-      action_id: action_id,\n-      action_type: action_type,\n-      column_name: \"created_at\",\n-      sort_order: \"DESC\",\n-      limit: limit,\n-      stackHolder_id: stackHolder_id,\n-      stackHolder_type: stackHolder_type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to get Credential Data\n-export const GetCredentialData = async (id, type) => {\n-  // console.log(\"Props\" + props.user_id + props.user_type);\n-  const response = await axios.post(\n-    `${API_URL}admin/getServiceCredential`,\n-    {\n-      id: id,\n-      type: type,\n-    },\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-// Api fucntion to Update Credential Data\n-export const UpdateCredentialApi = async (props) => {\n-  const response = await axios.post(\n-    `${API_URL}admin/addUpdateServiceCredential`,\n-\n-    props,\n-    {\n-      headers: {\n-        \"Content-Type\": \"application/json\",\n-        Authorization: Token,\n-      },\n-    }\n-  );\n-  return response;\n-};\n-import axios from \"axios\";\n // const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // New AWS backend\n const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n"
                },
                {
                    "date": 1709363775199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709370316210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+//Local \n+const API_URL =\"https://192.168.29.51/canjobs/\"\n // New AWS backend\n // const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n"
                },
                {
                    "date": 1709370365468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n // const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n-const API_URL =\"https://192.168.29.51/canjobs/\"\n+const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n // const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n"
                },
                {
                    "date": 1709379541645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n-const API_URL =\"http://192.168.29.51/canjobs/\"\n+// const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n // const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n"
                },
                {
                    "date": 1709551121043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,12 +33,12 @@\n   return response.data;\n };\n \n //Api to get the graph data count of all data\n-export const GetAllChartData = async () => {\n+export const GetAllChartData = async (id,type) => {\n   const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n-    \"id\":user_type === \"admin\"?admin_id:agent_id,\n-    \"type\":user_type === \"admin\"?admin_type:user_type\n+    \"id\":id,\n+    \"type\":type\n   },\n     {\n       headers: {\n         \"Content-Type\": \"application/json\",\n"
                },
                {
                    "date": 1709615519156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709622792497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709633109678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709636841845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709637845900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709639312792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709640213846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709640671445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import axios from \"axios\";\n-// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n //Local \n // const API_URL =\"http://192.168.29.51/canjobs/\"\n // New AWS backend\n-const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n let Token = localStorage.getItem(\"token\");\n const view_as_token = localStorage.getItem(\"view_as_token\");\n const user_id = localStorage.getItem(\"employee_id\");\n const employer_id = localStorage.getItem(\"company_id\");\n"
                },
                {
                    "date": 1709641472432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2745 @@\n+import axios from \"axios\";\n+// const API_URL = \"https://apnaorganicstore.in/canjobs/\";\n+//Local \n+// const API_URL =\"http://192.168.29.51/canjobs/\"\n+// New AWS backend\n+const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\n+let Token = localStorage.getItem(\"token\");\n+const view_as_token = localStorage.getItem(\"view_as_token\");\n+const user_id = localStorage.getItem(\"employee_id\");\n+const employer_id = localStorage.getItem(\"company_id\");\n+const admin_id = localStorage.getItem(\"admin_id\");\n+const agent_id = localStorage.getItem(\"agent_id\");\n+const user_type = localStorage.getItem(\"userType\");\n+const admin_type =localStorage.getItem(\"admin_type\");\n+if (view_as_token) {\n+  Token = view_as_token;\n+}\n+\n+// Location Api\n+/*Country*/\n+export const GetCountry = async () => {\n+  const response = await axios.get(`${API_URL}getCountryList`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+//Api to get the statistics count of all data\n+export const GetAllDataCount = async () => {\n+  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n+  return response.data;\n+};\n+\n+//Api to get the graph data count of all data\n+export const GetAllChartData = async (id,type) => {\n+  const response = await axios.post(`${API_URL}admin/getEmployeeStatusCount`,{\n+    \"id\":id,\n+    \"type\":type\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    });\n+  return response.data;\n+};\n+/*Chanage password Api */\n+export const ChangePasswordApi = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/changePassword`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Send Otp to email api */\n+export const SendOtp = async (props, type) => {\n+  const response = await axios.post(`${API_URL}common/generateOtp`, {\n+    email: props.email,\n+    type: type,\n+  });\n+  return response.data;\n+};\n+\n+/*Employee Reset password Api */\n+export const EmployeeResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*To get the filter list APi */\n+export const getJson = async () => {\n+  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n+  return response.data;\n+};\n+\n+// EMPLOYEE'S API\n+/*Employee sign */\n+export const EmployeeSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"resume\", props.resume);\n+  formData.append(\"reffer_by\", props.reffer_by);\n+  formData.append(\"name\", props.name);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employee_signup`, formData);\n+  return response.data;\n+};\n+\n+/*Employee Login */\n+export const EmployeeLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}employee_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedInLogin = async (props, type) => {\n+  if (type === \"employeeLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked employee*/\n+export const LinkedSignup = async (props, type) => {\n+  if (type === \"employeeSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employee login*/\n+export const SocialLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Forgot passsword api */\n+export const EmployeeForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Employee detail api */\n+export const EmployeeDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", user_id);\n+  const response = await axios.post(\n+    `${API_URL}getEmployeeDetail`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+  // }\n+};\n+/*Employee detail api */\n+export const EmployeeAppliedJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobsByEmployee`,\n+    { employee_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee detail api */\n+export const AddEmployeeDetails = async (props) => {\n+  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token\n+        ? Token\n+        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjIiLCJlbWFpbCI6InJhai53ZTJjb2RlQGdtYWlsLmNvbSIsInVzZXJfdHlwZSI6InN1cGVyLWFkbWluIiwiQVBJX1RJTUUiOjE3MDkwMzA1ODJ9._gFba5UnBxnVwzdeX_BHBAjd-Dno_fDzCNBJuoiv0Q8\",//Vercel token\n+    },\n+  });\n+  return response.data;\n+};\n+/*Employee List Api */\n+export const getallEmployeeData = async (\n+  search,\n+  experience,\n+  skill,\n+  education,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  jobSkill,\n+  status,\n+  job_id,\n+  categorye,\n+  inserted,\n+  candian,\n+  agentId,\n+  assignedadminId\n+  // agent_u_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getallEmployeeView`,\n+    {\n+      user_type: user_type,\n+      filter_experience: experience,\n+      filter_skill: skill,\n+      filter_education: education,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+      job_keyskills: jobSkill,\n+      filter_status: status,\n+      job_id: job_id,\n+      work_permit_canada: candian,\n+      interested_in: inserted,\n+      agent_id: agentId,\n+      assigned_by: assignedadminId\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Education Api */\n+export const EmployeeEducationDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Education Api */\n+export const AddEmployeeEducation = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeEducation_detail`,\n+    {\n+      employee_id: id,\n+      course: props.course,\n+      institute_location: props.institute_location,\n+      passing_year: props.passing_year,\n+      qualification: props.qualification,\n+      specialization: props.specialization,\n+      university_institute: props.university_institute,\n+      education_id: props.education_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Detail Employee Skill Api */\n+export const EmployeeSkillDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"employee_id\", props);\n+  const response = await axios.get(\n+    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Career Api */\n+export const AddEmployeement = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}employeeCareer_detail`,\n+    {\n+      employee_id: id,\n+      company: props.company,\n+      designation: props.designation,\n+      company_location: props.company_location,\n+      industry: props.industry,\n+      functional_area: props.functional_area,\n+      work_level: props.work_level,\n+      start_date: props.start_date,\n+      end_date: props.end_date,\n+      currently_work_here: props.currently_work_here,\n+      career_id: props.career_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employee Skill Api */\n+export const AddEmployeeSkill = async (props, id) => {\n+  const response = await axios.post(\n+    `${API_URL}/employeeSkill`,\n+    {\n+      employee_id: id,\n+      skill: props.skill,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Skill Api */\n+export const DeleteEmployeeSkill = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeSkill`,\n+    { skill_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Education Api */\n+export const DeleteEmployeeEducation = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeEducation`,\n+    { education_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employee Career Api */\n+export const DeleteEmployeeCareer = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteEmployeeCareer`,\n+    { career_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employee Profile completion Api*/\n+export const getProfileCompletionPercent = async () => {\n+  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Apply job Api */\n+export const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n+  const response = await axios.post(\n+    `${API_URL}applyJob`,\n+    {\n+      apply_id: apply_id,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*single job data api */\n+export const GetJob = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}getJob`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*single job Detail api */\n+export const GetJobDetail = async (props) => {\n+  // // (props);\n+  const response = await axios.post(\n+    `${API_URL}admin/jobDetail`,\n+    { job_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployeeDocumentList = async (id, empType, type) => {\n+  const response = await axios.post(\n+    `${API_URL}user/getDocumentsUploaded`,\n+    {\n+      employee_id: id,\n+      type: type,\n+      employee_type: empType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}user/documentsUpload `,\n+    {\n+      employee_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Upload bulk document */\n+export const UploadBulkDocument = async (id, data, docId, empType) => {\n+  const response = await axios.put(\n+    `${API_URL}user/bulkDocumentsUpload `,\n+    {\n+      employee_id: id,\n+      employee_type: empType,\n+      id: docId,\n+      data: data,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}user/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api function to delete document */\n+export const DeleteDocument = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocument`,\n+    { id: id, type: type },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api function to add annotation for the document */\n+export const ADocAnnotation = async (\n+  id,\n+  docId,\n+  assineduserid,\n+  email,\n+  subject,\n+  comment,\n+  x,\n+  y,\n+  type,\n+  adminType,\n+  senderName,\n+  assignName,\n+  satus,\n+  nextFollowupDate,\n+  AssignUserType,\n+  DocUrl,\n+  Senderemail,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/docTaskAdd`,\n+    {\n+      task_creator_user_id: id,\n+      task_creator_user_name: senderName,\n+      task_creator_user_email: Senderemail,\n+      task_creator_user_type: adminType,\n+      doc_id: docId,\n+      assined_to_user_id: assineduserid,\n+      assigned_to: email,\n+      assigned_to_name: assignName,\n+      assigned_user_type: AssignUserType,\n+      document_url: type === \"partner\" ? DocUrl : \"\",\n+      next_followup_date: nextFollowupDate,\n+      followup_status: satus,\n+      subject: subject,\n+      subject_description: comment,\n+      x_axis: x,\n+      y_axis: y,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get document comment list  */\n+export const GetCommentsAndAssign = async (\n+  id,\n+  userid,\n+  status,\n+  type,\n+  page,\n+  limit,\n+  sort,\n+  column,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/searchDocTask`,\n+    {\n+      page: page,\n+      limit: limit,\n+      sort_order: sort,\n+      column_name: column,\n+      filter_by_time: time,\n+      doc_id: id,\n+      assined_to_user_id: userid,\n+      status: status,\n+      type: type,\n+      // id:\"\",task_creator_user_id:\"\"\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to update Documentcomment assign */\n+export const UpdateDocuentcommentAssign = async (json) => {\n+  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to delete document comments */\n+export const DeleteCommentsAndAssign = async (DocId, id) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/deleteDocTask`,\n+    {\n+      doc_id: DocId,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Send Reply for document comments */\n+export const SendReplyCommit = async (\n+  data,\n+  email,\n+  msg,\n+  recid,\n+  adminType,\n+  SenderName,\n+  assignName,\n+  type,\n+  senderId,\n+  senderEmail,\n+  senderType,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/sendMsg`,\n+    {\n+      doc_id: data.doc_id,\n+      task_id: data.id,\n+      sender_id: senderId,\n+      sender_email: senderEmail,\n+      sender_name: SenderName,\n+      sender_type: senderType,\n+      receiver_id: recid,\n+      receiver_type: adminType,\n+      mention: email,\n+      receiver_name: assignName,\n+      document_url: \"\",\n+      next_followup_date: \"\",\n+      followup_status: \"\",\n+      subject: \"\",\n+      msg: msg,\n+      type: type,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to Get Reply for document comments */\n+export const GetReplyCommit = async (doc_id) => {\n+  const response = await axios.post(\n+    `${API_URL}/admin/get_messages`,\n+    {\n+      doc_id: doc_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Add update visa */\n+export const AddUpdateVisa = async (employee_id, state, id) => {\n+  // /job_detail(employee_id, state, id)\n+  const response = await axios.put(\n+    `${API_URL}addUpdateVisa `,\n+    {\n+      employee_id: employee_id,\n+      id: id,\n+      country: state.country,\n+      status: state.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to get Visa List */\n+export const GetEmployeeVisaList = async (\n+  search,\n+  status,\n+  country,\n+  interested,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getVisa`,\n+    {\n+      search: search,\n+      filter_by_interested_in: interested,\n+      filter_by_visa_country: country,\n+      filter_by_visa_status: status,\n+      filter_by_employee_id: id,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get Visa Sub stage List */\n+export const GetVisaSubStages = async (misc_id, type, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMiscellaneousSubstage`,\n+    {\n+      id: id,\n+      filter_by_misc_id: misc_id,\n+      filter_by_type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to add update visa sub stage */\n+export const AddUpdateEmployeeVisaSubStage = async (json) => {\n+  const response = await axios.put(\n+    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n+    json,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Visa api */\n+export const DeleteVisa = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteVisa`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+// EMPLOYER'S API\n+/*Employer sign up */\n+export const EmployerSignUp = async (props, permission) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"contact_no\", props.contact_no);\n+  formData.append(\"term_and_condition\", props.term_and_condition);\n+  formData.append(\"otp\", props.otp);\n+  formData.append(\"permission\", JSON.stringify(permission));\n+  const response = await axios.post(`${API_URL}employer_signup`, formData);\n+  return response.data;\n+};\n+/*Employer Login */\n+export const EmployerLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  formData.append(\"remember\", props.remember);\n+  const response = await axios.post(`${API_URL}employer_login`, formData);\n+  return response.data;\n+};\n+\n+/*Api to login in with linked employer*/\n+export const LinkedInLoginEmployer = async (props, type) => {\n+  if (type === \"employerLogin\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with linked  employer*/\n+export const LinkedInSignupEmployer = async (props, type) => {\n+  if (type === \"employerSignup\") {\n+    const formData = new FormData();\n+    formData.append(\"code\", props);\n+    const response = await axios.post(\n+      `${API_URL}api/Common_controller/linkedinLogin`,\n+      formData\n+    );\n+    return response.data;\n+  }\n+};\n+\n+/*Api to login in with Social linkes in employer login*/\n+export const SocialCompanyLogin = async (token, email, name, picture, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/signupLoginViaSocialMedia`,\n+    {\n+      token: token,\n+      email: email,\n+      name: name,\n+      picture: picture,\n+      type: type,\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Reset password Api */\n+export const EmployerResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer Forgot passsword api */\n+export const EmployerForgotPassword = async (props) => {\n+  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+\n+/*Response List Api */\n+export const GetAllResponse = async (\n+  job_id,\n+  filter_skill,\n+  filter_experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time,\n+  lima,\n+  status,\n+  employee_id,\n+  reserved_status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}getJobResponse`,\n+    {\n+      job_id: job_id,\n+      user_type: user_type,\n+      page: page,\n+      limit: limit,\n+      filter_experience: filter_experience,\n+      filter_skill: filter_skill,\n+      column_name: column,\n+      sort_order: sort,\n+      search: search,\n+      filter_by_time: time,\n+      filter_lmia_status: lima,\n+      filter_employee_status: status,\n+      filter_employee_id: employee_id,\n+      filter_is_reserve: reserved_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Delete Response api */\n+export const DeletRespone = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}deleteApplyJob`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get all job data */\n+export const GetAllJobs = async (\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company,\n+  time,\n+  id,\n+  selfValue,\n+  adminValue,\n+  reserved,\n+  // employeeSkill,\n+  cid,\n+  manager_id\n+) => {\n+  const response = await axios.post(\n+    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n+    {\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_keyskill: skill,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      filter_by_time: time,\n+      job_id: id,\n+      // filter_company_name: company,\n+      filter_applied_by_self: selfValue,\n+      filter_applied_by_admin: adminValue,\n+      filter_reserved_employee: reserved,\n+      // employee_skills: employeeSkill,\n+      filter_company_id: cid,\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Add Job  Api */\n+export const AddJob = async (props) => {\n+  const response = await axios.put(`${API_URL}addJobs`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Employer List Api */\n+export const getAllEmployer = async (\n+  industry,\n+  corporation,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort,\n+  time\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllEmployer`,\n+    {\n+      filter_industry: industry,\n+      filter_corporation: corporation,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Employer Details Api */\n+export const EmployerDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n+  const response = await axios.post(\n+    `${API_URL}getEmployer`,\n+    { company_id: user_type === \"company\" ? employer_id : props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Employer / Company Api */\n+export const AddCompany = async (props) => {\n+  const response = await axios.put(`${API_URL}company_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer Contact Api */\n+export const AddContact = async (props) => {\n+  const response = await axios.put(`${API_URL}contact_detail`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Add Employer KYC Api */\n+export const AddKyc = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}company_kyc_detail`,\n+    {\n+      company_id: id,\n+      address: props.address,\n+      city: props.city,\n+      country: props.country,\n+      document: props.document,\n+      fax_number: props.fax_number,\n+      gstin: props.gstin,\n+      name: props.name,\n+      pan_date: props.pan_date,\n+      pan_no: props.pan_no,\n+      pincode: props.pincode,\n+      state: props.state,\n+      tan_number: props.tan_number,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Employer Api */\n+export const DeleteEmployer = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployer/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Api */\n+export const DeleteJob = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejob/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getInterview = async (\n+  job_id,\n+  employee_id,\n+  search,\n+  page,\n+  column,\n+  limit,\n+  sort,\n+  time,\n+  status,\n+  cid\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getInterview`,\n+    {\n+      search: search,\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      filter_by_time: time,\n+      filter_by_status: status,\n+      filter_by_company_id: cid,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data.data;\n+};\n+\n+/*Add interview Shedual Api */\n+export const AddInterviewSchedule = async (props, employee_id, job_id) => {\n+  // /job_detail(props.state, employee_id, job_id);\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateInterview`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      interview_date: props.interview_date,\n+      created_by_admin: admin_id,\n+      interview_status: props.interview_status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get lmia list Api */\n+export const GetEmployeeByLima = async (\n+  id,\n+  search,\n+  status,\n+  page,\n+  limit,\n+  col,\n+  ord,\n+  time,\n+  employee_id\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    {\n+      lmia_status: status,\n+      search: search,\n+      filter_by_job_id: id,\n+      page: page,\n+      limit: limit,\n+      sort_order: ord,\n+      column_name: col,\n+      filter_by_time: time,\n+      filter_employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add LIMA Api */\n+export const AddLimia = async (props, employee_id, job_id) => {\n+  // (props);\n+  const response = await axios.put(\n+    `${API_URL}admin/addUpdateLmia`,\n+    {\n+      job_id: job_id,\n+      employee_id: employee_id,\n+      lmia_status: props.lmia_status,\n+      apply_id: props.apply_id,\n+      // completion_time: props.completion_time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Function get lima substage of empolyee */\n+export const GetLimaSubStages = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesEmployee`,\n+    {\n+      lmia_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Function get lima substage of empolyee */\n+export const GetJobLimaSubStages = async (id, status) => {\n+  const response = await axios.post(\n+    `${API_URL}/getLmiaSubstagesjob`,\n+    {\n+      job_id: id,\n+      lima_status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*FUnction to add update lmia sub stage of employee */\n+export const AddUpdateEmployeeLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to Delete lmia sub stage of employee */\n+export const deleteLmiaSubstageEmployee = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageEmployee`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUnction to add update lmia sub stage  of job*/\n+export const AddUpdateJobLmiaSubStage = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}addUpdateLmiaSubstagesJob`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*FUction to delete lmiasub stage */\n+export const deleteLmiaSubstageJob = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}/deleteLmiaSubstageJob`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Interview list api */\n+export const getFollowupLastData = async (page, column, limit, sort, time) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllLastFollowup`,\n+    {\n+      column_name: column,\n+      sort_order: sort,\n+      page: page,\n+      limit: limit,\n+      filter_by_time: time,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+export const getLMIAstatus = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getLmia`,\n+    { lmia_status: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get list of the Document */\n+export const GetEmployerDocumentList = async (id, type) => {\n+  const response = await axios.post(\n+    `${API_URL}company/getDocumentsUploaded`,\n+    {\n+      company_id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to upload document*/\n+export const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n+  const response = await axios.put(\n+    `${API_URL}company/documentsUpload `,\n+    {\n+      company_id: id,\n+      type: type,\n+      document_file: doc,\n+      is_varify: \"0\",\n+      id: docId,\n+      document_name: docName,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to verify Applicants document */\n+export const VarifyEmployerDocument = async (id, verify) => {\n+  const response = await axios.put(\n+    `${API_URL}company/isVarify `,\n+    {\n+      is_varify: verify,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+// ADMIN'S API\n+/*Get Summary Count Api */\n+export const getSummaryCount = async () => {\n+  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data.data;\n+};\n+\n+/*Admin login Api */\n+export const AdminLogin = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", props.email);\n+  formData.append(\"password\", props.password);\n+  const response = await axios.post(`${API_URL}admin_login`, formData);\n+  return response.data;\n+};\n+/*Admin Forgot password Api */\n+export const AdminForgotPasswordApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/forgetPassword`,\n+    { forget_email: props.forget_email },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Admin Reset password Api */\n+export const AdminResetPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Admin Notification List Api */\n+export const getAllAdminNotification = async () => {\n+  const response = await axios.get(`${API_URL}common/getNotifications`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+export const getAllMentionNotification = async (type, loginuserid, userType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getMentionNotifications`,\n+    {\n+      // from_id: loginuserid,\n+      // employee_id: id,\n+      // type: type,\n+      \"from_id\": \"\",\n+      \"type\": \"\",\n+      \"subject\": type,\n+      \"action_id\": loginuserid,\n+      \"mention_id\": \"\",\n+      \"employee_id\": \"\",\n+      \"sender_type\": userType\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Read Admin Notification Api */\n+export const ReadNotification = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}common/isReadNotification`,\n+    { id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getallAdminData = async (\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getAllAdmin`,\n+    {\n+      filter_admin_type: type,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Admin List Api */\n+export const getAllFollowUpData = async (\n+  job,\n+  company,\n+  experience,\n+  search,\n+  page,\n+  limit,\n+  column,\n+  sort\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getFollowupView`,\n+    {\n+      filter_job_type: job,\n+      filter_company_name: company,\n+      filter_experience: experience,\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: sort,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Job Category List Api */\n+export const getAllJobsCategory = async (\n+  level,\n+  type,\n+  search,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsCategory`,\n+    {\n+      parent_id: level,\n+      filter_category_type: type,\n+      search: search,\n+      page: page,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Employee Api */\n+export const DeleteJobEmployee = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deleteEmployee/${props}`,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/*Add Job Category Api */\n+export const AddJobCategory = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addCategory`,\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Job Category Api */\n+export const DeleteJobCategory = async (props) => {\n+  const response = await axios.delete(\n+    `${API_URL}deletejobCategory/${props}`,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    },\n+    props\n+  );\n+  return response.data;\n+};\n+\n+/* Admin Detail Api */\n+export const AdminDetails = async (props) => {\n+  const formData = new FormData();\n+  formData.append(\"admin_id\", props);\n+  const response = await axios.post(\n+    `${API_URL}/${user_type}/getAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Admin Api */\n+export const AddAdmin = async (props) => {\n+  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Get Filter Api */\n+export const GetFilter = async (props) => {\n+  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response;\n+};\n+\n+/*Add Filters Api */\n+export const AddFIlter = async (props, id) => {\n+  const response = await axios.put(\n+    `${API_URL}${user_type}/addUpdatefilterList`,\n+    { id: id, json_item: props.json_item },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Filter Api */\n+export const DeleteFilter = async (pId, cId) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteFilterListItem`,\n+    { id: pId, json_item_id: cId },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Delete Admin Api */\n+export const DeleteAdmin = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/deleteAdmin`,\n+    { admin_id: props },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Add Aplicant's Followup Api */\n+export const AddFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployee`,\n+    {\n+      admin_id: admin_id,\n+      // job_id: props.jobId,\n+      employee_id: props.employee_id,\n+      remark: props.remark,\n+      next_date: props.next_followup_date,\n+      subject: props.subject,\n+      status: props.status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*get Followup single data Api */\n+export const getSingleFollowup = async (\n+  employee_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search /*, job_id*/\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployee`,\n+    {\n+      /*job_id: job_id,*/ employee_id: employee_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+/*get Followup single data Api */\n+export const getSingleCompanyFollowup = async (\n+  company_id,\n+  column_name,\n+  sort_order,\n+  page,\n+  limit,\n+  status,\n+  search\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getFollowUpEmployer`,\n+    {\n+      company_id: company_id,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+      page: page,\n+      status: status,\n+      limit: limit,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+\n+  return response.data;\n+};\n+\n+/*Add Comapany's Followup Api */\n+export const AddCompanyFollowup = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addFollowUpEmployer`,\n+\n+    // // \"admin_id\":\"2\",\n+    // // \"job_id\":\"1\",\n+    // company_id: props.company_id,\n+    // remark: props.remark,\n+    // next_date: props.next_date,\n+    // subject: props.subject,\n+    props,\n+\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Get Admin token to view ass other admin */\n+export const GetAdminToken = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}${user_type}/getToken`,\n+    {\n+      admin_id: props,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get email template */\n+export const GetAllEmailTemplate = async (props) => {\n+  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get email Pagination */\n+export const GetAllEmailPagination = async (email, search) => {\n+  const response = await axios.post(\n+    `${API_URL}/common/paginationReadOutlookEmail`,\n+    {\n+      filter_by_email_id: email,\n+      search: \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to update email template */\n+export const AddUpdateEmailTemplate = async (props) => {\n+  const response = await axios.put(\n+    `${API_URL}/common/addUpdateEmailTemplate`,\n+    {\n+      id: props.id,\n+      email_type: props.email_type,\n+      subject: props.subject,\n+      message: props.message,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Test email template */\n+export const TestEmail = async (props) => {\n+  // (props);\n+  const response = await axios.post(\n+    `${API_URL}/common/emailTemplateTest`,\n+    {\n+      email_id: props.email_id,\n+      email_template_id: props.email_template_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/* Function to get get email authentication*/\n+export const GeEmailAuthenticationData = async () => {\n+  const response = await axios.get(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}common/outlookAuthUrl`,\n+    {\n+      // type: emailType,\n+      // email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw */\n+export const GetPreviewEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n+    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n+    `${API_URL}canjobs_latest/common/openSentEmail`,\n+    {\n+      type: emailType,\n+      email_id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get single  email preveiw Attchment */\n+export const GetPreviewAttchmentEmail = async (emailType, id) => {\n+  const response = await axios.post(\n+    `${API_URL}common/readOutlookEmailAttachment`,\n+    {\n+      msg_id: id,\n+      inbox_type: emailType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read email */\n+\n+export const ReadEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n+    // `${API_URL}canjobs_latest/common/readEmail`,\n+    `${API_URL}common/readOutlookEmail`,\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to read Sent email */\n+export const ReadSentEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n+    // `${API_URL}canjobs_latest/common/readSentEmail`,\n+    `${API_URL}common/readSentOutlookEmail`,\n+\n+    {\n+      // email_id: id,\n+      page: page,\n+      count: limit,\n+      filter_by_email_id: email,\n+      search: search,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to All Sent email */\n+export const ReadAllEmail = async (page, limit, search, email) => {\n+  const response = await axios.post(\n+    `${API_URL}common/getSentAndInboxMails`,\n+    {\n+      // email_id: id,\n+      // page: page,\n+      count: limit,\n+      // filter_by_email_id: email,\n+      search: search,\n+\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to reply email */\n+export const ReplyToMail = async (msgId, type, msg) => {\n+  const response = await axios.post(\n+    `${API_URL}common/replyToOutlookEmail`,\n+    {\n+      \"msg_id\": msgId,\n+      \"inbox_type\": type,\n+      \"replyMsg\":msg\n+  },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get the job filterd by employee id if it is applied or not */\n+export const GetEmployeeFilterJob = async (\n+  id /* skill*/,\n+  search,\n+  location,\n+  category,\n+  skill,\n+  job,\n+  page,\n+  limit,\n+  column_name,\n+  sort_order,\n+  company\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/getAllJobsViewAdmin`,\n+    {\n+      employee_id: id,\n+      filter_keyskill: skill,\n+      filter_category_id: category,\n+      filter_job_swap: job,\n+      filter_location: location,\n+      page: page,\n+      search: search ? search : company,\n+      limit: limit,\n+      column_name: column_name,\n+      sort_order: sort_order,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+\n+/*Api to Reserved employee for a job */\n+export const ReservedEmployeeForJob = async (id, employee_id, status) => {\n+  const response = await axios.put(\n+    `${API_URL}setEmployeeReserve`,\n+    {\n+      apply_id: id,\n+      is_reserve: status,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove Reserved employee for a job */\n+export const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n+  const response = await axios.post(\n+    `${API_URL}removeEmployeeReserve`,\n+    {\n+      apply_id: apply_id,\n+      employee_id: employee_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Send email to the user and company*/\n+export const SendEmail = async (data, FileList) => {\n+  console.log(FileList);\n+  const response = await axios.post(\n+    `${API_URL}sendEmailTest`,\n+    // {\n+    //   to: data.email,\n+    //   subject: data.subject,\n+    //   body: data.description,\n+    //   cc_email: data.adminemail,\n+    // }\n+    {\n+      to: data.email,\n+      subject: data.subject,\n+      body: data.description,\n+      cc_email: data.adminemail,\n+      attachments: FileList || \"\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get manager's team list*/\n+export const GetManagerTeam = async (manager_id) => {\n+  const response = await axios.post(\n+    `${API_URL}manager/getTeam`,\n+    {\n+      manager_id: manager_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add executive to the manager*/\n+export const AddExecutiveTeam = async (manager_id, executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/addUpadateTeam`,\n+    {\n+      manager_id: manager_id,\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Remove executive to the manager*/\n+export const RemoveExecutiveTeam = async (executive_id) => {\n+  const response = await axios.put(\n+    `${API_URL}manager/deleteTeamMember`,\n+    {\n+      executive_id: executive_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to Reasign job to manager*/\n+export const ReassignJobTOManager = async (manager_id, job_id) => {\n+  const response = await axios.put(\n+    `${API_URL}admin/assignJobToManager`,\n+    {\n+      manager_id: manager_id,\n+      job_id: job_id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employee setting */\n+export const GetEmployeeSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employee/getEmployeeSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get employer setting */\n+export const GetEmployerSetting = async () => {\n+  const response = await axios.post(\n+    `${API_URL}employer/getEmployerSetting`,\n+    {},\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to get Admin setting */\n+export const GetAdminrSetting = async () => {\n+  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to get Parent setting */\n+export const GetParentSetting = async (data) => {\n+  const response = await axios.post(\n+    `${API_URL}setting/getParentSetting`,\n+    { type: data },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employeE*/\n+export const AddEmployeePermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employee/updateEmployeeSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to employer*/\n+export const AddEmployerPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}employer/updateEmployerSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to Add permission to admin*/\n+export const AddAdminPermission = async (data) => {\n+  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+/*Api to Add permission by admin to employee and employer*/\n+export const AddChildPermission = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}setting/updateParentSetting`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+//Agent\n+/*Api to login agent*/\n+export const LoginAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  const response = await axios.post(`${API_URL}agent/login`, formData);\n+  return response.data;\n+};\n+/*Api to Signup agent*/\n+export const SignupAgent = async (state) => {\n+  const formData = new FormData();\n+  formData.append(\"email\", state.email);\n+  formData.append(\"password\", state.password);\n+  formData.append(\"name\", state.name);\n+  formData.append(\"otp\", state.otp);\n+  const response = await axios.post(`${API_URL}agent/signup`, formData);\n+  return response.data;\n+};\n+/*Api to Forgot password agent*/\n+export const ForgotAgentPasswordApi = async (props) => {\n+  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n+    forget_email: props.forget_email,\n+  });\n+  return response.data;\n+};\n+/*Api to Reset password agent*/\n+export const ResetAgentPasswordApi = async (props) => {\n+  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Add update agent*/\n+export const AddUpdateAgent = async (data) => {\n+  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Api to Get agent*/\n+export const GetAgent = async (id, search, page, limit, column, Order) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/getAgent`,\n+    {\n+      page: page,\n+      search: search,\n+      limit: limit,\n+      column_name: column,\n+      sort_order: Order,\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to delete agent */\n+export const DeleteAgent = async (id) => {\n+  const response = await axios.post(\n+    `${API_URL}agent/deleteAgent`,\n+    {\n+      id: id,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Api to get agent json list */\n+export const GetAgentJson = async () => {\n+  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n+    headers: {\n+      \"Content-Type\": \"application/json\",\n+      Authorization: Token,\n+    },\n+  });\n+  return response.data;\n+};\n+\n+/*Payment Api's */\n+export const CreateRazorpay = async (price, currency) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/creatRazorpayOrder`,\n+    {\n+      price: price,\n+      currency: currency,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Razor pay payment api */\n+export const AddRazorpay = async (amount, response, role) => {\n+  await axios.post(\n+    `${API_URL}payment/addRazorPayReciept`,\n+    {\n+      amount: amount,\n+      razorpayPaymentId: response.razorpay_payment_id,\n+      razorpay0rderId: response.razorpay_order_id,\n+      razorpaysighature: response.razorpay_signature,\n+      user_role: role,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Stripe payment api */\n+export const AddStripePalpay = async (amount) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/stripe-create-payment-intent`,\n+    {\n+      amount: amount,\n+      currency: \"usd\",\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Braintree payment api */\n+export const AddBrainTressPayment = async (amount, nonce, name) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/payWithBraintree`,\n+    {\n+      amount: amount,\n+      nonce: nonce,\n+      first_name: name.split(\" \").shift(),\n+      last_name: name.split(\" \").join(\" \"),\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Stripe payment api */\n+export const GetStripePaymentDetails = async (\n+  id,\n+  user_id,\n+  user,\n+  mode,\n+  status\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/get-stripe-payment-detaile`,\n+    {\n+      payment_intent_id: id,\n+      id: user_id,\n+      payment_mode: mode,\n+      user_type: user,\n+      status: status,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+\n+  return response;\n+};\n+/*Add payment to database api */\n+export const AddPaymentToDataBase = async (\n+  data,\n+  user_id,\n+  amount,\n+  mode,\n+  user\n+) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/capturePayment`,\n+    {\n+      id: user_id,\n+      order_id: data.orderID,\n+      user_type: user,\n+      payment_id: data.paymentID,\n+      amount: amount,\n+      status: \"success\",\n+      payment_mode: mode,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: localStorage.getItem(\"token\"),\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Api to get payment list */\n+export const GetPaymentList = async (id, user, payType) => {\n+  const response = await axios.post(\n+    `${API_URL}payment/getPaymentReciept`,\n+    {\n+      user_id: id,\n+      user_role: user,\n+      pay_by_admin: payType,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+/*Api to add cash paymet by admin  */\n+\n+export const AddCashpayment = async (data) => {\n+  const response = await axios.put(\n+    `${API_URL}payment/addPaymentReciept`,\n+    data,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response.data;\n+};\n+\n+/*Global Search API */\n+export const GlobalSearchResult = async (search) => {\n+  const response = await axios.post(\n+    `${API_URL}common/globalSearch`,\n+    { search },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+/*Global Search API */\n+export const getActivityLog = async (\n+  page,\n+  user_id,\n+  user_type,\n+  action_id,\n+  action_type,\n+  limit,\n+  stackHolder_id,\n+  stackHolder_type\n+) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}getActivityLog`,\n+    {\n+      page: page,\n+      user_id: user_id,\n+      user_type: user_type,\n+      action_id: action_id,\n+      action_type: action_type,\n+      column_name: \"created_at\",\n+      sort_order: \"DESC\",\n+      limit: limit,\n+      stackHolder_id: stackHolder_id,\n+      stackHolder_type: stackHolder_type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to get Credential Data\n+export const GetCredentialData = async (id, type) => {\n+  // console.log(\"Props\" + props.user_id + props.user_type);\n+  const response = await axios.post(\n+    `${API_URL}admin/getServiceCredential`,\n+    {\n+      id: id,\n+      type: type,\n+    },\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n+// Api fucntion to Update Credential Data\n+export const UpdateCredentialApi = async (props) => {\n+  const response = await axios.post(\n+    `${API_URL}admin/addUpdateServiceCredential`,\n+\n+    props,\n+    {\n+      headers: {\n+        \"Content-Type\": \"application/json\",\n+        Authorization: Token,\n+      },\n+    }\n+  );\n+  return response;\n+};\n"
                }
            ],
            "date": 1708938099260,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\n// const API_URL = \"https://192.168.29.92/canjobs/\";\n// const API_URL = \"http://65.0.20.158/canjobs/\";\nconst API_URL = \"https://apnaorganicstore.in/canjobs/\";\n// const API_URL = \"http://51.20.6.80/canjobs/\";\n// const API_URL = \"http://192.168.29.92/canjobs_october/\";\n// New AWS backend\n// const API_URL = \"https://api.canpathwaysjobs.com/canjobs/\";\nlet Token = localStorage.getItem(\"token\");\nconst view_as_token = localStorage.getItem(\"view_as_token\");\nconst user_id = localStorage.getItem(\"employee_id\");\nconst employer_id = localStorage.getItem(\"company_id\");\nconst admin_id = localStorage.getItem(\"admin_id\");\nconst user_type = localStorage.getItem(\"userType\");\n\nif (view_as_token) {\n  Token = view_as_token;\n}\n\n// Location Api\n/*Country*/\nexport const GetCountry = async () => {\n  const response = await axios.get(`${API_URL}getCountryList`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n//Api to get the statistics count of all data\nexport const GetAllDataCount = async () => {\n  const response = await axios.get(`${API_URL}common/getSummaryCounts`);\n  return response.data;\n};\n/*Chanage password Api */\nexport const ChangePasswordApi = async (props) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/changePassword`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Send Otp to email api */\nexport const SendOtp = async (props, type) => {\n  const response = await axios.post(`${API_URL}common/generateOtp`, {\n    email: props.email,\n    type: type,\n  });\n  return response.data;\n};\n\n/*Employee Reset password Api */\nexport const EmployeeResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}user/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*To get the filter list APi */\nexport const getJson = async () => {\n  const response = await axios.get(`${API_URL}filterList/filterList.json`);\n  return response.data;\n};\n\n// EMPLOYEE'S API\n/*Employee sign */\nexport const EmployeeSignUp = async (props, permission) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"otp\", props.otp);\n  formData.append(\"resume\", props.resume);\n  formData.append(\"reffer_by\", props.reffer_by);\n  formData.append(\"name\", props.name);\n  formData.append(\"contact_no\", props.contact_no);\n  formData.append(\"permission\", JSON.stringify(permission));\n  const response = await axios.post(`${API_URL}employee_signup`, formData);\n  return response.data;\n};\n\n/*Employee Login */\nexport const EmployeeLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  const response = await axios.post(`${API_URL}employee_login`, formData);\n  return response.data;\n};\n\n/*Api to login in with linked employee*/\nexport const LinkedInLogin = async (props, type) => {\n  if (type === \"employeeLogin\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with linked employee*/\nexport const LinkedSignup = async (props, type) => {\n  if (type === \"employeeSignup\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with Social linkes in employee login*/\nexport const SocialLogin = async (token, email, name, picture, type) => {\n  const response = await axios.post(\n    `${API_URL}user/signupLoginViaSocialMedia`,\n    {\n      token: token,\n      email: email,\n      name: name,\n      picture: picture,\n      type: type,\n    }\n  );\n  return response.data;\n};\n\n/*Employee Forgot passsword api */\nexport const EmployeeForgotPassword = async (props) => {\n  const response = await axios.post(`${API_URL}employee/ForgetPassword`, {\n    forget_email: props.forget_email,\n  });\n  return response.data;\n};\n/*Employee detail api */\nexport const EmployeeDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", user_id);\n  const response = await axios.post(\n    `${API_URL}getEmployeeDetail`,\n    { employee_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n  // }\n};\n/*Employee detail api */\nexport const EmployeeAppliedJob = async (props) => {\n  const response = await axios.post(\n    `${API_URL}getJobsByEmployee`,\n    { employee_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee detail api */\nexport const AddEmployeeDetails = async (props) => {\n  const response = await axios.put(`${API_URL}employeePersonal_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token\n        ? Token\n        : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZG1pbl9pZCI6IjM0IiwiZW1haWwiOiJ0b2tlbkBnbWFpbC5jb20iLCJ1c2VyX3R5cGUiOiJzdXBlci1hZG1pbiIsIkFQSV9USU1FIjoxNjk3ODE5MjU3fQ.KMcaHwbumy5SQSOlhgTE5v7qsDD30NDeXjcl2LE6dKM\",\n    },\n  });\n  return response.data;\n};\n/*Employee List Api */\nexport const getallEmployeeData = async (\n  search,\n  experience,\n  skill,\n  education,\n  page,\n  limit,\n  column,\n  sort,\n  time,\n  jobSkill,\n  status,\n  job_id,\n  categorye,\n  inserted,\n  candian,\n  agentId\n  // agent_u_id\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getallEmployeeView`,\n    {\n      user_type: user_type,\n      filter_experience: experience,\n      filter_skill: skill,\n      filter_education: education,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n      filter_by_time: time,\n      job_keyskills: jobSkill,\n      filter_status: status,\n      job_id: job_id,\n      work_permit_canada: candian,\n      interested_in: inserted,\n      agent_id: agentId,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Detail Employee Education Api */\nexport const EmployeeEducationDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", props);\n  const response = await axios.get(\n    `${API_URL}getEmployeeEducation?employee_id=${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Education Api */\nexport const AddEmployeeEducation = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}employeeEducation_detail`,\n    {\n      employee_id: id,\n      course: props.course,\n      institute_location: props.institute_location,\n      passing_year: props.passing_year,\n      qualification: props.qualification,\n      specialization: props.specialization,\n      university_institute: props.university_institute,\n      education_id: props.education_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Detail Employee Skill Api */\nexport const EmployeeSkillDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"employee_id\", props);\n  const response = await axios.get(\n    `${API_URL}getEmployeeSkill?employee_id=${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Career Api */\nexport const AddEmployeement = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}employeeCareer_detail`,\n    {\n      employee_id: id,\n      company: props.company,\n      designation: props.designation,\n      company_location: props.company_location,\n      industry: props.industry,\n      functional_area: props.functional_area,\n      work_level: props.work_level,\n      start_date: props.start_date,\n      end_date: props.end_date,\n      currently_work_here: props.currently_work_here,\n      career_id: props.career_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employee Skill Api */\nexport const AddEmployeeSkill = async (props, id) => {\n  const response = await axios.post(\n    `${API_URL}/employeeSkill`,\n    {\n      employee_id: id,\n      skill: props.skill,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Skill Api */\nexport const DeleteEmployeeSkill = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeSkill`,\n    { skill_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Education Api */\nexport const DeleteEmployeeEducation = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeEducation`,\n    { education_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employee Career Api */\nexport const DeleteEmployeeCareer = async (props) => {\n  const response = await axios.post(\n    `${API_URL}deleteEmployeeCareer`,\n    { career_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Employee Profile completion Api*/\nexport const getProfileCompletionPercent = async () => {\n  const response = await axios.get(`${API_URL}/getProfileCompletePercent`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data.data;\n};\n\n/*Apply job Api */\nexport const ApplyJob = async (job_id, employee_id, status, apply_id) => {\n  const response = await axios.post(\n    `${API_URL}applyJob`,\n    {\n      apply_id: apply_id,\n      job_id: job_id,\n      employee_id: employee_id,\n      status: status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*single job data api */\nexport const GetJob = async (props) => {\n  const response = await axios.post(\n    `${API_URL}getJob`,\n    { job_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*single job Detail api */\nexport const GetJobDetail = async (props) => {\n  // // (props);\n  const response = await axios.post(\n    `${API_URL}admin/jobDetail`,\n    { job_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get list of the Document */\nexport const GetEmployeeDocumentList = async (id, empType, type) => {\n  const response = await axios.post(\n    `${API_URL}user/getDocumentsUploaded`,\n    {\n      employee_id: id,\n      type: type,\n      employee_type: empType,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to upload document*/\nexport const UploadDocument = async (id, type, doc, docId, docName) => {\n  const response = await axios.put(\n    `${API_URL}user/documentsUpload `,\n    {\n      employee_id: id,\n      type: type,\n      document_file: doc,\n      is_varify: \"0\",\n      id: docId,\n      document_name: docName,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to Upload bulk document */\nexport const UploadBulkDocument = async (id, data, docId, empType) => {\n  const response = await axios.put(\n    `${API_URL}user/bulkDocumentsUpload `,\n    {\n      employee_id: id,\n      employee_type: empType,\n      id: docId,\n      data: data,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to verify Applicants document */\nexport const VarifyDocument = async (id, verify) => {\n  const response = await axios.put(\n    `${API_URL}user/isVarify `,\n    {\n      is_varify: verify,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api function to delete document */\nexport const DeleteDocument = async (id, type) => {\n  const response = await axios.post(\n    `${API_URL}admin/deleteDocument`,\n    { id: id, type: type },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api function to add annotation for the document */\nexport const ADocAnnotation = async (\n  id,\n  docId,\n  assineduserid,\n  email,\n  subject,\n  comment,\n  x,\n  y,\n  type,\n  adminType,\n  senderName,\n  assignName,\n  satus,\n  nextFollowupDate,\n  AssignUserType,\n  DocUrl,\n  Senderemail,\n  employee_id\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/docTaskAdd`,\n    {\n      task_creator_user_id: id,\n      task_creator_user_name: senderName,\n      task_creator_user_email: Senderemail,\n      task_creator_user_type: adminType,\n      doc_id: docId,\n      assined_to_user_id: assineduserid,\n      assigned_to: email,\n      assigned_to_name: assignName,\n      assigned_user_type: AssignUserType,\n      document_url: type === \"notes\" ? DocUrl : \"\",\n      next_followup_date: nextFollowupDate,\n      followup_status: satus,\n      subject: subject,\n      subject_description: comment,\n      x_axis: x,\n      y_axis: y,\n      type: type,\n      employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get document comment list  */\nexport const GetCommentsAndAssign = async (\n  id,\n  userid,\n  status,\n  type,\n  page,\n  limit,\n  sort,\n  column,\n  time\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/searchDocTask`,\n    {\n      page: page,\n      limit: limit,\n      sort_order: sort,\n      column_name: column,\n      filter_by_time: time,\n      doc_id: id,\n      assined_to_user_id: userid,\n      status: status,\n      type: type,\n      id:\"\",task_creator_user_id:\"\"\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to update Documentcomment assign */\nexport const UpdateDocuentcommentAssign = async (json) => {\n  const response = await axios.put(`${API_URL}admin/updateDocTask`, json, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n/*Api to delete document comments */\nexport const DeleteCommentsAndAssign = async (DocId, id) => {\n  const response = await axios.post(\n    `${API_URL}admin/deleteDocTask`,\n    {\n      doc_id: DocId,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to Send Reply for document comments */\nexport const SendReplyCommit = async (\n  data,\n  email,\n  msg,\n  recid,\n  adminType,\n  SenderName,\n  assignName,\n  type,\n  senderId,\n  senderEmail,\n  senderType,\n  employee_id\n) => {\n  const response = await axios.post(\n    `${API_URL}/admin/sendMsg`,\n    {\n      doc_id: data.doc_id,\n      task_id: data.id,\n      sender_id: senderId,\n      sender_email: senderEmail,\n      sender_name: SenderName,\n      sender_type: senderType,\n      receiver_id: recid,\n      receiver_type: adminType,\n      mention: email,\n      receiver_name: assignName,\n      document_url: \"\",\n      next_followup_date: \"\",\n      followup_status: \"\",\n      subject: \"\",\n      msg: msg,\n      type: type,\n      employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to Get Reply for document comments */\nexport const GetReplyCommit = async (doc_id) => {\n  const response = await axios.post(\n    `${API_URL}/admin/get_messages`,\n    {\n      doc_id: doc_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to Add update visa */\nexport const AddUpdateVisa = async (employee_id, state, id) => {\n  // /job_detail(employee_id, state, id)\n  const response = await axios.put(\n    `${API_URL}addUpdateVisa `,\n    {\n      employee_id: employee_id,\n      id: id,\n      country: state.country,\n      status: state.status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to get Visa List */\nexport const GetEmployeeVisaList = async (\n  search,\n  status,\n  country,\n  interested,\n  page,\n  limit,\n  column,\n  sort,\n  id\n) => {\n  const response = await axios.post(\n    `${API_URL}getVisa`,\n    {\n      search: search,\n      filter_by_interested_in: interested,\n      filter_by_visa_country: country,\n      filter_by_visa_status: status,\n      filter_by_employee_id: id,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to get Visa Sub stage List */\nexport const GetVisaSubStages = async (misc_id, type, id) => {\n  const response = await axios.post(\n    `${API_URL}common/getMiscellaneousSubstage`,\n    {\n      id: id,\n      filter_by_misc_id: misc_id,\n      filter_by_type: type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Api to add update visa sub stage */\nexport const AddUpdateEmployeeVisaSubStage = async (json) => {\n  const response = await axios.put(\n    `${API_URL}common/addUpdateMiscellaneousSubstage`,\n    json,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Visa api */\nexport const DeleteVisa = async (id) => {\n  const response = await axios.post(\n    `${API_URL}deleteVisa`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n// EMPLOYER'S API\n/*Employer sign up */\nexport const EmployerSignUp = async (props, permission) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"contact_no\", props.contact_no);\n  formData.append(\"term_and_condition\", props.term_and_condition);\n  formData.append(\"otp\", props.otp);\n  formData.append(\"permission\", JSON.stringify(permission));\n  const response = await axios.post(`${API_URL}employer_signup`, formData);\n  return response.data;\n};\n/*Employer Login */\nexport const EmployerLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  formData.append(\"remember\", props.remember);\n  const response = await axios.post(`${API_URL}employer_login`, formData);\n  return response.data;\n};\n\n/*Api to login in with linked employer*/\nexport const LinkedInLoginEmployer = async (props, type) => {\n  if (type === \"employerLogin\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with linked  employer*/\nexport const LinkedInSignupEmployer = async (props, type) => {\n  if (type === \"employerSignup\") {\n    const formData = new FormData();\n    formData.append(\"code\", props);\n    const response = await axios.post(\n      `${API_URL}api/Common_controller/linkedinLogin`,\n      formData\n    );\n    return response.data;\n  }\n};\n\n/*Api to login in with Social linkes in employer login*/\nexport const SocialCompanyLogin = async (token, email, name, picture, type) => {\n  const response = await axios.post(\n    `${API_URL}company/signupLoginViaSocialMedia`,\n    {\n      token: token,\n      email: email,\n      name: name,\n      picture: picture,\n      type: type,\n    }\n  );\n  return response.data;\n};\n\n/*Employer Reset password Api */\nexport const EmployerResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}company/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Employer Forgot passsword api */\nexport const EmployerForgotPassword = async (props) => {\n  const response = await axios.post(`${API_URL}company/forgetPassword`, {\n    forget_email: props.forget_email,\n  });\n  return response.data;\n};\n\n/*Response List Api */\nexport const GetAllResponse = async (\n  job_id,\n  filter_skill,\n  filter_experience,\n  search,\n  page,\n  limit,\n  column,\n  sort,\n  time,\n  lima,\n  status,\n  employee_id,\n  reserved_status\n) => {\n  const response = await axios.post(\n    `${API_URL}getJobResponse`,\n    {\n      job_id: job_id,\n      user_type: user_type,\n      page: page,\n      limit: limit,\n      filter_experience: filter_experience,\n      filter_skill: filter_skill,\n      column_name: column,\n      sort_order: sort,\n      search: search,\n      filter_by_time: time,\n      filter_lmia_status: lima,\n      filter_employee_status: status,\n      filter_employee_id: employee_id,\n      filter_is_reserve: reserved_status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Delete Response api */\nexport const DeletRespone = async (apply_id, employee_id) => {\n  const response = await axios.post(\n    `${API_URL}deleteApplyJob`,\n    {\n      apply_id: apply_id,\n      employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get all job data */\nexport const GetAllJobs = async (\n  search,\n  location,\n  category,\n  skill,\n  job,\n  page,\n  limit,\n  column_name,\n  sort_order,\n  company,\n  time,\n  id,\n  selfValue,\n  adminValue,\n  reserved,\n  // employeeSkill,\n  cid,\n  manager_id\n) => {\n  const response = await axios.post(\n    Token ? `${API_URL}getAllJobs` : `${API_URL}common/getJobs`,\n    {\n      filter_category_id: category,\n      filter_job_swap: job,\n      filter_keyskill: skill,\n      filter_location: location,\n      page: page,\n      search: search ? search : company,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n      filter_by_time: time,\n      job_id: id,\n      // filter_company_name: company,\n      filter_applied_by_self: selfValue,\n      filter_applied_by_admin: adminValue,\n      filter_reserved_employee: reserved,\n      // employee_skills: employeeSkill,\n      filter_company_id: cid,\n      manager_id: manager_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Add Job  Api */\nexport const AddJob = async (props) => {\n  const response = await axios.put(`${API_URL}addJobs`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Employer List Api */\nexport const getAllEmployer = async (\n  industry,\n  corporation,\n  search,\n  page,\n  limit,\n  column,\n  sort,\n  time\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllEmployer`,\n    {\n      filter_industry: industry,\n      filter_corporation: corporation,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n      filter_by_time: time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Employer Details Api */\nexport const EmployerDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"company_id\", user_type === \"company\" ? employer_id : props);\n  const response = await axios.post(\n    `${API_URL}getEmployer`,\n    { company_id: user_type === \"company\" ? employer_id : props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Employer / Company Api */\nexport const AddCompany = async (props) => {\n  const response = await axios.put(`${API_URL}company_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Add Employer Contact Api */\nexport const AddContact = async (props) => {\n  const response = await axios.put(`${API_URL}contact_detail`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Add Employer KYC Api */\nexport const AddKyc = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}company_kyc_detail`,\n    {\n      company_id: id,\n      address: props.address,\n      city: props.city,\n      country: props.country,\n      document: props.document,\n      fax_number: props.fax_number,\n      gstin: props.gstin,\n      name: props.name,\n      pan_date: props.pan_date,\n      pan_no: props.pan_no,\n      pincode: props.pincode,\n      state: props.state,\n      tan_number: props.tan_number,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Employer Api */\nexport const DeleteEmployer = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deleteEmployer/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Delete Job Api */\nexport const DeleteJob = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deletejob/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Get Interview list api */\nexport const getInterview = async (\n  job_id,\n  employee_id,\n  search,\n  page,\n  column,\n  limit,\n  sort,\n  time,\n  status,\n  cid\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getInterview`,\n    {\n      search: search,\n      column_name: column,\n      sort_order: sort,\n      page: page,\n      limit: limit,\n      job_id: job_id,\n      employee_id: employee_id,\n      filter_by_time: time,\n      filter_by_status: status,\n      filter_by_company_id: cid,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data.data;\n};\n\n/*Add interview Shedual Api */\nexport const AddInterviewSchedule = async (props, employee_id, job_id) => {\n  // /job_detail(props.state, employee_id, job_id);\n  const response = await axios.post(\n    `${API_URL}admin/addUpdateInterview`,\n    {\n      job_id: job_id,\n      employee_id: employee_id,\n      interview_date: props.interview_date,\n      created_by_admin: admin_id,\n      interview_status: props.interview_status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get lmia list Api */\nexport const GetEmployeeByLima = async (\n  id,\n  search,\n  status,\n  page,\n  limit,\n  col,\n  ord,\n  time,\n  employee_id\n) => {\n  const response = await axios.post(\n    `${API_URL}company/getLmia`,\n    {\n      lmia_status: status,\n      search: search,\n      filter_by_job_id: id,\n      page: page,\n      limit: limit,\n      sort_order: ord,\n      column_name: col,\n      filter_by_time: time,\n      filter_employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add LIMA Api */\nexport const AddLimia = async (props, employee_id, job_id) => {\n  // (props);\n  const response = await axios.put(\n    `${API_URL}admin/addUpdateLmia`,\n    {\n      job_id: job_id,\n      employee_id: employee_id,\n      lmia_status: props.lmia_status,\n      apply_id: props.apply_id,\n      // completion_time: props.completion_time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Function get lima substage of empolyee */\nexport const GetLimaSubStages = async (id) => {\n  const response = await axios.post(\n    `${API_URL}/getLmiaSubstagesEmployee`,\n    {\n      lmia_id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Function get lima substage of empolyee */\nexport const GetJobLimaSubStages = async (id, status) => {\n  const response = await axios.post(\n    `${API_URL}/getLmiaSubstagesjob`,\n    {\n      job_id: id,\n      lima_status: status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*FUnction to add update lmia sub stage of employee */\nexport const AddUpdateEmployeeLmiaSubStage = async (props) => {\n  const response = await axios.put(\n    `${API_URL}addUpdateLmiaSubstagesEmployee`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*FUnction to Delete lmia sub stage of employee */\nexport const deleteLmiaSubstageEmployee = async (id) => {\n  const response = await axios.post(\n    `${API_URL}/deleteLmiaSubstageEmployee`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*FUnction to add update lmia sub stage  of job*/\nexport const AddUpdateJobLmiaSubStage = async (props) => {\n  const response = await axios.put(\n    `${API_URL}addUpdateLmiaSubstagesJob`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*FUction to delete lmiasub stage */\nexport const deleteLmiaSubstageJob = async (id) => {\n  const response = await axios.post(\n    `${API_URL}/deleteLmiaSubstageJob`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get Interview list api */\nexport const getFollowupLastData = async (page, column, limit, sort, time) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllLastFollowup`,\n    {\n      column_name: column,\n      sort_order: sort,\n      page: page,\n      limit: limit,\n      filter_by_time: time,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\nexport const getLMIAstatus = async (props) => {\n  const response = await axios.post(\n    `${API_URL}company/getLmia`,\n    { lmia_status: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get list of the Document */\nexport const GetEmployerDocumentList = async (id, type) => {\n  const response = await axios.post(\n    `${API_URL}company/getDocumentsUploaded`,\n    {\n      company_id: id,\n      type: type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to upload document*/\nexport const UploadEmployerDocument = async (id, type, doc, docId, docName) => {\n  const response = await axios.put(\n    `${API_URL}company/documentsUpload `,\n    {\n      company_id: id,\n      type: type,\n      document_file: doc,\n      is_varify: \"0\",\n      id: docId,\n      document_name: docName,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to verify Applicants document */\nexport const VarifyEmployerDocument = async (id, verify) => {\n  const response = await axios.put(\n    `${API_URL}company/isVarify `,\n    {\n      is_varify: verify,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n// ADMIN'S API\n/*Get Summary Count Api */\nexport const getSummaryCount = async () => {\n  const response = await axios.get(`${API_URL}admin/getSummaryCounts`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data.data;\n};\n\n/*Admin login Api */\nexport const AdminLogin = async (props) => {\n  const formData = new FormData();\n  formData.append(\"email\", props.email);\n  formData.append(\"password\", props.password);\n  const response = await axios.post(`${API_URL}admin_login`, formData);\n  return response.data;\n};\n/*Admin Forgot password Api */\nexport const AdminForgotPasswordApi = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/forgetPassword`,\n    { forget_email: props.forget_email },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Admin Reset password Api */\nexport const AdminResetPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}admin/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Admin Notification List Api */\nexport const getAllAdminNotification = async () => {\n  const response = await axios.get(`${API_URL}common/getNotifications`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\nexport const getAllMentionNotification = async (loginuserid, id) => {\n  console.log(loginuserid, id);\n  const response = await axios.post(\n    `${API_URL}common/getMentionNotifications`,\n    {\n      from_id: loginuserid,\n      employee_id: id,\n      type: \"mention_document\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Read Admin Notification Api */\nexport const ReadNotification = async (props) => {\n  const response = await axios.put(\n    `${API_URL}common/isReadNotification`,\n    { id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Admin List Api */\nexport const getallAdminData = async (\n  type,\n  search,\n  page,\n  limit,\n  column,\n  sort\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getAllAdmin`,\n    {\n      filter_admin_type: type,\n      page: page,\n      search: search,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Admin List Api */\nexport const getAllFollowUpData = async (\n  job,\n  company,\n  experience,\n  search,\n  page,\n  limit,\n  column,\n  sort\n) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getFollowupView`,\n    {\n      filter_job_type: job,\n      filter_company_name: company,\n      filter_experience: experience,\n      page: page,\n      search: search,\n      limit: limit,\n      column_name: column,\n      sort_order: sort,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n\n/*Job Category List Api */\nexport const getAllJobsCategory = async (\n  level,\n  type,\n  search,\n  page,\n  limit,\n  column_name,\n  sort_order\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getAllJobsCategory`,\n    {\n      parent_id: level,\n      filter_category_type: type,\n      search: search,\n      page: page,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Job Employee Api */\nexport const DeleteJobEmployee = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deleteEmployee/${props}`,\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/*Add Job Category Api */\nexport const AddJobCategory = async (props) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/addCategory`,\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Job Category Api */\nexport const DeleteJobCategory = async (props) => {\n  const response = await axios.delete(\n    `${API_URL}deletejobCategory/${props}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    },\n    props\n  );\n  return response.data;\n};\n\n/* Admin Detail Api */\nexport const AdminDetails = async (props) => {\n  const formData = new FormData();\n  formData.append(\"admin_id\", props);\n  const response = await axios.post(\n    `${API_URL}/${user_type}/getAdmin`,\n    { admin_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Admin Api */\nexport const AddAdmin = async (props) => {\n  const response = await axios.put(`${API_URL}${user_type}/addAdmin`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Get Filter Api */\nexport const GetFilter = async (props) => {\n  const response = await axios.post(`${API_URL}admin/getFilterList`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response;\n};\n\n/*Add Filters Api */\nexport const AddFIlter = async (props, id) => {\n  const response = await axios.put(\n    `${API_URL}${user_type}/addUpdatefilterList`,\n    { id: id, json_item: props.json_item },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Filter Api */\nexport const DeleteFilter = async (pId, cId) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteFilterListItem`,\n    { id: pId, json_item_id: cId },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Delete Admin Api */\nexport const DeleteAdmin = async (props) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/deleteAdmin`,\n    { admin_id: props },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Add Aplicant's Followup Api */\nexport const AddFollowup = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/addFollowUpEmployee`,\n    {\n      admin_id: admin_id,\n      // job_id: props.jobId,\n      employee_id: props.employee_id,\n      remark: props.remark,\n      next_date: props.next_followup_date,\n      subject: props.subject,\n      status: props.status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*get Followup single data Api */\nexport const getSingleFollowup = async (\n  employee_id,\n  column_name,\n  sort_order,\n  page,\n  limit,\n  status,\n  search /*, job_id*/\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getFollowUpEmployee`,\n    {\n      /*job_id: job_id,*/ employee_id: employee_id,\n      column_name: column_name,\n      sort_order: sort_order,\n      page: page,\n      status: status,\n      limit: limit,\n      search: search,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n/*get Followup single data Api */\nexport const getSingleCompanyFollowup = async (\n  company_id,\n  column_name,\n  sort_order,\n  page,\n  limit,\n  status,\n  search\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getFollowUpEmployer`,\n    {\n      company_id: company_id,\n      column_name: column_name,\n      sort_order: sort_order,\n      page: page,\n      status: status,\n      limit: limit,\n      search: search,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n\n  return response.data;\n};\n\n/*Add Comapany's Followup Api */\nexport const AddCompanyFollowup = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/addFollowUpEmployer`,\n\n    // // \"admin_id\":\"2\",\n    // // \"job_id\":\"1\",\n    // company_id: props.company_id,\n    // remark: props.remark,\n    // next_date: props.next_date,\n    // subject: props.subject,\n    props,\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Get Admin token to view ass other admin */\nexport const GetAdminToken = async (props) => {\n  const response = await axios.post(\n    `${API_URL}${user_type}/getToken`,\n    {\n      admin_id: props,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get email template */\nexport const GetAllEmailTemplate = async (props) => {\n  const response = await axios.post(`${API_URL}/common/getEmailTemplate`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n/*Api to get email Pagination */\nexport const GetAllEmailPagination = async (email, search) => {\n  const response = await axios.post(\n    `${API_URL}/common/paginationReadOutlookEmail`,\n    {\n      filter_by_email_id: email,\n      search: \"\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to update email template */\nexport const AddUpdateEmailTemplate = async (props) => {\n  const response = await axios.put(\n    `${API_URL}/common/addUpdateEmailTemplate`,\n    {\n      id: props.id,\n      email_type: props.email_type,\n      subject: props.subject,\n      message: props.message,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Test email template */\nexport const TestEmail = async (props) => {\n  // (props);\n  const response = await axios.post(\n    `${API_URL}/common/emailTemplateTest`,\n    {\n      email_id: props.email_id,\n      email_template_id: props.email_template_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/* Function to get get email authentication*/\nexport const GeEmailAuthenticationData = async () => {\n  const response = await axios.get(\n    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n    `${API_URL}common/outlookAuthUrl`,\n    {\n      // type: emailType,\n      // email_id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get single  email preveiw */\nexport const GetPreviewEmail = async (emailType, id) => {\n  const response = await axios.post(\n    // `http://192.168.29.92/canjobs_latest/common/openEmail`,\n    // `http://192.168.29.92/canjobs_latest/common/openSentEmail`,\n    `${API_URL}canjobs_latest/common/openSentEmail`,\n    {\n      type: emailType,\n      email_id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get single  email preveiw Attchment */\nexport const GetPreviewAttchmentEmail = async (emailType, id) => {\n  const response = await axios.post(\n    `${API_URL}common/readOutlookEmailAttachment`,\n    {\n      msg_id: id,\n      inbox_type: emailType,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to read email */\n\nexport const ReadEmail = async (page, limit, search, email) => {\n  console.log(page, limit, search, email);\n  const response = await axios.post(\n    // `http://192.168.29.92/canjobs_latest/common/readEmail`,\n    // `${API_URL}canjobs_latest/common/readEmail`,\n    `${API_URL}common/readOutlookEmail`,\n    {\n      // email_id: id,\n      page: page,\n      count: limit,\n      filter_by_email_id: email,\n      search: search,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to read Sent email */\nexport const ReadSentEmail = async (page, limit, search, email) => {\n  const response = await axios.post(\n    // `http://192.168.29.92/canjobs_latest/common/readSentEmail`,\n    // `${API_URL}canjobs_latest/common/readSentEmail`,\n    `${API_URL}common/readSentOutlookEmail`,\n\n    {\n      // email_id: id,\n      page: page,\n      count: limit,\n      filter_by_email_id: email,\n      search: search,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get the job filterd by employee id if it is applied or not */\nexport const GetEmployeeFilterJob = async (\n  id /* skill*/,\n  search,\n  location,\n  category,\n  skill,\n  job,\n  page,\n  limit,\n  column_name,\n  sort_order,\n  company\n) => {\n  const response = await axios.post(\n    `${API_URL}admin/getAllJobsViewAdmin`,\n    {\n      employee_id: id,\n      filter_keyskill: skill,\n      filter_category_id: category,\n      filter_job_swap: job,\n      filter_location: location,\n      page: page,\n      search: search ? search : company,\n      limit: limit,\n      column_name: column_name,\n      sort_order: sort_order,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n\n/*Api to Reserved employee for a job */\nexport const ReservedEmployeeForJob = async (id, employee_id, status) => {\n  const response = await axios.put(\n    `${API_URL}setEmployeeReserve`,\n    {\n      apply_id: id,\n      is_reserve: status,\n      employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Remove Reserved employee for a job */\nexport const RemoveReservedEmployeeForJob = async (apply_id, employee_id) => {\n  const response = await axios.post(\n    `${API_URL}removeEmployeeReserve`,\n    {\n      apply_id: apply_id,\n      employee_id: employee_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Send email to the user and company*/\nexport const SendEmail = async (data, FileList) => {\n  console.log(FileList);\n  const response = await axios.post(\n    `${API_URL}sendEmailTest`,\n    // {\n    //   to: data.email,\n    //   subject: data.subject,\n    //   body: data.description,\n    //   cc_email: data.adminemail,\n    // }\n    {\n      to: data.email,\n      subject: data.subject,\n      body: data.description,\n      cc_email: data.adminemail,\n      attachments: FileList || \"\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get manager's team list*/\nexport const GetManagerTeam = async (manager_id) => {\n  const response = await axios.post(\n    `${API_URL}manager/getTeam`,\n    {\n      manager_id: manager_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to Add executive to the manager*/\nexport const AddExecutiveTeam = async (manager_id, executive_id) => {\n  const response = await axios.put(\n    `${API_URL}manager/addUpadateTeam`,\n    {\n      manager_id: manager_id,\n      executive_id: executive_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Remove executive to the manager*/\nexport const RemoveExecutiveTeam = async (executive_id) => {\n  const response = await axios.put(\n    `${API_URL}manager/deleteTeamMember`,\n    {\n      executive_id: executive_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to Reasign job to manager*/\nexport const ReassignJobTOManager = async (manager_id, job_id) => {\n  const response = await axios.put(\n    `${API_URL}admin/assignJobToManager`,\n    {\n      manager_id: manager_id,\n      job_id: job_id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get employee setting */\nexport const GetEmployeeSetting = async () => {\n  const response = await axios.post(\n    `${API_URL}employee/getEmployeeSetting`,\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get employer setting */\nexport const GetEmployerSetting = async () => {\n  const response = await axios.post(\n    `${API_URL}employer/getEmployerSetting`,\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to get Admin setting */\nexport const GetAdminrSetting = async () => {\n  const response = await axios.post(`${API_URL}admin/getAdminSetting`, \"\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n/*Api to get Parent setting */\nexport const GetParentSetting = async (data) => {\n  const response = await axios.post(\n    `${API_URL}setting/getParentSetting`,\n    { type: data },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to Add permission to employeE*/\nexport const AddEmployeePermission = async (data) => {\n  const response = await axios.put(\n    `${API_URL}employee/updateEmployeeSetting`,\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to Add permission to employer*/\nexport const AddEmployerPermission = async (data) => {\n  const response = await axios.put(\n    `${API_URL}employer/updateEmployerSetting`,\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to Add permission to admin*/\nexport const AddAdminPermission = async (data) => {\n  const response = await axios.put(`${API_URL}admin/updateAdminSetting`, data, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n/*Api to Add permission by admin to employee and employer*/\nexport const AddChildPermission = async (data) => {\n  const response = await axios.put(\n    `${API_URL}setting/updateParentSetting`,\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n//Agent\n/*Api to login agent*/\nexport const LoginAgent = async (state) => {\n  const formData = new FormData();\n  formData.append(\"email\", state.email);\n  formData.append(\"password\", state.password);\n  const response = await axios.post(`${API_URL}agent/login`, formData);\n  return response.data;\n};\n/*Api to Signup agent*/\nexport const SignupAgent = async (state) => {\n  const formData = new FormData();\n  formData.append(\"email\", state.email);\n  formData.append(\"password\", state.password);\n  formData.append(\"name\", state.name);\n  formData.append(\"otp\", state.otp);\n  const response = await axios.post(`${API_URL}agent/signup`, formData);\n  return response.data;\n};\n/*Api to Forgot password agent*/\nexport const ForgotAgentPasswordApi = async (props) => {\n  const response = await axios.post(`${API_URL}agent/forgetPassword`, {\n    forget_email: props.forget_email,\n  });\n  return response.data;\n};\n/*Api to Reset password agent*/\nexport const ResetAgentPasswordApi = async (props) => {\n  const response = await axios.put(`${API_URL}agent/resetPassword`, props, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Api to Add update agent*/\nexport const AddUpdateAgent = async (data) => {\n  const response = await axios.put(`${API_URL}agent/addUpadateAgent`, data, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Api to Get agent*/\nexport const GetAgent = async (id, search, page, limit, column, Order) => {\n  const response = await axios.post(\n    `${API_URL}agent/getAgent`,\n    {\n      page: page,\n      search: search,\n      limit: limit,\n      column_name: column,\n      sort_order: Order,\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to delete agent */\nexport const DeleteAgent = async (id) => {\n  const response = await axios.post(\n    `${API_URL}agent/deleteAgent`,\n    {\n      id: id,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Api to get agent json list */\nexport const GetAgentJson = async () => {\n  const response = await axios.post(`${API_URL}filterList/agentList.json    `, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: Token,\n    },\n  });\n  return response.data;\n};\n\n/*Payment Api's */\nexport const CreateRazorpay = async (price, currency) => {\n  const response = await axios.post(\n    `${API_URL}payment/creatRazorpayOrder`,\n    {\n      price: price,\n      currency: currency,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n  return response;\n};\n/*Razor pay payment api */\nexport const AddRazorpay = async (amount, response, role) => {\n  await axios.post(\n    `${API_URL}payment/addRazorPayReciept`,\n    {\n      amount: amount,\n      razorpayPaymentId: response.razorpay_payment_id,\n      razorpay0rderId: response.razorpay_order_id,\n      razorpaysighature: response.razorpay_signature,\n      user_role: role,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n  return response;\n};\n/*Stripe payment api */\nexport const AddStripePalpay = async (amount) => {\n  const response = await axios.post(\n    `${API_URL}payment/stripe-create-payment-intent`,\n    {\n      amount: amount,\n      currency: \"usd\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n\n  return response;\n};\n/*Braintree payment api */\nexport const AddBrainTressPayment = async (amount, nonce, name) => {\n  const response = await axios.post(\n    `${API_URL}payment/payWithBraintree`,\n    {\n      amount: amount,\n      nonce: nonce,\n      first_name: name.split(\" \").shift(),\n      last_name: name.split(\" \").join(\" \"),\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n\n  return response;\n};\n/*Stripe payment api */\nexport const GetStripePaymentDetails = async (\n  id,\n  user_id,\n  user,\n  mode,\n  status\n) => {\n  const response = await axios.post(\n    `${API_URL}payment/get-stripe-payment-detaile`,\n    {\n      payment_intent_id: id,\n      id: user_id,\n      payment_mode: mode,\n      user_type: user,\n      status: status,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n\n  return response;\n};\n/*Add payment to database api */\nexport const AddPaymentToDataBase = async (\n  data,\n  user_id,\n  amount,\n  mode,\n  user\n) => {\n  const response = await axios.post(\n    `${API_URL}payment/capturePayment`,\n    {\n      id: user_id,\n      order_id: data.orderID,\n      user_type: user,\n      payment_id: data.paymentID,\n      amount: amount,\n      status: \"success\",\n      payment_mode: mode,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    }\n  );\n  return response;\n};\n/*Api to get payment list */\nexport const GetPaymentList = async (id, user, payType) => {\n  const response = await axios.post(\n    `${API_URL}payment/getPaymentReciept`,\n    {\n      user_id: id,\n      user_role: user,\n      pay_by_admin: payType,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n/*Api to add cash paymet by admin  */\n\nexport const AddCashpayment = async (data) => {\n  const response = await axios.put(\n    `${API_URL}payment/addPaymentReciept`,\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response.data;\n};\n\n/*Global Search API */\nexport const GlobalSearchResult = async (search) => {\n  const response = await axios.post(\n    `${API_URL}common/globalSearch`,\n    { search },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n/*Global Search API */\nexport const getActivityLog = async (\n  page,\n  user_id,\n  user_type,\n  action_id,\n  action_type,\n  limit,\n  stackHolder_id,\n  stackHolder_type\n) => {\n  // console.log(\"Props\" + props.user_id + props.user_type);\n  const response = await axios.post(\n    `${API_URL}getActivityLog`,\n    {\n      page: page,\n      user_id: user_id,\n      user_type: user_type,\n      action_id: action_id,\n      action_type: action_type,\n      column_name: \"created_at\",\n      sort_order: \"DESC\",\n      limit: limit,\n      stackHolder_id: stackHolder_id,\n      stackHolder_type: stackHolder_type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n// Api fucntion to get Credential Data\nexport const GetCredentialData = async (id, type) => {\n  // console.log(\"Props\" + props.user_id + props.user_type);\n  const response = await axios.post(\n    `${API_URL}admin/getServiceCredential`,\n    {\n      id: id,\n      type: type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n// Api fucntion to Update Credential Data\nexport const UpdateCredentialApi = async (props) => {\n  const response = await axios.post(\n    `${API_URL}admin/addUpdateServiceCredential`,\n\n    props,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: Token,\n      },\n    }\n  );\n  return response;\n};\n"
        }
    ]
}