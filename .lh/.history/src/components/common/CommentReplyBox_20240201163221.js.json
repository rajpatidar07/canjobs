{
    "sourceFile": ".history/src/components/common/CommentReplyBox_20240201163221.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710503309481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710503309481,
            "name": "Commit-0",
            "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nexport default function CommentReplyBox({\n  commentsReplyList,\n  commentItem,\n  replyComment,\n  handleInputChange,\n  filteredEmails,\n  handleEmailClick,\n  handleEmailMouseOver,\n  ReplyAnnotation,\n}) {\n  return (\n    <div className=\"reply_box_container mx-5 \">\n      {/* Display replies only if task_id matches */}\n      {(commentsReplyList || []).map(\n        (replyItem, replyIndex) =>\n          // Only render the reply if task_id matches the comment's id\n          replyItem.task_id === commentItem.id && (\n            <div key={replyIndex}>\n              {/* Display reply message */}\n              {\n                <div className=\"p-3 bg-white rounded mb-1\">\n                  {replyItem.msg && (\n                    <div>\n                      \n                      <div className=\"d-flex justify-content-between align-items-center text-dark\">\n                        <h6 className=\"font-size-4 text-break m-0 text-capitalize\">\n                          {replyItem.receiver_name}\n                        </h6>\n                        <i className=\"font-size-2\">\n                          {moment(replyItem.updated_at).format(\"HH:mm D MMM\")}\n                        </i>\n                      </div>\n                      <p className=\"m-0 font-size-4\">{replyItem.msg}</p>\n                    </div>\n                  )}\n                  {/* Display mention */}\n                  {replyItem.mention && (\n                    <div\n                      style={{\n                        borderRadius: \"15px\",\n                        // padding: \"5px 10px\",\n                        // margin: \"5px 0\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Link\n                        className=\"text-break\"\n                        to={`mailto:${replyItem.mention}`}\n                        style={{ marginLeft: \"5px\" }}\n                      >\n                        {`${replyItem.mention}`}\n                      </Link>\n                    </div>\n                  )}\n                </div>\n              }\n            </div>\n          )\n      )}\n      <form\n        className=\"comment-form x-auto flex-start\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          ReplyAnnotation(commentItem);\n        }}\n      >\n        <div className=\"comment-input-container p-2 bg-white rounded\">\n          <div className=\"reply_box position-relative\">\n            <input\n              type=\"text\"\n              value={replyComment || \"\"}\n              onChange={(e) => handleInputChange(e, \"reply\")}\n              placeholder=\"Comments or add others with @\"\n              className=\"comment-input\"\n              onSubmit={() => {\n                ReplyAnnotation(commentItem);\n              }}\n            />\n            <button\n              type=\"button\"\n              onClick={() => {\n                ReplyAnnotation(commentItem);\n              }}\n              className=\"btn btn-primary border-0 rounded reply_btn\"\n            >\n              {\">>\"}\n            </button>\n            {/* <a\n              className=\"border-0 bg-white rounded cancel-btn text-dark\"\n              onClick={() => setReplyCommentClick()}\n              type=\"button\"\n            >\n              cancel\n            </a> */}\n          </div>\n          {filteredEmails.length > 0 && (\n            <ul className=\"email-suggestions\">\n              {filteredEmails.map((email, index) => (\n                <li\n                  key={index}\n                  onClick={() => handleEmailClick(email.email, \"reply\")}\n                  onMouseOver={() => handleEmailMouseOver(email.email, \"reply\")}\n                  className=\"email-suggestion-item text-dark\"\n                >\n                  <strong>{email.name}</strong>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n"
        }
    ]
}