{
    "sourceFile": ".history/src/components/common/DocumentList_20240207164253.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710503309481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710503309481,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport { CiTrash, CiEdit } from \"react-icons/ci\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Accordion } from \"react-bootstrap\";\nexport default function DocumentList({\n  user_type,\n  docData,\n  setShowMoreDocType,\n  setDocTypData,\n  setDocName,\n  setDocId,\n  setOtherDoc,\n  setHide,\n  setShowSaveDoc,\n  setFilteredEmails,\n  setAnnotationMode,\n  setReplyCommentClick,\n  setDocFile,\n  docName,\n  docId,\n  setEditName,\n  OnDeleteDoc,\n  textReplaceFunction,\n  setBulkUpload,\n  SaveBulkDocument,\n  editName,\n  setDocFileBase,\n  isAnnotationMode,\n  setSelecttDocTypeName,\n  setApiCall,\n  docAllTypes,\n}) {\n  const [editDocName, setEditDocName] = useState(docName);\n  const [activeAccordion, setActiveAccordion] = useState(null);\n\n  const handleAccordionToggle = (type) => {\n    setActiveAccordion(activeAccordion === type ? null : type);\n    // setApiCall(true);\n    setSelecttDocTypeName(type);\n  };\n  console.log(docData);\n  return (\n    <div\n      className={`${\n        user_type === \"admin\" ? \"col-md-2\" : \"col-md-4\"\n      } p-0 border-right pb-7`}\n    >\n      <h5 className=\"pl-5 pt-5 d-flex justify-content-between align-items-center\">\n        Document List\n      </h5>\n\n      {/* Documents type list */}\n\n      <div className=\"doc_list\">\n        {docAllTypes.length === 0 ? (\n          <div>\n            <p className=\"bg-white text-center\" colSpan={1}>\n              No Data Found\n            </p>\n          </div>\n        ) : (\n          (docAllTypes || []).map((typeitem, index) => (\n            <Accordion\n              className=\"w-100 p-0 m-0 border-0\"\n              activeKey={activeAccordion}\n              onSelect={() => handleAccordionToggle(typeitem.type)}\n              flush\n            >\n              <Accordion.Item\n                eventKey={index}\n                className=\"card w-100 rounded-6 overflow-hidden border-0\"\n              >\n                <Accordion.Header className=\"w-100 m-0 border-0 bg-white accordian_btn_design\">\n                  <div className=\"d-flex executive_box gx-2 w-100 justify-content-between align-items-center\">\n                    <div className=\"text-left mb-0 d-flex profile_name_box \">\n                      <h6 className=\"m-0 text-black-3 font-weight-bold d-block text-capitalize ml-4\">\n                        {typeitem.type}\n                      </h6>\n                    </div>\n                  </div>\n                </Accordion.Header>\n                <Accordion.Body>\n                  {/* Document's  Table */}\n                  <table className=\"table font-size-3\">\n                    <thead>\n                      <tr>\n                        <th className=\"p-3\" scope=\"col\">\n                          Document\n                        </th>\n                        {/* <th className=\"p-3\" scope=\"col\">\n                  Date\n                </th> */}\n                        {/* <th className=\"p-3\" scope=\"col\"></th>\n                <th className=\"p-3\" scope=\"col\"></th> */}\n                      </tr>\n                    </thead>\n                    <tbody className=\"doc_list\">\n                      {docData.length === 0 ? (\n                        <tr>\n                          <th className=\"bg-white text-center\" colSpan={1}>\n                            No Data Found\n                          </th>\n                        </tr>\n                      ) : (\n                        (docAllTypes || []).map(\n                          (item, index) =>\n                            item.type === typeitem.type && (\n                              <tr\n                                key={index}\n                                action\n                                // active={\n                                //   docTypData.type === item.type ||\n                                //   (showMoreDocType === false && item.type === docName)\n                                // }\n                                active={\n                                  item.document_name === docName ||\n                                  docId === item.id\n                                }\n                                onClick={() => {\n                                  setShowMoreDocType(false);\n                                  setDocTypData(item);\n                                  setDocName(item.type);\n                                  setDocId(item.id);\n                                  setOtherDoc(false);\n                                  setHide(false);\n                                  setShowSaveDoc(false);\n                                  setFilteredEmails([]);\n                                  setAnnotationMode(!isAnnotationMode);\n                                  setReplyCommentClick();\n                                  setDocFile(\n                                    item.document_url +\n                                      `?v=${\n                                        new Date().getMinutes() +\n                                        new Date().getSeconds()\n                                      }`\n                                  );\n                                }}\n                                className={\n                                  item.document_name === docName ||\n                                  docId === item.id\n                                    ? \"text-capitalize bg-primary text-white position-relative\"\n                                    : \"text-capitalize position-relative\"\n                                }\n                              >\n                                <td className=\"p-3 doc_name_td\">\n                                  {editName === true && docId === item.id ? (\n                                    <div className=\"reply_box position-relative d-flex w-100\">\n                                      <input\n                                        type=\"text\"\n                                        value={\n                                          editDocName === \"\"\n                                            ? docName\n                                            : editDocName\n                                        }\n                                        className=\"form-control font-size-2 bg-primary bg-white\"\n                                        onChange={(e) => {\n                                          const key = e.target.value;\n                                          setEditDocName(key);\n                                          const newData = { [key]: \"\" };\n                                          // setDocName(key);\n                                          setDocFileBase(newData);\n                                          setBulkUpload(\"no\");\n                                        }}\n                                      />\n                                      <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                          SaveBulkDocument();\n                                        }}\n                                        className=\"btn btn-secondary rounded reply_btn doc_btn my-0 mx-2\"\n                                      >\n                                        &#x2713;\n                                      </button>\n                                      <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                          setEditName(false);\n                                        }}\n                                        className=\"btn btn-light border-0 rounded reply_btn doc_btn my-0 mx-2\"\n                                      >\n                                        x\n                                      </button>\n                                    </div>\n                                  ) : (\n                                    <>\n                                      <span>\n                                        \n                                        {textReplaceFunction(item.type)}\n                                      </span>\n                                      <p className=\"font-size-2 m-0\">\n                                        {moment(item.updated_at).format(\n                                          \"DD-MMM-YYYY\"\n                                        )}\n                                      </p>\n                                    </>\n                                  )}\n                                </td>\n                                {/* <td className=\"p-3\">\n                        {item.updated_by_name\n                          ? item.updated_by_name\n                          : item.created_by_name}\n                      </td> */}\n                                {/* <td className=\"p-3\"></td>\n                      <td className=\"p-3\">\n\n                      </td> */}\n                                <td className=\"p-3 d-flex align-items-center justify-content-end\">\n                                  {item.is_varify === \"1\" ? (\n                                    // <span className=\"verified_doc\">\n                                    //   <img className=\"w-100\" src={Verified} alt=\"\" />\n                                    // </span>\n                                    <span>&#x2713;</span>\n                                  ) : (\n                                    \"\"\n                                  )}\n                                  <Link\n                                    onClick={() => {\n                                      setEditName(true);\n                                      // setEditDocName(item.type);\n                                    }}\n                                    className=\"text-dark\"\n                                    title=\"Edit Name\"\n                                  >\n                                    <CiEdit\n                                      style={{\n                                        color:\n                                          item.type === docName\n                                            ? \"white\"\n                                            : \"black\",\n                                        fontSize: \"18px\",\n                                      }}\n                                    />\n                                  </Link>\n                                  <Link\n                                    onClick={() => OnDeleteDoc(item.id)}\n                                    title=\"Delete Document\"\n                                  >\n                                    <CiTrash\n                                      style={{\n                                        color:\n                                          item.type === docName\n                                            ? \"white\"\n                                            : \"black\",\n                                        fontSize: \"18px\",\n                                      }}\n                                    />\n                                  </Link>\n                                </td>\n                              </tr>\n                            )\n                        )\n                      )}\n                    </tbody>\n                  </table>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          ))\n        )}\n      </div>\n      {/* <ListGroup defaultActiveKey=\"#link1\">\n          {(docData || []).map((item, index) => (\n            <ListGroup.Item\n              key={index}\n              action\n              // active={\n              //   docTypData.type === item.type ||\n              //   (showMoreDocType === false && item.type === docName)\n              // }\n              active={item.type === docName}\n              onClick={() => {\n                setShowMoreDocType(false);\n                setDocTypData(item);\n                setDocName(item.type);\n                setDocId(item.id);\n                setOtherDoc(false);\n                setHide(false);\n                setShowSaveDoc(false);\n                setDocFile(\n                  item.document_url +\n                    `?v=${new Date().getMinutes() + new Date().getSeconds()}`\n                );\n              }}\n              className=\"text-capitalize\"\n            >\n              {textReplaceFunction(item.type)}\n              {item.is_varify === \"1\" ? (\n                <span className=\"verified_doc\">\n                  <img className=\"w-100\" src={Verified} alt=\"\" />\n                </span>\n              ) : null}\n            </ListGroup.Item>\n          ))}\n          <ListGroup.Item\n            className={\n              user_type === \"company\" || user_type === \"admin\"\n                ? \"bg-secondary text-white\"\n                : \"d-none\"\n            }\n            onClick={() => {\n              setShowMoreDocType(true);\n              setDocTypData(\"\");\n              setDocId(\"\");\n              setOtherDoc(false);\n              setDocFile(\"\");\n              setHide(false);\n              setShowSaveDoc(false);\n            }}\n          >\n            <b>+ Add New Documents</b>\n          </ListGroup.Item>\n        </ListGroup> */}\n    </div>\n  );\n}\n"
        }
    ]
}