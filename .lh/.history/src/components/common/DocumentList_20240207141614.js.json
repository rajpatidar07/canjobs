{
    "sourceFile": ".history/src/components/common/DocumentList_20240207141614.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710503309481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710503309481,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport { CiTrash, CiEdit } from \"react-icons/ci\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nexport default function DocumentList({\n  user_type,\n  docData,\n  setShowMoreDocType,\n  setDocTypData,\n  setDocName,\n  setDocId,\n  setOtherDoc,\n  setHide,\n  setShowSaveDoc,\n  setFilteredEmails,\n  setAnnotationMode,\n  setReplyCommentClick,\n  setDocFile,\n  docName,\n  docId,\n  setEditName,\n  OnDeleteDoc,\n  textReplaceFunction,\n  setBulkUpload,\n  SaveBulkDocument,\n  editName,\n  setDocFileBase,\n  isAnnotationMode,\n}) {\n  const [editDocName, setEditDocName] = useState(docName);\n\n  return (\n    <div\n      className={`${\n        user_type === \"admin\" ? \"col-md-2\" : \"col-md-4\"\n      } p-0 border-right pb-7`}\n    >\n      <h5 className=\"pl-5 pt-5 d-flex justify-content-between align-items-center\">\n        Document List\n      </h5>\n\n      {/* Documents type list */}\n      <table className=\"table font-size-3\">\n        <thead>\n          <tr>\n            <th className=\"p-3\" scope=\"col\">\n              Document\n            </th>\n            {/* <th className=\"p-3\" scope=\"col\">\n                  Date\n                </th> */}\n            {/* <th className=\"p-3\" scope=\"col\"></th>\n                <th className=\"p-3\" scope=\"col\"></th> */}\n          </tr>\n        </thead>\n        <tbody className=\"doc_list\">\n          {docData.length === 0 ? (\n            <tr>\n              <th className=\"bg-white text-center\" colSpan={3}>\n                No Data Found\n              </th>\n            </tr>\n          ) : (\n            (docData || []).map((item, index) => (\n              <div class=\"accordion\" id=\"accordionExample\">\n                <div class=\"accordion-item\">\n                  <h2 class=\"accordion-header\" id=\"headingOne\">\n                    <button\n                      class=\"accordion-button\"\n                      type=\"button\"\n                      data-bs-toggle=\"collapse\"\n                      data-bs-target=\"#collapseOne\"\n                      aria-expanded=\"true\"\n                      aria-controls=\"collapseOne\"\n                    >\n                      Accordion Item #1\n                    </button>\n                  </h2>\n                  <div\n                    id=\"collapseOne\"\n                    class=\"accordion-collapse collapse show\"\n                    aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\"\n                  >\n                    <div class=\"accordion-body\">\n                      <strong>This is the first item's accordion body.</strong>\n                      It is shown by default, until the collapse plugin adds the\n                      appropriate classes that we use to style each element.\n                      These classes control the overall appearance, as well as\n                      the showing and hiding via CSS transitions. You can modify\n                      any of this with custom CSS or overriding our default\n                      variables. It's also worth noting that just about any HTML\n                      can go within the <code>.accordion-body</code>, though the\n                      transition does limit overflow.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              //   <tr\n              //     key={index}\n              //     action\n              //     // active={\n              //     //   docTypData.type === item.type ||\n              //     //   (showMoreDocType === false && item.type === docName)\n              //     // }\n              //     active={item.type === docName || docId === item.id}\n              //     onClick={() => {\n              //       setShowMoreDocType(false);\n              //       setDocTypData(item);\n              //       setDocName(item.type);\n              //       setDocId(item.id);\n              //       setOtherDoc(false);\n              //       setHide(false);\n              //       setShowSaveDoc(false);\n              //       setFilteredEmails([]);\n              //       setAnnotationMode(!isAnnotationMode);\n              //       setReplyCommentClick();\n              //       setDocFile(\n              //         item.document_url +\n              //           `?v=${new Date().getMinutes() + new Date().getSeconds()}`\n              //       );\n              //     }}\n              //     className={\n              //       item.type === docName || docId === item.id\n              //         ? \"text-capitalize bg-primary text-white position-relative\"\n              //         : \"text-capitalize position-relative\"\n              //     }\n              //   >\n              //     <td className=\"p-3 doc_name_td\">\n              //       {editName === true && docId === item.id ? (\n              //         <div className=\"reply_box position-relative d-flex w-100\">\n              //           <input\n              //             type=\"text\"\n              //             value={editDocName === \"\" ? docName : editDocName}\n              //             className=\"form-control font-size-2 bg-primary bg-white\"\n              //             onChange={(e) => {\n              //               const key = e.target.value;\n              //               setEditDocName(key);\n              //               const newData = { [key]: \"\" };\n              //               // setDocName(key);\n              //               setDocFileBase(newData);\n              //               setBulkUpload(\"no\");\n              //             }}\n              //           />\n              //           <button\n              //             type=\"button\"\n              //             onClick={() => {\n              //               SaveBulkDocument();\n              //             }}\n              //             className=\"btn btn-secondary rounded reply_btn doc_btn my-0 mx-2\"\n              //           >\n              //             &#x2713;\n              //           </button>\n              //           <button\n              //             type=\"button\"\n              //             onClick={() => {\n              //               setEditName(false);\n              //             }}\n              //             className=\"btn btn-light border-0 rounded reply_btn doc_btn my-0 mx-2\"\n              //           >\n              //             x\n              //           </button>\n              //         </div>\n              //       ) : (\n              //         <>\n              //           <span> {textReplaceFunction(item.type)}</span>\n              //           <p className=\"font-size-2 m-0\">\n              //             {moment(item.updated_at).format(\"DD-MMM-YYYY\")}\n              //           </p>\n              //         </>\n              //       )}\n              //     </td>\n              //     {/* <td className=\"p-3\">\n              //           {item.updated_by_name\n              //             ? item.updated_by_name\n              //             : item.created_by_name}\n              //         </td> */}\n              //     {/* <td className=\"p-3\"></td>\n              //         <td className=\"p-3\">\n\n              //         </td> */}\n              //     <td className=\"p-3 d-flex align-items-center justify-content-end\">\n              //       {item.is_varify === \"1\" ? (\n              //         // <span className=\"verified_doc\">\n              //         //   <img className=\"w-100\" src={Verified} alt=\"\" />\n              //         // </span>\n              //         <span>&#x2713;</span>\n              //       ) : (\n              //         \"\"\n              //       )}\n              //       <Link\n              //         onClick={() => {\n              //           setEditName(true);\n              //           // setEditDocName(item.type);\n              //         }}\n              //         className=\"text-dark\"\n              //         title=\"Edit Name\"\n              //       >\n              //         <CiEdit\n              //           style={{\n              //             color: item.type === docName ? \"white\" : \"black\",\n              //             fontSize: \"18px\",\n              //           }}\n              //         />\n              //       </Link>\n              //       <Link\n              //         onClick={() => OnDeleteDoc(item.id)}\n              //         title=\"Delete Document\"\n              //       >\n              //         <CiTrash\n              //           style={{\n              //             color: item.type === docName ? \"white\" : \"black\",\n              //             fontSize: \"18px\",\n              //           }}\n              //         />\n              //       </Link>\n              //     </td>\n              //   </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n      {/* <ListGroup defaultActiveKey=\"#link1\">\n          {(docData || []).map((item, index) => (\n            <ListGroup.Item\n              key={index}\n              action\n              // active={\n              //   docTypData.type === item.type ||\n              //   (showMoreDocType === false && item.type === docName)\n              // }\n              active={item.type === docName}\n              onClick={() => {\n                setShowMoreDocType(false);\n                setDocTypData(item);\n                setDocName(item.type);\n                setDocId(item.id);\n                setOtherDoc(false);\n                setHide(false);\n                setShowSaveDoc(false);\n                setDocFile(\n                  item.document_url +\n                    `?v=${new Date().getMinutes() + new Date().getSeconds()}`\n                );\n              }}\n              className=\"text-capitalize\"\n            >\n              {textReplaceFunction(item.type)}\n              {item.is_varify === \"1\" ? (\n                <span className=\"verified_doc\">\n                  <img className=\"w-100\" src={Verified} alt=\"\" />\n                </span>\n              ) : null}\n            </ListGroup.Item>\n          ))}\n          <ListGroup.Item\n            className={\n              user_type === \"company\" || user_type === \"admin\"\n                ? \"bg-secondary text-white\"\n                : \"d-none\"\n            }\n            onClick={() => {\n              setShowMoreDocType(true);\n              setDocTypData(\"\");\n              setDocId(\"\");\n              setOtherDoc(false);\n              setDocFile(\"\");\n              setHide(false);\n              setShowSaveDoc(false);\n            }}\n          >\n            <b>+ Add New Documents</b>\n          </ListGroup.Item>\n        </ListGroup> */}\n    </div>\n  );\n}\n"
        }
    ]
}