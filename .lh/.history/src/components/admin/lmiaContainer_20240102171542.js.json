{
    "sourceFile": ".history/src/components/admin/lmiaContainer_20240102171542.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1710503309779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1710503309779,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JobDetailsBox from \"../common/jobdetail\";\nimport AdminHeader from \"./header\";\nimport AdminSidebar from \"./sidebar\";\nimport AddJobModal from \"../forms/employer/job\";\nimport { GetFilter } from \"../../api/api\";\nimport { ToastContainer } from \"react-toastify\";\nimport FilterJson from \"../json/filterjson\";\nimport JobTable from \"../common/jobTable\";\nimport EmployeeHeader from \"../common/header\";\nimport EmployeeFooter from \"../common/footer\";\nfunction LimaContainer(props) {\n  /*show Modal and props state */\n  let [apiCall, setApiCall] = useState(false);\n  let [showAddJobsModal, setShowAddJobsModal] = useState(false);\n  let [showJobDetails, setShowJobDetails] = useState(false);\n  const [JobId, setJobId] = useState([]);\n  const [pageNo, setpageNo] = useState(1);\n  /*Filter and search state */\n  const [categoryFilterValue, setCategoryFilterValue] = useState(\"\");\n  const [SkillFilterValue, setSkillFilterValue] = useState(\n    props ? props.skill : \"\"\n  );\n  const [locationFilterValue, setLocationFilterValue] = useState(\"\");\n  const [jobSwapFilterValue, setJobSwapFilterValue] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [searcherror, setSearchError] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  let [Json, setJson] = useState([]);\n  let userType = localStorage.getItem(\"userType\");\n  /*Function to get the jSon */\n  const JsonData = async () => {\n    try {\n      let Json = await GetFilter();\n      if (Json.data.message === \"No data found\") {\n        setJson([]);\n      } else {\n        setJson(Json.data.data);\n      }\n      setJson(Json.data.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /*Render function to get the job */\n  useEffect(() => {\n    JsonData();\n    if ((search === \"\") === true) {\n      setSearchError(\"\");\n    }\n  }, [\n    categoryFilterValue,\n    SkillFilterValue,\n    locationFilterValue,\n    jobSwapFilterValue,\n    apiCall,\n    search,\n    company,\n  ]);\n\n  /* Function to show the Job detail data */\n  const JobDetail = (e) => {\n    setShowJobDetails(true);\n    setJobId(e);\n  };\n\n  /* Function to show the single data to update job */\n  // const editJob = (e) => {\n  //   // e.preventDefault();\n  //   setShowAddJobsModal(true);\n  //   setJobId(e);\n  // };\n  /*Function to search the Job */\n  const onSearch = (e) => {\n    const inputValue = e.target.value;\n    setSearch(inputValue);\n    setpageNo(1);\n    if (inputValue.length > 0) {\n      if (/[-]?\\d+(\\.\\d+)?/.test(inputValue.charAt(0))) {\n        setSearchError(\"Job cannot start with a number.\");\n      } else if (!/^[A-Za-z0-9 ]*$/.test(inputValue)) {\n        setSearchError(\"Cannot use special characters.\");\n      } else {\n        setSearchError(\"\");\n      }\n    } else {\n      setSearchError(\"\");\n    }\n  };\n  /*Skill Json for not having same data */\n  const Skill =\n    Json && Json.Skill\n      ? Json.Skill.filter(\n          (thing, index, self) =>\n            index === self.findIndex((t) => t.value === thing.value)\n        )\n      : [];\n  return (\n    <>\n      <div\n        className={\n          userType === \"company\"\n            ? \"bg-default-1 pt-9 pb-10 pb-xl-30 pb-13 position-relative overflow-hidden\"\n            : \"site-wrapper overflow-hidden bg-default-2\"\n        }\n      >\n        {userType === \"company\" ? (\n          <EmployeeHeader />\n        ) : (\n          <>\n            {/* <!-- Header Area --> */}\n            <AdminHeader heading={\"LIMIA status\"} />\n            {/* <!-- navbar- --> */}\n            <AdminSidebar heading={\"LIMIA status\"} />\n          </>\n        )}\n\n        <ToastContainer />\n        <div\n          className={\n            showJobDetails === false\n              ? userType === \"company\"\n                ? \"mt-16\"\n                : \"dashboard-main-container mt-16\"\n              : \"d-none\"\n          }\n          id=\"dashboard-body\"\n        >\n          <div className={`container${userType === \"admin\" ? \"-fluid\" : \"\"}`}>\n            <div className=\"mb-18\">\n              <div className=\"mb-4 align-items-center\">\n                <div className={userType === \"company\" ? \"\" : \"page___heading\"}>\n                  <h3\n                    className=\"font-size-6 mb-0 \"\n                    style={{\n                      marginTop: userType === \"company\" ? \"110px\" : null,\n                    }}\n                  >\n                    LMIA of Jobs\n                  </h3>\n                </div>\n                {/*<-- Job Search and Filter -->*/}\n                {userType === \"company\" ? null : (\n                  <div className=\"row m-0 align-items-center\">\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Search:</p>\n                      <input\n                        required\n                        type=\"text\"\n                        className=\"form-control w-100\"\n                        placeholder={\"Search Job\"}\n                        value={search}\n                        name={\"name\"}\n                        onChange={(e) => onSearch(e)}\n                      />\n                      <small className=\"text-danger\">{searcherror}</small>\n                    </div>\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Client Name:</p>\n                      <input\n                        required\n                        type=\"text\"\n                        className=\"form-control w-100\"\n                        placeholder={\"Client name\"}\n                        value={company}\n                        name={\"compnay_name\"}\n                        onChange={(e) => {\n                          setCompany(e.target.value);\n                          setpageNo(1);\n                        }}\n                      />\n                    </div>\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Filter by Job Category:</p>\n                      <div className=\"select_div\">\n                        <select\n                          name=\"country\"\n                          id=\"country\"\n                          value={categoryFilterValue}\n                          onChange={(e) => {\n                            setCategoryFilterValue(e.target.value);\n                            setpageNo(1);\n                          }}\n                          className=\"text-capitalize form-control\"\n                        >\n                          <option value=\"\">Job Category</option>\n                          {Json &&\n                            (Json.Category || []).map((data) => {\n                              return (\n                                <option value={data.id} key={data.id}>\n                                  {data.value}\n                                </option>\n                              );\n                            })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Filter by Job Type:</p>\n                      <div className=\"select_div\">\n                        <select\n                          name=\"country\"\n                          id=\"country\"\n                          value={jobSwapFilterValue}\n                          onChange={(e) => {\n                            setJobSwapFilterValue(e.target.value);\n                            setpageNo(1);\n                          }}\n                          className=\"text-capitalize form-control\"\n                        >\n                          <option value=\"\">Job Type</option>\n                          {(FilterJson.job_type || []).map((job, i) => (\n                            <option key={i} value={job}>\n                              {job}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Filter by Job Skill:</p>\n                      <div className=\"select_div\">\n                        <select\n                          name=\"country\"\n                          id=\"country\"\n                          value={SkillFilterValue}\n                          onChange={(e) => {\n                            setSkillFilterValue(e.target.value);\n                            setpageNo(1);\n                          }}\n                          className=\"text-capitalize form-control\"\n                        >\n                          <option value=\"\">Job Skill</option>\n                          {(Skill || []).map((data) => {\n                            return (\n                              <option value={data.value} key={data.id}>\n                                {data.value}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"col p-1 form_group mb-3\">\n                      <p className=\"input_label\">Filter by Job Location:</p>\n                      <div className=\"select_div\">\n                        <select\n                          name=\"country\"\n                          id=\"country\"\n                          value={locationFilterValue}\n                          onChange={(e) => {\n                            setLocationFilterValue(e.target.value);\n                            setpageNo(1);\n                          }}\n                          className=\"text-capitalize form-control\"\n                        >\n                          <option value=\"\">Job Location</option>\n                          {(FilterJson.location || []).map((data) => {\n                            return (\n                              <option value={data} key={data}>\n                                {data}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n              {/*<-- Job List Table -->*/}\n              <JobTable\n                search={search}\n                jobSwapFilterValue={jobSwapFilterValue}\n                locationFilterValue={locationFilterValue}\n                SkillFilterValue={SkillFilterValue}\n                categoryFilterValue={categoryFilterValue}\n                company={company}\n                JobDetail={JobDetail}\n                apiCall={apiCall}\n                setApiCall={setApiCall}\n                // skill={props.skill}\n                // employee_id={props.employee_id}\n                selfJob={\"no\"}\n                response=\"lmia\"\n                pageNo={pageNo}\n                setpageNo={setpageNo}\n              />\n            </div>\n          </div>\n        </div>\n        {/*<-- Job Detail -->*/}\n        {showJobDetails === true ? (\n          <div\n            className={\n              userType === \"company\"\n                ? \"mt-16\"\n                : \"dashboard-main-container mt-16\"\n            }\n          >\n            <div className=\"container-fluid\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-12 dark-mode-texts\">\n                  <div className=\"mb-9\">\n                    <Link\n                      to={\"\"}\n                      onClick={() => setShowJobDetails(false)}\n                      className=\"d-flex align-items-center ml-4\"\n                    >\n                      <i className=\"icon icon-small-left bg-white circle-40 mr-5 font-size-7 text-black font-weight-bold shadow-8\"></i>\n                      <span className=\"text-uppercase font-size-3 font-weight-bold text-gray\">\n                        Back\n                      </span>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mb-18\">\n                <JobDetailsBox jobdata={JobId} />\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      {showAddJobsModal ? (\n        <AddJobModal\n          show={showAddJobsModal}\n          jobdata={JobId}\n          admin={\"admin\"}\n          apiCall={apiCall}\n          setApiCall={setApiCall}\n          close={() => setShowAddJobsModal(false)}\n        />\n      ) : null}\n      {userType === \"company\" ? <EmployeeFooter /> : null}\n    </>\n  );\n}\n\nexport default LimaContainer;\n"
        }
    ]
}