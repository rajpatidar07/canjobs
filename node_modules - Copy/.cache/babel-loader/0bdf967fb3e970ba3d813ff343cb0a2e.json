{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _createClass = require(\"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safebrowsing_v5 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nvar googleapis_common_1 = require(\"googleapis-common\");\nvar safebrowsing_v5;\n(function (safebrowsing_v5) {\n  /**\n   * Safe Browsing API\n   *\n   * Enables client applications to check web resources (most commonly URLs) against Google-generated lists of unsafe web resources. The Safe Browsing APIs are for non-commercial use only. If you need to use APIs to detect malicious URLs for commercial purposes – meaning “for sale or revenue-generating purposes” – please refer to the Web Risk API.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const safebrowsing = google.safebrowsing('v5');\n   * ```\n   */\n  var Safebrowsing = function Safebrowsing(options, google) {\n    _classCallCheck(this, Safebrowsing);\n    this.context = {\n      _options: options || {},\n      google: google\n    };\n    this.hashes = new Resource$Hashes(this.context);\n  };\n  safebrowsing_v5.Safebrowsing = Safebrowsing;\n  var Resource$Hashes = /*#__PURE__*/function () {\n    function Resource$Hashes(context) {\n      _classCallCheck(this, Resource$Hashes);\n      this.context = context;\n    }\n    _createClass(Resource$Hashes, [{\n      key: \"search\",\n      value: function search(paramsOrCallback, optionsOrCallback, callback) {\n        var params = paramsOrCallback || {};\n        var options = optionsOrCallback || {};\n        if (typeof paramsOrCallback === 'function') {\n          callback = paramsOrCallback;\n          params = {};\n          options = {};\n        }\n        if (typeof optionsOrCallback === 'function') {\n          callback = optionsOrCallback;\n          options = {};\n        }\n        var rootUrl = options.rootUrl || 'https://safebrowsing.googleapis.com/';\n        var parameters = {\n          options: Object.assign({\n            url: (rootUrl + '/v5/hashes:search').replace(/([^:]\\/)\\/+/g, '$1'),\n            method: 'GET'\n          }, options),\n          params: params,\n          requiredParams: [],\n          pathParams: [],\n          context: this.context\n        };\n        if (callback) {\n          (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n        } else {\n          return (0, googleapis_common_1.createAPIRequest)(parameters);\n        }\n      }\n    }]);\n    return Resource$Hashes;\n  }();\n  safebrowsing_v5.Resource$Hashes = Resource$Hashes;\n})(safebrowsing_v5 || (exports.safebrowsing_v5 = safebrowsing_v5 = {}));","map":null,"metadata":{},"sourceType":"script"}