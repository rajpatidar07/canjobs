{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TTextCtor = exports.default = void 0;\nvar _HTMLContentModel = _interopRequireDefault(require(\"../model/HTMLContentModel\"));\nvar _compose = _interopRequireDefault(require(\"ramda/src/compose\"));\nvar _textTransforms = require(\"../flow/text-transforms\");\nvar _TNodeCtor = _interopRequireDefault(require(\"./TNodeCtor\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar collapseWhiteSpaces = (0, _compose.default)(_textTransforms.normalizeWhitespaces, _textTransforms.replaceSegmentBreaks, _textTransforms.normalizeZeroWidthWhitespaces, _textTransforms.removeConsecutiveSegmentBreaks, _textTransforms.removeCollapsibleAroundSegmentBreak);\nvar collapseWhiteSpacesWithEastAsianCharset = (0, _compose.default)(_textTransforms.normalizeWhitespaces, _textTransforms.replaceSegmentBreaks, _textTransforms.removeLineBreaksAroundEastAsianDiscardSet, _textTransforms.normalizeZeroWidthWhitespaces, _textTransforms.removeConsecutiveSegmentBreaks, _textTransforms.removeCollapsibleAroundSegmentBreak);\nvar TTextCtor = function TText(init) {\n  this.initialize(init);\n  this.isVoid = this.elementModel ? this.elementModel.isVoid : false;\n}; //@ts-ignore\n\nexports.TTextCtor = TTextCtor;\nTTextCtor.prototype = new _TNodeCtor.default('text', 'TText', {\n  data: {\n    get: function get() {\n      return this.init.textNode.data;\n    },\n    set: function set(data) {\n      this.init.textNode.data = data;\n    }\n  }\n});\nTTextCtor.prototype.matchContentModel = function matchContentModel(contentModel) {\n  return contentModel === _HTMLContentModel.default.textual || contentModel === _HTMLContentModel.default.mixed;\n};\nTTextCtor.prototype.isCollapsibleLeft = function isCollapsibleLeft() {\n  return this.hasWhiteSpaceCollapsingEnabled && !this.isEmpty() && this.data[0] === ' ';\n};\nTTextCtor.prototype.isCollapsibleRight = function isCollapsibleRight() {\n  return this.hasWhiteSpaceCollapsingEnabled && !this.isEmpty() && (this.isVoid || this.data[this.data.length - 1] === ' ');\n};\nTTextCtor.prototype.isEmpty = function isEmpty() {\n  // Only anonymous text nodes can be considered \"empty\"\n  return this.tagName === null && !this.data.length;\n};\nTTextCtor.prototype.trimLeft = function trimLeft() {\n  if (this.isCollapsibleLeft()) {\n    this.data = this.data.slice(1);\n  }\n};\nTTextCtor.prototype.trimRight = function trimRight() {\n  if (this.isCollapsibleRight()) {\n    this.data = this.data.substr(0, this.data.length - 1);\n  }\n};\nTTextCtor.prototype.collapseChildren = function collapseChildren() {\n  if (this.hasWhiteSpaceCollapsingEnabled) {\n    if (this.init.context.removeLineBreaksAroundEastAsianDiscardSet) {\n      this.data = collapseWhiteSpacesWithEastAsianCharset(this.data);\n    } else {\n      this.data = collapseWhiteSpaces(this.data);\n    }\n  }\n  return null;\n};\nvar _default = TTextCtor;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}