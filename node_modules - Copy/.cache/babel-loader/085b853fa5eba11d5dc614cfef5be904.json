{"ast":null,"code":"'use client';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from 'react';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport Page from './Page.js';\nimport { isProvided } from './shared/utils.js';\nimport useDocumentContext from './shared/hooks/useDocumentContext.js';\nvar Thumbnail = function Thumbnail(props) {\n  var documentContext = useDocumentContext();\n  invariant(documentContext, 'Unable to find Document context. Did you wrap <Page /> in <Document />?');\n  var mergedProps = Object.assign(Object.assign({}, documentContext), props);\n  var className = mergedProps.className,\n    linkService = mergedProps.linkService,\n    onItemClick = mergedProps.onItemClick,\n    pageIndexProps = mergedProps.pageIndex,\n    pageNumberProps = mergedProps.pageNumber;\n  var pageIndex = isProvided(pageNumberProps) ? pageNumberProps - 1 : pageIndexProps !== null && pageIndexProps !== void 0 ? pageIndexProps : null;\n  var pageNumber = pageNumberProps !== null && pageNumberProps !== void 0 ? pageNumberProps : isProvided(pageIndexProps) ? pageIndexProps + 1 : null;\n  function onClick(event) {\n    event.preventDefault();\n    if (!isProvided(pageIndex) || !pageNumber) {\n      return;\n    }\n    if (onItemClick) {\n      onItemClick({\n        pageIndex: pageIndex,\n        pageNumber: pageNumber\n      });\n    } else {\n      linkService.goToPage(pageNumber);\n    }\n  }\n  var classNameProps = props.className,\n    onItemClickProps = props.onItemClick,\n    pageProps = __rest(props, [\"className\", \"onItemClick\"]);\n  return (/* eslint-disable-next-line jsx-a11y/anchor-is-valid */\n    React.createElement(\"a\", {\n      className: clsx('react-pdf__Thumbnail', className),\n      href: pageNumber ? '#' : undefined,\n      onClick: onClick\n    }, React.createElement(Page, Object.assign({}, pageProps, {\n      _className: \"react-pdf__Thumbnail__page\",\n      _enableRegisterUnregisterPage: false,\n      renderAnnotationLayer: false,\n      renderTextLayer: false\n    })))\n  );\n};\nexport default Thumbnail;","map":null,"metadata":{},"sourceType":"module"}