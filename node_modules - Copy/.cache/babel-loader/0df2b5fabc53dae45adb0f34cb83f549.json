{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\dell2\\\\Desktop\\\\canjobs\\\\src\\\\components\\\\common\\\\anotation.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { FaFlag } from \"react-icons/fa\";\n\n// /**\n//  * Component for text annotation and image annotation.\n//  */\n// const Annotation = () => {\n//   //  Annotation State\n//   const [imageAnnotations, setImageAnnotations] = useState([]);\n//   const [comments, setComments] = useState({});\n//   const [currentAnnotation, setCurrentAnnotation] = useState({ x: 0, y: 0 });\n//   const [selectedAnnotation, setSelectedAnnotation] = useState(null);\n//   const [isAnnotationMode, setAnnotationMode] = useState(false);\n\n//   // Handle mouse down event to set current annotation for image annotation\n//   const handleMouseDown = (e) => {\n//     if (isAnnotationMode) {\n//       const imageRect = e.target.getBoundingClientRect();\n//       setCurrentAnnotation({\n//         x: e.clientX - imageRect.left,\n//         y: e.clientY - imageRect.top,\n//       });\n//     }\n//   };\n\n//   // Handle mouse up event to save the current annotation for image annotation\n//   const handleMouseUp = () => {\n//     if (isAnnotationMode) {\n//       setImageAnnotations([...imageAnnotations, currentAnnotation]);\n//       setCurrentAnnotation({ x: 0, y: 0 });\n//     }\n//   };\n\n//   // Toggle annotation mode for image annotation\n//   const toggleAnnotationMode = () => {\n//     setAnnotationMode(!isAnnotationMode);\n//     setSelectedAnnotation(null);\n//   };\n\n//   // Handle flag click to select the annotation and toggle the form visibility for image annotation\n//   const handleFlagClick = (annotation) => {\n//     if (\n//       selectedAnnotation &&\n//       selectedAnnotation.x === annotation.x &&\n//       selectedAnnotation.y === annotation.y\n//     ) {\n//       setSelectedAnnotation(null);\n//     } else {\n//       setSelectedAnnotation(annotation);\n//     }\n//   };\n\n//   // Generate a list of comments from the state for image annotation\n//   const getCommentsList = () => {\n//     const commentsList = [];\n//     for (const key in comments) {\n//       if (comments.hasOwnProperty(key)) {\n//         commentsList.push({ coordinates: key, comment: comments[key] });\n//       }\n//     }\n//     return commentsList;\n//   };\n\n//   // Effect to add the current annotation to the annotations array for image annotation\n//   useEffect(() => {\n//     if (currentAnnotation.x !== 0 && currentAnnotation.y !== 0) {\n//       setImageAnnotations([...imageAnnotations, currentAnnotation]);\n//       setCurrentAnnotation({ x: 0, y: 0 });\n//     }\n//   }, [currentAnnotation]);\n\n//   return (\n//     <div>\n//       {/* Annotation */}\n//       <div style={{ position: \"relative\", overflow: \"scroll\" }}>\n//         <img\n//           src=\"https://image.slidesharecdn.com/nextgenerationofdatascientist-220221085037/75/next-generation-of-data-scientist-4-2048.jpg?cb=1668057843\"\n//           alt=\"Annotated Image\"\n//           style={{ height: \"50%\", width: \"50%\" }}\n//           onMouseDown={handleMouseDown}\n//           onMouseUp={handleMouseUp}\n//         />\n\n//         {imageAnnotations.map((annotation, index) => (\n//           <div\n//             key={index}\n//             style={{\n//               position: \"absolute\",\n//               left: annotation.x - 5,\n//               top: annotation.y - 5,\n//               cursor: \"pointer\",\n//             }}\n//             onClick={() => handleFlagClick(annotation)}\n//           >\n//             <FaFlag\n//               style={{\n//                 color:\n//                   selectedAnnotation &&\n//                   selectedAnnotation.x === annotation.x &&\n//                   selectedAnnotation.y === annotation.y\n//                     ? \"pink\"\n//                     : \"red\",\n//               }}\n//             />\n//           </div>\n//         ))}\n\n//         {selectedAnnotation && (\n//           <div\n//             style={{\n//               position: \"absolute\",\n//               left: selectedAnnotation.x + 10,\n//               top: selectedAnnotation.y + 20,\n//               zIndex: 1,\n//             }}\n//           >\n//             <form>\n//               <input\n//                 type=\"text\"\n//                 value={\n//                   comments[`${selectedAnnotation.x}-${selectedAnnotation.y}`] ||\n//                   \"\"\n//                 }\n//                 onChange={(e) =>\n//                   setComments({\n//                     ...comments,\n//                     [`${selectedAnnotation.x}-${selectedAnnotation.y}`]:\n//                       e.target.value,\n//                   })\n//                 }\n//               />\n//               <button\n//                 type=\"button\"\n//                 onClick={() => {\n//                   setSelectedAnnotation(null);\n//                 }}\n//               >\n//                 Save Comment\n//               </button>\n//             </form>\n//           </div>\n//         )}\n\n//         <div style={{ marginTop: \"20px\" }}>\n//           <button onClick={toggleAnnotationMode}>\n//             {isAnnotationMode ? \"Finish Annotation\" : \"Start Annotation\"}\n//           </button>\n//           <h2>List of Comments:</h2>\n//           <ul>\n//             {getCommentsList().map((commentItem, index) => (\n//               <li key={index} className=\"text-break\">\n//                 <strong>{commentItem.coordinates}:</strong>{\" \"}\n//                 {commentItem.comment}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Annotation;\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { FaFlag } from \"react-icons/fa\";\nimport FileViewer from \"react-file-viewer\";\nimport { MdAddComment } from \"react-icons/md\";\nimport { FcCancel } from \"react-icons/fc\";\nimport { Link } from \"react-router-dom\";\nimport { ADocAnnotation, GetCommentsAndAssign } from \"../../api/api\";\nvar Annotation = function Annotation() {\n  // State for image annotations, comments, selected annotation, and annotation mode\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageAnnotations = _useState2[0],\n    setImageAnnotations = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    comments = _useState4[0],\n    setComments = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedAnnotation = _useState6[0],\n    setSelectedAnnotation = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isAnnotationMode = _useState8[0],\n    setAnnotationMode = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    assignments = _useState10[0],\n    setAssignments = _useState10[1];\n  var fileViewerRef = useRef(null);\n\n  // Function to handle click events on the FileViewer to capture annotations\n  var handleFileViewerClick = function handleFileViewerClick(e) {\n    if (isAnnotationMode) {\n      var rect = fileViewerRef.current.getBoundingClientRect();\n      var x = e.clientX - rect.left;\n      var y = e.clientY - rect.top;\n\n      // Add annotation\n      addAnnotation({\n        x: x,\n        y: y\n      });\n    }\n  };\n\n  // Function to add annotation based on conditions\n  var addAnnotation = function addAnnotation(_ref) {\n    var x = _ref.x,\n      y = _ref.y;\n    // Retrieve data from local storage\n    var id = localStorage.getItem(\"adminId\");\n    var docId = 111; //props.docId;\n    var assignedUserId = assignments.find(function (assignment) {\n      return assignment.docId === docId;\n    })?.assignedUserId;\n    var email = isEmailConditionMet() ? comments : null;\n    var subject = \"\";\n    var comment = isEmailConditionMet() ? null : comments;\n\n    // Perform any other conditions or checks required for adding annotations\n\n    // Send data to the API\n    ADocAnnotation({\n      id: id,\n      docId: docId,\n      assignedUserId: assignedUserId,\n      email: email,\n      subject: subject,\n      comment: comment,\n      x: x,\n      y: y\n    }).then(function (response) {\n      // Handle successful API response\n      console.log(\"Annotation added successfully:\", response);\n      // You might want to update the state or perform other actions\n    }).catch(function (error) {\n      // Handle API error\n      console.error(\"Error adding annotation:\", error);\n    });\n\n    // Update state to include the new annotation\n    setImageAnnotations([].concat(_toConsumableArray(imageAnnotations), [{\n      x: x,\n      y: y\n    }]));\n  };\n\n  // Function to check if the email condition is met\n  var isEmailConditionMet = function isEmailConditionMet() {\n    // Replace with actual condition to check if email should be sent\n    return comments.includes(\"@\");\n  };\n\n  // Function to handle flag click to select the annotation and toggle the form visibility for image annotation\n  var handleFlagClick = function handleFlagClick(annotation) {\n    if (selectedAnnotation && selectedAnnotation.x === annotation.x && selectedAnnotation.y === annotation.y) {\n      setSelectedAnnotation(null);\n    } else {\n      setSelectedAnnotation(annotation);\n    }\n  };\n\n  // Function to get comments and assignments from the API\n  var getCommentsAndAssign = function getCommentsAndAssign() {\n    GetCommentsAndAssign().then(function (response) {\n      // Handle successful API response\n      console.log(\"Comments and Assignments:\", response);\n      // Update the state with comments and assignments\n      setAssignments(response.assignments);\n      setComments(response.comments);\n    }).catch(function (error) {\n      // Handle API error\n      console.error(\"Error getting comments and assignments:\", error);\n    });\n  };\n\n  // Effect to clear selected annotation when the annotation mode is toggled\n  useEffect(function () {\n    setSelectedAnnotation(null);\n    // Fetch comments and assignments when the component mounts\n    getCommentsAndAssign();\n  }, [isAnnotationMode]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      overflow: \"scroll\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    ref: fileViewerRef,\n    onClick: handleFileViewerClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileViewer, {\n    alt: \"Annotated Image\",\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      position: \"relative\",\n      overflow: \"scroll\"\n    },\n    fileType: \"png\",\n    filePath: \"https://blog.hootsuite.com/wp-content/uploads/2023/09/Social-media-image-sizes-2023.png\",\n    errorComponent: function errorComponent() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 37\n        }\n      }, \"Error loading document\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn-sm mt-7 \".concat(isAnnotationMode ? \"btn-primary\" : \"btn-secondary\"),\n    onClick: function onClick() {\n      return setAnnotationMode(!isAnnotationMode);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, isAnnotationMode ? /*#__PURE__*/React.createElement(FcCancel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(MdAddComment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 48\n    }\n  }))), isAnnotationMode && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      pointerEvents: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }), imageAnnotations.map(function (annotation, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: {\n        position: \"absolute\",\n        left: annotation.x - 5,\n        top: annotation.y - 5,\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return handleFlagClick(annotation);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FaFlag, {\n      style: {\n        color: selectedAnnotation && selectedAnnotation.x === annotation.x && selectedAnnotation.y === annotation.y ? \"pink\" : \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }));\n  }), selectedAnnotation && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: selectedAnnotation.x + 10,\n      top: selectedAnnotation.y + 20,\n      zIndex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: comments[\"\".concat(selectedAnnotation.x, \"-\").concat(selectedAnnotation.y)] || \"\",\n    onChange: function onChange(e) {\n      return setComments(_objectSpread({}, comments, _defineProperty({}, \"\".concat(selectedAnnotation.x, \"-\").concat(selectedAnnotation.y), e.target.value)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      setSelectedAnnotation(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"Save Comment\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, \"List of Comments:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, comments.map(function (commentItem, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"text-break\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, commentItem.coordinates, \":\"), \" \", commentItem.comment);\n  })))));\n};\nexport default Annotation;","map":{"version":3,"names":["React","useState","useEffect","useRef","FaFlag","FileViewer","MdAddComment","FcCancel","Link","ADocAnnotation","GetCommentsAndAssign","Annotation","_useState","_useState2","_slicedToArray","imageAnnotations","setImageAnnotations","_useState3","_useState4","comments","setComments","_useState5","_useState6","selectedAnnotation","setSelectedAnnotation","_useState7","_useState8","isAnnotationMode","setAnnotationMode","_useState9","_useState10","assignments","setAssignments","fileViewerRef","handleFileViewerClick","e","rect","current","getBoundingClientRect","x","clientX","left","y","clientY","top","addAnnotation","_ref","id","localStorage","getItem","docId","assignedUserId","find","assignment","email","isEmailConditionMet","subject","comment","then","response","console","log","catch","error","concat","_toConsumableArray","includes","handleFlagClick","annotation","getCommentsAndAssign","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","position","overflow","className","Fragment","ref","onClick","alt","height","width","fileType","filePath","errorComponent","pointerEvents","map","index","key","cursor","color","zIndex","type","value","onChange","_objectSpread","_defineProperty","target","marginTop","commentItem","coordinates"],"sources":["C:/Users/dell2/Desktop/canjobs/src/components/common/anotation.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaFlag } from \"react-icons/fa\";\r\n\r\n// /**\r\n//  * Component for text annotation and image annotation.\r\n//  */\r\n// const Annotation = () => {\r\n//   //  Annotation State\r\n//   const [imageAnnotations, setImageAnnotations] = useState([]);\r\n//   const [comments, setComments] = useState({});\r\n//   const [currentAnnotation, setCurrentAnnotation] = useState({ x: 0, y: 0 });\r\n//   const [selectedAnnotation, setSelectedAnnotation] = useState(null);\r\n//   const [isAnnotationMode, setAnnotationMode] = useState(false);\r\n\r\n//   // Handle mouse down event to set current annotation for image annotation\r\n//   const handleMouseDown = (e) => {\r\n//     if (isAnnotationMode) {\r\n//       const imageRect = e.target.getBoundingClientRect();\r\n//       setCurrentAnnotation({\r\n//         x: e.clientX - imageRect.left,\r\n//         y: e.clientY - imageRect.top,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Handle mouse up event to save the current annotation for image annotation\r\n//   const handleMouseUp = () => {\r\n//     if (isAnnotationMode) {\r\n//       setImageAnnotations([...imageAnnotations, currentAnnotation]);\r\n//       setCurrentAnnotation({ x: 0, y: 0 });\r\n//     }\r\n//   };\r\n\r\n//   // Toggle annotation mode for image annotation\r\n//   const toggleAnnotationMode = () => {\r\n//     setAnnotationMode(!isAnnotationMode);\r\n//     setSelectedAnnotation(null);\r\n//   };\r\n\r\n//   // Handle flag click to select the annotation and toggle the form visibility for image annotation\r\n//   const handleFlagClick = (annotation) => {\r\n//     if (\r\n//       selectedAnnotation &&\r\n//       selectedAnnotation.x === annotation.x &&\r\n//       selectedAnnotation.y === annotation.y\r\n//     ) {\r\n//       setSelectedAnnotation(null);\r\n//     } else {\r\n//       setSelectedAnnotation(annotation);\r\n//     }\r\n//   };\r\n\r\n//   // Generate a list of comments from the state for image annotation\r\n//   const getCommentsList = () => {\r\n//     const commentsList = [];\r\n//     for (const key in comments) {\r\n//       if (comments.hasOwnProperty(key)) {\r\n//         commentsList.push({ coordinates: key, comment: comments[key] });\r\n//       }\r\n//     }\r\n//     return commentsList;\r\n//   };\r\n\r\n//   // Effect to add the current annotation to the annotations array for image annotation\r\n//   useEffect(() => {\r\n//     if (currentAnnotation.x !== 0 && currentAnnotation.y !== 0) {\r\n//       setImageAnnotations([...imageAnnotations, currentAnnotation]);\r\n//       setCurrentAnnotation({ x: 0, y: 0 });\r\n//     }\r\n//   }, [currentAnnotation]);\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* Annotation */}\r\n//       <div style={{ position: \"relative\", overflow: \"scroll\" }}>\r\n//         <img\r\n//           src=\"https://image.slidesharecdn.com/nextgenerationofdatascientist-220221085037/75/next-generation-of-data-scientist-4-2048.jpg?cb=1668057843\"\r\n//           alt=\"Annotated Image\"\r\n//           style={{ height: \"50%\", width: \"50%\" }}\r\n//           onMouseDown={handleMouseDown}\r\n//           onMouseUp={handleMouseUp}\r\n//         />\r\n\r\n//         {imageAnnotations.map((annotation, index) => (\r\n//           <div\r\n//             key={index}\r\n//             style={{\r\n//               position: \"absolute\",\r\n//               left: annotation.x - 5,\r\n//               top: annotation.y - 5,\r\n//               cursor: \"pointer\",\r\n//             }}\r\n//             onClick={() => handleFlagClick(annotation)}\r\n//           >\r\n//             <FaFlag\r\n//               style={{\r\n//                 color:\r\n//                   selectedAnnotation &&\r\n//                   selectedAnnotation.x === annotation.x &&\r\n//                   selectedAnnotation.y === annotation.y\r\n//                     ? \"pink\"\r\n//                     : \"red\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         ))}\r\n\r\n//         {selectedAnnotation && (\r\n//           <div\r\n//             style={{\r\n//               position: \"absolute\",\r\n//               left: selectedAnnotation.x + 10,\r\n//               top: selectedAnnotation.y + 20,\r\n//               zIndex: 1,\r\n//             }}\r\n//           >\r\n//             <form>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={\r\n//                   comments[`${selectedAnnotation.x}-${selectedAnnotation.y}`] ||\r\n//                   \"\"\r\n//                 }\r\n//                 onChange={(e) =>\r\n//                   setComments({\r\n//                     ...comments,\r\n//                     [`${selectedAnnotation.x}-${selectedAnnotation.y}`]:\r\n//                       e.target.value,\r\n//                   })\r\n//                 }\r\n//               />\r\n//               <button\r\n//                 type=\"button\"\r\n//                 onClick={() => {\r\n//                   setSelectedAnnotation(null);\r\n//                 }}\r\n//               >\r\n//                 Save Comment\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n\r\n//         <div style={{ marginTop: \"20px\" }}>\r\n//           <button onClick={toggleAnnotationMode}>\r\n//             {isAnnotationMode ? \"Finish Annotation\" : \"Start Annotation\"}\r\n//           </button>\r\n//           <h2>List of Comments:</h2>\r\n//           <ul>\r\n//             {getCommentsList().map((commentItem, index) => (\r\n//               <li key={index} className=\"text-break\">\r\n//                 <strong>{commentItem.coordinates}:</strong>{\" \"}\r\n//                 {commentItem.comment}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Annotation;\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { FaFlag } from \"react-icons/fa\";\r\nimport FileViewer from \"react-file-viewer\";\r\nimport { MdAddComment } from \"react-icons/md\";\r\nimport { FcCancel } from \"react-icons/fc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ADocAnnotation, GetCommentsAndAssign } from \"../../api/api\";\r\n\r\nconst Annotation = () => {\r\n  // State for image annotations, comments, selected annotation, and annotation mode\r\n  const [imageAnnotations, setImageAnnotations] = useState([]);\r\n  const [comments, setComments] = useState({});\r\n  const [selectedAnnotation, setSelectedAnnotation] = useState(null);\r\n  const [isAnnotationMode, setAnnotationMode] = useState(false);\r\n  const [assignments, setAssignments] = useState([]);\r\n\r\n  const fileViewerRef = useRef(null);\r\n\r\n  // Function to handle click events on the FileViewer to capture annotations\r\n  const handleFileViewerClick = (e) => {\r\n    if (isAnnotationMode) {\r\n      const rect = fileViewerRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n\r\n      // Add annotation\r\n      addAnnotation({ x, y });\r\n    }\r\n  };\r\n\r\n  // Function to add annotation based on conditions\r\n  const addAnnotation = ({ x, y }) => {\r\n    // Retrieve data from local storage\r\n    const id = localStorage.getItem(\"adminId\");\r\n    const docId = 111; //props.docId;\r\n    const assignedUserId = assignments.find(\r\n      (assignment) => assignment.docId === docId\r\n    )?.assignedUserId;\r\n    const email = isEmailConditionMet() ? comments : null;\r\n    const subject = \"\";\r\n    const comment = isEmailConditionMet() ? null : comments;\r\n\r\n    // Perform any other conditions or checks required for adding annotations\r\n\r\n    // Send data to the API\r\n    ADocAnnotation({\r\n      id,\r\n      docId,\r\n      assignedUserId,\r\n      email,\r\n      subject,\r\n      comment,\r\n      x,\r\n      y,\r\n    })\r\n      .then((response) => {\r\n        // Handle successful API response\r\n        console.log(\"Annotation added successfully:\", response);\r\n        // You might want to update the state or perform other actions\r\n      })\r\n      .catch((error) => {\r\n        // Handle API error\r\n        console.error(\"Error adding annotation:\", error);\r\n      });\r\n\r\n    // Update state to include the new annotation\r\n    setImageAnnotations([...imageAnnotations, { x, y }]);\r\n  };\r\n\r\n  // Function to check if the email condition is met\r\n  const isEmailConditionMet = () => {\r\n    // Replace with actual condition to check if email should be sent\r\n    return comments.includes(\"@\");\r\n  };\r\n\r\n  // Function to handle flag click to select the annotation and toggle the form visibility for image annotation\r\n  const handleFlagClick = (annotation) => {\r\n    if (\r\n      selectedAnnotation &&\r\n      selectedAnnotation.x === annotation.x &&\r\n      selectedAnnotation.y === annotation.y\r\n    ) {\r\n      setSelectedAnnotation(null);\r\n    } else {\r\n      setSelectedAnnotation(annotation);\r\n    }\r\n  };\r\n\r\n  // Function to get comments and assignments from the API\r\n  const getCommentsAndAssign = () => {\r\n    GetCommentsAndAssign()\r\n      .then((response) => {\r\n        // Handle successful API response\r\n        console.log(\"Comments and Assignments:\", response);\r\n        // Update the state with comments and assignments\r\n        setAssignments(response.assignments);\r\n        setComments(response.comments);\r\n      })\r\n      .catch((error) => {\r\n        // Handle API error\r\n        console.error(\"Error getting comments and assignments:\", error);\r\n      });\r\n  };\r\n\r\n  // Effect to clear selected annotation when the annotation mode is toggled\r\n  useEffect(() => {\r\n    setSelectedAnnotation(null);\r\n    // Fetch comments and assignments when the component mounts\r\n    getCommentsAndAssign();\r\n  }, [isAnnotationMode]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Annotation */}\r\n      <div style={{ position: \"relative\", overflow: \"scroll\" }}>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <React.Fragment ref={fileViewerRef} onClick={handleFileViewerClick}>\r\n            <FileViewer\r\n              alt=\"Annotated Image\"\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                position: \"relative\",\r\n                overflow: \"scroll\",\r\n              }}\r\n              fileType={\"png\"}\r\n              filePath={\r\n                \"https://blog.hootsuite.com/wp-content/uploads/2023/09/Social-media-image-sizes-2023.png\"\r\n              }\r\n              errorComponent={() => <div>Error loading document</div>}\r\n            />\r\n          </React.Fragment>\r\n          <Link\r\n            className={`btn-sm mt-7 ${\r\n              isAnnotationMode ? \"btn-primary\" : \"btn-secondary\"\r\n            }`}\r\n            onClick={() => setAnnotationMode(!isAnnotationMode)}\r\n          >\r\n            {isAnnotationMode ? <FcCancel /> : <MdAddComment />}\r\n          </Link>\r\n        </div>\r\n        {isAnnotationMode && (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              pointerEvents: \"none\",\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {imageAnnotations.map((annotation, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: \"absolute\",\r\n              left: annotation.x - 5,\r\n              top: annotation.y - 5,\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => handleFlagClick(annotation)}\r\n          >\r\n            <FaFlag\r\n              style={{\r\n                color:\r\n                  selectedAnnotation &&\r\n                  selectedAnnotation.x === annotation.x &&\r\n                  selectedAnnotation.y === annotation.y\r\n                    ? \"pink\"\r\n                    : \"red\",\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        {selectedAnnotation && (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: selectedAnnotation.x + 10,\r\n              top: selectedAnnotation.y + 20,\r\n              zIndex: 1,\r\n            }}\r\n          >\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                value={\r\n                  comments[`${selectedAnnotation.x}-${selectedAnnotation.y}`] ||\r\n                  \"\"\r\n                }\r\n                onChange={(e) =>\r\n                  setComments({\r\n                    ...comments,\r\n                    [`${selectedAnnotation.x}-${selectedAnnotation.y}`]:\r\n                      e.target.value,\r\n                  })\r\n                }\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setSelectedAnnotation(null);\r\n                }}\r\n              >\r\n                Save Comment\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h2>List of Comments:</h2>\r\n          <ul>\r\n            {comments.map((commentItem, index) => (\r\n              <li key={index} className=\"text-break\">\r\n                <strong>{commentItem.coordinates}:</strong>{\" \"}\r\n                {commentItem.comment}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Annotation;\r\n"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,eAAe;AAEpE,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB;EAAA,IAAAC,SAAA,GACgDX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,gBAAgB,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;EAAA,IAA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"},"metadata":{},"sourceType":"module"}